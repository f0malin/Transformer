<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>Date::Simple - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","Date-Simple",3]);
    _gaq.push(["_setCustomVar",5,"Release","Date-Simple-3.03",3]);
    _gaq.push(["_setCustomVar",3,"Module","Date::Simple",3]);
    _gaq.push(["_setCustomVar",1,"Author","IZUT",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?Date::Simple">permalink</a></div>
  <a href="/~izut/">Igor Sutton</a> &gt;
  <a href="/~izut/Date-Simple-3.03/">Date-Simple-3.03</a> &gt;
  Date::Simple
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/332595072782add1d46cce0adff2e9eb?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/I/IZ/IZUT/Date-Simple-3.03.tar.gz">Date-Simple-3.03.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=Date%3A%3ASimple;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~IZUT/Date-Simple-3.03/lib/Date/Simple.pm">Annotate this POD
</a></p>
<div class=box style='width:150px; float: right'>
<h1 class=t5>Related Modules</h1>
<div style="margin:2px">
<a href="/perldoc?Date%3A%3ACalc">Date::Calc</a><br>
<a href="/perldoc?Date%3A%3AManip">Date::Manip</a><br>
<a href="/perldoc?Class%3A%3ADBI">Class::DBI</a><br>
<a href="/perldoc?Time%3A%3ALocal">Time::Local</a><br>
<a href="/perldoc?Data%3A%3ADumper">Data::Dumper</a><br>
<a href="/perldoc?Text%3A%3ACSV">Text::CSV</a><br>
<a href="/perldoc?Class%3A%3ADate">Class::Date</a><br>
<a href="/perldoc?Scalar%3A%3AUtil">Scalar::Util</a><br>
<a href="/perldoc?Text%3A%3ATable">Text::Table</a><br>
<a href="/perldoc?List%3A%3AUtil">List::Util</a><br>
<small>
<a href="http://perlmonks.org/?node=cpan+module+search&pivot=1&module=Date%3A%3ASimple">more...</a><br>
By <a href="http://perlmonks.org/">perlmonks.org</a></small>
</div>
</div>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>New&nbsp;</td><td style="text-align:right"> 10</td></tr>
<tr><td>Open&nbsp;</td><td style="text-align:right"> 2</td></tr>
</table>
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=Date-Simple">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  3.03 &nbsp;
<span class="noprint">
  <a href="/src/IZUT/Date-Simple-3.03/lib/Date/Simple.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#Controlling_output_format.'>Controlling output format.</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#CONSTRUCTORS'>CONSTRUCTORS</a>
  <li class='indexItem indexItem1'><a href='#INSTANCE_METHODS'>INSTANCE METHODS</a>
  <li class='indexItem indexItem1'><a href='#OPERATORS'>OPERATORS</a>
  <li class='indexItem indexItem1'><a href='#UTILITIES'>UTILITIES</a>
  <li class='indexItem indexItem1'><a href='#AUTHOR'>AUTHOR</a>
  <li class='indexItem indexItem1'><a href='#COPYRIGHT'>COPYRIGHT</a>
  <li class='indexItem indexItem1'><a href='#SEE_ALSO'>SEE ALSO</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Date::Simple - a simple date object</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">    use Date::Simple (&#39;date&#39;, &#39;today&#39;);

    # Difference in days between two dates:
    $diff = date(&#39;2001-08-27&#39;) - date(&#39;1977-10-05&#39;);

    # Offset $n days from now:
    $date = today() + $n;
    print &#34;$date\n&#34;;  # uses ISO 8601 format (YYYY-MM-DD)

    use Date::Simple ();
    my $date  = Date::Simple-&#62;new(&#39;1972-01-17&#39;);
    my $year  = $date-&#62;year;
    my $month = $date-&#62;month;
    my $day   = $date-&#62;day;

    use Date::Simple (&#39;:all&#39;);
    my $date2 = ymd($year, $month, $day);
    my $date3 = d8(&#39;19871218&#39;);
    my $today = today();
    my $tomorrow = $today + 1;
    if ($tomorrow-&#62;year != $today-&#62;year) {
        print &#34;Today is New Year&#39;s Eve!\n&#34;;
    }

    if ($today &#62; $tomorrow) {
        die &#34;warp in space-time continuum&#34;;
    }

    print &#34;Today is &#34;;
    print((&#39;Sun&#39;,&#39;Mon&#39;,&#39;Tues&#39;,&#39;Wednes&#39;,&#39;Thurs&#39;,&#39;Fri&#39;,&#39;Satur&#39;)
          [$today-&#62;day_of_week]);
    print &#34;day.\n&#34;;

    # you can also do this:
    ($date cmp &#34;2001-07-01&#34;)
    # and this
    ($date &#60;=&#62; [2001, 7, 1])</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Dates are complex enough without times and timezones. This module may be used to create simple date objects. It handles:</p>

<dl>
<dt><a name='Validation'></a><a name="Validation."
>Validation.</a></dt>

<dd>
<p>Reject 1999-02-29 but accept 2000-02-29.</p>

<dt><a name='Interval'></a><a name="Interval_arithmetic."
>Interval arithmetic.</a></dt>

<dd>
<p>How many days were between two given dates? What date comes N days after today?</p>

<dt><a name='Day'></a><a name="Day-of-week_calculation."
>Day-of-week calculation.</a></dt>

<dd>
<p>What day of the week is a given date?</p>

<dt><a name='Transparent'></a><a name="Transparent_date_formatting."
>Transparent date formatting.</a></dt>

<dd>
<p>How should a date object be formatted.</p>
</dd>
</dl>

<p>It does <b>not</b> deal with hours, minutes, seconds, and time zones.</p>

<p>A date is uniquely identified by year, month, and day integers within valid ranges. This module will not allow the creation of objects for invalid dates. Attempting to create an invalid date will return undef. Month numbering starts at 1 for January, unlike in C and Java. Years are 4-digit.</p>

<p>Gregorian dates up to year 9999 are handled correctly, but we rely on Perl&#39;s builtin <code>localtime</code> function when the current date is requested. On some platforms, <code>localtime</code> may be vulnerable to rollovers such as the Unix <code>time_t</code> wraparound of 18 January 2038.</p>

<p>Overloading is used so you can compare or subtract two dates using standard numeric operators such as <code>==</code>, and the sum of a date object and an integer is another date object.</p>

<p>Date::Simple objects are immutable. After assigning <code>$date1</code> to <code>$date2</code>, no change to <code>$date1</code> can affect <code>$date2</code>. This means, for example, that there is nothing like a <code>set_year</code> operation, and <code>$date++</code> assigns a new object to <code>$date</code>.</p>

<p>This module contains various undocumented functions. They may not be available on all platforms and are likely to change or disappear in future releases. Please let the author know if you think any of them should be public.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Controlling_output_format."
>Controlling output format.</a></h2>

<p>As of version 3.0 new ways of controlling the output formats of Date::Simple objects has been provided. However Date::Simple has traditionally provided few ways of stringification, a primary one via the format() method and another primary one via direct stringification. However the later is currently implemented as an XS routine and the former is implemented through a perl routine. This means that using format() is more expensive than stringification and that the stringification format is class specific.</p>

<p>In order to alleviate some of these problems a new mechanism has been introduced to Date::Simple that allows for a per object level format default. In addition a set of utility classes that have different stringification overloads provided. These classes are simple subclasses of Date::Simple and beside the default format() and the overloaded stringification behaviour are identical to Date::Simple. In fact one is totally identical to Date::Simple and is provided mostly for completeness.</p>

<p>The classes included are:</p>

<dl>
<dt><a name='Date'></a><a name="Date::Simple::ISO"
>Date::Simple::ISO</a></dt>

<dd>
<p>Identical to Date::Simple in every respect but name.</p>

<dt><a name='Date'></a><a name="Date::Simple::D8"
>Date::Simple::D8</a></dt>

<dd>
<p>Uses the D8 format (%Y%m%d) as the default format for printing. Uses XS for the overloaded stringification.</p>

<dt><a name='Date'></a><a name="Date::Simple::Fmt"
>Date::Simple::Fmt</a></dt>

<dd>
<p>Uses the perl implemented format() as the default stringification mechanism. The first argument to the constructor is expected to be the format to use for the object.</p>
</dd>
</dl>

<p><b>NOTE</b> its important to remember that the primary difference between the behaviour of objects of the different classes is how they are stringified when quoted, and what date format is used by default when the format() method is called. Nothing else differs.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="CONSTRUCTORS"
>CONSTRUCTORS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Several functions take a string or numeric representation and generate a corresponding date object. The most general is <code>new</code>, whose argument list may be empty (returning the current date), a string in format YYYY-MM-DD or YYYYMMDD, a list or arrayref of year, month, and day number, or an existing date object.</p>

<dl>
<dt><a name='Date'></a><a name="Date::Simple-&#62;new_([ARG,_...])"
>Date::Simple-&#62;new ([ARG, ...])</a></dt>

<dd>
<dt><a name='date'></a><a name="date_([ARG,_...])"
>date ([ARG, ...])</a></dt>

<dd>
<pre class="sh_perl">    my $date = Date::Simple-&#62;new(&#39;1972-01-17&#39;);</pre>

<p>The <code>new</code> method will return a date object if the values passed in specify a valid date. (See above.) If an invalid date is passed, the method returns undef. If the argument is invalid in form as opposed to numeric range, <code>new</code> dies.</p>

<p>The <code>date</code> function provides the same functionality but must be imported or qualified as <code>Date::Simple::date</code>. (To import all public functions, do <code>use Date::Simple (&#39;:all&#39;);</code>.) This function returns undef on all invalid input, rather than dying in some cases like <code>new</code>.</p>

<dt><a name='date_fmt'></a><a name="date_fmt_(FMT,[ARG,_...])"
>date_fmt (FMT,[ARG, ...])</a></dt>

<dd>
<p>Equivelent to <code>date</code> but creates a Date::Simple::Fmt object instead. The format is expected to be a valid POSIX::strftime format string.</p>

<dt><a name='date_iso'></a><a name="date_iso_([ARG,_...])"
>date_iso ([ARG, ...])</a></dt>

<dd>
<p>Identical to <code>date</code> but creates a Date::Simple::ISO object instead.</p>

<dt><a name='date_d8'></a><a name="date_d8_([ARG,_...])"
>date_d8 ([ARG, ...])</a></dt>

<dd>
<p>Equivelent to <code>date</code> but creates a Date::Simple::D8 object instead.</p>

<dt><a name='today'></a><a name="today()"
>today()</a></dt>

<dd>
<p>Returns the current date according to <code>localtime</code>.</p>

<p><b>Caution:</b> To get tomorrow&#39;s date (or any fixed offset from today), do not use <code>today + 1</code>. Perl parses this as <code>today(+1)</code>. You need to put empty parentheses after the function: <code>today() + 1</code>.</p>

<dt><a name='ymd'></a><a name="ymd_(YEAR,_MONTH,_DAY)"
>ymd (YEAR, MONTH, DAY)</a></dt>

<dd>
<p>Returns a date object with the given year, month, and day numbers. If the arguments do not specify a valid date, undef is returned.</p>

<p>Example:</p>

<pre class="sh_perl">    use Date::Simple (&#39;ymd&#39;);
    $pbd = ymd(1987, 12, 18);</pre>

<dt><a name='d8'></a><a name="d8_(STRING)"
>d8 (STRING)</a></dt>

<dd>
<p>Parses STRING as &#34;YYYYMMDD&#34; and returns the corresponding date object, or undef if STRING has the wrong format or specifies an invalid date.</p>

<p>Example:</p>

<pre class="sh_perl">    use Date::Simple (&#39;d8&#39;);
    $doi = d8(&#39;17760704&#39;);</pre>

<p>Mnemonic: The string matches <code>/\d{8}/</code>. Also, &#34;d8&#34; spells &#34;date&#34;, if 8 is expanded phonetically.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="INSTANCE_METHODS"
>INSTANCE METHODS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<dl>
<dt><a name='DATE'></a><a name="DATE-&#62;next"
>DATE-&#62;next</a></dt>

<dd>
<pre class="sh_perl">    my $tomorrow = $today-&#62;next;</pre>

<p>Returns an object representing tomorrow.</p>

<dt><a name='DATE'></a><a name="DATE-&#62;prev"
>DATE-&#62;prev</a></dt>

<dd>
<pre class="sh_perl">   my $yesterday = $today-&#62;prev;</pre>

<p>Returns an object representing yesterday.</p>

<dt><a name='DATE'></a><a name="DATE-&#62;year"
>DATE-&#62;year</a></dt>

<dd>
<pre class="sh_perl">    my $year  = $date-&#62;year;</pre>

<p>Return the year of DATE as an integer.</p>

<dt><a name='DATE'></a><a name="DATE-&#62;month"
>DATE-&#62;month</a></dt>

<dd>
<pre class="sh_perl">    my $month = $date-&#62;month;</pre>

<p>Return the month of DATE as an integer from 1 to 12.</p>

<dt><a name='DATE'></a><a name="DATE-&#62;day"
>DATE-&#62;day</a></dt>

<dd>
<pre class="sh_perl">    my $day   = $date-&#62;day;</pre>

<p>Return the DATE&#39;s day of the month as an integer from 1 to 31.</p>

<dt><a name='DATE'></a><a name="DATE-&#62;day_of_week"
>DATE-&#62;day_of_week</a></dt>

<dd>
<p>Return a number representing DATE&#39;s day of the week from 0 to 6, where 0 means Sunday.</p>

<dt><a name='DATE'></a><a name="DATE-&#62;as_ymd"
>DATE-&#62;as_ymd</a></dt>

<dd>
<pre class="sh_perl">    my ($year, $month, $day) = $date-&#62;as_ymd;</pre>

<p>Returns a list of three numbers: year, month, and day.</p>

<dt><a name='DATE'></a><a name="DATE-&#62;as_d8"
>DATE-&#62;as_d8</a></dt>

<dd>
<p>Returns the &#34;d8&#34; representation (see <code>d8</code>), like <code>$date-&#62;format(&#34;%Y%m%d&#34;)</code>.</p>

<dt><a name='DATE'></a><a name="DATE-&#62;as_iso"
>DATE-&#62;as_iso</a></dt>

<dd>
<p>Returns the ISO 8601 representation of the date (eg &#39;2004-01-01&#39;), like <code>$date-&#62;format(&#34;%Y-%m-%d&#34;)</code>. This is in fact the default overloaded stringification mechanism and is provided mostly so other subclasses with different overloading can still do fast ISO style date output.</p>

<dt><a name='DATE'></a><a name="DATE-&#62;as_str_([STRING])"
>DATE-&#62;as_str ([STRING])</a></dt>

<dd>
<dt><a name='DATE'></a><a name="DATE-&#62;format_([STRING])"
>DATE-&#62;format ([STRING])</a></dt>

<dd>
<dt><a name='DATE'></a><a name="DATE-&#62;strftime_([STRING])"
>DATE-&#62;strftime ([STRING])</a></dt>

<dd>
<p>These functions are equivalent. Return a string representing the date, in the format specified. If you don&#39;t pass a parameter, the default date format for the object is used if one has been specified, otherwise uses the default date format for the class the object is a member of, or as a last fallback uses the $Date::Simple::Standard_Format which is changeable, but probably shouldn&#39;t be modified. See <code>default_format</code> for details.</p>

<pre class="sh_perl">    my $change_date = $date-&#62;format(&#34;%d %b %y&#34;);
    my $iso_date1 = $date-&#62;format(&#34;%Y-%m-%d&#34;);
    my $iso_date2 = $date-&#62;format;</pre>

<p>The formatting parameter is similar to one you would pass to strftime(3). This is because we actually do pass it to strftime to format the date. This may result in differing behavior across platforms and locales and may not even work everywhere.</p>

<dt><a name='DATE'></a><a name="DATE-&#62;default_format_([FORMAT])"
>DATE-&#62;default_format ([FORMAT])</a></dt>

<dd>
<p>This method sets or gets the default_format for the DATE object or class that it is called on.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="OPERATORS"
>OPERATORS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Some operators can be used with Date::Simple instances. If one side of an expression is a date object, and the operator expects two date objects, the other side is interpreted as <code>date(ARG)</code>, so an array reference or ISO 8601 string will work.</p>

<dl>
<dt><a name='DATE'></a><a name="DATE_+_NUMBER"
>DATE + NUMBER</a></dt>

<dd>
<dt><a name='DATE'></a><a name="DATE_-_NUMBER"
>DATE - NUMBER</a></dt>

<dd>
<p>You can construct a new date offset by a number of days using the <code>+</code> and <code>-</code> operators.</p>

<dt><a name='DATE1'></a><a name="DATE1_-_DATE2"
>DATE1 - DATE2</a></dt>

<dd>
<p>You can subtract two dates to find the number of days between them.</p>

<dt><a name='DATE1'></a><a name="DATE1_==_DATE2"
>DATE1 == DATE2</a></dt>

<dd>
<dt><a name='DATE1'></a><a name="DATE1_&#60;_DATE2"
>DATE1 &#60; DATE2</a></dt>

<dd>
<dt><a name='DATE1'></a><a name="DATE1_&#60;=&#62;_DATE2"
>DATE1 &#60;=&#62; DATE2</a></dt>

<dd>
<dt><a name='DATE1'></a><a name="DATE1_cmp_DATE2"
>DATE1 cmp DATE2</a></dt>

<dd>
<dt><a name='etc'></a><a name="etc."
>etc.</a></dt>

<dd>
<p>You can compare two dates using the arithmetic or string comparison operators. Equality tests (<code>==</code> and <code>eq</code>) return false when one of the expressions can not be converted to a date. Other comparison tests die in such cases. This is intentional, because in a sense, all non-dates are not &#34;equal&#34; to all dates, but in no sense are they &#34;greater&#34; or &#34;less&#34; than dates.</p>

<dt><a name='DATE'></a><a name="DATE_+=_NUMBER"
>DATE += NUMBER</a></dt>

<dd>
<dt><a name='DATE'></a><a name="DATE_-=_NUMBER"
>DATE -= NUMBER</a></dt>

<dd>
<p>You can increment or decrement a date by a number of days using the += and -= operators. This actually generates a new date object and is equivalent to <code>$date = $date + $number</code>.</p>

<dt><a name='date'></a><a name="&#34;$date&#34;"
>&#34;$date&#34;</a></dt>

<dd>
<p>You can interpolate a date instance directly into a string, in the format specified by ISO 8601 (eg: 2000-01-17) for Date::Simple and Date::Simple::ISO, for Date::Simple::D8 this is the same as calling as_d8() on the object, and for Date::Simple::Fmt this is the same as calling format() on the object.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="UTILITIES"
>UTILITIES <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<dl>
<dt><a name='leap_year'></a><a name="leap_year_(YEAR)"
>leap_year (YEAR)</a></dt>

<dd>
<p>Returns true if YEAR is a leap year.</p>

<dt><a name='days_in_month'></a><a name="days_in_month_(YEAR,_MONTH)"
>days_in_month (YEAR, MONTH)</a></dt>

<dd>
<p>Returns the number of days in MONTH, YEAR.</p>
</dd>
</dl>

<dl>
<dt><a name='leap_year'></a><a name="leap_year_(YEAR)"
>leap_year (YEAR)</a></dt>

<dd>
<p>Returns true if YEAR is a leap year.</p>

<dt><a name='days_in_month'></a><a name="days_in_month_(YEAR,_MONTH)"
>days_in_month (YEAR, MONTH)</a></dt>

<dd>
<p>Returns the number of days in MONTH, YEAR.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHOR"
>AUTHOR <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">    Marty Pauley &#60;marty@kasei.com&#62;
    John Tobey &#60;jtobey@john-edwin-tobey.org&#62;
    Yves Orton &#60;demerphq@hotmail.com&#62;</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="COPYRIGHT"
>COPYRIGHT <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">      Copyright (C) 2001  Kasei.
      Copyright (C) 2001,2002 John Tobey.
      Copyright (C) 2004 Yves Orton.

      This program is free software; you can redistribute it and/or
      modify it under the terms of either:

      a) the GNU General Public License;
         either version 2 of the License, or (at your option) any later
         version.  You should have received a copy of the GNU General
         Public License along with this program; see the file COPYING.
         If not, write to the Free Software Foundation, Inc., 59
         Temple Place, Suite 330, Boston, MA 02111-1307 USA

      b) the Perl Artistic License.

      This program is distributed in the hope that it will be useful,
      but WITHOUT ANY WARRANTY; without even the implied warranty of
      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SEE_ALSO"
>SEE ALSO <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><a href="/~izut/Date-Simple-3.03/lib/Date/Simple/Fmt.pm" class="podlinkpod"
>Date::Simple::Fmt</a> <a href="/~izut/Date-Simple-3.03/lib/Date/Simple/ISO.pm" class="podlinkpod"
>Date::Simple::ISO</a> <a href="/~izut/Date-Simple-3.03/lib/Date/Simple/D8.pm" class="podlinkpod"
>Date::Simple::D8</a> and of course <a href="/perldoc?perl" class="podlinkpod"
>perl</a></p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78283 Uploads, 24725 Distributions
106015 Modules, 9649 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Sat Apr 28 06:50:11 2012 GMT (0.144361019134521) @cpansearch1 -->
 </body>
</html>
