<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>HTTP::GHTTP - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","HTTP-GHTTP",3]);
    _gaq.push(["_setCustomVar",5,"Release","HTTP-GHTTP-1.07",3]);
    _gaq.push(["_setCustomVar",3,"Module","HTTP::GHTTP",3]);
    _gaq.push(["_setCustomVar",1,"Author","MSERGEANT",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?HTTP::GHTTP">permalink</a></div>
  <a href="/~msergeant/">Matt Sergeant</a> &gt;
  <a href="/~msergeant/HTTP-GHTTP-1.07/">HTTP-GHTTP-1.07</a> &gt;
  HTTP::GHTTP
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/d372604239b5c6b56a5416eef95fa441?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/M/MS/MSERGEANT/HTTP-GHTTP-1.07.tar.gz">HTTP-GHTTP-1.07.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=HTTP%3A%3AGHTTP;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~MSERGEANT/HTTP-GHTTP-1.07/GHTTP.pm">Annotate this POD
</a></p>
<div class=box style='width:150px; float: right'>
<h1 class=t5>Related Modules</h1>
<div style="margin:2px">
<a href="/perldoc?File%3A%3ATemp">File::Temp</a><br>
<a href="/perldoc?LWP%3A%3ASimple">LWP::Simple</a><br>
<a href="/perldoc?LWP%3A%3AParallel">LWP::Parallel</a><br>
<a href="/perldoc?LWP%3A%3AUserAgent">LWP::UserAgent</a><br>
<a href="/perldoc?IO%3A%3ASocket">IO::Socket</a><br>
<a href="/perldoc?HTTP%3A%3ARequest">HTTP::Request</a><br>
<a href="/perldoc?IPC%3A%3AOpen3">IPC::Open3</a><br>
<a href="/perldoc?HTML%3A%3AParser">HTML::Parser</a><br>
<a href="/perldoc?XML%3A%3ARSS">XML::RSS</a><br>
<a href="/perldoc?File%3A%3AFind">File::Find</a><br>
<small>
<a href="http://perlmonks.org/?node=cpan+module+search&pivot=1&module=HTTP%3A%3AGHTTP">more...</a><br>
By <a href="http://perlmonks.org/">perlmonks.org</a></small>
</div>
</div>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>New&nbsp;</td><td style="text-align:right"> 2</td></tr>
<tr><td>Open&nbsp;</td><td style="text-align:right"> 0</td></tr>
</table>
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=HTTP-GHTTP">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  1.07 &nbsp;
<span class="noprint">
  <a href="/src/MSERGEANT/HTTP-GHTTP-1.07/GHTTP.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <li class='indexItem indexItem1'><a href='#API'>API</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#HTTP::GHTTP-&#62;new([$uri,_[%headers]])'>HTTP::GHTTP-&#62;new([$uri, [%headers]])</a>
    <li class='indexItem indexItem2'><a href='#$r-&#62;set_uri($uri)'>$r-&#62;set_uri($uri)</a>
    <li class='indexItem indexItem2'><a href='#$r-&#62;set_header($header,_$value)'>$r-&#62;set_header($header, $value)</a>
    <li class='indexItem indexItem2'><a href='#$r-&#62;set_type($type)'>$r-&#62;set_type($type)</a>
    <li class='indexItem indexItem2'><a href='#$r-&#62;set_body($body)'>$r-&#62;set_body($body)</a>
    <li class='indexItem indexItem2'><a href='#$r-&#62;process_request()'>$r-&#62;process_request()</a>
    <li class='indexItem indexItem2'><a href='#$r-&#62;get_status()'>$r-&#62;get_status()</a>
    <li class='indexItem indexItem2'><a href='#$r-&#62;get_header($header)'>$r-&#62;get_header($header)</a>
    <li class='indexItem indexItem2'><a href='#$r-&#62;get_headers()'>$r-&#62;get_headers()</a>
    <li class='indexItem indexItem2'><a href='#$r-&#62;get_body()'>$r-&#62;get_body()</a>
    <li class='indexItem indexItem2'><a href='#$r-&#62;get_error()'>$r-&#62;get_error()</a>
    <li class='indexItem indexItem2'><a href='#$r-&#62;set_authinfo($user,_$password)'>$r-&#62;set_authinfo($user, $password)</a>
    <li class='indexItem indexItem2'><a href='#$r-&#62;set_proxy($proxy)'>$r-&#62;set_proxy($proxy)</a>
    <li class='indexItem indexItem2'><a href='#$r-&#62;set_proxy_authinfo($user,_$password)'>$r-&#62;set_proxy_authinfo($user, $password)</a>
    <li class='indexItem indexItem2'><a href='#$r-&#62;prepare()'>$r-&#62;prepare()</a>
    <li class='indexItem indexItem2'><a href='#$r-&#62;process()'>$r-&#62;process()</a>
    <li class='indexItem indexItem2'><a href='#$r-&#62;get_socket()'>$r-&#62;get_socket()</a>
    <li class='indexItem indexItem2'><a href='#$r-&#62;current_status()'>$r-&#62;current_status()</a>
    <li class='indexItem indexItem2'><a href='#$r-&#62;set_async()'>$r-&#62;set_async()</a>
    <li class='indexItem indexItem2'><a href='#$r-&#62;set_chunksize($bytes)'>$r-&#62;set_chunksize($bytes)</a>
    <li class='indexItem indexItem2'><a href='#get($uri,_[%headers])'>get($uri, [%headers])</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#ASYNC_OPERATION'>ASYNC OPERATION</a>
  <li class='indexItem indexItem1'><a href='#AUTHOR'>AUTHOR</a>
  <li class='indexItem indexItem1'><a href='#LICENSE'>LICENSE</a>
  <li class='indexItem indexItem1'><a href='#BUGS'>BUGS</a>
  <li class='indexItem indexItem1'><a href='#BENCHMARKS'>BENCHMARKS</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>HTTP::GHTTP - Perl interface to the gnome ghttp library</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">  use HTTP::GHTTP;
  
  my $r = HTTP::GHTTP-&#62;new();
  $r-&#62;set_uri(&#34;<a href="http://axkit.org/" class="podlinkurl"
>http://axkit.org/</a>&#34;);
  $r-&#62;process_request;
  print $r-&#62;get_body;</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This is a fairly low level interface to the Gnome project&#39;s libghttp, which allows you to process HTTP requests to HTTP servers. There also exists a slightly higher level interface - a simple get() function which takes a URI as a parameter. This is not exported by default, you have to ask for it explicitly.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="API"
>API <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="HTTP::GHTTP-&#62;new([$uri,_[%headers]])"
>HTTP::GHTTP-&#62;new([$uri, [%headers]])</a></h2>

<p>Constructor function - creates a new GHTTP object. If supplied a URI it will automatically call set_uri for you. If you also supply a list of key/value pairs it will set those as headers:</p>

<pre class="sh_perl">    my $r = HTTP::GHTTP-&#62;new(
        &#34;<a href="http://axkit.com/" class="podlinkurl"
>http://axkit.com/</a>&#34;,
        Connection =&#62; &#34;close&#34;);</pre>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="$r-&#62;set_uri($uri)"
>$r-&#62;set_uri($uri)</a></h2>

<p>This sets the URI for the request</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="$r-&#62;set_header($header,_$value)"
>$r-&#62;set_header($header, $value)</a></h2>

<p>This sets an outgoing HTTP request header</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="$r-&#62;set_type($type)"
>$r-&#62;set_type($type)</a></h2>

<p>This sets the request type. The request types themselves are constants that are not exported by default. To export them, specify the :methods option in the import list:</p>

<pre class="sh_perl">    use HTTP::GHTTP qw/:methods/;
    my $r = HTTP::GHTTP-&#62;new();
    $r-&#62;set_uri(&#39;<a href="http://axkit.com/" class="podlinkurl"
>http://axkit.com/</a>&#39;);
    $r-&#62;set_type(METHOD_HEAD);
    ...</pre>

<p>The available methods are:</p>

<pre class="sh_perl">    METHOD_GET
    METHOD_POST
    METHOD_OPTIONS
    METHOD_HEAD
    METHOD_PUT
    METHOD_DELETE
    METHOD_TRACE
    METHOD_CONNECT
    METHOD_PROPFIND
    METHOD_PROPPATCH
    METHOD_MKCOL
    METHOD_COPY
    METHOD_MOVE
    METHOD_LOCK
    METHOD_UNLOCK</pre>

<p>Some of these are for DAV.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="$r-&#62;set_body($body)"
>$r-&#62;set_body($body)</a></h2>

<p>This sets the body of a request, useful in POST and some of the DAV request types.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="$r-&#62;process_request()"
>$r-&#62;process_request()</a></h2>

<p>This sends the actual request to the server</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="$r-&#62;get_status()"
>$r-&#62;get_status()</a></h2>

<p>This returns 2 values, a status code (numeric) and a status reason phrase. A simple example of the return values would be (200, &#34;OK&#34;).</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="$r-&#62;get_header($header)"
>$r-&#62;get_header($header)</a></h2>

<p>This gets the value of an incoming HTTP response header</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="$r-&#62;get_headers()"
>$r-&#62;get_headers()</a></h2>

<p>Returns a list of all the response header names in the order they came back. This method is only available in libghttp 1.08 and later - perl Makefile.PL should have reported whether it found it or not.</p>

<pre class="sh_perl">  my @headers = $r-&#62;get_headers;
  print join(&#34;\n&#34;, 
        map { &#34;$_: &#34; . $r-&#62;get_header($_) } @headers), &#34;\n\n&#34;;</pre>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="$r-&#62;get_body()"
>$r-&#62;get_body()</a></h2>

<p>This gets the body of the response</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="$r-&#62;get_error()"
>$r-&#62;get_error()</a></h2>

<p>If the response failed for some reason, this returns a textual error</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="$r-&#62;set_authinfo($user,_$password)"
>$r-&#62;set_authinfo($user, $password)</a></h2>

<p>This sets an outgoing username and password for simple HTTP authentication</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="$r-&#62;set_proxy($proxy)"
>$r-&#62;set_proxy($proxy)</a></h2>

<p>This sets your proxy server, use the form &#34;<a href="http://proxy:port" class="podlinkurl"
>http://proxy:port</a>&#34;</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="$r-&#62;set_proxy_authinfo($user,_$password)"
>$r-&#62;set_proxy_authinfo($user, $password)</a></h2>

<p>If you have set a proxy and your proxy requires a username and password you can set it with this.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="$r-&#62;prepare()"
>$r-&#62;prepare()</a></h2>

<p>This is a low level interface useful only when doing async downloads. See <a href="#ASYNC_OPERATION" class="podlinkpod"
>&#34;ASYNC OPERATION&#34;</a>.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="$r-&#62;process()"
>$r-&#62;process()</a></h2>

<p>This is a low level interface useful only when doing async downloads. See <a href="#ASYNC_OPERATION" class="podlinkpod"
>&#34;ASYNC OPERATION&#34;</a>.</p>

<p>process returns undef for error, 1 for &#34;in progress&#34;, and zero for &#34;complete&#34;.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="$r-&#62;get_socket()"
>$r-&#62;get_socket()</a></h2>

<p>Returns an IO::Handle object that is the currently in progress socket. Useful only when doing async downloads. There appears to be some corruption when using the socket to retrieve file contents on more recent libghttp&#39;s.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="$r-&#62;current_status()"
>$r-&#62;current_status()</a></h2>

<p>This is only useful in async mode. It returns 3 values: The current processing stage (0 = none, 1 = request, 2 = response headers, 3 = response), the number of bytes read, and the number of bytes total.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="$r-&#62;set_async()"
>$r-&#62;set_async()</a></h2>

<p>This turns async mode on. There is no corresponding unset function.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="$r-&#62;set_chunksize($bytes)"
>$r-&#62;set_chunksize($bytes)</a></h2>

<p>Sets the download (and upload) chunk size in bytes for use in async mode. This may be a useful value to set for slow modems, or perhaps for a download progress bar, or just to allow periodic writes.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="get($uri,_[%headers])"
>get($uri, [%headers])</a></h2>

<p>This does everything automatically for you, retrieving the body at the remote URI. Optionally pass in headers.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="ASYNC_OPERATION"
>ASYNC OPERATION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Its possible to use an asynchronous mode of operation with ghttp. Here&#39;s a brief example of how:</p>

<pre class="sh_perl">    my $r = HTTP::GHTTP-&#62;new(&#34;<a href="http://axkit.org/" class="podlinkurl"
>http://axkit.org/</a>&#34;);
    $r-&#62;set_async; 
    $r-&#62;set_chunksize(1);
    $r-&#62;prepare;

    my $status;
    while ($status = $r-&#62;process) {
        # do something
        # you can do $r-&#62;get_body in here if you want to
        # but it always returns the entire body.
    }
    
    die &#34;An error occured&#34; unless defined $status;
    
    print $r-&#62;get_body;</pre>

<p>Doing timeouts is an exercise for the reader (hint: lookup select() in perlfunc).</p>

<p>Note also that $sock above is an IO::Handle, not an IO::Socket, although you can probably get away with re-blessing it. Also note that by calling $r-&#62;get_socket() you load IO::Handle, which probably brings a lot of code with it, thereby obliterating a lot of the use for libghttp. So use at your own risk :-)</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHOR"
>AUTHOR <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Matt Sergeant, matt@sergeant.org</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="LICENSE"
>LICENSE <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This is free software, you may use it and distribute it under the same terms as Perl itself. Please be aware though that libghttp is licensed under the terms of the LGPL, a copy of which can be found in the libghttp distribution.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="BUGS"
>BUGS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Probably many - this is my first adventure into XS.</p>

<p>libghttp doesn&#39;t support SSL. When libghttp does support SSL, so will HTTP::GHTTP. The author of libghttp, Chris Blizzard &#60;blizzard@redhat.com&#62; is looking for patches to support SSL, so get coding!</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="BENCHMARKS"
>BENCHMARKS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Benchmarking this sort of thing is often difficult, and I don&#39;t want to offend anyone. But as well as being lightweight (HTTP::GHTTP is about 4 times less code than either LWP::UserAgent, or HTTP::Lite), it is also in my tests significantly faster. Here are my benchmark results requesting <a href="http://localhost/" class="podlinkurl"
>http://localhost/</a> (the Apache &#34;Successful Install&#34; page):</p>

<pre class="sh_perl">    Benchmark: timing 1000 iterations of ghttp, lite, lwp...
         ghttp:  8 wallclock secs ( 0.96 usr +  1.16 sys =  2.12 CPU)
          lite: 21 wallclock secs ( 3.00 usr +  3.44 sys =  6.44 CPU)
           lwp: 18 wallclock secs ( 9.76 usr +  1.59 sys = 11.35 CPU)</pre>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78138 Uploads, 24700 Distributions
105952 Modules, 9642 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Tue Apr 24 10:16:27 2012 GMT (0.106132984161377) @cpansearch1 -->
 </body>
</html>
