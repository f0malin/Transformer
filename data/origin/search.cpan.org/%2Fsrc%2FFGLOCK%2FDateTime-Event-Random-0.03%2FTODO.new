TODO list for Perl module DateTime::Event::Random

implement span() ?

Actually _test_ the distribution for randomness.

Maybe implement truncate_to => 'days'

Find out some links about the "density function"

Implement other random distributions
- implement next/previous instead of "duration"

Optimize new_cached()

Optimize duration()

$set->next($dt) on an unbounded, uncached set should use a different
density value (0.5 density). Now, this only happens for the
_first_ call to next($dt).

Documented problems - from the POD & README:

    Note that, although the datetime values are random,
    the accessors (C<as_list>, C<iterator/next/previous>) always 
    return sorted datetimes.

    Tests may fail randomly, because they depend on 
    averaging random results...

For the Cookbook:

    * How to obtain shuffled datetimes?

    * How to obtain exactly an event per week?

    * How to obtain a random Span?
