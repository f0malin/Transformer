<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>Getopt::Simple - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","Getopt-Simple",3]);
    _gaq.push(["_setCustomVar",5,"Release","Getopt-Simple-1.52",3]);
    _gaq.push(["_setCustomVar",3,"Module","Getopt::Simple",3]);
    _gaq.push(["_setCustomVar",1,"Author","RSAVAGE",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?Getopt::Simple">permalink</a></div>
  <a href="/~rsavage/">Ron Savage</a> &gt;
  <a href="/~rsavage/Getopt-Simple-1.52/">Getopt-Simple-1.52</a> &gt;
  Getopt::Simple
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/6dffb4a7f8901481b1395ebaa4a45edf?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/R/RS/RSAVAGE/Getopt-Simple-1.52.tgz">Getopt-Simple-1.52.tgz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=Getopt%3A%3ASimple;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~RSAVAGE/Getopt-Simple-1.52/lib/Getopt/Simple.pm">Annotate this POD
</a></p>
<div class=box style='width:150px; float: right'>
<h1 class=t5>Related Modules</h1>
<div style="margin:2px">
<a href="/perldoc?Getopt%3A%3ALong">Getopt::Long</a><br>
<a href="/perldoc?Getopt%3A%3AStd">Getopt::Std</a><br>
<a href="/perldoc?Digest%3A%3AMD5">Digest::MD5</a><br>
<a href="/perldoc?Digest%3A%3ASHA1">Digest::SHA1</a><br>
<a href="/perldoc?Data%3A%3ADumper">Data::Dumper</a><br>
<a href="/perldoc?Getopt%3A%3ATiny">Getopt::Tiny</a><br>
<a href="/perldoc?Getopt%3A%3AGetArgs">Getopt::GetArgs</a><br>
<a href="/perldoc?Getopt%3A%3AArgvFile">Getopt::ArgvFile</a><br>
<a href="/perldoc?Getopt%3A%3ARegex">Getopt::Regex</a><br>
<a href="/perldoc?Getopt%3A%3AAttribute">Getopt::Attribute</a><br>
<small>
<a href="http://perlmonks.org/?node=cpan+module+search&pivot=1&module=Getopt%3A%3ASimple">more...</a><br>
By <a href="http://perlmonks.org/">perlmonks.org</a></small>
</div>
</div>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>Open&nbsp;</td><td style="text-align:right"> 0</td></tr>
</table>
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=Getopt-Simple">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  1.52 &nbsp;
<span class="noprint">
  <a href="/src/RSAVAGE/Getopt-Simple-1.52/lib/Getopt/Simple.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <li class='indexItem indexItem1'><a href='#Distributions'>Distributions</a>
  <li class='indexItem indexItem1'><a href='#Constructor_and_initialization'>Constructor and initialization</a>
  <li class='indexItem indexItem1'><a href='#The_dumpOptions()_function'>The dumpOptions() function</a>
  <li class='indexItem indexItem1'><a href='#The_getOptions()_function'>The getOptions() function</a>
  <li class='indexItem indexItem1'><a href='#The_hash_ref_of_command_line_switches'>The hash ref of command line switches</a>
  <li class='indexItem indexItem1'><a href='#The_helpOptions()_function'>The helpOptions() function</a>
  <li class='indexItem indexItem1'><a href='#The_$$classRef{&#39;switch&#39;}_hash_reference'>The $$classRef{&#39;switch&#39;} hash reference</a>
  <li class='indexItem indexItem1'><a href='#The_$switch_hash_reference'>The $switch hash reference</a>
  <li class='indexItem indexItem1'><a href='#WARNING_re_Perl_bug'>WARNING re Perl bug</a>
  <li class='indexItem indexItem1'><a href='#AUTHOR'>AUTHOR</a>
  <li class='indexItem indexItem1'><a href='#LICENCE'>LICENCE</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><code>Getopt::Simple</code> - Provide a simple wrapper around Getopt::Long.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">        use Getopt::Simple;

        # Or ...
        # use Getopt::Simple qw($switch);

        my($options) =
        {
        help =&#62;
                {
                type    =&#62; &#39;&#39;,
                env     =&#62; &#39;-&#39;,
                default =&#62; &#39;&#39;,
#               verbose =&#62; &#39;&#39;,      # Not needed on every key.
                order   =&#62; 1,
                },
        username =&#62;
                {
                type    =&#62; &#39;=s&#39;,    # As per Getopt::Long.
                env     =&#62; &#39;$USER&#39;, # Help text.
                default =&#62; $ENV{&#39;USER&#39;} || &#39;RonSavage&#39;, # In case $USER is undef.
                verbose =&#62; &#39;Specify the username on the remote machine&#39;,
                order   =&#62; 3,       # Help text sort order.
                },
        password =&#62;
                {
                type    =&#62; &#39;=s&#39;,
                env     =&#62; &#39;-&#39;,
                default =&#62; &#39;password&#39;,
                verbose =&#62; &#39;Specify the password on the remote machine&#39;,
                order   =&#62; 4,
                },
        };

        my($option) = Getopt::Simple -&#62; new();

        if (! $option -&#62; getOptions($options, &#34;Usage: testSimple.pl [options]&#34;) )
        {
                exit(-1);       # Failure.
        }

        print &#34;username: $$option{&#39;switch&#39;}{&#39;username&#39;}. \n&#34;;
        print &#34;password: $$option{&#39;switch&#39;}{&#39;password&#39;}. \n&#34;;

        # Or, after &#39;use Getopt::Simple qw($switch);&#39; ...
        # print &#34;username: $$switch{&#39;username&#39;}. \n&#34;;
        # print &#34;password: $$switch{&#39;password&#39;}. \n&#34;;</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><code>Getopt::Simple</code> is a pure Perl module.</p>

<p>The <code>Getopt::Simple</code> module provides a simple way of specifying:</p>

<ul>
<li>Command line switches</li>

<li>Type information for switch values</li>

<li>Default values for the switches</li>

<li>Help text per switch</li>
</ul>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="Distributions"
>Distributions <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This module is available both as a Unix-style distro (*.tgz) and an ActiveState-style distro (*.ppd). The latter is shipped in a *.zip file.</p>

<p>See <a href="http://savage.net.au/Perl-modules.html" class="podlinkurl"
>http://savage.net.au/Perl-modules.html</a> for details.</p>

<p>See <a href="http://savage.net.au/Perl-modules/html/installing-a-module.html" class="podlinkurl"
>http://savage.net.au/Perl-modules/html/installing-a-module.html</a> for help on unpacking and installing each type of distro.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="Constructor_and_initialization"
>Constructor and initialization <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>new(...) returns a <code>Getopt::Simple</code> object.</p>

<p>This is the class&#39;s contructor.</p>

<p>Usage: Getopt::Simple -&#62; new().</p>

<p>This method does not take any parameters.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="The_dumpOptions()_function"
>The <code>dumpOptions()</code> function <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><code>dumpOptions()</code> prints all your option&#39;s keys and their current values.</p>

<p><code>dumpOptions()</code> does not return anything.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="The_getOptions()_function"
>The <code>getOptions()</code> function <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>The <code>getOptions()</code> function takes 4 parameters:</p>

<ul>
<li>A hash ref defining the command line switches
<p>The structure of this hash ref is defined in the next section.</p>

<p>This parameter is mandatory.</p>
</li>

<li>A string to display as a help text heading
<p>This parameter is mandatory.</p>
</li>

<li>A Boolean. 0 = (Default) Use case-sensitive switch names. 1 = Ignore case
<p>This parameter is optional.</p>
</li>

<li>A Boolean. 0 = Return after displaying help. 1 = (Default) Terminate with exit(0) after displaying help
<p>This parameter is optional.</p>
</li>
</ul>

<p><code>getOptions()</code> returns 0 for failure and 1 for success.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="The_hash_ref_of_command_line_switches"
>The hash ref of command line switches <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<ul>
<li>Each key in the hash ref is the name of a command line switch</li>

<li>Each key points to a hash ref which defines the nature of that command line switch
<p>The keys and values of this nested hash ref are as follows.</p>

<ul>
<li>default =&#62; &#39;Some value&#39;
<p>This key, value pair is mandatory.</p>

<p>This is the default value for this switch.</p>

<p>Examples:</p>

<pre class="sh_perl">        default =&#62; &#39;/users/home/dir&#39;
        default =&#62; $ENV{&#39;REMOTEHOST&#39;} || &#39;127.0.0.1&#39;</pre>
</li>

<li>env =&#62; &#39;-&#39; || &#39;Some short help text&#39;
<p>This key, value pair is mandatory.</p>

<p>This is help test, to indicate that the calling program can use an environment variable to set the default value of this switch.</p>

<p>Use &#39;-&#39; to indicate that no environment variable is used.</p>

<p>Examples:</p>

<pre class="sh_perl">        env =&#62; &#39;-&#39;
        env =&#62; &#39;$REMOTEHOST&#39;</pre>

<p>Note the use of &#39; to indicate we want the $ to appear in the output.</p>
</li>

<li>type =&#62; &#39;Types as per Getopt::Long&#39;
<p>This key, value pair is mandatory.</p>

<p>This is the type of the command line switch, as defined by Getopt::Long.</p>

<p>Examples:</p>

<pre class="sh_perl">        type =&#62; &#39;=s&#39;
        type =&#62; &#39;=s@&#39;,</pre>
</li>

<li>verbose =&#62; &#39;Some long help text&#39;
<p>This key, value pair is optional.</p>

<p>This is long, explanatory help text which is displayed below the help containing the three columns of text: switch name, env value, default value.</p>

<p>Examples:</p>

<pre class="sh_perl">        verbose =&#62; &#39;Specify the username on the remote machine&#39;,
        verbose =&#62; &#39;Specify the home directory on the remote machine&#39;</pre>
</li>

<li>order =&#62; \d+
<p>This key, value pair is mandatory.</p>

<p>This is the sort order used to force the help text to display the switches in a specific order down the page.</p>

<p>Examples:</p>

<pre class="sh_perl">        order =&#62; 1
        order =&#62; 9</pre>
</li>
</ul>
</li>
</ul>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="The_helpOptions()_function"
>The <code>helpOptions()</code> function <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><code>helpOptions()</code> prints nicely formatted help text.</p>

<p><code>helpOptions()</code> does not return anything.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="The_$$classRef{&#39;switch&#39;}_hash_reference"
>The $$classRef{&#39;switch&#39;} hash reference <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Command line option values are accessed in your code by dereferencing the hash reference $$classRef{&#39;switch&#39;}. Two examples are given above, under synopsis.</p>

<p>Alternately, you can use the hash reference $switch. See below.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="The_$switch_hash_reference"
>The $switch hash reference <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Command line option values are accessed in your code by dereferencing the hash reference $switch. Two examples are given above, under synopsis.</p>

<p>Alternately, you can use the hash reference $$classRef{&#39;switch&#39;}. See above.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="WARNING_re_Perl_bug"
>WARNING re Perl bug <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>As always, be aware that these 2 lines mean the same thing, sometimes:</p>

<ul>
<li>$self -&#62; {&#39;thing&#39;}</li>

<li>$self-&#62;{&#39;thing&#39;}</li>
</ul>

<p>The problem is the spaces around the -&#62;. Inside double quotes, &#34;...&#34;, the first space stops the dereference taking place. Outside double quotes the scanner correctly associates the $self token with the {&#39;thing&#39;} token.</p>

<p>I regard this as a bug.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHOR"
>AUTHOR <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><code>Getopt::Simple</code> was written by Ron Savage <i>&#60;ron@savage.net.au&#62;</i> in 1997.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="LICENCE"
>LICENCE <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Australian copyright (c) 1997-2002 Ron Savage.</p>

<pre class="sh_perl">        All Programs of mine are &#39;OSI Certified Open Source Software&#39;;
        you can redistribute them and/or modify them under the terms of
        The Artistic License, a copy of which is available at:
        <a href="http://www.opensource.org/licenses/index.html" class="podlinkurl"
>http://www.opensource.org/licenses/index.html</a></pre>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78067 Uploads, 24685 Distributions
105889 Modules, 9637 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Sat Apr 21 15:41:54 2012 GMT (0.144623994827271) @cpansearch1 -->
 </body>
</html>
