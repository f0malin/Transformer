<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>Lingua::Ispell - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","Lingua-Ispell",3]);
    _gaq.push(["_setCustomVar",5,"Release","Lingua-Ispell-0.07",3]);
    _gaq.push(["_setCustomVar",3,"Module","Lingua::Ispell",3]);
    _gaq.push(["_setCustomVar",1,"Author","JDPORTER",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?Lingua::Ispell">permalink</a></div>
  <a href="/~jdporter/">John Douglas Porter</a> &gt;
  <a href="/~jdporter/Lingua-Ispell-0.07/">Lingua-Ispell-0.07</a> &gt;
  Lingua::Ispell
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/1db3be9609627313009ee7dfccff212f?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/J/JD/JDPORTER/Lingua-Ispell-0.07.tar.gz">Lingua-Ispell-0.07.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=Lingua%3A%3AIspell;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~JDPORTER/Lingua-Ispell-0.07/lib/Lingua/Ispell.pm">Annotate this POD
</a></p>
<div class=box style='width:150px; float: right'>
<h1 class=t5>Related Modules</h1>
<div style="margin:2px">
<a href="/perldoc?IPC%3A%3AOpen2">IPC::Open2</a><br>
<a href="/perldoc?Data%3A%3ADumper">Data::Dumper</a><br>
<a href="/perldoc?Lingua%3A%3AStem">Lingua::Stem</a><br>
<a href="/perldoc?XML%3A%3ASimple">XML::Simple</a><br>
<a href="/perldoc?CGI%3A%3ACarp">CGI::Carp</a><br>
<a href="/perldoc?XML%3A%3AWriter">XML::Writer</a><br>
<a href="/perldoc?XML%3A%3AParser">XML::Parser</a><br>
<a href="/perldoc?XML%3A%3ATwig">XML::Twig</a><br>
<small>
<a href="http://perlmonks.org/?node=cpan+module+search&pivot=1&module=Lingua%3A%3AIspell">more...</a><br>
By <a href="http://perlmonks.org/">perlmonks.org</a></small>
</div>
</div>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>New&nbsp;</td><td style="text-align:right"> 3</td></tr>
<tr><td>Open&nbsp;</td><td style="text-align:right"> 0</td></tr>
</table>
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=Lingua-Ispell">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  0.07 &nbsp;
<span class="noprint">
  <a href="/src/JDPORTER/Lingua-Ispell-0.07/lib/Lingua/Ispell.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#NOTA_BENE'>NOTA BENE</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#Consequences'>Consequences</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#NOTE'>NOTE</a>
    <li class='indexItem indexItem2'><a href='#EXAMPLE'>EXAMPLE</a>
    <li class='indexItem indexItem2'><a href='#ERRORS'>ERRORS</a>
    <li class='indexItem indexItem2'><a href='#Nota_Bene'>Nota Bene</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#AUX_FUNCTIONS'>AUX FUNCTIONS</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#add_word(word)'>add_word(word)</a>
    <li class='indexItem indexItem2'><a href='#add_word_lc(word)'>add_word_lc(word)</a>
    <li class='indexItem indexItem2'><a href='#accept_word(word)'>accept_word(word)</a>
    <li class='indexItem indexItem2'><a href='#parse_according_to(formatter)'>parse_according_to(formatter)</a>
    <li class='indexItem indexItem2'><a href='#set_params_by_language(language)'>set_params_by_language(language)</a>
    <li class='indexItem indexItem2'><a href='#save_dictionary()'>save_dictionary()</a>
    <li class='indexItem indexItem2'><a href='#terse_mode(bool:terse)'>terse_mode(bool:terse)</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#FUNCTIONS_THAT_RESTART_ISPELL'>FUNCTIONS THAT RESTART ISPELL</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#allow_compounds(bool)'>allow_compounds(bool)</a>
    <li class='indexItem indexItem2'><a href='#make_wild_guesses(bool)'>make_wild_guesses(bool)</a>
    <li class='indexItem indexItem2'><a href='#use_dictionary([dictionary])'>use_dictionary([dictionary])</a>
    <li class='indexItem indexItem2'><a href='#use_personal_dictionary([dictionary])'>use_personal_dictionary([dictionary])</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#FUTURE_ENHANCEMENTS'>FUTURE ENHANCEMENTS</a>
  <li class='indexItem indexItem1'><a href='#DEPENDENCIES'>DEPENDENCIES</a>
  <li class='indexItem indexItem1'><a href='#AUTHOR'>AUTHOR</a>
  <li class='indexItem indexItem1'><a href='#COPYRIGHT'>COPYRIGHT</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Lingua::Ispell.pm - a module encapsulating access to the Ispell program.</p>

<p>Note: this module was previously known as Text::Ispell; if you have Text::Ispell installed on your system,
it is now obsolete and should be replaced by Lingua::Ispell.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NOTA_BENE"
>NOTA BENE <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>ispell,
when reporting on misspelled words,
indicates the string it was unable to verify,
as well as its starting offset in the input line.
No such information is returned for words which are deemed to be correctly spelled.
For example,
in a line like &#34;Can&#39;t buy a thrill&#34;,
ispell simply reports that the line contained four correctly spelled words.</p>

<p>Lingua::Ispell would like to identify which substrings of the input line are words -- correctly spelled or otherwise.
It used to attempt to split the input line into words according to the same rules ispell uses; but that has proven to be very difficult,
resulting in both slow and error-prone code.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Consequences"
>Consequences</a></h2>

<p>Lingua::Ispell now operates only in &#34;terse&#34; mode.
In this mode,
only misspelled words are reported.
Words which ispell verifies as correctly spelled are silently accepted.</p>

<p>In the report structures returned by <code>spellcheck()</code>,
the <code>&#39;term&#39;</code> member is now always identical to the <code>&#39;original&#39;</code> member; of the two,
you should probably use the <code>&#39;term&#39;</code> member.
(Also consider the <code>&#39;offset&#39;</code> member.) ispell does not report this information for correctly spelled words; if at some point in the future this capability is added to ispell,
Lingua::Ispell will be updated to take advantage of it.</p>

<p>Use of the <code>$word_chars</code> variable has been removed; setting it no longer has any effect.</p>

<p><code>terse_mode()</code> now does nothing.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl"> # Brief:
 use Lingua::Ispell;
 Lingua::Ispell::spellcheck( $string );
 # or
 use Lingua::Ispell qw( spellcheck ); # import the function
 spellcheck( $string );

 # Useful:
 use Lingua::Ispell qw( :all );  # import all symbols
 for my $r ( spellcheck( &#34;hello hacking perl shrdlu 42&#34; ) ) {
   print &#34;$r-&#62;{&#39;type&#39;}: $r-&#62;{&#39;term&#39;}\n&#34;;
 }</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Lingua::Ispell::spellcheck() takes one argument. It must be a string, and it should contain only printable characters. One allowable exception is a terminal newline, which will be chomped off anyway. The line is fed to a coprocess running ispell for analysis. ispell parses the line into &#34;terms&#34; according to the language-specific rules in effect.</p>

<p>The result of ispell&#39;s analysis of each term is a categorization of the term into one of six types: ok, compound, root, miss, none, and guess. Some of these carry additional information. The first three types are &#34;correctly&#34; spelled terms, and the last three are for &#34;incorrectly&#34; spelled terms.</p>

<p>Lingua::Ispell::spellcheck returns a list of objects, each corresponding to a term in the spellchecked string. Each object is a hash (hash-ref) with at least two entries: &#39;term&#39; and &#39;type&#39;. The former contains the term ispell is reporting on, and the latter is ispell&#39;s determination of that term&#39;s type (see above). For types &#39;ok&#39; and &#39;none&#39;, that is all the information there is. For the type &#39;root&#39;, an additional hash entry is present: &#39;root&#39;. Its value is the word which ispell identified in the dictionary as being the likely root of the current term. For the type &#39;miss&#39;, an additional hash entry is present: &#39;misses&#39;. Its value is an ref to an array of words which ispell identified as being &#34;near-misses&#34; of the current term, when scanning the dictionary.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="NOTE"
>NOTE</a></h2>

<p>As mentioned above, <code>Lingua::Ispell::spellcheck()</code> currently only reports on misspelled terms.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="EXAMPLE"
>EXAMPLE</a></h2>

<pre class="sh_perl"> use Lingua::Ispell qw( spellcheck );
 Lingua::Ispell::allow_compounds(1);
 for my $r ( spellcheck( &#34;hello hacking perl salmoning fruithammer shrdlu 42&#34; ) ) {
   if ( $r-&#62;{&#39;type&#39;} eq &#39;ok&#39; ) {
     # as in the case of &#39;hello&#39;
     print &#34;&#39;$r-&#62;{&#39;term&#39;}&#39; was found in the dictionary.\n&#34;;
   }
   elsif ( $r-&#62;{&#39;type&#39;} eq &#39;root&#39; ) {
     # as in the case of &#39;hacking&#39;
     print &#34;&#39;$r-&#62;{&#39;term&#39;}&#39; can be formed from root &#39;$r-&#62;{&#39;root&#39;}&#39;\n&#34;;
   }
   elsif ( $r-&#62;{&#39;type&#39;} eq &#39;miss&#39; ) {
     # as in the case of &#39;perl&#39;
     print &#34;&#39;$r-&#62;{&#39;term&#39;}&#39; was not found in the dictionary;\n&#34;;
     print &#34;Near misses: @{$r-&#62;{&#39;misses&#39;}}\n&#34;;
   }
   elsif ( $r-&#62;{&#39;type&#39;} eq &#39;guess&#39; ) {
     # as in the case of &#39;salmoning&#39;
     print &#34;&#39;$r-&#62;{&#39;term&#39;}&#39; was not found in the dictionary;\n&#34;;
     print &#34;Root/affix Guesses: @{$r-&#62;{&#39;guesses&#39;}}\n&#34;;
   }
   elsif ( $r-&#62;{&#39;type&#39;} eq &#39;compound&#39; ) {
     # as in the case of &#39;fruithammer&#39;
     print &#34;&#39;$r-&#62;{&#39;term&#39;}&#39; is a valid compound word.\n&#34;;
   }
   elsif ( $r-&#62;{&#39;type&#39;} eq &#39;none&#39; ) {
     # as in the case of &#39;shrdlu&#39;
     print &#34;No match for term &#39;$r-&#62;{&#39;term&#39;}&#39;\n&#34;;
   }
   # and numbers are skipped entirely, as in the case of 42.
 }</pre>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="ERRORS"
>ERRORS</a></h2>

<p><code>Lingua::Ispell::spellcheck()</code> starts the ispell coprocess if the coprocess seems not to exist. Ordinarily this is simply the first time it&#39;s called.</p>

<p>ispell is spawned via the <code>Open2::open2()</code> function, which throws an exception (i.e. dies) if the spawn fails. The caller should be prepared to catch this exception -- unless, of course, the default behavior of die is acceptable.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Nota_Bene"
>Nota Bene</a></h2>

<p>The full location of the ispell executable is stored in the variable <code>$Lingua::Ispell::path</code>. The default value is <em>/usr/local/bin/ispell</em>. If your ispell executable has some name other than this, then you must set <code>$Lingua::Ispell::path</code> accordingly before you call <code>Lingua::Ispell::spellcheck()</code> (or any other function in the module) for the first time!</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUX_FUNCTIONS"
>AUX FUNCTIONS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="add_word(word)"
>add_word(word)</a></h2>

<p>Adds a word to the personal dictionary. Be careful of capitalization. If you want the word to be added &#34;case-insensitively&#34;, you should call <code>add_word_lc()</code></p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="add_word_lc(word)"
>add_word_lc(word)</a></h2>

<p>Adds a word to the personal dictionary, in lower-case form. This allows ispell to match it in a case-insensitive manner.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="accept_word(word)"
>accept_word(word)</a></h2>

<p>Similar to adding a word to the dictionary, in that it causes ispell to accept the word as valid, but it does not actually add it to the dictionary. Presumably the effects of this only last for the current ispell session, which will mysteriously end if any of the coprocess-restarting functions are called...</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="parse_according_to(formatter)"
>parse_according_to(formatter)</a></h2>

<p>Causes ispell to parse subsequent input lines according to the specified formatter. As of ispell v. 3.1.20, only &#39;tex&#39; and &#39;nroff&#39; are supported.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="set_params_by_language(language)"
>set_params_by_language(language)</a></h2>

<p>Causes ispell to set its internal operational parameters according to the given language. Legal arguments to this function, and its effects, are currently unknown by the author of Lingua::Ispell.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="save_dictionary()"
>save_dictionary()</a></h2>

<p>Causes ispell to save the current state of the dictionary to its disk file. Presumably ispell would ordinarily only do this upon exit.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="terse_mode(bool:terse)"
>terse_mode(bool:terse)</a></h2>

<p><i><b>NOTE:</b> This function has been disabled! Lingua::Ispell now always operates in terse mode.</i></p>

<p>In terse mode, ispell will not produce reports for &#34;correct&#34; words. This means that the calling program will not receive results of the types &#39;ok&#39;, &#39;root&#39;, and &#39;compound&#39;.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="FUNCTIONS_THAT_RESTART_ISPELL"
>FUNCTIONS THAT RESTART ISPELL <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>The following functions cause the current ispell coprocess, if any, to terminate. This means that all the changes to the state of ispell made by the above functions will be lost, and their respective values reset to their defaults. The only function above whose effect is persistent is <code>save_dictionary()</code>.</p>

<p>Perhaps in the future we will figure out a good way to make this state information carry over from one instantiation of the coprocess to the next.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="allow_compounds(bool)"
>allow_compounds(bool)</a></h2>

<p>When this value is set to True, compound words are accepted as legal -- as long as both words are found in the dictionary; more than two words are always illegal. When this value is set to False, run-together words are considered spelling errors.</p>

<p>The default value of this setting is dictionary-dependent, so the caller should set it explicitly if it really matters.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="make_wild_guesses(bool)"
>make_wild_guesses(bool)</a></h2>

<p>This setting controls when ispell makes &#34;wild&#34; guesses.</p>

<p>If False, ispell only makes &#34;sane&#34; guesses, i.e. possible root/affix combinations that match the current dictionary; only if it can find none will it make &#34;wild&#34; guesses, which don&#39;t match the dictionary, and might in fact be illegal words.</p>

<p>If True, wild guesses are always made, along with any &#34;sane&#34; guesses. This feature can be useful if the dictionary has a limited word list, or a word list with few suffixes.</p>

<p>The default value of this setting is dictionary-dependent, so the caller should set it explicitly if it really matters.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="use_dictionary([dictionary])"
>use_dictionary([dictionary])</a></h2>

<p>Specifies what dictionary to use instead of the default. Dictionary names are actually file names, and are searched for according to the following rule: if the name does not contain a slash, it is looked for in the directory containing the default dictionary, typically /usr/local/lib. Otherwise, it is used as is: if it does not begin with a slash, it is construed from the current directory.</p>

<p>If no argument is given, the default dictionary will be used.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="use_personal_dictionary([dictionary])"
>use_personal_dictionary([dictionary])</a></h2>

<p>Specifies what personal dictionary to use instead of the default.</p>

<p>Dictionary names are actually file names, and are searched for according to the following rule: if the name begins with a slash, it is used as is (i.e. it is an absolute path name). Otherwise, it is construed as relative to the user&#39;s home directory ($HOME).</p>

<p>If no argument is given, the default personal dictionary will be used.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="FUTURE_ENHANCEMENTS"
>FUTURE ENHANCEMENTS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>ispell options:</p>

<pre class="sh_perl">  -w chars
         Specify additional characters that can be part of a word.</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DEPENDENCIES"
>DEPENDENCIES <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Lingua::Ispell uses the external program ispell, which is the &#34;International Ispell&#34;, available at</p>

<pre class="sh_perl">  <a href="http://fmg-www.cs.ucla.edu/geoff/ispell.html" class="podlinkurl"
>http://fmg-www.cs.ucla.edu/geoff/ispell.html</a></pre>

<p>as well as various archives and mirrors, such as</p>

<pre class="sh_perl">  <a href="ftp://ftp.math.orst.edu/pub/ispell-3.1/" class="podlinkurl"
>ftp://ftp.math.orst.edu/pub/ispell-3.1/</a></pre>

<p>This is a very popular program, and may already be installed on your system.</p>

<p>Lingua::Ispell also uses the standard perl modules FileHandle, IPC::Open2, and Carp.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHOR"
>AUTHOR <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>jdporter@min.net (John Porter)</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="COPYRIGHT"
>COPYRIGHT <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This module is free software; you may redistribute it and/or modify it under the same terms as Perl itself.</p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78163 Uploads, 24704 Distributions
105968 Modules, 9645 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Tue Apr 24 20:32:29 2012 GMT (0.0902090072631836) @cpansearch1 -->
 </body>
</html>
