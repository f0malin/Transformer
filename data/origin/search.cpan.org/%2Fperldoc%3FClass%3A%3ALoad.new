<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>Class::Load - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","Class-Load",3]);
    _gaq.push(["_setCustomVar",5,"Release","Class-Load-0.19",3]);
    _gaq.push(["_setCustomVar",3,"Module","Class::Load",3]);
    _gaq.push(["_setCustomVar",1,"Author","DOY",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?Class::Load">permalink</a></div>
  <a href="/~doy/">Jesse Luehrs</a> &gt;
  <a href="/~doy/Class-Load-0.19/">Class-Load-0.19</a> &gt;
  Class::Load
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/88766de7a058697d3d0335b8d384fd2a?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/D/DO/DOY/Class-Load-0.19.tar.gz">Class-Load-0.19.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=Class%3A%3ALoad;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~DOY/Class-Load-0.19/lib/Class/Load.pm">Annotate this POD
(1)
</a></p>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>Open&nbsp;</td><td style="text-align:right"> 2</td></tr>
</table>
<a href="http://rt.cpan.org/NoAuth/Bugs.html?Dist=Class-Load">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  0.19 &nbsp;
<span class="noprint">
  <a href="/src/DOY/Class-Load-0.19/lib/Class/Load.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#VERSION'>VERSION</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <li class='indexItem indexItem1'><a href='#FUNCTIONS'>FUNCTIONS</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#load_class_Class::Name,_\%options'>load_class Class::Name, \%options</a>
    <li class='indexItem indexItem2'><a href='#try_load_class_Class::Name,_\%options_-&#62;_(0|1,_error_message)'>try_load_class Class::Name, \%options -&#62; (0|1, error message)</a>
    <li class='indexItem indexItem2'><a href='#is_class_loaded_Class::Name,_\%options_-&#62;_0|1'>is_class_loaded Class::Name, \%options -&#62; 0|1</a>
    <li class='indexItem indexItem2'><a href='#load_first_existing_class_Class::Name,_\%options,_...'>load_first_existing_class Class::Name, \%options, ...</a>
    <li class='indexItem indexItem2'><a href='#load_optional_class_Class::Name,_\%options_-&#62;_0|1'>load_optional_class Class::Name, \%options -&#62; 0|1</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#SEE_ALSO'>SEE ALSO</a>
  <li class='indexItem indexItem1'><a href='#AUTHOR'>AUTHOR</a>
  <li class='indexItem indexItem1'><a href='#COPYRIGHT_AND_LICENSE'>COPYRIGHT AND LICENSE</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Class::Load - a working (require &#34;Class::Name&#34;) and more</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="VERSION"
>VERSION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>version 0.19</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">    use Class::Load &#39;:all&#39;;

    try_load_class(&#39;Class::Name&#39;)
        or plan skip_all =&#62; &#34;Class::Name required to run these tests&#34;;

    load_class(&#39;Class::Name&#39;);

    is_class_loaded(&#39;Class::Name&#39;);

    my $baseclass = load_optional_class(&#39;Class::Name::MightExist&#39;)
        ? &#39;Class::Name::MightExist&#39;
        : &#39;Class::Name::Default&#39;;</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><code>require EXPR</code> only accepts <code>Class/Name.pm</code> style module names, not <code>Class::Name</code>. How frustrating! For that, we provide <code>load_class &#39;Class::Name&#39;</code>.</p>

<p>It&#39;s often useful to test whether a module can be loaded, instead of throwing an error when it&#39;s not available. For that, we provide <code>try_load_class &#39;Class::Name&#39;</code>.</p>

<p>Finally, sometimes we need to know whether a particular class has been loaded. Asking <code>%INC</code> is an option, but that will miss inner packages and any class for which the filename does not correspond to the package name. For that, we provide <code>is_class_loaded &#39;Class::Name&#39;</code>.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="FUNCTIONS"
>FUNCTIONS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="load_class_Class::Name,_\%options"
>load_class Class::Name, \%options</a></h2>

<p><code>load_class</code> will load <code>Class::Name</code> or throw an error, much like <code>require</code>.</p>

<p>If <code>Class::Name</code> is already loaded (checked with <code>is_class_loaded</code>) then it will not try to load the class. This is useful when you have inner packages which <code>require</code> does not check.</p>

<p>The <code>%options</code> hash currently accepts one key, <code>-version</code>. If you specify a version, then this subroutine will call <code>Class::Name-&#62;VERSION( $options{-version} )</code> internally, which will throw an error if the class&#39;s version is not equal to or greater than the version you requested.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="try_load_class_Class::Name,_\%options_-&#62;_(0|1,_error_message)"
>try_load_class Class::Name, \%options -&#62; (0|1, error message)</a></h2>

<p>Returns 1 if the class was loaded, 0 if it was not. If the class was not loaded, the error will be returned as a second return value in list context.</p>

<p>Again, if <code>Class::Name</code> is already loaded (checked with <code>is_class_loaded</code>) then it will not try to load the class. This is useful when you have inner packages which <code>require</code> does not check.</p>

<p>Like <code>load_class</code>, you can pass a <code>-version</code> in <code>%options</code>. If the version is not sufficient, then this subroutine will return false.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="is_class_loaded_Class::Name,_\%options_-&#62;_0|1"
>is_class_loaded Class::Name, \%options -&#62; 0|1</a></h2>

<p>This uses a number of heuristics to determine if the class <code>Class::Name</code> is loaded. There heuristics were taken from <a href="/perldoc?Class%3A%3AMOP" class="podlinkpod"
>Class::MOP</a>&#39;s old pure-perl implementation.</p>

<p>Like <code>load_class</code>, you can pass a <code>-version</code> in <code>%options</code>. If the version is not sufficient, then this subroutine will return false.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="load_first_existing_class_Class::Name,_\%options,_..."
>load_first_existing_class Class::Name, \%options, ...</a></h2>

<p>This attempts to load the first loadable class in the list of classes given. Each class name can be followed by an options hash reference.</p>

<p>If any one of the classes loads and passes the optional version check, that class name will be returned. If <i>none</i> of the classes can be loaded (or none pass their version check), then an error will be thrown.</p>

<p>If, when attempting to load a class, it fails to load because of a syntax error, then an error will be thrown immediately.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="load_optional_class_Class::Name,_\%options_-&#62;_0|1"
>load_optional_class Class::Name, \%options -&#62; 0|1</a></h2>

<p><code>load_optional_class</code> is a lot like <code>try_load_class</code>, but also a lot like <code>load_class</code>.</p>

<p>If the class exists, and it works, then it will return 1. If you specify a version in <code>%options</code>, then the version check must succeed or it will return 0.</p>

<p>If the class doesn&#39;t exist, and it appears to not exist on disk either, it will return 0.</p>

<p>If the class exists on disk, but loading from disk results in an error ( i.e.: a syntax error ), then it will <code>croak</code> with that error.</p>

<p>This is useful for using if you want a fallback module system, i.e.:</p>

<pre class="sh_perl">    my $class = load_optional_class($foo) ? $foo : $default;</pre>

<p>That way, if $foo does exist, but can&#39;t be loaded due to error, you won&#39;t get the behaviour of it simply not existing.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SEE_ALSO"
>SEE ALSO <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<dl>
<dt><a name='http'></a><a name="http://blog.fox.geek.nz/2010/11/searching-design-spec-for-ultimate.html"
><a href="http://blog.fox.geek.nz/2010/11/searching-design-spec-for-ultimate.html" class="podlinkurl"
>http://blog.fox.geek.nz/2010/11/searching-design-spec-for-ultimate.html</a></a></dt>

<dd>
<p>This blog post is a good overview of the current state of the existing modules for loading other modules in various ways.</p>

<dt><a name='http'></a><a name="http://blog.fox.geek.nz/2010/11/handling-optional-requirements-with.html"
><a href="http://blog.fox.geek.nz/2010/11/handling-optional-requirements-with.html" class="podlinkurl"
>http://blog.fox.geek.nz/2010/11/handling-optional-requirements-with.html</a></a></dt>

<dd>
<p>This blog post describes how to handle optional modules with <a href="/~doy/Class-Load-0.19/lib/Class/Load.pm" class="podlinkpod"
>Class::Load</a>.</p>

<dt><a name='http'></a><a name="http://d.hatena.ne.jp/tokuhirom/20110202/1296598578"
><a href="http://d.hatena.ne.jp/tokuhirom/20110202/1296598578" class="podlinkurl"
>http://d.hatena.ne.jp/tokuhirom/20110202/1296598578</a></a></dt>

<dd>
<p>This Japanese blog post describes why <a href="/perldoc?DBIx%3A%3ASkinny" class="podlinkpod"
>DBIx::Skinny</a> now uses <a href="/~doy/Class-Load-0.19/lib/Class/Load.pm" class="podlinkpod"
>Class::Load</a> over its competitors.</p>

<dt><a name='Moose'></a><a name="Moose,_Jifty,_Prophet,_etc"
><a href="/perldoc?Moose" class="podlinkpod"
>Moose</a>, <a href="/perldoc?Jifty" class="podlinkpod"
>Jifty</a>, <a href="/perldoc?Prophet" class="podlinkpod"
>Prophet</a>, etc</a></dt>

<dd>
<p>This module was designed to be used anywhere you have <code>if (eval &#34;require $module&#34;; 1)</code>, which occurs in many large projects.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHOR"
>AUTHOR <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Shawn M Moore &#60;sartak at bestpractical.com&#62;</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="COPYRIGHT_AND_LICENSE"
>COPYRIGHT AND LICENSE <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This software is copyright (c) 2012 by Shawn M Moore.</p>

<p>This is free software; you can redistribute it and/or modify it under the same terms as the Perl 5 programming language system itself.</p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78254 Uploads, 24722 Distributions
105996 Modules, 9649 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Fri Apr 27 08:45:15 2012 GMT (0.489410877227783) @cpansearch1 -->
 </body>
</html>
