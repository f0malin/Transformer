<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>Inline::Files - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","Inline-Files",3]);
    _gaq.push(["_setCustomVar",5,"Release","Inline-Files-0.68",3]);
    _gaq.push(["_setCustomVar",3,"Module","Inline::Files",3]);
    _gaq.push(["_setCustomVar",1,"Author","AMBS",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?Inline::Files">permalink</a></div>
  <a href="/~ambs/">Alberto Manuel Brand&atilde;o Sim&otilde;es</a> &gt;
  <a href="/~ambs/Inline-Files-0.68/">Inline-Files-0.68</a> &gt;
  Inline::Files
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/f647420229636bb7c7e65f659b8d2b21?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/A/AM/AMBS/Inline/Inline-Files-0.68.tar.gz">Inline/Inline-Files-0.68.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=Inline%3A%3AFiles;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~AMBS/Inline-Files-0.68/lib/Inline/Files.pm">Annotate this POD
</a></p>
<div class=box style='width:150px; float: right'>
<h1 class=t5>Related Modules</h1>
<div style="margin:2px">
<a href="/perldoc?Data%3A%3ADumper">Data::Dumper</a><br>
<a href="/perldoc?HTML%3A%3ATemplate">HTML::Template</a><br>
<a href="/perldoc?XML%3A%3ASimple">XML::Simple</a><br>
<a href="/perldoc?LWP%3A%3ASimple">LWP::Simple</a><br>
<a href="/perldoc?Data%3A%3ADenter">Data::Denter</a><br>
<a href="/perldoc?CGI%3A%3AFormBuilder">CGI::FormBuilder</a><br>
<a href="/perldoc?File%3A%3AFind">File::Find</a><br>
<a href="/perldoc?Date%3A%3ACalc">Date::Calc</a><br>
<a href="/perldoc?File%3A%3ACounterFile">File::CounterFile</a><br>
<a href="/perldoc?XML%3A%3AParser">XML::Parser</a><br>
<small>
<a href="http://perlmonks.org/?node=cpan+module+search&pivot=1&module=Inline%3A%3AFiles">more...</a><br>
By <a href="http://perlmonks.org/">perlmonks.org</a></small>
</div>
</div>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>Open&nbsp;</td><td style="text-align:right"> 0</td></tr>
</table>
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=Inline-Files">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  0.68 &nbsp;
<span class="noprint">
  <a href="/src/AMBS/Inline-Files-0.68/lib/Inline/Files.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#VERSION'>VERSION</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#WARNING'>WARNING</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#Writable_virtual_files'>Writable virtual files</a>
    <li class='indexItem indexItem2'><a href='#Creating_new_Inline_files_on_the_fly.'>Creating new Inline files on the fly.</a>
    <li class='indexItem indexItem2'><a href='#Safety_first'>Safety first</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#SEE_ALSO'>SEE ALSO</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#BUGS_ADDED_BY'>BUGS ADDED BY</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#UNWITTING_PAWN_OF_AN_AUTHOR'>UNWITTING PAWN OF AN AUTHOR</a>
  <li class='indexItem indexItem1'><a href='#EVIL_MASTERMIND_BEHIND_IT_ALL'>EVIL MASTERMIND BEHIND IT ALL</a>
  <li class='indexItem indexItem1'><a href='#COPYRIGHT'>COPYRIGHT</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Inline::Files - Multiple virtual files at the end of your code</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="VERSION"
>VERSION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This document describes version 0.68 of Inline::Files,
released July 23,
2011.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">    use Inline::Files;

    my Code $here;

    # etc.
    # etc.
    # etc.

    __FOO__
    This is a virtual file at the end
    of the data
    
    __BAR__
    This is another
    virtual

    file
    __FOO__
    This is yet another 
    such file</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="WARNING"
>WARNING <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>It is possible that this module may overwrite the source code in files that use it. To protect yourself against this possibility, you are <i>strongly</i> advised to use the <code>-backup</code> option described in <a href="#Safety_first" class="podlinkpod"
>&#34;Safety first&#34;</a>.</p>

<p>This module is still experimental. Regardless of whether you use <code>-backup</code> or not, by using this module you agree that the authors will b&#60;under no circumstances&#62; be responsible for any loss of data, code, time, money, or limbs, or for any other disadvantage incurred as a result of using Inline::Files.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Inline::Files generalizes the notion of the <code>__DATA__</code> marker and the associated <code>&#60;DATA&#62;</code> filehandle, to an arbitrary number of markers and associated filehandles.</p>

<p>When you add the line:</p>

<pre class="sh_perl">    use Inline::Files;</pre>

<p>to a source file you can then specify an arbitrary number of distinct virtual files at the end of the code. Each such virtual file is marked by a line of the form:</p>

<pre class="sh_perl">    __SOME_SYMBOL_NAME_IN_UPPER_CASE__</pre>

<p>The following text -- up to the next such marker -- is treated as a file, whose (pseudo-)name is available as an element of the package array <code>@SOME_SYMBOL_NAME_IN_UPPER_CASE</code>. The name of the first virtual file with this marker is also available as the package scalar <code>$SOME_SYMBOL_NAME_IN_UPPER_CASE</code>.</p>

<p>The filehandle of the same name is magical -- just like <code>ARGV</code> -- in that it automatically opens itself when first read. Furthermore -- just like <code>ARGV</code> -- the filehandle re-opens itself to the next appropriate virtual file (by <code>shift</code>-ing the first element of <code>@SOME_SYMBOL_NAME_IN_UPPER_CASE</code> into <code>$SOME_SYMBOL_NAME_IN_UPPER_CASE</code>) whenever it reaches EOF.</p>

<p>So, just as with <code>ARGV</code>, you can treat all the virtual files associated with a single symbol either as a single, multi-part file:</p>

<pre class="sh_perl">    use Inline::Files;

    while (&#60;FILE&#62;) {
        print &#34;$FILE: $_&#34;;
    }

    __FILE__
    File 1
    here

    __FILE__
    File 2
    here

    __OTHER_FILE__
    Other file 1

    __FILE__
    File 3
    here</pre>

<p>or as a series of individual files:</p>

<pre class="sh_perl">    use Inline::Files;

    foreach $filename (@FILE) {
        open HANDLE, $filename;
        print &#34;&#60;&#60;$filename&#62;&#62;\n&#34;;
        while (&#60;HANDLE&#62;) {
            print;
        }
    }

    __FILE__
    File 1
    here

    __FILE__
    File 2
    here

    __OTHER_FILE__
    Other file 1

    __FILE__
    File 3
    here</pre>

<p>Note that these two examples completely ignore the lines:</p>

<pre class="sh_perl">    __OTHER_FILE__
    Other file 1</pre>

<p>which would be accessed via the <code>OTHER_FILE</code> filehandle.</p>

<p>Unlike <code>&#60;ARGV&#62;</code>/<code>@ARGV</code>/<code>$ARGV</code>, Inline::Files also makes use of the hash associated with an inline file&#39;s symbol. That is, when you create an inline file with a marker <code>__WHATEVER__</code>, the hash <code>%WHATEVER</code> will contain information about that file. That information is:</p>

<dl>
<dt><a name='WHATEVER'></a><a name="$WHATEVER{file}"
><code>$WHATEVER{file}</code></a></dt>

<dd>
<p>The name of the disk file in which the inlined <code>__WHATEVER__</code> files were defined;</p>

<dt><a name='WHATEVER'></a><a name="$WHATEVER{line}"
><code>$WHATEVER{line}</code></a></dt>

<dd>
<p>The line (starting from 1) at which the current inline <code>__WHATEVER__</code> file being accessed by <code>&#60;WHATEVER&#62;</code> started.</p>

<dt><a name='WHATEVER'></a><a name="$WHATEVER{offset}"
><code>$WHATEVER{offset}</code></a></dt>

<dd>
<p>The byte offset (starting from 0) at which the current inline <code>__WHATEVER__</code> file being accessed by <code>&#60;WHATEVER&#62;</code> started.</p>

<dt><a name='WHATEVER'></a><a name="$WHATEVER{writable}"
><code>$WHATEVER{writable}</code></a></dt>

<dd>
<p>Whether the the current inline file being accessed by <code>&#60;WHATEVER&#62;</code> is opened for output.</p>
</dd>
</dl>

<p>The hash and its elements are read-only and the entry values are only meaningful when the corresponding filehandle is open.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Writable_virtual_files"
>Writable virtual files</a></h2>

<p>If the source file that uses Inline::Files is itself writable, then the virtual files it contains may also be opened for write access. For example, here is a very simple persistence mechanism:</p>

<pre class="sh_perl">    use Inline::Files;
    use Data::Dumper;

    open CACHE or die $!;   # read access (uses $CACHE to locate file)
    eval join &#34;&#34;, &#60;CACHE&#62;;
    close CACHE or die $!;

    print &#34;\$var was &#39;$var&#39;\n&#34;;
    while (&#60;&#62;) {
        chomp;
        $var = $_;
        print &#34;\$var now &#39;$var&#39;\n&#34;;
    }

    open CACHE, &#34;&#62;$CACHE&#34; or die $!;    # write access
    print CACHE Data::Dumper-&#62;Dump([$var],[&#39;var&#39;]);
    close CACHE or die $!;

    __CACHE__
    $var = &#39;Original value&#39;;</pre>

<p><i>Unlike</i> <code>ARGV</code>, if a virtual file is part of a writable file and is automagically opened, it is opened for full read/write access. So the above example, could be even simpler:</p>

<pre class="sh_perl">    use Inline::Files;
    use Data::Dumper;

    eval join &#34;&#34;, &#60;CACHE&#62;;      # Automagically opened

    print &#34;\$var was &#39;$var&#39;\n&#34;;
    while (&#60;&#62;) {
        chomp;
        $var = $_;
        print &#34;\$var now &#39;$var&#39;\n&#34;;
    }

    seek CACHE, 0, 0;
    print CACHE Data::Dumper-&#62;Dump([$var],[&#39;var&#39;]);

    __CACHE__
    $var = &#39;Original value&#39;;</pre>

<p>In either case, the original file is updated only at the end of execution, on an explicit <code>close</code> of the virtual file&#39;s handle, or when <code>Inline::Files::Virtual::vf_save</code> is explicitly called.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Creating_new_Inline_files_on_the_fly."
>Creating new Inline files on the fly.</a></h2>

<p>You can also open up new Inline output files at run time. Simply use the open function with a valid new Inline file handle name and <b>no</b> file name. Like this:</p>

<pre class="sh_perl">    use Inline::Files;

    open IFILE, &#39;&#62;&#39;;

    print IFILE &#34;This line will be placed into a new Inline file\n&#34;;
    print IFILE &#34;which is marked by &#39;__IFILE__&#39;\n&#34;;</pre>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Safety_first"
>Safety first</a></h2>

<p>Because Inline::Files handles are often read-write, it&#39;s possible to accidentally nuke your hard-won data. But Inline::Files can save you from yourself.</p>

<p>If Inline::Files is loaded with the <code>-backup</code> option:</p>

<pre class="sh_perl">    use Inline::Files -backup;</pre>

<p>then the source file that uses it is backed up before the inline files are extracted. The backup file is the name of the source file with the suffix &#34;.bak&#34; appended.</p>

<p>You can also specify a different name for the backup file, by associating that name with the <code>-backup</code> flag:</p>

<pre class="sh_perl">    use Inline::Files -backup =&#62; &#39;/tmp/sauve_qui_peut&#39;;</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SEE_ALSO"
>SEE ALSO <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>The <a href="/~ambs/Inline-Files-0.68/lib/Inline/Files/Virtual.pm" class="podlinkpod"
>Inline::Files::Virtual</a> module</p>

<p>The <a href="/perldoc?Filter%3A%3AUtil%3A%3ACall" class="podlinkpod"
>Filter::Util::Call</a> module</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="BUGS_ADDED_BY"
>BUGS ADDED BY</a></h2>

<p>Alberto Simoes (ambs@cpan.org)</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="UNWITTING_PAWN_OF_AN_AUTHOR"
>UNWITTING PAWN OF AN AUTHOR <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Damian Conway (damian@conway.org)</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="EVIL_MASTERMIND_BEHIND_IT_ALL"
>EVIL MASTERMIND BEHIND IT ALL <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Brian Ingerson (INGY@cpan.org)</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="COPYRIGHT"
>COPYRIGHT <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Copyright (c) 2001-2009. Damian Conway. All rights reserved.</p>

<p>This module is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</p>

<p>See <a href="http://www.perl.com/perl/misc/Artistic.html" class="podlinkurl"
>http://www.perl.com/perl/misc/Artistic.html</a></p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78262 Uploads, 24722 Distributions
105996 Modules, 9649 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Fri Apr 27 16:05:34 2012 GMT (0.0611679553985596) @cpansearch1 -->
 </body>
</html>
