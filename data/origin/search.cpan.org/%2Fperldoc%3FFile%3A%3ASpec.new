<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>File::Spec - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","PathTools",3]);
    _gaq.push(["_setCustomVar",5,"Release","PathTools-3.33",3]);
    _gaq.push(["_setCustomVar",3,"Module","File::Spec",3]);
    _gaq.push(["_setCustomVar",1,"Author","SMUELLER",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?File::Spec">permalink</a></div>
  <a href="/~smueller/">Steffen M&uuml;ller</a> &gt;
  <a href="/~smueller/PathTools-3.33/">PathTools-3.33</a> &gt;
  File::Spec
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/ac0c0eab36df58cd3676c1f03f4d5185?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/S/SM/SMUELLER/PathTools-3.33.tar.gz">PathTools-3.33.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=File%3A%3ASpec;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~SMUELLER/PathTools-3.33/lib/File/Spec.pm">Annotate this POD
(4)
</a></p>
<div class=box style='width:150px; float: right'>
<h1 class=t5>Related Modules</h1>
<div style="margin:2px">
<a href="/perldoc?File%3A%3AFind">File::Find</a><br>
<a href="/perldoc?File%3A%3ABasename">File::Basename</a><br>
<a href="/perldoc?Module%3A%3ABuild">Module::Build</a><br>
<a href="/perldoc?File%3A%3ACopy">File::Copy</a><br>
<a href="/perldoc?CGI%3A%3AApplication">CGI::Application</a><br>
<a href="/perldoc?File%3A%3APath">File::Path</a><br>
<a href="/perldoc?Data%3A%3ADumper">Data::Dumper</a><br>
<a href="/perldoc?Win32%3A%3AOLE">Win32::OLE</a><br>
<a href="/perldoc?File%3A%3ATemp">File::Temp</a><br>
<a href="/perldoc?Test%3A%3AMore">Test::More</a><br>
<small>
<a href="http://perlmonks.org/?node=cpan+module+search&pivot=1&module=File%3A%3ASpec">more...</a><br>
By <a href="http://perlmonks.org/">perlmonks.org</a></small>
</div>
</div>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>New&nbsp;</td><td style="text-align:right"> 23</td></tr>
<tr><td>Open&nbsp;</td><td style="text-align:right"> 17</td></tr>
</table>
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=PathTools">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  3.33 &nbsp;
<span class="noprint">
  <a href="/src/SMUELLER/PathTools-3.33/lib/File/Spec.pm">Source</a> &nbsp;
  Latest&nbsp;Release:&nbsp;<a href="/~smueller/PathTools/lib/File/Spec.pm">PathTools-3.39_01</a>
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <li class='indexItem indexItem1'><a href='#METHODS'>METHODS</a>
  <li class='indexItem indexItem1'><a href='#SEE_ALSO'>SEE ALSO</a>
  <li class='indexItem indexItem1'><a href='#AUTHOR'>AUTHOR</a>
  <li class='indexItem indexItem1'><a href='#COPYRIGHT'>COPYRIGHT</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>File::Spec - portably perform operations on file names</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">        use File::Spec;

        $x=File::Spec-&#62;catfile(&#39;a&#39;, &#39;b&#39;, &#39;c&#39;);</pre>

<p>which returns &#39;a/b/c&#39; under Unix. Or:</p>

<pre class="sh_perl">        use File::Spec::Functions;

        $x = catfile(&#39;a&#39;, &#39;b&#39;, &#39;c&#39;);</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This module is designed to support operations commonly performed on file specifications (usually called &#34;file names&#34;, but not to be confused with the contents of a file, or Perl&#39;s file handles), such as concatenating several directory and file names into a single path, or determining whether a path is rooted. It is based on code directly taken from MakeMaker 5.17, code written by Andreas K&#246;nig, Andy Dougherty, Charles Bailey, Ilya Zakharevich, Paul Schinder, and others.</p>

<p>Since these functions are different for most operating systems, each set of OS specific routines is available in a separate module, including:</p>

<pre class="sh_perl">        File::Spec::Unix
        File::Spec::Mac
        File::Spec::OS2
        File::Spec::Win32
        File::Spec::VMS</pre>

<p>The module appropriate for the current OS is automatically loaded by File::Spec. Since some modules (like VMS) make use of facilities available only under that OS, it may not be possible to load all modules under all operating systems.</p>

<p>Since File::Spec is object oriented, subroutines should not be called directly, as in:</p>

<pre class="sh_perl">        File::Spec::catfile(&#39;a&#39;,&#39;b&#39;);</pre>

<p>but rather as class methods:</p>

<pre class="sh_perl">        File::Spec-&#62;catfile(&#39;a&#39;,&#39;b&#39;);</pre>

<p>For simple uses, <a href="/~smueller/PathTools-3.33/lib/File/Spec/Functions.pm" class="podlinkpod"
>File::Spec::Functions</a> provides convenient functional forms of these methods.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="METHODS"
>METHODS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<dl>
<dt><a name='canonpath'></a><a name="canonpath"
>canonpath <!--
	INDEX: canonpath
--></a></dt>

<dd>
<p>No physical check on the filesystem, but a logical cleanup of a path.</p>

<pre class="sh_perl">    $cpath = File::Spec-&#62;canonpath( $path ) ;</pre>

<p>Note that this does *not* collapse <em>x/../y</em> sections into <em>y</em>. This is by design. If <em>/foo</em> on your system is a symlink to <em>/bar/baz</em>, then <em>/foo/../quux</em> is actually <em>/bar/quux</em>, not <em>/quux</em> as a naive <em>../</em>-removal would give you. If you want to do this kind of processing, you probably want <code>Cwd</code>&#39;s <code>realpath()</code> function to actually traverse the filesystem cleaning up paths like this.</p>

<dt><a name='catdir'></a><a name="catdir"
>catdir <!--
	INDEX: catdir
--></a></dt>

<dd>
<p>Concatenate two or more directory names to form a complete path ending with a directory. But remove the trailing slash from the resulting string, because it doesn&#39;t look good, isn&#39;t necessary and confuses OS/2. Of course, if this is the root directory, don&#39;t cut off the trailing slash :-)</p>

<pre class="sh_perl">    $path = File::Spec-&#62;catdir( @directories );</pre>

<dt><a name='catfile'></a><a name="catfile"
>catfile <!--
	INDEX: catfile
--></a></dt>

<dd>
<p>Concatenate one or more directory names and a filename to form a complete path ending with a filename</p>

<pre class="sh_perl">    $path = File::Spec-&#62;catfile( @directories, $filename );</pre>

<dt><a name='curdir'></a><a name="curdir"
>curdir <!--
	INDEX: curdir
--></a></dt>

<dd>
<p>Returns a string representation of the current directory.</p>

<pre class="sh_perl">    $curdir = File::Spec-&#62;curdir();</pre>

<dt><a name='devnull'></a><a name="devnull"
>devnull <!--
	INDEX: devnull
--></a></dt>

<dd>
<p>Returns a string representation of the null device.</p>

<pre class="sh_perl">    $devnull = File::Spec-&#62;devnull();</pre>

<dt><a name='rootdir'></a><a name="rootdir"
>rootdir <!--
	INDEX: rootdir
--></a></dt>

<dd>
<p>Returns a string representation of the root directory.</p>

<pre class="sh_perl">    $rootdir = File::Spec-&#62;rootdir();</pre>

<dt><a name='tmpdir'></a><a name="tmpdir"
>tmpdir <!--
	INDEX: tmpdir
--></a></dt>

<dd>
<p>Returns a string representation of the first writable directory from a list of possible temporary directories. Returns the current directory if no writable temporary directories are found. The list of directories checked depends on the platform; e.g. File::Spec::Unix checks <code>$ENV{TMPDIR}</code> (unless taint is on) and <em>/tmp</em>.</p>

<pre class="sh_perl">    $tmpdir = File::Spec-&#62;tmpdir();</pre>

<dt><a name='updir'></a><a name="updir"
>updir <!--
	INDEX: updir
--></a></dt>

<dd>
<p>Returns a string representation of the parent directory.</p>

<pre class="sh_perl">    $updir = File::Spec-&#62;updir();</pre>

<dt><a name="no_upwards"
>no_upwards</a></dt>

<dd>
<p>Given a list of file names, strip out those that refer to a parent directory. (Does not strip symlinks, only &#39;.&#39;, &#39;..&#39;, and equivalents.)</p>

<pre class="sh_perl">    @paths = File::Spec-&#62;no_upwards( @paths );</pre>

<dt><a name="case_tolerant"
>case_tolerant</a></dt>

<dd>
<p>Returns a true or false value indicating, respectively, that alphabetic case is not or is significant when comparing file specifications. Cygwin and Win32 accept an optional drive argument.</p>

<pre class="sh_perl">    $is_case_tolerant = File::Spec-&#62;case_tolerant();</pre>

<dt><a name="file_name_is_absolute"
>file_name_is_absolute</a></dt>

<dd>
<p>Takes as its argument a path, and returns true if it is an absolute path.</p>

<pre class="sh_perl">    $is_absolute = File::Spec-&#62;file_name_is_absolute( $path );</pre>

<p>This does not consult the local filesystem on Unix, Win32, OS/2, or Mac OS (Classic). It does consult the working environment for VMS (see <a href="/~smueller/PathTools-3.33/lib/File/Spec/VMS.pm#file_name_is_absolute" class="podlinkpod"
>&#34;file_name_is_absolute&#34; in File::Spec::VMS</a>).</p>

<dt><a name='path'></a><a name="path"
>path <!--
	INDEX: path
--></a></dt>

<dd>
<p>Takes no argument. Returns the environment variable <code>PATH</code> (or the local platform&#39;s equivalent) as a list.</p>

<pre class="sh_perl">    @PATH = File::Spec-&#62;path();</pre>

<dt><a name='join'></a><a name="join"
>join <!--
	INDEX: join, path
--></a></dt>

<dd>
<p>join is the same as catfile.</p>

<dt><a name='splitpath'></a><a name="splitpath"
>splitpath <!--
	INDEX: splitpath
--> <!--
	INDEX: split, path
--></a></dt>

<dd>
<p>Splits a path in to volume, directory, and filename portions. On systems with no concept of volume, returns &#39;&#39; for volume.</p>

<pre class="sh_perl">    ($volume,$directories,$file) = File::Spec-&#62;splitpath( $path );
    ($volume,$directories,$file) = File::Spec-&#62;splitpath( $path, $no_file );</pre>

<p>For systems with no syntax differentiating filenames from directories, assumes that the last file is a path unless <code>$no_file</code> is true or a trailing separator or <em>/.</em> or <em>/..</em> is present. On Unix, this means that <code>$no_file</code> true makes this return ( &#39;&#39;, $path, &#39;&#39; ).</p>

<p>The directory portion may or may not be returned with a trailing &#39;/&#39;.</p>

<p>The results can be passed to <a href="#catpath()" class="podlinkpod"
>&#34;catpath()&#34;</a> to get back a path equivalent to (usually identical to) the original path.</p>

<dt><a name='splitdir'></a><a name="splitdir"
>splitdir <!--
	INDEX: splitdir
--> <!--
	INDEX: split, dir
--></a></dt>

<dd>
<p>The opposite of <a href="#catdir" class="podlinkpod"
>&#34;catdir&#34;</a>.</p>

<pre class="sh_perl">    @dirs = File::Spec-&#62;splitdir( $directories );</pre>

<p><code>$directories</code> must be only the directory portion of the path on systems that have the concept of a volume or that have path syntax that differentiates files from directories.</p>

<p>Unlike just splitting the directories on the separator, empty directory names (<code>&#39;&#39;</code>) can be returned, because these are significant on some OSes.</p>

<dt><a name='catpath'></a><a name="catpath()"
>catpath()</a></dt>

<dd>
<p>Takes volume, directory and file portions and returns an entire path. Under Unix, <code>$volume</code> is ignored, and directory and file are concatenated. A &#39;/&#39; is inserted if need be. On other OSes, <code>$volume</code> is significant.</p>

<pre class="sh_perl">    $full_path = File::Spec-&#62;catpath( $volume, $directory, $file );</pre>

<dt><a name='abs2rel'></a><a name="abs2rel"
>abs2rel <!--
	INDEX: abs2rel
--> <!--
	INDEX: absolute, path
--> <!--
	INDEX: relative, path
--></a></dt>

<dd>
<p>Takes a destination path and an optional base path returns a relative path from the base path to the destination path:</p>

<pre class="sh_perl">    $rel_path = File::Spec-&#62;abs2rel( $path ) ;
    $rel_path = File::Spec-&#62;abs2rel( $path, $base ) ;</pre>

<p>If <code>$base</code> is not present or &#39;&#39;, then <a href="/~smueller/PathTools-3.33/Cwd.pm" class="podlinkpod"
>Cwd::cwd()</a> is used. If <code>$base</code> is relative, then it is converted to absolute form using <a href="#rel2abs()" class="podlinkpod"
>&#34;rel2abs()&#34;</a>. This means that it is taken to be relative to <a href="/~smueller/PathTools-3.33/Cwd.pm" class="podlinkpod"
>Cwd::cwd()</a>.</p>

<p>On systems with the concept of volume, if <code>$path</code> and <code>$base</code> appear to be on two different volumes, we will not attempt to resolve the two paths, and we will instead simply return <code>$path</code>. Note that previous versions of this module ignored the volume of <code>$base</code>, which resulted in garbage results part of the time.</p>

<p>On systems that have a grammar that indicates filenames, this ignores the <code>$base</code> filename as well. Otherwise all path components are assumed to be directories.</p>

<p>If <code>$path</code> is relative, it is converted to absolute form using <a href="#rel2abs()" class="podlinkpod"
>&#34;rel2abs()&#34;</a>. This means that it is taken to be relative to <a href="/~smueller/PathTools-3.33/Cwd.pm" class="podlinkpod"
>Cwd::cwd()</a>.</p>

<p>No checks against the filesystem are made. On VMS, there is interaction with the working environment, as logicals and macros are expanded.</p>

<p>Based on code written by Shigio Yamaguchi.</p>

<dt><a name='rel2abs'></a><a name="rel2abs()"
>rel2abs() <!--
	INDEX: rel2abs
--> <!--
	INDEX: absolute, path
--> <!--
	INDEX: relative, path
--></a></dt>

<dd>
<p>Converts a relative path to an absolute path.</p>

<pre class="sh_perl">    $abs_path = File::Spec-&#62;rel2abs( $path ) ;
    $abs_path = File::Spec-&#62;rel2abs( $path, $base ) ;</pre>

<p>If <code>$base</code> is not present or &#39;&#39;, then <a href="/~smueller/PathTools-3.33/Cwd.pm" class="podlinkpod"
>Cwd::cwd()</a> is used. If <code>$base</code> is relative, then it is converted to absolute form using <a href="#rel2abs()" class="podlinkpod"
>&#34;rel2abs()&#34;</a>. This means that it is taken to be relative to <a href="/~smueller/PathTools-3.33/Cwd.pm" class="podlinkpod"
>Cwd::cwd()</a>.</p>

<p>On systems with the concept of volume, if <code>$path</code> and <code>$base</code> appear to be on two different volumes, we will not attempt to resolve the two paths, and we will instead simply return <code>$path</code>. Note that previous versions of this module ignored the volume of <code>$base</code>, which resulted in garbage results part of the time.</p>

<p>On systems that have a grammar that indicates filenames, this ignores the <code>$base</code> filename as well. Otherwise all path components are assumed to be directories.</p>

<p>If <code>$path</code> is absolute, it is cleaned up and returned using <a href="#canonpath" class="podlinkpod"
>&#34;canonpath&#34;</a>.</p>

<p>No checks against the filesystem are made. On VMS, there is interaction with the working environment, as logicals and macros are expanded.</p>

<p>Based on code written by Shigio Yamaguchi.</p>
</dd>
</dl>

<p>For further information, please see <a href="/~smueller/PathTools-3.33/lib/File/Spec/Unix.pm" class="podlinkpod"
>File::Spec::Unix</a>, <a href="/~smueller/PathTools-3.33/lib/File/Spec/Mac.pm" class="podlinkpod"
>File::Spec::Mac</a>, <a href="/~smueller/PathTools-3.33/lib/File/Spec/OS2.pm" class="podlinkpod"
>File::Spec::OS2</a>, <a href="/~smueller/PathTools-3.33/lib/File/Spec/Win32.pm" class="podlinkpod"
>File::Spec::Win32</a>, or <a href="/~smueller/PathTools-3.33/lib/File/Spec/VMS.pm" class="podlinkpod"
>File::Spec::VMS</a>.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SEE_ALSO"
>SEE ALSO <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><a href="/~smueller/PathTools-3.33/lib/File/Spec/Unix.pm" class="podlinkpod"
>File::Spec::Unix</a>, <a href="/~smueller/PathTools-3.33/lib/File/Spec/Mac.pm" class="podlinkpod"
>File::Spec::Mac</a>, <a href="/~smueller/PathTools-3.33/lib/File/Spec/OS2.pm" class="podlinkpod"
>File::Spec::OS2</a>, <a href="/~smueller/PathTools-3.33/lib/File/Spec/Win32.pm" class="podlinkpod"
>File::Spec::Win32</a>, <a href="/~smueller/PathTools-3.33/lib/File/Spec/VMS.pm" class="podlinkpod"
>File::Spec::VMS</a>, <a href="/~smueller/PathTools-3.33/lib/File/Spec/Functions.pm" class="podlinkpod"
>File::Spec::Functions</a>, <a href="/perldoc?ExtUtils%3A%3AMakeMaker" class="podlinkpod"
>ExtUtils::MakeMaker</a></p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHOR"
>AUTHOR <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Currently maintained by Ken Williams <code>&#60;KWILLIAMS@cpan.org&#62;</code>.</p>

<p>The vast majority of the code was written by Kenneth Albanowski <code>&#60;kjahds@kjahds.com&#62;</code>, Andy Dougherty <code>&#60;doughera@lafayette.edu&#62;</code>, Andreas K&#246;nig <code>&#60;A.Koenig@franz.ww.TU-Berlin.DE&#62;</code>, Tim Bunce <code>&#60;Tim.Bunce@ig.co.uk&#62;</code>. VMS support by Charles Bailey <code>&#60;bailey@newman.upenn.edu&#62;</code>. OS/2 support by Ilya Zakharevich <code>&#60;ilya@math.ohio-state.edu&#62;</code>. Mac support by Paul Schinder <code>&#60;schinder@pobox.com&#62;</code>, and Thomas Wegner <code>&#60;wegner_thomas@yahoo.com&#62;</code>. abs2rel() and rel2abs() written by Shigio Yamaguchi <code>&#60;shigio@tamacom.com&#62;</code>, modified by Barrie Slaymaker <code>&#60;barries@slaysys.com&#62;</code>. splitpath(), splitdir(), catpath() and catdir() by Barrie Slaymaker.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="COPYRIGHT"
>COPYRIGHT <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Copyright (c) 2004-2010 by the Perl 5 Porters. All rights reserved.</p>

<p>This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78248 Uploads, 24724 Distributions
106031 Modules, 9649 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Fri Apr 27 05:36:40 2012 GMT (0.101383924484253) @cpansearch1 -->
 </body>
</html>
