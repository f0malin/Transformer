<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>Tk::Photo - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","Tk",3]);
    _gaq.push(["_setCustomVar",5,"Release","Tk-804.030",3]);
    _gaq.push(["_setCustomVar",3,"Module","Tk::Photo",3]);
    _gaq.push(["_setCustomVar",1,"Author","SREZIC",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?Tk::Photo">permalink</a></div>
  <a href="/~srezic/">Slaven Rezi&#x107;</a> &gt;
  <a href="/~srezic/Tk-804.030/">Tk-804.030</a> &gt;
  Tk::Photo
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/5fa5a4e5ffdf883a1fcb1840c915d485?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/S/SR/SREZIC/Tk-804.030.tar.gz">Tk-804.030.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=Tk%3A%3APhoto;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~SREZIC/Tk-804.030/pod/Photo.pod">Annotate this POD
</a></p>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>New&nbsp;</td><td style="text-align:right"> 36</td></tr>
<tr><td>Open&nbsp;</td><td style="text-align:right"> 48</td></tr>
<tr><td>Stalled&nbsp;</td><td style="text-align:right"> 13</td></tr>
</table>
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=Tk">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  4.006 &nbsp;
<span class="noprint">
  <a href="/src/SREZIC/Tk-804.030/Tk/Photo.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <li class='indexItem indexItem1'><a href='#CREATING_PHOTOS'>CREATING PHOTOS</a>
  <li class='indexItem indexItem1'><a href='#IMAGE_METHODS'>IMAGE METHODS</a>
  <li class='indexItem indexItem1'><a href='#IMAGE_FORMATS'>IMAGE FORMATS</a>
  <li class='indexItem indexItem1'><a href='#COLOR_ALLOCATION'>COLOR ALLOCATION</a>
  <li class='indexItem indexItem1'><a href='#CREDITS'>CREDITS</a>
  <li class='indexItem indexItem1'><a href='#SEE_ALSO'>SEE ALSO</a>
  <li class='indexItem indexItem1'><a href='#KEYWORDS'>KEYWORDS</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Tk::Photo - Full-color images</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>&#160;<i>$widget</i>-&#62;<b>Photo</b>(?<i>name</i>??,
<i>options</i>?)</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>A photo is an <a href="/~srezic/Tk-804.030/pod/Image.pod" class="podlinkpod"
>image</a> whose pixels can display any color or be transparent.
A photo image is stored internally in full color (32 bits per pixel),
and is displayed using dithering if necessary.
Image data for a photo image can be obtained from a file or a string,
or it can be supplied from C code through a procedural interface.
At present,
only GIF,
XBM,
XPM,
BMP,
JPEG,
PNG and PPM/PGM formats are supported,
but an interface exists to allow additional image file formats to be added easily.
A photo image is transparent in regions where no image data has been supplied or where it has been set transparent by the <b>transparencySet</b> subcommand.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="CREATING_PHOTOS"
>CREATING PHOTOS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Photos are created using the <b>Photo</b> method.
<b>Photo</b> supports the following <i>options</i>:</p>

<dl>
<dt><a name='data'></a><a name="-data_=&#62;_string"
><b>-data</b> =&#62; <i>string</i></a></dt>

<dd>
<p>Specifies the contents of the image as a string.
The string can contain base64 encoded data or binary data.
The format of the string must be one of those for which there is an image file format handler that will accept string data.
If both the <b>-data</b> and <b>-file</b> options are specified,
the <b>-file</b> option takes precedence.</p>

<dt><a name='format'></a><a name="-format_=&#62;_format-name"
><b>-format</b> =&#62; <i>format-name</i></a></dt>

<dd>
<p>Specifies the name of the file format for the data specified with the <b>-data</b> or <b>-file</b> option.</p>

<dt><a name='file'></a><a name="-file_=&#62;_name"
><b>-file</b> =&#62; <i>name</i></a></dt>

<dd>
<p><i>name</i> gives the name of a file that is to be read to supply data for the photo image.
The file format must be one of those for which there is an image file format handler that can read data.</p>

<dt><a name='gamma'></a><a name="-gamma_=&#62;_value"
><b>-gamma</b> =&#62; <i>value</i></a></dt>

<dd>
<p>Specifies that the colors allocated for displaying this image in a window should be corrected for a non-linear display with the specified gamma exponent value.
(The intensity produced by most CRT displays is a power function of the input value,
to a good approximation; gamma is the exponent and is typically around 2).
The value specified must be greater than zero.
The default value is one (no correction).
In general,
values greater than one will make the image lighter,
and values less than one will make it darker.</p>

<dt><a name='height'></a><a name="-height_=&#62;_number"
><b>-height</b> =&#62; <i>number</i></a></dt>

<dd>
<p>Specifies the height of the image,
in pixels.
This option is useful primarily in situations where the user wishes to build up the contents of the image piece by piece.
A value of zero (the default) allows the image to expand or shrink vertically to fit the data stored in it.</p>

<dt><a name='palette'></a><a name="-palette_=&#62;_palette-spec"
><b>-palette</b> =&#62; <i>palette-spec</i></a></dt>

<dd>
<p>Specifies the resolution of the color cube to be allocated for displaying this image,
and thus the number of colors used from the colormaps of the windows where it is displayed.
The <i>palette-spec</i> string may be either a single decimal number,
specifying the number of shades of gray to use,
or three decimal numbers separated by slashes (/),
specifying the number of shades of red,
green and blue to use,
respectively.
If the first form (a single number) is used,
the image will be displayed in monochrome (i.e.,
grayscale).</p>

<dt><a name='width'></a><a name="-width_=&#62;_number"
><b>-width</b> =&#62; <i>number</i></a></dt>

<dd>
<p>Specifies the width of the image,
in pixels.
This option is useful primarily in situations where the user wishes to build up the contents of the image piece by piece.
A value of zero (the default) allows the image to expand or shrink horizontally to fit the data stored in it.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="IMAGE_METHODS"
>IMAGE METHODS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>When a photo image is created,
Tk also creates a new object.
This object supports the <b>configure</b> and <b>cget</b> methods described in <a href="/~srezic/Tk-804.030/pod/options.pod" class="podlinkpod"
>Tk::options</a> which can be used to enquire and modify the options described above.</p>

<p>Those options that write data to the image generally expand the size of the image,
if necessary,
to accommodate the data written to the image,
unless the user has specified non-zero values for the <b>-width</b> and/or <b>-height</b> configuration options,
in which case the width and/or height,
respectively,
of the image will not be changed.</p>

<p>The following addition methods are available for photo images:</p>

<dl>
<dt><a name='image'></a><a name="$image-&#62;blank"
><i>$image</i>-&#62;<b>blank</b></a></dt>

<dd>
<p>Blank the image; that is,
set the entire image to have no data,
so it will be displayed as transparent,
and the background of whatever window it is displayed in will show through.</p>

<dt><a name='image'></a><a name="$image-&#62;copy(sourceImage_?,option_value(s)_...?)"
><i>$image</i>-&#62;<b>copy</b>(<i>sourceImage</i> ?,<i>option value(s) ...</i>?)</a></dt>

<dd>
<p>Copies a region from the image called <i>$sourceImage</i> (which must be a photo image) to the image called <i>$image</i>,
possibly with pixel zooming and/or subsampling.
If no options are specified,
this method copies the whole of <i>$sourceImage</i> into <i>$image</i>,
starting at coordinates (0,0) in <i>$image</i>.
The following options may be specified:</p>

<dl>
<dt><a name='from'></a><a name="-from_=&#62;_x1,_y1,_?_,x2,_y2?"
><b>-from</b> =&#62; <i>x1,
y1,
?
,x2,
y2?</i></a></dt>

<dd>
<p>Specifies a rectangular sub-region of the source image to be copied.
(<i>x1,y1</i>) and (<i>x2,y2</i>) specify diagonally opposite corners of the rectangle.
If <i>x2</i> and <i>y2</i> are not specified,
the default value is the bottom-right corner of the source image.
The pixels copied will include the left and top edges of the specified rectangle but not the bottom or right edges.
If the <b>-from</b> option is not given,
the default is the whole source image.</p>

<dt><a name='to'></a><a name="-to_=&#62;_x1,_y1,_?,_x2,_y2?"
><b>-to</b> =&#62; <i>x1,
y1,
?,
x2,
y2?</i></a></dt>

<dd>
<p>Specifies a rectangular sub-region of the destination image to be affected.
(<i>x1,y1</i>) and (<i>x2,y2</i>) specify diagonally opposite corners of the rectangle.
If <i>x2</i> and <i>y2</i> are not specified,
the default value is (<i>x1,y1</i>) plus the size of the source region (after subsampling and zooming,
if specified).
If <i>x2</i> and <i>y2</i> are specified,
the source region will be replicated if necessary to fill the destination region in a tiled fashion.</p>

<dt><a name='shrink'></a><a name="-shrink"
><b>-shrink</b></a></dt>

<dd>
<p>Specifies that the size of the destination image should be reduced,
if necessary,
so that the region being copied into is at the bottom-right corner of the image.
This option will not affect the width or height of the image if the user has specified a non-zero value for the <b>-width</b> or <b>-height</b> configuration option,
respectively.</p>

<dt><a name='zoom'></a><a name="-zoom_=&#62;_x,_y"
><b>-zoom</b> =&#62; <i>x,
y</i></a></dt>

<dd>
<p>Specifies that the source region should be magnified by a factor of <i>x</i> in the X direction and <i>y</i> in the Y direction.
If <i>y</i> is not given,
the default value is the same as <i>x</i>.
With this option,
each pixel in the source image will be expanded into a block of <i>x</i> x <i>y</i> pixels in the destination image,
all the same color.
<i>x</i> and <i>y</i> must be greater than 0.</p>

<dt><a name='subsample'></a><a name="-subsample_=&#62;_x,_y"
><b>-subsample</b> =&#62; <i>x,
y</i></a></dt>

<dd>
<p>Specifies that the source image should be reduced in size by using only every <i>x</i>th pixel in the X direction and <i>y</i>th pixel in the Y direction.
Negative values will cause the image to be flipped about the Y or X axes,
respectively.
If <i>y</i> is not given,
the default value is the same as <i>x</i>.</p>

<dt><a name='compositingrule'></a><a name="-compositingrule_=&#62;_rule"
><b>-compositingrule</b> =&#62; <i>rule</i></a></dt>

<dd>
<p>Specifies how transparent pixels in the source image are combined with the destination image.
When a compositing rule of <i>overlay</i> is set,
the old contents of the destination image are visible,
as if the source image were printed on a piece of transparent film and placed over the top of the destination.
When a compositing rule of <i>set</i> is set,
the old contents of the destination image are discarded and the source image is used as-is.
The default compositing rule is <i>overlay</i>.</p>
</dd>
</dl>

<dt><a name='image'></a><a name="$image-&#62;data(?option_value(s),_...?)"
><i>$image</i>-&#62;<b>data</b>(?<i>option value(s),
...</i>?)</a></dt>

<dd>
<p>Returns image data in the form of a string.
The following options may be specified:</p>

<dl>
<dt><a name='background'></a><a name="-background_=&#62;__color"
><b>-background</b> =&#62; <i> color</i></a></dt>

<dd>
<p>If the color is specified,
the data will not contain any transparency information.
In all transparent pixels the color will be replaced by the specified color.</p>

<dt><a name='format'></a><a name="-format_=&#62;_format-name"
><b>-format</b> =&#62; <i>format-name</i></a></dt>

<dd>
<p>Specifies the name of the image file format handler to be used.
Specifically,
this method searches for the first handler whose name matches a initial substring of <i>format-name</i> and which has the capability to read this image data.
If this option is not given,
this method uses the first handler that has the capability to read the image data.</p>

<dt><a name='from'></a><a name="-from_=&#62;_x1,_y1,_?,_x2,_y2?"
><b>-from</b> =&#62; <i>x1,
y1,
?,
x2,
y2?</i></a></dt>

<dd>
<p>Specifies a rectangular region of <i>$image</i> to be returned.
If only <i>x1</i> and <i>y1</i> are specified,
the region extends from <i>(x1,y1)</i> to the bottom-right corner of <i>$image</i>.
If all four coordinates are given,
they specify diagonally opposite corners of the rectangular region,
including x1,y1 and excluding x2,y2.
The default,
if this option is not given,
is the whole image.</p>

<dt><a name='grayscale'></a><a name="-grayscale"
><b>-grayscale</b></a></dt>

<dd>
<p>If this options is specified,
the data will not contain color information.
All pixel data will be transformed into grayscale.</p>
</dd>
</dl>

<dt><a name='image'></a><a name="$image-&#62;get(x,_y)"
><i>$image</i>-&#62;<b>get</b>(<i>x,
y</i>)</a></dt>

<dd>
<p>Returns the color of the pixel at coordinates (<i>x</i>,<i>y</i>) in the image as a list of three integers between 0 and 255,
representing the red,
green and blue components respectively.</p>

<dt><a name='image'></a><a name="$image-&#62;put(data_?,-format=&#62;format-name?_?,-to=&#62;_x1_y1_?x2_y2??)"
><i>$image</i>-&#62;<b>put</b>(<i>data</i> ?,<b>-format</b>=&#62;<i>format-name</i>?
?,<b>-to</b>=&#62;<i> x1 y1 ?x2 y2?</i>?)</a></dt>

<dd>
<p>Sets pixels in <i>$image</i> to the data specified in <i>data</i>.
This command first searches the list of image file format handlers for a handler that can interpret the data in <i>data</i>,
and then reads the image encoded within into <i>$image</i> (the destination image).
If <i>data</i> does not match any known format,
an attempt to interpret it as a (top-to-bottom) list of scan-lines is made,
with each scan-line being a (left-to-right) list of pixel colors (see <b>Tk_GetColor</b> for a description of valid colors.) Every scan-line must be of the same length.
Note that when <i>data</i> is a single color name,
you are instructing Tk to fill a rectangular region with that color.
The following options may be specified:</p>

<dl>
<dt><a name='format'></a><a name="-format_=&#62;format-name"
><b>-format</b> =&#62;<i>format-name</i></a></dt>

<dd>
<p>Specifies the format of the image data in <i>data</i>.
Specifically,
only image file format handlers whose names begin with <i>format-name</i> will be used while searching for an image data format handler to read the data.</p>

<dt><a name='to'></a><a name="-to_=&#62;x,_y_?,_x2,_y2?"
><b>-to</b> =&#62;<i>x,
y</i> ?<i>,
x2,
y2</i>?</a></dt>

<dd>
<p>Specifies the coordinates of the top-left corner (<i>x1</i>,<i>y1</i>) of the region of <i>$image</i> into which data from <i>filename</i> are to be read.
The default is (0,0).
If <i>x2</i>,<i>y2</i> is given and <i>data</i> is not large enough to cover the rectangle specified by this option,
the image data extracted will be tiled so it covers the entire destination rectangle.
Note that if <i>data</i> specifies a single color value,
then a region extending to the bottom-right corner represented by (<i>x2</i>,<i>y2</i>) will be filled with that color.</p>
</dd>
</dl>

<dt><a name='image'></a><a name="$image-&#62;read(filename_?,option_value(s),_...?)"
><i>$image</i>-&#62;<b>read</b>(<i>filename</i> ?,<i>option value(s),
...</i>?)</a></dt>

<dd>
<p>Reads image data from the file named <i>filename</i> into the image.
This method first searches the list of image file format handlers for a handler that can interpret the data in <i>filename</i>,
and then reads the image in <i>filename</i> into <i>$image</i> (the destination image).
The following options may be specified:</p>

<dl>
<dt><a name='format'></a><a name="-format_=&#62;_format-name"
><b>-format</b> =&#62; <i>format-name</i></a></dt>

<dd>
<p>Specifies the format of the image data in <i>filename</i>.
Specifically,
only image file format handlers whose names begin with <i>format-name</i> will be used while searching for an image data format handler to read the data.</p>

<dt><a name='from'></a><a name="-from_=&#62;_x1,_y1,_x2,_y2"
><b>-from</b> =&#62; <i>x1,
y1,
x2,
y2</i></a></dt>

<dd>
<p>Specifies a rectangular sub-region of the image file data to be copied to the destination image.
If only <i>x1</i> and <i>y1</i> are specified,
the region extends from (<i>x1,y1</i>) to the bottom-right corner of the image in the image file.
If all four coordinates are specified,
they specify diagonally opposite corners or the region.
The default,
if this option is not specified,
is the whole of the image in the image file.</p>

<dt><a name='shrink'></a><a name="-shrink"
><b>-shrink</b></a></dt>

<dd>
<p>If this option is specified,
the size of <i>$image</i> will be reduced,
if necessary,
so that the region into which the image file data are read is at the bottom-right corner of the <i>$image</i>.
This option will not affect the width or height of the image if the user has specified a non-zero value for the <b>-width</b> or <b>-height</b> configuration option,
respectively.</p>

<dt><a name='to'></a><a name="-to_=&#62;_x,_y"
><b>-to</b> =&#62; <i>x,
y</i></a></dt>

<dd>
<p>Specifies the coordinates of the top-left corner of the region of <i>$image</i> into which data from <i>filename</i> are to be read.
The default is (0,0).</p>
</dd>
</dl>

<dt><a name='image'></a><a name="$image-&#62;redither"
><i>$image</i>-&#62;<b>redither</b></a></dt>

<dd>
<p>The dithering algorithm used in displaying photo images propagates quantization errors from one pixel to its neighbors.
If the image data for <i>$image</i> is supplied in pieces,
the dithered image may not be exactly correct.
Normally the difference is not noticeable,
but if it is a problem,
this method can be used to recalculate the dithered image in each window where the image is displayed.</p>

<dt><a name='image'></a><a name="$image-&#62;transparency(subcommand,_?arg,_arg_...?);"
><i>$image</i>-&#62;<b>transparency</b>(<i>subcommand,
?arg,
arg ...?</i>);</a></dt>

<dd>
<p>Allows examination and manipulation of the transparency information in the photo image.
Several subcommands are available:</p>

<dl>
<dt><a name='image'></a><a name="$image-&#62;transparencyGet(x,_y);"
><i>$image</i>-&#62;<b>transparencyGet</b>(<i>x,
y</i>);</a></dt>

<dd>
<p>Returns a boolean indicating if the pixel at (<i>x</i>,<i>y</i>) is transparent.</p>

<dt><a name='image'></a><a name="$image-&#62;transparencySet(x,_y,_boolean);"
><i>$image</i>-&#62;<b>transparencySet</b>(<i>x,
y,
boolean</i>);</a></dt>

<dd>
<p>Makes the pixel at (<i>x</i>,<i>y</i>) transparent if <i>boolean</i> is true,
and makes that pixel opaque otherwise.</p>
</dd>
</dl>

<dt><a name='image'></a><a name="$image-&#62;write(filename_?,option_value(s),_...?)"
><i>$image</i>-&#62;<b>write</b>(<i>filename</i> ?,<i>option value(s),
...</i>?)</a></dt>

<dd>
<p>Writes image data from <i>$image</i> to a file named <i>filename</i>.
The following options may be specified:</p>

<dl>
<dt><a name='background'></a><a name="-background_=&#62;__color"
><b>-background</b> =&#62; <i> color</i></a></dt>

<dd>
<p>If the color is specified,
the data will not contain any transparency information.
In all transparent pixels the color will be replaced by the specified color.</p>

<dt><a name='format'></a><a name="-format_=&#62;_format-name"
><b>-format</b> =&#62; <i>format-name</i></a></dt>

<dd>
<p>Specifies the name of the image file format handler to be used to write the data to the file.
Specifically,
this subcommand searches for the first handler whose name matches a initial substring of <i>format-name</i> and which has the capability to write an image file.
If this option is not given,
this subcommand uses the first handler that has the capability to write an image file.</p>

<dt><a name='from'></a><a name="-from_=&#62;_x1,_y1,_?,_x2,_y2?"
><b>-from</b> =&#62; <i>x1,
y1,
?,
x2,
y2?</i></a></dt>

<dd>
<p>Specifies a rectangular region of <i>$image</i> to be written to the image file.
If only <i>x1</i> and <i>y1</i> are specified,
the region extends from <i>(x1,y1)</i> to the bottom-right corner of <i>$image</i>.
If all four coordinates are given,
they specify diagonally opposite corners of the rectangular region.
The default,
if this option is not given,
is the whole image.</p>

<dt><a name='grayscale'></a><a name="-grayscale"
><b>-grayscale</b></a></dt>

<dd>
<p>If this options is specified,
the data will not contain color information.
All pixel data will be transformed into grayscale.</p>
</dd>
</dl>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="IMAGE_FORMATS"
>IMAGE FORMATS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>The photo image code is structured to allow handlers for additional image file formats to be added easily.
The photo image code maintains a list of these handlers.
Handlers are added to the list by registering them with a call to <b>Tk_CreatePhotoImageFormat</b>.
The standard Tk distribution comes with handlers for XBM,
XPM,
BMP,
JPEG,
PNG and PPM/PGM formats,
which are automatically registered on initialization.</p>

<p>When reading an image file or processing string data specified with the <b>-data</b> configuration option,
the photo image code invokes each handler in turn until one is found that claims to be able to read the data in the file or string.
Usually this will find the correct handler,
but if it doesn&#39;t,
the user may give a format name with the <b>-format</b> option to specify which handler to use.
In fact the photo image code will try those handlers whose names begin with the string specified for the <b>-format</b> option (the comparison is case-insensitive).
For example,
if the user specifies <b>-format</b> <b>=&#62;</b> <b>gif</b>,
then a handler named GIF87 or GIF89 may be invoked,
but a handler named JPEG may not (assuming that such handlers had been registered).</p>

<p>When writing image data to a file,
the processing of the <b>-format</b> option is slightly different: the string value given for the <b>-format</b> option must begin with the complete name of the requested handler,
and may contain additional information following that,
which the handler can use,
for example,
to specify which variant to use of the formats supported by the handler.
Note that not all image handlers may support writing transparency data to a file,
even where the target image format does.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="COLOR_ALLOCATION"
>COLOR ALLOCATION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>When a photo image is displayed in a window,
the photo image code allocates colors to use to display the image and dithers the image,
if necessary,
to display a reasonable approximation to the image using the colors that are available.
The colors are allocated as a color cube,
that is,
the number of colors allocated is the product of the number of shades of red,
green and blue.</p>

<p>Normally,
the number of colors allocated is chosen based on the depth of the window.
For example,
in an 8-bit PseudoColor window,
the photo image code will attempt to allocate seven shades of red,
seven shades of green and four shades of blue,
for a total of 198 colors.
In a 1-bit StaticGray (monochrome) window,
it will allocate two colors,
black and white.
In a 24-bit DirectColor or TrueColor window,
it will allocate 256 shades each of red,
green and blue.
Fortunately,
because of the way that pixel values can be combined in DirectColor and TrueColor windows,
this only requires 256 colors to be allocated.
If not all of the colors can be allocated,
the photo image code reduces the number of shades of each primary color and tries again.</p>

<p>The user can exercise some control over the number of colors that a photo image uses with the <b>-palette</b> configuration option.
If this option is used,
it specifies the maximum number of shades of each primary color to try to allocate.
It can also be used to force the image to be displayed in shades of gray,
even on a color display,
by giving a single number rather than three numbers separated by slashes.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="CREDITS"
>CREDITS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>The photo image type was designed and implemented by Paul Mackerras,
based on his earlier photo widget and some suggestions from John Ousterhout.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SEE_ALSO"
>SEE ALSO <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><a href="/~srezic/Tk-804.030/pod/Bitmap.pod" class="podlinkpod"
>Tk::Bitmap</a> <a href="/~srezic/Tk-804.030/pod/Image.pod" class="podlinkpod"
>Tk::Image</a> <a href="/~srezic/Tk-804.030/pod/Pixmap.pod" class="podlinkpod"
>Tk::Pixmap</a></p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="KEYWORDS"
>KEYWORDS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>photo,
image,
color</p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78210 Uploads, 24712 Distributions
106010 Modules, 9645 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Wed Apr 25 16:47:33 2012 GMT (0.131088972091675) @cpansearch1 -->
 </body>
</html>
