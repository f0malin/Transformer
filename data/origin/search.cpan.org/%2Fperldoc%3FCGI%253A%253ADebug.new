<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>CGI::Debug - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","CGI-Debug",3]);
    _gaq.push(["_setCustomVar",5,"Release","CGI-Debug-1.0",3]);
    _gaq.push(["_setCustomVar",3,"Module","CGI::Debug",3]);
    _gaq.push(["_setCustomVar",1,"Author","JONAS",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?CGI::Debug">permalink</a></div>
  <a href="/~jonas/">Jonas Liljegren</a> &gt;
  <a href="/~jonas/CGI-Debug-1.0/">CGI-Debug-1.0</a> &gt;
  CGI::Debug
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/069acd0bc80ede3b3e575eae5ac21bfe?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/J/JO/JONAS/CGI-Debug-1.0.tar.gz">CGI-Debug-1.0.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=CGI%3A%3ADebug;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~JONAS/CGI-Debug-1.0/Debug.pm">Annotate this POD
</a></p>
<div class=box style='width:150px; float: right'>
<h1 class=t5>Related Modules</h1>
<div style="margin:2px">
<a href="/perldoc?CGI%3A%3ACarp">CGI::Carp</a><br>
<a href="/perldoc?MP3%3A%3AID3v1Tag">MP3::ID3v1Tag</a><br>
<a href="/perldoc?Apache%3A%3AStatus">Apache::Status</a><br>
<a href="/perldoc?Data%3A%3ADumper">Data::Dumper</a><br>
<a href="/perldoc?Log%3A%3ALog4perl">Log::Log4perl</a><br>
<small>
<a href="http://perlmonks.org/?node=cpan+module+search&pivot=1&module=CGI%3A%3ADebug">more...</a><br>
By <a href="http://perlmonks.org/">perlmonks.org</a></small>
</div>
</div>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>Open&nbsp;</td><td style="text-align:right"> 1</td></tr>
</table>
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=CGI-Debug">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  1.00 &nbsp;
<span class="noprint">
  <a href="/src/JONAS/CGI-Debug-1.0/Debug.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#Default_behaviour'>Default behaviour</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#EXAMPELS'>EXAMPELS</a>
  <li class='indexItem indexItem1'><a href='#CONTROL_PARAMETERS'>CONTROL PARAMETERS</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#report_errors'>report errors</a>
    <li class='indexItem indexItem2'><a href='#report_empty_body'>report empty_body</a>
    <li class='indexItem indexItem2'><a href='#report_time'>report time</a>
    <li class='indexItem indexItem2'><a href='#report_params'>report params</a>
    <li class='indexItem indexItem2'><a href='#report_cookies'>report cookies</a>
    <li class='indexItem indexItem2'><a href='#report_environment'>report environment</a>
    <li class='indexItem indexItem2'><a href='#report_everything'>report everything</a>
    <li class='indexItem indexItem2'><a href='#report_internals'>report internals</a>
    <li class='indexItem indexItem2'><a href='#on_fatals'>on fatals</a>
    <li class='indexItem indexItem2'><a href='#on_warnings'>on warnings</a>
    <li class='indexItem indexItem2'><a href='#on_anything'>on anything</a>
    <li class='indexItem indexItem2'><a href='#to_browser'>to browser</a>
    <li class='indexItem indexItem2'><a href='#to_log'>to log</a>
    <li class='indexItem indexItem2'><a href='#to_file'>to file</a>
    <li class='indexItem indexItem2'><a href='#to_mail'>to mail</a>
    <li class='indexItem indexItem2'><a href='#header_control'>header control</a>
    <li class='indexItem indexItem2'><a href='#header_ignore'>header ignore</a>
    <li class='indexItem indexItem2'><a href='#header_minimal'>header minimal</a>
    <li class='indexItem indexItem2'><a href='#set_param_length'>set param_length</a>
    <li class='indexItem indexItem2'><a href='#set_error_document'>set error_document</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#MOD_PERL'>MOD_PERL</a>
  <li class='indexItem indexItem1'><a href='#TODO'>TODO</a>
  <li class='indexItem indexItem1'><a href='#COPYRIGHT'>COPYRIGHT</a>
  <li class='indexItem indexItem1'><a href='#AUTHOR'>AUTHOR</a>
  <li class='indexItem indexItem1'><a href='#SEE_ALSO'>SEE ALSO</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>CGI::Debug - module for CGI programs debugging</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl"> use CGI::Debug;

 use CGI::Debug( report =&#62; [&#39;errors&#39;, &#39;empty_body&#39;, &#39;time&#39;, 
                            &#39;params&#39;, &#39;cookies&#39;, &#39;environment&#39;,
                            ],
                 on     =&#62; &#39;fatals&#39;,
                 to     =&#62; { browser =&#62; 1,
                             log     =&#62; 1,
                             file    =&#62; &#39;/tmp/my_error&#39;,
                             mail    =&#62; [&#39;staff@company.orb&#39;,
                                         &#39;webmaster&#39;,
                                         ],
                         },
                 header =&#62; &#39;control&#39;,
                 set    =&#62; { error_document =&#62; &#39;oups.html&#39; },
                 );</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>CGI::Debug will catch (almost) all compilation and runtime errors and warnings and will display them in the browser.</p>

<p>Just &#34;use CGI::Debug&#34; on the second row in your program. The module will not change the behaviour of your cgi program. As long as your program works, you will not notice the modules presence.</p>

<p>At any time you can remove the &#34;use CGI::Debug&#34; without changing the behaviour of your program. It will only start faster.</p>

<p>The actions of CGI::Debug is determined by, in order: 1. cookie control variables 2. environment control variables 3. the import control parameters 4. the defaults</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Default_behaviour"
>Default behaviour</a></h2>

<p>Report to browser:</p>

<ul>
<li>bad HTTP-headers</li>

<li>empty HTTP-body</li>

<li>warnings and errors</li>

<li>elapsed time</li>

<li>query parameters</li>

<li>cookies</li>

<li>environment variables (max 60 chars in value)</li>
</ul>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="EXAMPELS"
>EXAMPELS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Only report errors: use CGI::Debug( report =&#62; &#39;errors&#39; );</p>

<p>Do not bother about warnings: use CGI::Debug( on =&#62; &#39;fatals&#39; );</p>

<p>Allways show complete debugging info: use CGI::Debug( report =&#62; &#39;everything&#39;, on =&#62; &#39;anything&#39; );</p>

<p>Send debug data as mail to file owner: use CGI::Debug( to =&#62; &#39;mail&#39; );</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="CONTROL_PARAMETERS"
>CONTROL PARAMETERS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Cookie control variables makes it possible to control the debugging environment from a program in another browser window. This would be prefereble with complex web pages (framesets, etc). The page is viewd as normal in one window. All debugging data is shown i another window, that also provides controls to alter the debugging environment. (But this external debugging program is not yet implemented.)</p>

<p>Environment control variables makes it more easy to globaly set the debugging environment for a web site. It is also a way for the target program to control the CGI::Debug module actions.</p>

<p>The four methods can be mixed. (Cookies, enviroment, import parameters and defaults.) The module will try to make sense with whatever you give it. The possibilites of control are more limitied in the Cookie / ENV version.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="report_errors"
>report errors</a></h2>

<pre class="sh_perl">  Cookie / ENV: CGI-Debug-report=errors

  Import: report =&#62; &#39;errors&#39;
          report =&#62; [ &#39;errors&#39;, ... ]</pre>

<p>Report the content of STDERR.</p>

<p>This will allways be reported. This control is for saying that none of the other defualt things will be reported. This will only override the default. Other report controls will be accumulated.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="report_empty_body"
>report empty_body</a></h2>

<pre class="sh_perl">  Cookie / ENV: CGI-Debug-report=empty_body

  Import: report =&#62; &#39;empty_body&#39;
          report =&#62; [ &#39;empty_body&#39;, ... ]</pre>

<p>Report if HTTP-body is empty.</p>

<p>This requires that &#34;header control&#34; is set.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="report_time"
>report time</a></h2>

<pre class="sh_perl">  Cookie / ENV: CGI-Debug-report=time

  Import: report =&#62; &#39;time&#39;
          report =&#62; [ &#39;time&#39;, ... ]</pre>

<p>Report the elapsed time from beginning to end of execution.</p>

<p>If Time::Hires is found, this will be given with subsecond precision.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="report_params"
>report params</a></h2>

<pre class="sh_perl">  Cookie / ENV: CGI-Debug-report=params

  Import: report =&#62; &#39;params&#39;
          report =&#62; [ &#39;params&#39;, ... ]</pre>

<p>Report a table of all name/value pairs, as given by the CGI module.</p>

<p>Multiple values will be reported as distinct pairs, in order. Values will be truncated to the &#34;set param_length&#34; number of chars. The total length is shown for each value.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="report_cookies"
>report cookies</a></h2>

<pre class="sh_perl">  Cookie / ENV: CGI-Debug-report=cookies

  Import: report =&#62; &#39;cookies&#39;
          report =&#62; [ &#39;cookies&#39;, ... ]</pre>

<p>Report a table of all cookies, as given by the CGI module.</p>

<p>Multiple values will be reported as distinct pairs, in order. Values will be truncated to the &#34;set param_length&#34; number of chars. The total length is shown for each value.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="report_environment"
>report environment</a></h2>

<pre class="sh_perl">  Cookie / ENV: CGI-Debug-report=environment

  Import: report =&#62; &#39;environment&#39;
          report =&#62; [ &#39;environment&#39;, ... ]</pre>

<p>Report a table of all environment varialbes INCLUDING empty_body, time, params, cookies.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="report_everything"
>report everything</a></h2>

<pre class="sh_perl">  Cookie / ENV: CGI-Debug-report=everything

  Import: report =&#62; &#39;everything&#39;
          report =&#62; [ &#39;everything&#39;, ... ]</pre>

<p>Report environment and all what that includes.</p>

<p>(The plan is for this control to include the contorl of HTML compliance.)</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="report_internals"
>report internals</a></h2>

<pre class="sh_perl">  Cookie / ENV: CGI-Debug-report=internals

  Import: report =&#62; &#39;internals&#39;
          report =&#62; [ &#39;internals&#39;, ... ]</pre>

<p>Report data for the debugging of the module itself, including everything else. Data::Dumper will be used, if found.</p>

<p>If the module itself dies, you will probably not get any output at al. You can check for errors in the file /tmp/CGI-Debug-error-$$. In order to see what error CGI::Debug is generating, you could changing $DEBUG to 2 or more, in the module file itself. Please email the author about any problems.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="on_fatals"
>on fatals</a></h2>

<pre class="sh_perl">  Cookie / ENV: CGI-Debug-on=fatals

  Import: on =&#62; &#39;fatals&#39;</pre>

<p>Only deliver report on fatal errors.</p>

<p>This will ignore warnings. CGI::Debug checks the exit value. Reports will also be delivered if an empty body is detected, in case &#34;header control&#34; is set.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="on_warnings"
>on warnings</a></h2>

<pre class="sh_perl">  Cookie / ENV: CGI-Debug-on=warnings

  Import: on =&#62; &#39;warnings&#39;</pre>

<p>Only deliver report on fatals or if there was any output to STDERR.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="on_anything"
>on anything</a></h2>

<pre class="sh_perl">  Cookie / ENV: CGI-Debug-on=anything

  Import: on =&#62; &#39;anything&#39;</pre>

<p>Always deliver reports, even if there was no errors.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="to_browser"
>to browser</a></h2>

<pre class="sh_perl">  Cookie / ENV: CGI-Debug-to=browser

  Import: to =&#62; &#39;browser&#39;
          to =&#62; [ &#39;browser&#39;, ... ]
          to =&#62; { &#39;browser&#39; =&#62; 1, ... }</pre>

<p>Send report to browser.</p>

<p>The report will come after any program output. The module will assume the page is in text/html, unless &#34;header control&#34; is set, in case this will be checked. (In none HTML mode, the header and delimiter will be ASCII.)</p>

<p>There is many cases in which faulty or bad HTML will hide the report. This could be controled with &#34;report html_compliance&#34; (which is not yet implemented).</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="to_log"
>to log</a></h2>

<pre class="sh_perl">  Cookie / ENV: CGI-Debug-to=log

  Import: to =&#62; &#39;log&#39;
          to =&#62; [ &#39;log&#39;, ... ]
          to =&#62; { &#39;log&#39; =&#62; 1, ... }</pre>

<p>Send report to the standard error log.</p>

<p>This will easily result in a huge log.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="to_file"
>to file</a></h2>

<pre class="sh_perl">  Cookie / ENV: CGI-Debug-to=file
                CGI-Debug-to-file=filename

  Import: to =&#62; &#39;file&#39;
          to =&#62; [ &#39;file&#39;, ... ]
          to =&#62; { &#39;file&#39; =&#62; &#39;filename&#39;, ... }
          to =&#62; { &#39;file&#39; =&#62; [ &#39;filename1&#39;, &#39;filename2&#39;, ... ] ... }</pre>

<p>Save report to filename.</p>

<p>Default filename is &#34;/tmp/CGI-Debug-error.txt&#34;. The file will be overwritten by the next report. This solution is to be used for debugging with an external program. (To be used with cookies.)</p>

<p>This will not work well with framesets that generates multipple reports at a time. The action of this control may change in future versions.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="to_mail"
>to mail</a></h2>

<pre class="sh_perl">  Cookie / ENV: CGI-Debug-to=mail
                CGI-Debug-to-mail=mailaddress

  Import: to =&#62; &#39;mail&#39;
          to =&#62; [ &#39;mail&#39;, ... ]
          to =&#62; { &#39;mail&#39; =&#62; &#39;mailaddress&#39;, ... }
          to =&#62; { &#39;mail&#39; =&#62; [ &#39;mailaddress1&#39;, &#39;mailaddress2&#39;, ... ] ... }</pre>

<p>Send report with email.</p>

<p>The default mailaddress is the owner of the cgi program. This function requires the Mail::Send module. If there is any problem with the default behaviour of Mail::Send, set the enviroment variables, as described in the POD for Mail::Mailer, either for the HTTP server, or before &#34;use CGI::Debug&#34; in a BEGIN block.</p>

<p>The idea is to specify an email address that will be used if anybody besides yourself is getting an error. You will not get your own errors as email if you overide that action with a control cookie.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="header_control"
>header control</a></h2>

<pre class="sh_perl">  Cookie / ENV: CGI-Debug-header=control

  Import: header =&#62; &#39;control&#39;</pre>

<p>Controls that the HTTP-header is correct.</p>

<p>This control will follow the HTTP RFC to the point. It reports if the header is ok, if the content-type is text/html, and the length of the HTTP-body. That information will be used by other parts of CGI::Debug. This is done by redirecting STDOUT to a temporary file. This is the only control that must be set in the beginning of the program. All other controls can be changed during before the end of the program.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="header_ignore"
>header ignore</a></h2>

<pre class="sh_perl">  Cookie / ENV: CGI-Debug-header=ignore

  Import: header =&#62; &#39;ignore&#39;</pre>

<p>Assume that the HTTP-header is correct and specifies text/html.</p>

<p>This will tell CGI::Debug to ignore the STDOUT. A server generated error response will result if the program compile ok but does not produce a valid HTTP-header.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="header_minimal"
>header minimal</a></h2>

<pre class="sh_perl">  Cookie / ENV: CGI-Debug-header=minimal

  Import: header =&#62; &#39;minimal&#39;</pre>

<p>Generates a simple text/html HTTP-header for you.</p>

<p>This is the only action that CHANGES THE BEHAVIOUR of your program. You will have to insert your own header if you remove the CGI::Debug row. But this action will guarantee that you have a valid header, without the need to save STDOUT to a temporary file.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="set_param_length"
>set param_length</a></h2>

<pre class="sh_perl">  Cookie / ENV: CGI-Debug-set-param_length=value

  Import: set =&#62; { param_length =&#62; &#39;value&#39;, ... }</pre>

<p>Set the max length of the parameter values.</p>

<p>The default length is 60 chars. This is used for query parameters, cookies and environment. The purpose is to give you a table that looks good.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="set_error_document"
>set error_document</a></h2>

<pre class="sh_perl">  Cookie / ENV: CGI-Debug-set-error_document=value

  Import: set =&#62; { error_document =&#62; &#39;value&#39;, ... }</pre>

<p>Set what page to redirect to if there was an error report, not sent to browser.</p>

<p>This will show up in the browser if the error is going somewhere else. If no page is specified, a short generic CGI error response will show up. But if the CGI program succeeded in printing a valid http header and something in the body, that will be showed instead, even if the program later crashed.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="MOD_PERL"
>MOD_PERL <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>CGI::Debug will not function under mod_perl. The only solution to get similar functionality is to develop a replacement for Apache::Registry, with integrated debugging features. The configuration interface can not include the &#34;use CGI::Debug ( report =&#62; ... )&#34; style, in a mod_perl version.</p>

<p>If you run CGI::Debug under mod_perl, it will do nothing, except sending a warning to STDERR.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="TODO"
>TODO <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>These are things that could be done to make CGI::Debug even better. I have no plan to add new features myself. Feel free to contribute.</p>

<ul>
<li>Clean up and generalize configuration</li>

<li>Test on non-*nix platforms</li>

<li>Implement HTML_compliance controls (using HTML::validate)</li>

<li>Implement function for debugging in a separate window</li>
</ul>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="COPYRIGHT"
>COPYRIGHT <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Copyright (c) 1999-2000 Jonas Liljegren. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHOR"
>AUTHOR <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Jonas Liljegren &#60;jonas@paranormal.se&#62;</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SEE_ALSO"
>SEE ALSO <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>CGI, <a href="/perldoc?Mail%3A%3ASend" class="podlinkpod"
>Mail::Send</a>, <a href="/perldoc?Time%3A%3AHires" class="podlinkpod"
>Time::Hires</a>, <a href="/perldoc?Data%3A%3ADumper" class="podlinkpod"
>Data::Dumper</a>, perl</p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78272 Uploads, 24723 Distributions
106001 Modules, 9649 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Fri Apr 27 20:54:55 2012 GMT (0.119472026824951) @cpansearch1 -->
 </body>
</html>
