<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>Math::BigRat - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","Math-BigRat",3]);
    _gaq.push(["_setCustomVar",5,"Release","Math-BigRat-0.2602",3]);
    _gaq.push(["_setCustomVar",3,"Module","Math::BigRat",3]);
    _gaq.push(["_setCustomVar",1,"Author","PJACKLAM",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?Math::BigRat">permalink</a></div>
  <a href="/~pjacklam/">Peter John Acklam</a> &gt;
  <a href="/~pjacklam/Math-BigRat-0.2602/">Math-BigRat-0.2602</a> &gt;
  Math::BigRat
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/a28733f16fceafd48f2667193812635c?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/P/PJ/PJACKLAM/Math-BigRat-0.2602.tar.gz">Math-BigRat-0.2602.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=Math%3A%3ABigRat;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~PJACKLAM/Math-BigRat-0.2602/lib/Math/BigRat.pm">Annotate this POD
(1)
</a></p>
<div class=box style='width:150px; float: right'>
<h1 class=t5>Related Modules</h1>
<div style="margin:2px">
<a href="/perldoc?Math%3A%3ABigFloat">Math::BigFloat</a><br>
<a href="/perldoc?Math%3A%3ABigInt">Math::BigInt</a><br>
<a href="/perldoc?Net%3A%3ASFTP">Net::SFTP</a><br>
<a href="/perldoc?Test%3A%3AMore">Test::More</a><br>
<a href="/perldoc?Math%3A%3ABigInt%3A%3AGMP">Math::BigInt::GMP</a><br>
<a href="/perldoc?Devel%3A%3APeek">Devel::Peek</a><br>
<a href="/perldoc?Net%3A%3ASSH%3A%3APerl">Net::SSH::Perl</a><br>
<a href="/perldoc?Crypt%3A%3ADSA">Crypt::DSA</a><br>
<a href="/perldoc?Crypt%3A%3ADH">Crypt::DH</a><br>
<a href="/perldoc?Math%3A%3APari">Math::Pari</a><br>
<small>
<a href="http://perlmonks.org/?node=cpan+module+search&pivot=1&module=Math%3A%3ABigRat">more...</a><br>
By <a href="http://perlmonks.org/">perlmonks.org</a></small>
</div>
</div>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>New&nbsp;</td><td style="text-align:right"> 1</td></tr>
<tr><td>Open&nbsp;</td><td style="text-align:right"> 2</td></tr>
</table>
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=Math-BigRat">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  0.2602 &nbsp;
<span class="noprint">
  <a href="/src/PJACKLAM/Math-BigRat-0.2602/lib/Math/BigRat.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#MATH_LIBRARY'>MATH LIBRARY</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#METHODS'>METHODS</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#new()'>new()</a>
    <li class='indexItem indexItem2'><a href='#numerator()'>numerator()</a>
    <li class='indexItem indexItem2'><a href='#denominator()'>denominator()</a>
    <li class='indexItem indexItem2'><a href='#parts()'>parts()</a>
    <li class='indexItem indexItem2'><a href='#numify()'>numify()</a>
    <li class='indexItem indexItem2'><a href='#as_int()/as_number()'>as_int()/as_number()</a>
    <li class='indexItem indexItem2'><a href='#as_float()'>as_float()</a>
    <li class='indexItem indexItem2'><a href='#as_hex()'>as_hex()</a>
    <li class='indexItem indexItem2'><a href='#as_bin()'>as_bin()</a>
    <li class='indexItem indexItem2'><a href='#as_oct()'>as_oct()</a>
    <li class='indexItem indexItem2'><a href='#from_hex()/from_bin()/from_oct()'>from_hex()/from_bin()/from_oct()</a>
    <li class='indexItem indexItem2'><a href='#length()'>length()</a>
    <li class='indexItem indexItem2'><a href='#digit()'>digit()</a>
    <li class='indexItem indexItem2'><a href='#bnorm()'>bnorm()</a>
    <li class='indexItem indexItem2'><a href='#bfac()'>bfac()</a>
    <li class='indexItem indexItem2'><a href='#bround()/round()/bfround()'>bround()/round()/bfround()</a>
    <li class='indexItem indexItem2'><a href='#bmod()'>bmod()</a>
    <li class='indexItem indexItem2'><a href='#bneg()'>bneg()</a>
    <li class='indexItem indexItem2'><a href='#is_one()'>is_one()</a>
    <li class='indexItem indexItem2'><a href='#is_zero()'>is_zero()</a>
    <li class='indexItem indexItem2'><a href='#is_pos()/is_positive()'>is_pos()/is_positive()</a>
    <li class='indexItem indexItem2'><a href='#is_neg()/is_negative()'>is_neg()/is_negative()</a>
    <li class='indexItem indexItem2'><a href='#is_int()'>is_int()</a>
    <li class='indexItem indexItem2'><a href='#is_odd()'>is_odd()</a>
    <li class='indexItem indexItem2'><a href='#is_even()'>is_even()</a>
    <li class='indexItem indexItem2'><a href='#bceil()'>bceil()</a>
    <li class='indexItem indexItem2'><a href='#bfloor()'>bfloor()</a>
    <li class='indexItem indexItem2'><a href='#bsqrt()'>bsqrt()</a>
    <li class='indexItem indexItem2'><a href='#broot()'>broot()</a>
    <li class='indexItem indexItem2'><a href='#badd()/bmul()/bsub()/bdiv()/bdec()/binc()'>badd()/bmul()/bsub()/bdiv()/bdec()/binc()</a>
    <li class='indexItem indexItem2'><a href='#copy()'>copy()</a>
    <li class='indexItem indexItem2'><a href='#bstr()/bsstr()'>bstr()/bsstr()</a>
    <li class='indexItem indexItem2'><a href='#bacmp()/bcmp()'>bacmp()/bcmp()</a>
    <li class='indexItem indexItem2'><a href='#blsft()/brsft()'>blsft()/brsft()</a>
    <li class='indexItem indexItem2'><a href='#bpow()'>bpow()</a>
    <li class='indexItem indexItem2'><a href='#bexp()'>bexp()</a>
    <li class='indexItem indexItem2'><a href='#bnok()'>bnok()</a>
    <li class='indexItem indexItem2'><a href='#config()'>config()</a>
    <li class='indexItem indexItem2'><a href='#objectify()'>objectify()</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#BUGS'>BUGS</a>
  <li class='indexItem indexItem1'><a href='#LICENSE'>LICENSE</a>
  <li class='indexItem indexItem1'><a href='#SEE_ALSO'>SEE ALSO</a>
  <li class='indexItem indexItem1'><a href='#AUTHORS'>AUTHORS</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Math::BigRat - Arbitrary big rational numbers</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">        use Math::BigRat;

        my $x = Math::BigRat-&#62;new(&#39;3/7&#39;); $x += &#39;5/9&#39;;

        print $x-&#62;bstr(),&#34;\n&#34;;
        print $x ** 2,&#34;\n&#34;;

        my $y = Math::BigRat-&#62;new(&#39;inf&#39;);
        print &#34;$y &#34;, ($y-&#62;is_inf ? &#39;is&#39; : &#39;is not&#39;) , &#34; infinity\n&#34;;

        my $z = Math::BigRat-&#62;new(144); $z-&#62;bsqrt();</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Math::BigRat complements Math::BigInt and Math::BigFloat by providing support for arbitrary big rational numbers.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="MATH_LIBRARY"
>MATH LIBRARY</a></h2>

<p>You can change the underlying module that does the low-level math operations by using:</p>

<pre class="sh_perl">        use Math::BigRat try =&#62; &#39;GMP&#39;;</pre>

<p>Note: This needs Math::BigInt::GMP installed.</p>

<p>The following would first try to find Math::BigInt::Foo, then Math::BigInt::Bar, and when this also fails, revert to Math::BigInt::Calc:</p>

<pre class="sh_perl">        use Math::BigRat try =&#62; &#39;Foo,Math::BigInt::Bar&#39;;</pre>

<p>If you want to get warned when the fallback occurs, replace &#34;try&#34; with &#34;lib&#34;:</p>

<pre class="sh_perl">        use Math::BigRat lib =&#62; &#39;Foo,Math::BigInt::Bar&#39;;</pre>

<p>If you want the code to die instead, replace &#34;try&#34; with &#34;only&#34;:</p>

<pre class="sh_perl">        use Math::BigRat only =&#62; &#39;Foo,Math::BigInt::Bar&#39;;</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="METHODS"
>METHODS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Any methods not listed here are derived from Math::BigFloat (or Math::BigInt), so make sure you check these two modules for further information.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="new()"
>new()</a></h2>

<pre class="sh_perl">        $x = Math::BigRat-&#62;new(&#39;1/3&#39;);</pre>

<p>Create a new Math::BigRat object. Input can come in various forms:</p>

<pre class="sh_perl">        $x = Math::BigRat-&#62;new(123);                            # scalars
        $x = Math::BigRat-&#62;new(&#39;inf&#39;);                          # infinity
        $x = Math::BigRat-&#62;new(&#39;123.3&#39;);                        # float
        $x = Math::BigRat-&#62;new(&#39;1/3&#39;);                          # simple string
        $x = Math::BigRat-&#62;new(&#39;1 / 3&#39;);                        # spaced
        $x = Math::BigRat-&#62;new(&#39;1 / 0.1&#39;);                      # w/ floats
        $x = Math::BigRat-&#62;new(Math::BigInt-&#62;new(3));           # BigInt
        $x = Math::BigRat-&#62;new(Math::BigFloat-&#62;new(&#39;3.1&#39;));     # BigFloat
        $x = Math::BigRat-&#62;new(Math::BigInt::Lite-&#62;new(&#39;2&#39;));   # BigLite

        # You can also give D and N as different objects:
        $x = Math::BigRat-&#62;new(
                Math::BigInt-&#62;new(-123),
                Math::BigInt-&#62;new(7),
                );                      # =&#62; -123/7</pre>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="numerator()"
>numerator()</a></h2>

<pre class="sh_perl">        $n = $x-&#62;numerator();</pre>

<p>Returns a copy of the numerator (the part above the line) as signed BigInt.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="denominator()"
>denominator()</a></h2>

<pre class="sh_perl">        $d = $x-&#62;denominator();</pre>

<p>Returns a copy of the denominator (the part under the line) as positive BigInt.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="parts()"
>parts()</a></h2>

<pre class="sh_perl">        ($n,$d) = $x-&#62;parts();</pre>

<p>Return a list consisting of (signed) numerator and (unsigned) denominator as BigInts.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="numify()"
>numify()</a></h2>

<pre class="sh_perl">        my $y = $x-&#62;numify();</pre>

<p>Returns the object as a scalar. This will lose some data if the object cannot be represented by a normal Perl scalar (integer or float), so use <a href="/perldoc?as_int()" class="podlinkpod"
>as_int()</a> or <a href="/perldoc?as_float()" class="podlinkpod"
>as_float()</a> instead.</p>

<p>This routine is automatically used whenever a scalar is required:</p>

<pre class="sh_perl">        my $x = Math::BigRat-&#62;new(&#39;3/1&#39;);
        @array = (0,1,2,3);
        $y = $array[$x];                # set $y to 3</pre>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="as_int()/as_number()"
>as_int()/as_number()</a></h2>

<pre class="sh_perl">        $x = Math::BigRat-&#62;new(&#39;13/7&#39;);
        print $x-&#62;as_int(),&#34;\n&#34;;                # &#39;1&#39;</pre>

<p>Returns a copy of the object as BigInt, truncated to an integer.</p>

<p><code>as_number()</code> is an alias for <code>as_int()</code>.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="as_float()"
>as_float()</a></h2>

<pre class="sh_perl">        $x = Math::BigRat-&#62;new(&#39;13/7&#39;);
        print $x-&#62;as_float(),&#34;\n&#34;;              # &#39;1&#39;

        $x = Math::BigRat-&#62;new(&#39;2/3&#39;);
        print $x-&#62;as_float(5),&#34;\n&#34;;             # &#39;0.66667&#39;</pre>

<p>Returns a copy of the object as BigFloat, preserving the accuracy as wanted, or the default of 40 digits.</p>

<p>This method was added in v0.22 of Math::BigRat (April 2008).</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="as_hex()"
>as_hex()</a></h2>

<pre class="sh_perl">        $x = Math::BigRat-&#62;new(&#39;13&#39;);
        print $x-&#62;as_hex(),&#34;\n&#34;;                # &#39;0xd&#39;</pre>

<p>Returns the BigRat as hexadecimal string. Works only for integers.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="as_bin()"
>as_bin()</a></h2>

<pre class="sh_perl">        $x = Math::BigRat-&#62;new(&#39;13&#39;);
        print $x-&#62;as_bin(),&#34;\n&#34;;                # &#39;0x1101&#39;</pre>

<p>Returns the BigRat as binary string. Works only for integers.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="as_oct()"
>as_oct()</a></h2>

<pre class="sh_perl">        $x = Math::BigRat-&#62;new(&#39;13&#39;);
        print $x-&#62;as_oct(),&#34;\n&#34;;                # &#39;015&#39;</pre>

<p>Returns the BigRat as octal string. Works only for integers.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="from_hex()/from_bin()/from_oct()"
>from_hex()/from_bin()/from_oct()</a></h2>

<pre class="sh_perl">        my $h = Math::BigRat-&#62;from_hex(&#39;0x10&#39;);
        my $b = Math::BigRat-&#62;from_bin(&#39;0b10000000&#39;);
        my $o = Math::BigRat-&#62;from_oct(&#39;020&#39;);</pre>

<p>Create a BigRat from an hexadecimal, binary or octal number in string form.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="length()"
>length()</a></h2>

<pre class="sh_perl">        $len = $x-&#62;length();</pre>

<p>Return the length of $x in digits for integer values.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="digit()"
>digit()</a></h2>

<pre class="sh_perl">        print Math::BigRat-&#62;new(&#39;123/1&#39;)-&#62;digit(1);     # 1
        print Math::BigRat-&#62;new(&#39;123/1&#39;)-&#62;digit(-1);    # 3</pre>

<p>Return the N&#39;ths digit from X when X is an integer value.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="bnorm()"
>bnorm()</a></h2>

<pre class="sh_perl">        $x-&#62;bnorm();</pre>

<p>Reduce the number to the shortest form. This routine is called automatically whenever it is needed.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="bfac()"
>bfac()</a></h2>

<pre class="sh_perl">        $x-&#62;bfac();</pre>

<p>Calculates the factorial of $x. For instance:</p>

<pre class="sh_perl">        print Math::BigRat-&#62;new(&#39;3/1&#39;)-&#62;bfac(),&#34;\n&#34;;    # 1*2*3
        print Math::BigRat-&#62;new(&#39;5/1&#39;)-&#62;bfac(),&#34;\n&#34;;    # 1*2*3*4*5</pre>

<p>Works currently only for integers.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="bround()/round()/bfround()"
>bround()/round()/bfround()</a></h2>

<p>Are not yet implemented.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="bmod()"
>bmod()</a></h2>

<pre class="sh_perl">        use Math::BigRat;
        my $x = Math::BigRat-&#62;new(&#39;7/4&#39;);
        my $y = Math::BigRat-&#62;new(&#39;4/3&#39;);
        print $x-&#62;bmod($y);</pre>

<p>Set $x to the remainder of the division of $x by $y.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="bneg()"
>bneg()</a></h2>

<pre class="sh_perl">        $x-&#62;bneg();</pre>

<p>Used to negate the object in-place.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="is_one()"
>is_one()</a></h2>

<pre class="sh_perl">        print &#34;$x is 1\n&#34; if $x-&#62;is_one();</pre>

<p>Return true if $x is exactly one, otherwise false.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="is_zero()"
>is_zero()</a></h2>

<pre class="sh_perl">        print &#34;$x is 0\n&#34; if $x-&#62;is_zero();</pre>

<p>Return true if $x is exactly zero, otherwise false.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="is_pos()/is_positive()"
>is_pos()/is_positive()</a></h2>

<pre class="sh_perl">        print &#34;$x is &#62;= 0\n&#34; if $x-&#62;is_positive();</pre>

<p>Return true if $x is positive (greater than or equal to zero), otherwise false. Please note that &#39;+inf&#39; is also positive, while &#39;NaN&#39; and &#39;-inf&#39; aren&#39;t.</p>

<p><code>is_positive()</code> is an alias for <code>is_pos()</code>.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="is_neg()/is_negative()"
>is_neg()/is_negative()</a></h2>

<pre class="sh_perl">        print &#34;$x is &#60; 0\n&#34; if $x-&#62;is_negative();</pre>

<p>Return true if $x is negative (smaller than zero), otherwise false. Please note that &#39;-inf&#39; is also negative, while &#39;NaN&#39; and &#39;+inf&#39; aren&#39;t.</p>

<p><code>is_negative()</code> is an alias for <code>is_neg()</code>.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="is_int()"
>is_int()</a></h2>

<pre class="sh_perl">        print &#34;$x is an integer\n&#34; if $x-&#62;is_int();</pre>

<p>Return true if $x has a denominator of 1 (e.g. no fraction parts), otherwise false. Please note that &#39;-inf&#39;, &#39;inf&#39; and &#39;NaN&#39; aren&#39;t integer.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="is_odd()"
>is_odd()</a></h2>

<pre class="sh_perl">        print &#34;$x is odd\n&#34; if $x-&#62;is_odd();</pre>

<p>Return true if $x is odd, otherwise false.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="is_even()"
>is_even()</a></h2>

<pre class="sh_perl">        print &#34;$x is even\n&#34; if $x-&#62;is_even();</pre>

<p>Return true if $x is even, otherwise false.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="bceil()"
>bceil()</a></h2>

<pre class="sh_perl">        $x-&#62;bceil();</pre>

<p>Set $x to the next bigger integer value (e.g. truncate the number to integer and then increment it by one).</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="bfloor()"
>bfloor()</a></h2>

<pre class="sh_perl">        $x-&#62;bfloor();</pre>

<p>Truncate $x to an integer value.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="bsqrt()"
>bsqrt()</a></h2>

<pre class="sh_perl">        $x-&#62;bsqrt();</pre>

<p>Calculate the square root of $x.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="broot()"
>broot()</a></h2>

<pre class="sh_perl">        $x-&#62;broot($n);</pre>

<p>Calculate the N&#39;th root of $x.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="badd()/bmul()/bsub()/bdiv()/bdec()/binc()"
>badd()/bmul()/bsub()/bdiv()/bdec()/binc()</a></h2>

<p>Please see the documentation in <a href="/perldoc?Math%3A%3ABigInt" class="podlinkpod"
>Math::BigInt</a>.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="copy()"
>copy()</a></h2>

<pre class="sh_perl">        my $z = $x-&#62;copy();</pre>

<p>Makes a deep copy of the object.</p>

<p>Please see the documentation in <a href="/perldoc?Math%3A%3ABigInt" class="podlinkpod"
>Math::BigInt</a> for further details.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="bstr()/bsstr()"
>bstr()/bsstr()</a></h2>

<pre class="sh_perl">        my $x = Math::BigInt-&#62;new(&#39;8/4&#39;);
        print $x-&#62;bstr(),&#34;\n&#34;;                  # prints 1/2
        print $x-&#62;bsstr(),&#34;\n&#34;;                 # prints 1/2</pre>

<p>Return a string representing this object.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="bacmp()/bcmp()"
>bacmp()/bcmp()</a></h2>

<p>Used to compare numbers.</p>

<p>Please see the documentation in <a href="/perldoc?Math%3A%3ABigInt" class="podlinkpod"
>Math::BigInt</a> for further details.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="blsft()/brsft()"
>blsft()/brsft()</a></h2>

<p>Used to shift numbers left/right.</p>

<p>Please see the documentation in <a href="/perldoc?Math%3A%3ABigInt" class="podlinkpod"
>Math::BigInt</a> for further details.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="bpow()"
>bpow()</a></h2>

<pre class="sh_perl">        $x-&#62;bpow($y);</pre>

<p>Compute $x ** $y.</p>

<p>Please see the documentation in <a href="/perldoc?Math%3A%3ABigInt" class="podlinkpod"
>Math::BigInt</a> for further details.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="bexp()"
>bexp()</a></h2>

<pre class="sh_perl">        $x-&#62;bexp($accuracy);            # calculate e ** X</pre>

<p>Calculates two integers A and B so that A/B is equal to <code>e ** $x</code>, where <code>e</code> is Euler&#39;s number.</p>

<p>This method was added in v0.20 of Math::BigRat (May 2007).</p>

<p>See also <a href="/perldoc?blog()" class="podlinkpod"
>blog()</a>.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="bnok()"
>bnok()</a></h2>

<pre class="sh_perl">        $x-&#62;bnok($y);              # x over y (binomial coefficient n over k)</pre>

<p>Calculates the binomial coefficient n over k, also called the &#34;choose&#34; function. The result is equivalent to:</p>

<pre class="sh_perl">        ( n )      n!
        | - |  = -------
        ( k )    k!(n-k)!</pre>

<p>This method was added in v0.20 of Math::BigRat (May 2007).</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="config()"
>config()</a></h2>

<pre class="sh_perl">        use Data::Dumper;

        print Dumper ( Math::BigRat-&#62;config() );
        print Math::BigRat-&#62;config()-&#62;{lib},&#34;\n&#34;;</pre>

<p>Returns a hash containing the configuration, e.g. the version number, lib loaded etc. The following hash keys are currently filled in with the appropriate information.</p>

<pre class="sh_perl">        key             RO/RW   Description
                                Example
        ============================================================
        lib             RO      Name of the Math library
                                Math::BigInt::Calc
        lib_version     RO      Version of &#39;lib&#39;
                                0.30
        class           RO      The class of config you just called
                                Math::BigRat
        version         RO      version number of the class you used
                                0.10
        upgrade         RW      To which class numbers are upgraded
                                undef
        downgrade       RW      To which class numbers are downgraded
                                undef
        precision       RW      Global precision
                                undef
        accuracy        RW      Global accuracy
                                undef
        round_mode      RW      Global round mode
                                even
        div_scale       RW      Fallback accuracy for div
                                40
        trap_nan        RW      Trap creation of NaN (undef = no)
                                undef
        trap_inf        RW      Trap creation of +inf/-inf (undef = no)
                                undef</pre>

<p>By passing a reference to a hash you may set the configuration values. This works only for values that a marked with a <code>RW</code> above, anything else is read-only.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="objectify()"
>objectify()</a></h2>

<p>This is an internal routine that turns scalars into objects.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="BUGS"
>BUGS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Some things are not yet implemented, or only implemented half-way:</p>

<dl>
<dt><a name='inf'></a><a name="inf_handling_(partial)"
>inf handling (partial)</a></dt>

<dd>
<dt><a name='NaN'></a><a name="NaN_handling_(partial)"
>NaN handling (partial)</a></dt>

<dd>
<dt><a name='rounding'></a><a name="rounding_(not_implemented_except_for_bceil/bfloor)"
>rounding (not implemented except for bceil/bfloor)</a></dt>

<dd>
<dt><a name='x'></a><a name="$x_**_$y_where_$y_is_not_an_integer"
>$x ** $y where $y is not an integer</a></dt>

<dd>
<dt><a name='bmod'></a><a name="bmod(),_blog(),_bmodinv()_and_bmodpow()_(partial)"
>bmod(), blog(), bmodinv() and bmodpow() (partial)</a></dt>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="LICENSE"
>LICENSE <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This program is free software; you may redistribute it and/or modify it under the same terms as Perl itself.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SEE_ALSO"
>SEE ALSO <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><a href="/perldoc?Math%3A%3ABigFloat" class="podlinkpod"
>Math::BigFloat</a> and <a href="/perldoc?Math%3A%3ABig" class="podlinkpod"
>Math::Big</a> as well as <a href="/perldoc?Math%3A%3ABigInt%3A%3ABitVect" class="podlinkpod"
>Math::BigInt::BitVect</a>, <a href="/perldoc?Math%3A%3ABigInt%3A%3APari" class="podlinkpod"
>Math::BigInt::Pari</a> and <a href="/perldoc?Math%3A%3ABigInt%3A%3AGMP" class="podlinkpod"
>Math::BigInt::GMP</a>.</p>

<p>See <a href="http://search.cpan.org/search?dist=bignum" class="podlinkurl"
>http://search.cpan.org/search?dist=bignum</a> for a way to use <a href="/~pjacklam/Math-BigRat-0.2602/lib/Math/BigRat.pm" class="podlinkpod"
>Math::BigRat</a>.</p>

<p>The package at <a href="http://search.cpan.org/search?dist=Math%3A%3ABigRat" class="podlinkurl"
>http://search.cpan.org/search?dist=Math%3A%3ABigRat</a> may contain more documentation and examples as well as testcases.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHORS"
>AUTHORS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>(C) by Tels <a href="http://bloodgate.com/" class="podlinkurl"
>http://bloodgate.com/</a> 2001 - 2009.</p>

<p>Currently maintained by Jonathan &#34;Duke&#34; Leto &#60;jonathan@leto.net&#62; <a href="http://leto.net" class="podlinkurl"
>http://leto.net</a></p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78255 Uploads, 24722 Distributions
105996 Modules, 9649 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Fri Apr 27 12:44:20 2012 GMT (0.353862047195435) @cpansearch1 -->
 </body>
</html>
