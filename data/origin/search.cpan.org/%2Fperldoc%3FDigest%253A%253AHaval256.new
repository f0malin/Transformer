<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>Digest::Haval256 - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","Digest-Haval256",3]);
    _gaq.push(["_setCustomVar",5,"Release","Digest-Haval256-1.0.5",3]);
    _gaq.push(["_setCustomVar",3,"Module","Digest::Haval256",3]);
    _gaq.push(["_setCustomVar",1,"Author","JCDUQUE",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?Digest::Haval256">permalink</a></div>
  <a href="/~jcduque/">Julius C. Duque</a> &gt;
  <a href="/~jcduque/Digest-Haval256-1.0.5/">Digest-Haval256-1.0.5</a> &gt;
  Digest::Haval256
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/6416b66adce7efb4bea31a364e2d418b?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/J/JC/JCDUQUE/Digest-Haval256-1.0.5.tar.gz">Digest-Haval256-1.0.5.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=Digest%3A%3AHaval256;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~JCDUQUE/Digest-Haval256-1.0.5/Haval256.pm">Annotate this POD
</a></p>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>Open&nbsp;</td><td style="text-align:right"> 1</td></tr>
</table>
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=Digest-Haval256">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  1.0.5 &nbsp;
<span class="noprint">
  <a href="/src/JCDUQUE/Digest-Haval256-1.0.5/Haval256.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#ABSTRACT'>ABSTRACT</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#Functions'>Functions</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#EXAMPLE_1'>EXAMPLE 1</a>
  <li class='indexItem indexItem1'><a href='#EXAMPLE_2'>EXAMPLE 2</a>
  <li class='indexItem indexItem1'><a href='#MORE_EXAMPLES'>MORE EXAMPLES</a>
  <li class='indexItem indexItem1'><a href='#COPYRIGHT_AND_LICENSE'>COPYRIGHT AND LICENSE</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Digest::Haval256 - A 5-round,
256-bit one-way hash function</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="ABSTRACT"
>ABSTRACT <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Haval is a variable-length,
variable-round one-way hash function.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">    use Digest::Haval256;

    $haval = new Digest::Haval256;
    $haval-&#62;add(LIST);
    $haval-&#62;addfile(*HANDLE);
    $haval-&#62;reset();

    $digest = $haval-&#62;digest();
    $digest = $haval-&#62;hexdigest();
    $digest = $haval-&#62;base64digest();
    
    $digest = $haval-&#62;hashsize();
    $digest = $haval-&#62;rounds();</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Haval is a variable-length, variable-round one-way hash function designed by Yuliang Zheng, Josef Pieprzyk, and Jennifer Seberry. The number of rounds can be 3, 4, or 5, while the hash length can be 128, 160, 192, 224, or 256 bits. Thus, there are a total of 15 different outputs. For better security, however, this module implements the 5-round, 256-bit output.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Functions"
>Functions</a></h2>

<dl>
<dt><a name='hashsize'></a><a name="hashsize()"
><b>hashsize()</b></a></dt>

<dd>
<p>Returns the size (in bits) of the hash (256, in this case)</p>

<dt><a name='rounds'></a><a name="rounds()"
><b>rounds()</b></a></dt>

<dd>
<p>Returns the number of rounds used (5, in this case)</p>

<dt><a name='add'></a><a name="add(LIST)"
><b>add(LIST)</b></a></dt>

<dd>
<p>Hashes a string or a list of strings</p>

<dt><a name='addfile'></a><a name="addfile(*HANDLE)"
><b>addfile(*HANDLE)</b></a></dt>

<dd>
<p>Hashes a file</p>

<dt><a name='reset'></a><a name="reset()"
><b>reset()</b></a></dt>

<dd>
<p>Re-initializes the hash state. Before calculating another digest, the hash state must be refreshed.</p>

<dt><a name='digest'></a><a name="digest()"
><b>digest()</b></a></dt>

<dd>
<p>Generates the hash output (a 32-byte binary string)</p>

<dt><a name='hexdigest'></a><a name="hexdigest()"
><b>hexdigest()</b></a></dt>

<dd>
<p>Generates a hexadecimal representation of the hash output</p>

<dt><a name='base64digest'></a><a name="base64digest()"
><b>base64digest()</b></a></dt>

<dd>
<p>Generates a base64 representation of the hash output. <b>MIME::Base64</b> must be installed first for this function to work.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="EXAMPLE_1"
>EXAMPLE 1 <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">    #!/usr/local/bin/perl

    use diagnostics;
    use strict;
    use warnings;
    use Digest::Haval256;

    my $string1 = &#34;This is a string.&#34;;
    my $string2 = &#34;This is another string.&#34;;
    my $string3 = &#34;This is a string.This is another string.&#34;;

    my $haval = new Digest::Haval256;
    print &#34;hash size=&#34;, $haval-&#62;hashsize, &#34;\n&#34;;
    print &#34;number of rounds=&#34;, $haval-&#62;rounds, &#34;\n\n&#34;;

    $haval-&#62;add($string1);
    my $digest = $haval-&#62;hexdigest();
    print &#34;Hash string1 only\n&#34;;
    print &#34;$digest\n\n&#34;;

    $haval-&#62;reset();
    $haval-&#62;add($string1, $string2);
    my $digest2 = $haval-&#62;hexdigest();
    print &#34;Hash string1 and then hash string2\n&#34;;
    print &#34;$digest2\n\n&#34;;
    
    $haval-&#62;reset();
    $haval-&#62;add($string3);
    print &#34;Hash the two concatenated strings\n&#34;;
    my $digest3 = $haval-&#62;hexdigest();
    print &#34;$digest3\n&#34;;</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="EXAMPLE_2"
>EXAMPLE 2 <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">    #!/usr/local/bin/perl

    use diagnostics;
    use strict;
    use warnings;
    use MIME::Base64;
    use Digest::Haval256;

    my $file = &#34;strings.pl&#34;;
    open INFILE, $file or die &#34;$file not found&#34;;

    my $haval = new Digest::Haval256;
    $haval-&#62;addfile(*INFILE);
    my $hex_output = $haval-&#62;hexdigest();
    my $base64_output = $haval-&#62;base64digest();
    close INFILE;
    print &#34;$file\n&#34;;
    print &#34;$hex_output\n&#34;;
    print &#34;$base64_output\n&#34;;</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="MORE_EXAMPLES"
>MORE EXAMPLES <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>See the &#34;examples&#34; and &#34;t&#34; directories for more examples.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="COPYRIGHT_AND_LICENSE"
>COPYRIGHT AND LICENSE <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Copyright 2003 by Julius C. Duque &#60;jcduque (AT) lycos (DOT) com&#62;</p>

<p>This library is free software; you can redistribute it and/or modify it under the same terms as the GNU General Public License.</p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78068 Uploads, 24686 Distributions
105902 Modules, 9637 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Sun Apr 22 11:54:01 2012 GMT (0.308787822723389) @cpansearch1 -->
 </body>
</html>
