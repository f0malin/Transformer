<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>Net::XWhois - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","Net-XWhois",3]);
    _gaq.push(["_setCustomVar",5,"Release","Net-XWhois-0.90",3]);
    _gaq.push(["_setCustomVar",3,"Module","Net::XWhois",3]);
    _gaq.push(["_setCustomVar",1,"Author","VIPUL",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?Net::XWhois">permalink</a></div>
  <a href="/~vipul/">Vipul Ved Prakash</a> &gt;
  <a href="/~vipul/Net-XWhois-0.90/">Net-XWhois-0.90</a> &gt;
  Net::XWhois
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/f64a9e9d7042d5006d7fc972c94eae19?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/V/VI/VIPUL/Net-XWhois-0.90.tar.gz">Net-XWhois-0.90.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=Net%3A%3AXWhois;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~VIPUL/Net-XWhois-0.90/lib/Net/XWhois.pm">Annotate this POD
</a></p>
<div class=box style='width:150px; float: right'>
<h1 class=t5>Related Modules</h1>
<div style="margin:2px">
<a href="/perldoc?Net%3A%3AWhois">Net::Whois</a><br>
<a href="/perldoc?Net%3A%3AParseWhois">Net::ParseWhois</a><br>
<a href="/perldoc?Getopt%3A%3AStd">Getopt::Std</a><br>
<a href="/perldoc?Net%3A%3ADNS">Net::DNS</a><br>
<a href="/perldoc?IO%3A%3ASocket">IO::Socket</a><br>
<small>
<a href="http://perlmonks.org/?node=cpan+module+search&pivot=1&module=Net%3A%3AXWhois">more...</a><br>
By <a href="http://perlmonks.org/">perlmonks.org</a></small>
</div>
</div>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>New&nbsp;</td><td style="text-align:right"> 6</td></tr>
<tr><td>Open&nbsp;</td><td style="text-align:right"> 1</td></tr>
</table>
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=Net-XWhois">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  0.90 &nbsp;
<span class="noprint">
  <a href="/src/VIPUL/Net-XWhois-0.90/lib/Net/XWhois.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <li class='indexItem indexItem1'><a href='#CONSTRUCTOR'>CONSTRUCTOR</a>
  <li class='indexItem indexItem1'><a href='#CLASS_DATA_&#38;_ACCESS_METHODS'>CLASS DATA &#38; ACCESS METHODS</a>
  <li class='indexItem indexItem1'><a href='#OBJECT_METHODS'>OBJECT METHODS</a>
  <li class='indexItem indexItem1'><a href='#EXAMPLES'>EXAMPLES</a>
  <li class='indexItem indexItem1'><a href='#AUTHOR'>AUTHOR</a>
  <li class='indexItem indexItem1'><a href='#THANKS'>THANKS</a>
  <li class='indexItem indexItem1'><a href='#MAILING_LIST'>MAILING LIST</a>
  <li class='indexItem indexItem1'><a href='#SEE_ALSO'>SEE ALSO</a>
  <li class='indexItem indexItem1'><a href='#COPYRIGHT'>COPYRIGHT</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Net::XWhois - Whois Client Interface for Perl5.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl"> use Net::XWhois;

 $whois = new Net::XWhois Domain =&#62; &#34;vipul.net&#34; ;
 $whois = new Net::XWhois Domain =&#62; &#34;bit.ch&#34;,
                          Server =&#62; &#34;domreg.nic.ch&#34;,
                          Retain =&#62; 1,
                          Parser =&#62; {
                             nameservers =&#62; &#39;nserver:\s+(\S+)&#39;,
                          };</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>The Net::XWhois class provides a generic client framework for doing Whois queries and parsing server response.</p>

<p>The class maintains an array of top level domains and whois servers associated with them. This allows the class to transparently serve requests for different tlds, selecting servers appropriate for the tld. The server details are, therefore, hidden from the user and &#34;vipul.net&#34; (from InterNIC), gov.ru (from RIPE) and &#34;bit.ch&#34; (from domreg.nic.ch) are queried in the same manner. This behaviour can be overridden by specifying different bindings at object construction or by registering associations with the class. See <a href="#register_associations()" class="podlinkpod"
>&#34;register_associations()&#34;</a> and <a href="#new()" class="podlinkpod"
>&#34;new()&#34;</a>.</p>

<p>One of the more important goals of this module is to enable the design of consistent and predictable interfaces to incompatible whois response formats. The Whois RFC (954) does not define a template for presenting server data; consequently there is a large variation in layout styles as well as content served across servers.</p>

<p>(There is, however, a new standard called RPSL (RFC2622) used by RIPE (<a href="http://www.ripe.net" class="podlinkurl"
>http://www.ripe.net</a>), the European main whois server.)</p>

<p>To overcome this, Net::XWhois maintains another set of tables - parsing rulesets - for a few, popular response formats. (See <a href="#%PARSERS" class="podlinkpod"
>&#34;%PARSERS&#34;</a>). These parsing tables contain section names (labels) together with regular expressions that <i>match</i> the corresponding section text. The section text is accessed &#34;via&#34; labels which are available as data instance methods at runtime. By following a consistent nomenclature for labels, semantically related information encoded in different formats can be accessed with the same methods.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="CONSTRUCTOR"
>CONSTRUCTOR <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<dl>
<dt><a name='new'></a><a name="new_()"
>new ()</a></dt>

<dd>
<p>Creates a Net::XWhois object. Takes an optional argument, a hash, that specifies the domain name to be queried. Calls lookup() if a name is provided. The argument hash can also specify a whois server, a parsing rule-set or a parsing rule-set format. (See <a href="#personality()" class="podlinkpod"
>&#34;personality()&#34;</a>). Omitting the argument will create an &#34;empty&#34; object that can be used for accessing class data.</p>

<dt><a name='personality'></a><a name="personality_()"
>personality ()</a></dt>

<dd>
<p>Alters an object&#39;s personality. Takes a hash with following arguments. (Note: These arguments can also be passed to the constructor).</p>

<dl>
<dt><a name="Domain"
><b>Domain</b></a></dt>

<dd>
<p>Domain name to be queried.</p>

<dt><a name="Server"
><b>Server</b></a></dt>

<dd>
<p>Server to query.</p>

<dt><a name="Parser"
><b>Parser</b></a></dt>

<dd>
<p>Parsing Rule-set. See <a href="#%PARSERS" class="podlinkpod"
>&#34;%PARSERS&#34;</a>.</p>

<pre class="sh_perl"> Parser =&#62; {
   name            =&#62; &#39;domain:\s+(\S+)\n&#39;,
   nameservers     =&#62; &#39;nserver:\s+(\S+)&#39;,
   contact_emails  =&#62; &#39;e-mail:\s+(\S+\@\S+)&#39;,
 };</pre>

<dt><a name="Format"
><b>Format</b></a></dt>

<dd>
<p>A pre-defined parser format like INTERNIC, INTERNIC_FORMAT, RIPE, RIPE_CH, JAPAN etc.</p>

<pre class="sh_perl"> Format =&#62; &#39;INTERNIC_CONTACT&#39;,</pre>

<dt><a name="Nocache"
><b>Nocache</b></a></dt>

<dd>
<p>Force XWhois to ignore the cached records.</p>

<dt><a name="Error"
><b>Error</b></a></dt>

<dd>
<p>Determines how a network connection error is handled. By default Net::XWhois will croak() if it can&#39;t connect to the whois server. The Error attribute specifies a function call name that will be invoked when a network connection error occurs. Possible values are croak, carp, confess (imported from Carp.pm) and ignore (a blank function provided by Net::XWhois). You can, of course, write your own function to do error handling, in which case you&#39;d have to provide a fully qualified function name. Example: main::logerr.</p>

<dt><a name="Timeout"
><b>Timeout</b></a></dt>

<dd>
<p>Timeout value for establishing a network connection with the server. The default value is 60 seconds.</p>
</dd>
</dl>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="CLASS_DATA_&#38;_ACCESS_METHODS"
>CLASS DATA &#38; ACCESS METHODS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<dl>
<dt><a name='PARSERS'></a><a name="%PARSERS"
>%PARSERS</a></dt>

<dd>
<p>An associative array that contains parsing rule-sets for various response formats. Keys of this array are format names and values are hash refs that contain section labels and corresponding parser code. The parser code can either be a regex or a reference to a subroutine. In the case of a subroutine, the whois &#39;response&#39; information is available to the sub in $_[0]. Parsers can be added and extended with the register_parser() method. Also see <a href="#Data_Instance_Methods" class="podlinkpod"
>&#34;Data Instance Methods&#34;</a>.</p>

<pre class="sh_perl">  my %PARSERS  = (
   INTERNIC =&#62; {
    contact_tech    =&#62; &#39;Technical Contact.*?\n(.*?)(?=\...
    contact_zone    =&#62; &#39;Zone Contact.*?\n(.*?)(?=\s*\n[...
    contact_billing =&#62; &#39;Billing Contact.*?\n(.*?)(?=\s*...
    contact_emails  =&#62; \&#38;example_email_parser
  },
  { etc. ... },
 );

 sub example_email_parser {

     # Note that the default internal implemenation for
     # the INTERNIC parser is not a user-supplied code
     # block.  This is just an instructive example.

     my @matches = $_[0] =~ /(\S+\@\S+)/sg;
     return @matches;
 }</pre>

<p>See XWhois.pm for the complete definition of %PARSERS.</p>

<dt><a name='WHOIS_PARSER'></a><a name="%WHOIS_PARSER"
>%WHOIS_PARSER</a></dt>

<dd>
<p>%WHOIS_PARSER is a table that associates each whois server with their output format.</p>

<pre class="sh_perl">    my %WHOIS_PARSER = (
    &#39;whois.ripe.net&#39;       =&#62; &#39;RPSL&#39;,
    &#39;whois.nic.mil&#39;        =&#62; &#39;INTERNIC&#39;,
    &#39;whois.nic.ad.jp&#39;      =&#62; &#39;JAPAN&#39;,
    &#39;whois.domainz.net.nz&#39; =&#62; &#39;GENERIC&#39;,
    &#39;whois.nic.gov&#39;        =&#62; &#39;INTERNIC&#39;,
    &#39;whois.nic.ch&#39;         =&#62; &#39;RIPE_CH&#39;,
    &#39;whois.twnic.net&#39;      =&#62; &#39;TAIWAN&#39;,
    &#39;whois.internic.net&#39;   =&#62; &#39;INTERNIC&#39;,
    &#39;whois.nic.net.sg&#39;     =&#62; &#39;RIPE&#39;,
    &#39;whois.aunic.net&#39;      =&#62; &#39;RIPE&#39;,
    &#39;whois.cdnnet.ca&#39;      =&#62; &#39;CANADA&#39;,
    &#39;whois.nic.uk&#39;         =&#62; &#39;INTERNIC&#39;,
    &#39;whois.krnic.net&#39;      =&#62; &#39;KOREA&#39;,
    &#39;whois.isi.edu&#39;        =&#62; &#39;INTERNIC&#39;,
    &#39;whois.norid.no&#39;       =&#62; &#39;RPSL&#39;,
        ( etc.....)</pre>

<p>Please note that there is a plethora of output formats, allthough there are RFCs on this issue, like for instance RFC2622, there are numerous different formats being used!</p>

<dt><a name='DOMAIN_ASSOC'></a><a name="%DOMAIN_ASSOC"
>%DOMAIN_ASSOC</a></dt>

<dd>
<p>%DOMAIN_ASSOC is a table that associates top level domain names with their respective whois servers. You&#39;d need to modity this table if you wish to extend the module&#39;s functionality to handle a new set of domain names. Or alter existing information. <i>register_association()</i> provides an interface to this array. See XWhois.pm for the complete definition.</p>

<pre class="sh_perl">    my %DOMAIN_ASSOC = (
    &#39;al&#39; =&#62; &#39;whois.ripe.net&#39;,
    &#39;am&#39; =&#62; &#39;whois.ripe.net&#39;,
    &#39;at&#39; =&#62; &#39;whois.ripe.net&#39;,
    &#39;au&#39; =&#62; &#39;whois.aunic.net&#39;,
    &#39;az&#39; =&#62; &#39;whois.ripe.net&#39;,
    &#39;ba&#39; =&#62; &#39;whois.ripe.net&#39;,
    &#39;be&#39; =&#62; &#39;whois.ripe.net&#39;,</pre>

<dt><a name='register_parser'></a><a name="register_parser()"
>register_parser()</a></dt>

<dd>
<p>Extend, modify and override entries in %PARSERS. Accepts a hash with three keys - Name, Retain and Parser. If the format definition for the specified format exists and the Retain key holds a true value, the keys from the specified Parser are added to the existing definition. A new definition is created when Retain is false/not specified.</p>

<pre class="sh_perl"> my $w = new Net::Whois;
 $w-&#62;register_parser (
    Name   =&#62; &#34;INTERNIC&#34;,
    Retain =&#62; 1,
    Parser =&#62; {
        creation_time =&#62; &#39;created on (\S*?)\.\n&#39;,
        some_randome_entity =&#62; \&#38;random_entity_subroutine
    };</pre>

<p>Instructions on how to create a workable random_entity_subroutine are availabe in the <i>%PARSERS</i> description, above.</p>

<dt><a name='register_association'></a><a name="register_association()"
>register_association()</a></dt>

<dd>
<p>Override and add entries to %ASSOC. Accepts a hash that contains representation specs for a whois server. The keys of this hash are server machine names and values are list-refs to the associated response formats and the top-level domains handled by the servers. See Net/XWhois.pm for more details.</p>

<pre class="sh_perl"> my $w = new Net::XWhois;
 $w-&#62;register_association (
     &#39;whois.aunic.net&#39; =&#62; [ RIPE, [ qw/au/ ] ]
 );</pre>

<dt><a name='register_cache'></a><a name="register_cache()"
>register_cache()</a></dt>

<dd>
<p>By default, Net::XWhois caches all whois responses and commits them, as separate files, to /tmp/whois. register_cache () gets and sets the cache directory. Setting to &#34;undef&#34; will disable caching.</p>

<pre class="sh_perl"> $w-&#62;register_cache ( &#34;/some/place/else&#34; );
 $w-&#62;register_cache ( undef );</pre>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="OBJECT_METHODS"
>OBJECT METHODS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<dl>
<dt><a name='Data'></a><a name="Data_Instance_Methods"
><b>Data Instance Methods</b></a></dt>

<dd>
<p>Access to the whois response data is provided via AUTOLOADED methods specified in the Parser. The methods return scalar or list data depending on the context.</p>

<p>Internic Parser provides the following methods:</p>

<dl>
<dt><a name='name'></a><a name="name()"
><b>name()</b></a></dt>

<dd>
<p>Domain name.</p>

<dt><a name='status'></a><a name="status()"
><b>status()</b></a></dt>

<dd>
<p>Domain Status when provided. When the domain is on hold, this method will return &#34;On Hold&#34; string.</p>

<dt><a name='nameservers'></a><a name="nameservers()"
><b>nameservers()</b></a></dt>

<dd>
<p>Nameservers along with their IPs.</p>

<dt><a name="registrant"
><b>registrant</b></a></dt>

<dd>
<p>Registrant&#39;s name and address.</p>

<dt><a name='contact_admin'></a><a name="contact_admin()"
><b>contact_admin()</b></a></dt>

<dd>
<p>Administrative Contact.</p>

<dt><a name='contact_tech'></a><a name="contact_tech()"
><b>contact_tech()</b></a></dt>

<dd>
<p>Technical Contact.</p>

<dt><a name='contact_zone'></a><a name="contact_zone()"
><b>contact_zone()</b></a></dt>

<dd>
<p>Zone Contact.</p>

<dt><a name='contact_billing'></a><a name="contact_billing()"
><b>contact_billing()</b></a></dt>

<dd>
<p>Billing Contact.</p>

<dt><a name='contact_emails'></a><a name="contact_emails()"
><b>contact_emails()</b></a></dt>

<dd>
<p>List of email addresses of contacts.</p>

<dt><a name='contact_handles'></a><a name="contact_handles()"
><b>contact_handles()</b></a></dt>

<dd>
<p>List of contact handles in the response. Contact and Domain handles are valid query data that can be used instead of contact and domain names.</p>

<dt><a name='domain_handles'></a><a name="domain_handles()"
><b>domain_handles()</b></a></dt>

<dd>
<p>List of domain handles in the response. Can be used for sorting out reponses that contain multiple domain names.</p>
</dd>
</dl>

<dt><a name='lookup'></a><a name="lookup()"
><b>lookup()</b></a></dt>

<dd>
<p>Does a whois lookup on the specified domain. Takes the same arguments as new().</p>

<pre class="sh_perl"> my $w = new Net::XWhois;
 $w-&#62;lookup ( Domain =&#62; &#34;perl.com&#34; );
 print $w-&#62;response ();</pre>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="EXAMPLES"
>EXAMPLES <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Look at example programs that come with this package. &#34;whois&#34; is a replacement for the standard RIPE/InterNIC whois client. &#34;creation&#34; overrides the Parser value at object init and gets the Creation Time of an InterNIC domain. &#34;creation2&#34; does the same thing by extending the Class Parser. &#34;contacts&#34; queries and prints information about domain&#39;s Tech/Billing/Admin contacts.</p>

<p>contribs/ containts parsers for serveral whois servers, which have not been patched into the module.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHOR"
>AUTHOR <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Vipul Ved Prakash &#60;mail@vipul.net&#62;</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="THANKS"
>THANKS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Curt Powell &#60;curt.powell@sierraridge.com&#62;, Matt Spiers &#60;matt@pavilion.net&#62;, Richard Dice &#60;rdice@pobox.com&#62;, Robert Chalmers &#60;robert@chalmers.com.au&#62;, Steinar Overbeck Cook &#60;steinar@balder.no&#62;, Steve Weathers &#60;steve@domainit.com&#62;, Robert Puettmann &#60;rpuettmann@ipm.net&#62;, Martin H . Sluka&#34; &#60;martin@sluka.de&#62;, Rob Woodard &#60;rwoodard15@attbi.com&#62;, Jon Gilbert, Erik Aronesty for patches, bug-reports and many cogent suggestions.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="MAILING_LIST"
>MAILING LIST <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Net::XWhois development has moved to the sourceforge mailing list, xwhois-devel@lists.sourceforge.net. Please send all Net::XWhois related communication directly to the list address. The subscription interface is at: <a href="http://lists.sourceforge.net/mailman/listinfo/xwhois-devel" class="podlinkurl"
>http://lists.sourceforge.net/mailman/listinfo/xwhois-devel</a></p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SEE_ALSO"
>SEE ALSO <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl"> RFC 954  &#60;<a href="http://www.faqs.org/rfcs/rfc954.html" class="podlinkurl"
>http://www.faqs.org/rfcs/rfc954.html</a>&#62;
 RFC 2622 &#60;<a href="http://www.faqs.org/rfcs/rfc2622.html" class="podlinkurl"
>http://www.faqs.org/rfcs/rfc2622.html</a>&#62;</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="COPYRIGHT"
>COPYRIGHT <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Copyright (c) 1998-2001 Vipul Ved Prakash. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78254 Uploads, 24722 Distributions
105996 Modules, 9649 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Fri Apr 27 09:06:07 2012 GMT (0.109838962554932) @cpansearch1 -->
 </body>
</html>
