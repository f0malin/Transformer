<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>ifdef - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","ifdef",3]);
    _gaq.push(["_setCustomVar",5,"Release","ifdef-0.09",3]);
    _gaq.push(["_setCustomVar",3,"Module","ifdef",3]);
    _gaq.push(["_setCustomVar",1,"Author","ELIZABETH",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?ifdef">permalink</a></div>
  <a href="/~elizabeth/">Elizabeth Mattijsen</a> &gt;
  <a href="/~elizabeth/ifdef-0.09/">ifdef-0.09</a> &gt;
  ifdef
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/f6f8083d758244cb1b1df1997adc1791?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/E/EL/ELIZABETH/ifdef-0.09.tar.gz">ifdef-0.09.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=ifdef;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~ELIZABETH/ifdef-0.09/lib/ifdef.pm">Annotate this POD
</a></p>

<div style="float:right">
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=ifdef">View/Report Bugs</a><br/>

</div>
</div>
  Module Version:  0.09 &nbsp;
<span class="noprint">
  <a href="/src/ELIZABETH/ifdef-0.09/lib/ifdef.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#VERSION'>VERSION</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <li class='indexItem indexItem1'><a href='#WHY?'>WHY?</a>
  <li class='indexItem indexItem1'><a href='#REQUIRED_MODULES'>REQUIRED MODULES</a>
  <li class='indexItem indexItem1'><a href='#IMPLEMENTATION'>IMPLEMENTATION</a>
  <li class='indexItem indexItem1'><a href='#CAVEATS'>CAVEATS</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#Overhead_during_development'>Overhead during development</a>
    <li class='indexItem indexItem2'><a href='#No_changing_of_environment_variables_during_execution'>No changing of environment variables during execution</a>
    <li class='indexItem indexItem2'><a href='#Modules_that_use_AutoLoader,_SelfLoader,_load,_etc.'>Modules that use AutoLoader, SelfLoader, load, etc.</a>
    <li class='indexItem indexItem2'><a href='#Doesn&#39;t_seem_to_work_on_mod_perl'>Doesn&#39;t seem to work on mod_perl</a>
    <li class='indexItem indexItem2'><a href='#API_FOR_AUTOLOADING_MODULES'>API FOR AUTOLOADING MODULES</a>
    <ul   class='indexList indexList3'>
      <li class='indexItem indexItem3'><a href='#process'>process</a>
      <li class='indexItem indexItem3'><a href='#reset'>reset</a>
      <li class='indexItem indexItem3'><a href='#oneline'>oneline</a>
    </ul>
  </ul>
  <li class='indexItem indexItem1'><a href='#MODULE_RATING'>MODULE RATING</a>
  <li class='indexItem indexItem1'><a href='#ACKNOWLEDGEMENTS'>ACKNOWLEDGEMENTS</a>
  <li class='indexItem indexItem1'><a href='#RELATED_MODULES'>RELATED MODULES</a>
  <li class='indexItem indexItem1'><a href='#AUTHOR'>AUTHOR</a>
  <li class='indexItem indexItem1'><a href='#COPYRIGHT'>COPYRIGHT</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>ifdef - conditionally enable text within pod sections as code</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">  export DEBUGGING=1
  perl -Mifdef yourscript.pl

 or:

  perl -Mifdef=VERBOSE yourscript.pl

 or:

  perl -Mifdef=all yourscript.pl

 with:

  ======= yourscript.pl ================================================

  # code that&#39;s always compiled and executed

  =begin DEBUGGING

  warn &#34;Only compiled and executed when DEBUGGING or &#39;all&#39; enabled\n&#34;

  =begin VERBOSE

  warn &#34;Only compiled and executed when VERBOSE or &#39;all&#39; enabled\n&#34;

  =cut

  # code that&#39;s always compiled and executed

  # BEGINNING compiled and executed when BEGINNING enabled

  ======================================================================</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="VERSION"
>VERSION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This documentation describes version 0.09.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>The &#34;ifdef&#34; pragma allows a developer to add sections of code that will be compiled and executed only when the &#34;ifdef&#34; pragma is specifically enabled. If the &#34;ifdef&#34; pragma is not enabled, then there is <b>no</b> overhead involved in either compilation of execution (other than the standard overhead of Perl skipping =pod sections).</p>

<p>To prevent interference with other pod handlers, the name of the pod handler <b>must</b> be in uppercase.</p>

<p>If a =begin pod section is considered for replacement, then a scope is created around that pod section so that there is no interference with any of the code around it. For example:</p>

<pre class="sh_perl"> my $foo= 2;

 =begin DEBUGGING

 my $foo= 1;
 warn &#34;debug foo = $foo\n&#34;;

 =cut

 warn &#34;normal foo = $foo\n&#34;;</pre>

<p>is converted on the fly (before Perl compiles it) to:</p>

<pre class="sh_perl"> my $foo= 2;

 {

 my $foo= 1;
 warn &#34;foo = $foo\n&#34;;

 }

 warn &#34;normal foo = $foo\n&#34;;</pre>

<p>But of course, this happens <b>only</b> if the &#34;ifdef&#34; pragma is loaded <b>and</b> the environment variable <b>DEBUGGING</b> is set.</p>

<p>As a shortcut for only single lines of code, you can also specify a single line of code inside a commented line:</p>

<pre class="sh_perl"> # DEBUGGING print &#34;we&#39;re in debugging mode now\n&#34;;</pre>

<p>will only print the string &#34;we&#39;re in debugging mode now\n&#34; when the environment variable <b>DEBUGGING</b> is set. Please note that the &#39;all&#39; flag is ignored in this case, as there is too much standard code out there that uses all uppercase markers at the beginning of an inline comment which cause compile errors if they would be enabled.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="WHY?"
>WHY? <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>One day, I finally had enough of always putting in and taking out debug statements from modules I was developing. I figured there had to be a better way to do this. Now, this module allows to leave debugging code inside your programs and only have them come alive when <i>you</i> want them to be alive. <i>Without any run-time penalties when you&#39;re in production</i>.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="REQUIRED_MODULES"
>REQUIRED MODULES <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl"> Filter::Util::Call (any)
 IO::File (any)</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="IMPLEMENTATION"
>IMPLEMENTATION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This version is completely written in Perl. It uses a source filter to provide its magic to the script being run <b>and</b> an @INC handler for all of the modules that are loaded otherwise. Because the pod directives are ignored by Perl during normal compilation, the source filter is <b>not</b> needed for production use so there will be <b>no</b> performance penalty in that case.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="CAVEATS"
>CAVEATS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Overhead_during_development"
>Overhead during development</a></h2>

<p>Because the &#34;ifdef&#34; pragma uses a source filter for the invoked script, and an @INC handler for all further required files, there is an inherent overhead for compiling Perl source code. Not loading ifdef.pm at all, causes the normal pod section ignoring functionality of Perl to come in place (without any added overhead).</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="No_changing_of_environment_variables_during_execution"
>No changing of environment variables during execution</a></h2>

<p>Since the &#34;ifdef&#34; pragma performs all of this magic at compile time, it generally does not make sense to change the values of applicable environment variables at execution, as there will be no compiled code available to activate.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Modules_that_use_AutoLoader,_SelfLoader,_load,_etc."
>Modules that use AutoLoader, SelfLoader, load, etc.</a></h2>

<p>For the moment, these modules bypass the mechanism of this module. An interface with load.pm is on the TODO list. Patches for other autoloading modules are welcomed.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Doesn&#39;t_seem_to_work_on_mod_perl"
>Doesn&#39;t seem to work on mod_perl</a></h2>

<p>Unfortunately, there still seem to be problems with getting this module to work reliably under mod_perl.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="API_FOR_AUTOLOADING_MODULES"
>API FOR AUTOLOADING MODULES</a></h2>

<p>The following subroutines are available for doing your own processing, e.g. for inclusion in your own AUTOLOADing modules. The subroutines are <b>not</b> exported: if you want to use them in your own namespace, you will need to import them yourself thusly:</p>

<pre class="sh_perl"> *myprocess = \&#38;ifdef::process;</pre>

<p>would import the &#34;ifdef::process&#34; subroutine as &#34;myprocess&#34; in your namespace..</p>

<h3><a class='u' href='#___top' title='click to go to top of document'
name="process"
>process</a></h3>

<pre class="sh_perl"> ifdef::process( $direct );

 $processed = ifdef::process( $original );</pre>

<p>The &#34;process&#34; subroutine allows you process a given string of source code and have it processed in the same manner as which the source filter / @INC handler of &#34;ifdef.pm&#34; would do.</p>

<p>There are two modes of calling: if called in a void context, it will process the string and put the result in place. An alternate method allows you to keep a copy: if called in scalar or list context, the processed string will be returned.</p>

<p>See <a href="#oneline" class="podlinkpod"
>&#34;oneline&#34;</a> of you want to process line by line.</p>

<h3><a class='u' href='#___top' title='click to go to top of document'
name="reset"
>reset</a></h3>

<pre class="sh_perl"> &#38;ifdef::reset;</pre>

<p>The &#34;reset&#34; subroutine is needed only if you&#39;re doing your own processing with the <a href="#oneline" class="podlinkpod"
>&#34;oneline&#34;</a> subroutine. It resets the internal variables so that no state of previous calls to <a href="#process" class="podlinkpod"
>&#34;process&#34;</a> (or the internally called source filter or @INC handler) will remain.</p>

<h3><a class='u' href='#___top' title='click to go to top of document'
name="oneline"
>oneline</a></h3>

<pre class="sh_perl"> &#38;ifdef::oneline;</pre>

<p>The &#34;oneline&#34; subroutine does just that: it process a single line of source code. The line of source to be processed is expected to be in <b>$_</b>. The processed line will be stored in <b>$_</b> as well. So there are no input or output parameters.</p>

<p>See <a href="#process" class="podlinkpod"
>&#34;process&#34;</a> of you want to a string consisting of many lines in one go.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="MODULE_RATING"
>MODULE RATING <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>If you want to find out how this module is appreciated by other people, please check out this module&#39;s rating at <a href="http://cpanratings.perl.org/i/ifdef" class="podlinkurl"
>http://cpanratings.perl.org/i/ifdef</a> (if there are any ratings for this module). If you like this module, or otherwise would like to have your opinion known, you can add your rating of this module at <a href="http://cpanratings.perl.org/rate/?distribution=ifdef" class="podlinkurl"
>http://cpanratings.perl.org/rate/?distribution=ifdef</a>.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="ACKNOWLEDGEMENTS"
>ACKNOWLEDGEMENTS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Nick Kostirya for the idea of activating single line comments.</p>

<p>Konstantin Tokar for pointing out problems with empty code code blocks and inline comments when the &#34;all&#34; flag was specified. And providing patches!</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="RELATED_MODULES"
>RELATED MODULES <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>It would appear that Damian Conway&#39;s <a href="/perldoc?Smart%3A%3AComments" class="podlinkpod"
>Smart::Comments</a> is scratching the same itch I had when I implemented this module a long time ago.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHOR"
>AUTHOR <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Elizabeth Mattijsen, &#60;liz@dijkmat.nl&#62;.</p>

<p>Please report bugs to &#60;perlbugs@dijkmat.nl&#62;.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="COPYRIGHT"
>COPYRIGHT <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Copyright (c) 2004, 2005, 2012 Elizabeth Mattijsen &#60;liz@dijkmat.nl&#62;. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78252 Uploads, 24722 Distributions
106026 Modules, 9649 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Thu Apr 26 17:28:45 2012 GMT (0.0719079971313477) @cpansearch1 -->
 </body>
</html>
