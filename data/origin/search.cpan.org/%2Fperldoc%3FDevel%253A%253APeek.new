<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>Devel::Peek - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","Devel-Peek",3]);
    _gaq.push(["_setCustomVar",5,"Release","Devel-Peek-0.96",3]);
    _gaq.push(["_setCustomVar",3,"Module","Devel::Peek",3]);
    _gaq.push(["_setCustomVar",1,"Author","ILYAZ",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?Devel::Peek">permalink</a></div>
  <a href="/~ilyaz/">Ilya Zakharevich</a> &gt;
  <a href="/~ilyaz/Devel-Peek-0.96/">Devel-Peek-0.96</a> &gt;
  Devel::Peek
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/e90ba719ee073073ffd29b58ad53b8b7?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/I/IL/ILYAZ/modules/Devel-Peek-0.96.tar.gz">modules/Devel-Peek-0.96.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=Devel%3A%3APeek;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~ILYAZ/Devel-Peek-0.96/Peek.pm">Annotate this POD
</a></p>
<div class=box style='width:150px; float: right'>
<h1 class=t5>Related Modules</h1>
<div style="margin:2px">
<a href="/perldoc?Data%3A%3ADumper">Data::Dumper</a><br>
<a href="/perldoc?CGI%3A%3AApplication">CGI::Application</a><br>
<a href="/perldoc?Inline%3A%3AC">Inline::C</a><br>
<a href="/perldoc?Devel%3A%3ASize">Devel::Size</a><br>
<a href="/perldoc?Devel%3A%3ALeak">Devel::Leak</a><br>
<a href="/perldoc?HTML%3A%3ATokeParser">HTML::TokeParser</a><br>
<a href="/perldoc?Scalar%3A%3AUtil">Scalar::Util</a><br>
<a href="/perldoc?HTML%3A%3AEntities">HTML::Entities</a><br>
<a href="/perldoc?Net%3A%3ASNMP">Net::SNMP</a><br>
<a href="/perldoc?XML%3A%3ATwig">XML::Twig</a><br>
<small>
<a href="http://perlmonks.org/?node=cpan+module+search&pivot=1&module=Devel%3A%3APeek">more...</a><br>
By <a href="http://perlmonks.org/">perlmonks.org</a></small>
</div>
</div>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>Open&nbsp;</td><td style="text-align:right"> 1</td></tr>
</table>
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=Devel-Peek">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  0.96 &nbsp;
<span class="noprint">
  <a href="/src/ILYAZ/Devel-Peek-0.96/Peek.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <li class='indexItem indexItem1'><a href='#EXAMPLES'>EXAMPLES</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#A_simple_scalar_string'>A simple scalar string</a>
    <li class='indexItem indexItem2'><a href='#A_simple_scalar_number'>A simple scalar number</a>
    <li class='indexItem indexItem2'><a href='#A_simple_scalar_with_an_extra_reference'>A simple scalar with an extra reference</a>
    <li class='indexItem indexItem2'><a href='#A_reference_to_a_simple_scalar'>A reference to a simple scalar</a>
    <li class='indexItem indexItem2'><a href='#A_reference_to_an_array'>A reference to an array</a>
    <li class='indexItem indexItem2'><a href='#A_reference_to_a_hash'>A reference to a hash</a>
    <li class='indexItem indexItem2'><a href='#Dumping_a_large_array_or_hash'>Dumping a large array or hash</a>
    <li class='indexItem indexItem2'><a href='#A_reference_to_an_SV_which_holds_a_C_pointer'>A reference to an SV which holds a C pointer</a>
    <li class='indexItem indexItem2'><a href='#A_reference_to_a_subroutine'>A reference to a subroutine</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#EXPORTS'>EXPORTS</a>
  <li class='indexItem indexItem1'><a href='#BUGS'>BUGS</a>
  <li class='indexItem indexItem1'><a href='#SEE_ALSO'>SEE ALSO</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Devel::Peek - A data debugging tool for the XS programmer</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">        use Devel::Peek;
        Dump( $a );
        Dump( $a, 5 );
        DumpArray( 5, $a, $b, ... );
        mstat &#34;Point 5&#34;;</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Devel::Peek contains functions which allows raw Perl datatypes to be manipulated from a Perl script. This is used by those who do XS programming to check that the data they are sending from C to Perl looks as they think it should look. The trick, then, is to know what the raw datatype is supposed to look like when it gets to Perl. This document offers some tips and hints to describe good and bad raw data.</p>

<p>It is very possible that this document will fall far short of being useful to the casual reader. The reader is expected to understand the material in the first few sections of <a href="/perldoc?perlguts" class="podlinkpod"
>perlguts</a>.</p>

<p>Devel::Peek supplies a <code>Dump()</code> function which can dump a raw Perl datatype, and <code>mstat(&#34;marker&#34;)</code> function to report on memory usage (if perl is compiled with corresponding option). The function DeadCode() provides statistics on the data &#34;frozen&#34; into inactive <code>CV</code>. Devel::Peek also supplies <code>SvREFCNT()</code>, <code>SvREFCNT_inc()</code>, and <code>SvREFCNT_dec()</code> which can query, increment, and decrement reference counts on SVs. This document will take a passive, and safe, approach to data debugging and for that it will describe only the <code>Dump()</code> function.</p>

<p>Function <code>DumpArray()</code> allows dumping of multiple values (useful when you need to analize returns of functions).</p>

<p>The global variable $Devel::Peek::pv_limit can be set to limit the number of character printed in various string values. Setting it to 0 means no limit.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="EXAMPLES"
>EXAMPLES <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>The following examples don&#39;t attempt to show everything as that would be a monumental task, and, frankly, we don&#39;t want this manpage to be an internals document for Perl. The examples do demonstrate some basics of the raw Perl datatypes, and should suffice to get most determined people on their way. There are no guidewires or safety nets, nor blazed trails, so be prepared to travel alone from this point and on and, if at all possible, don&#39;t fall into the quicksand (it&#39;s bad for business).</p>

<p>Oh, one final bit of advice: take <a href="/perldoc?perlguts" class="podlinkpod"
>perlguts</a> with you. When you return we expect to see it well-thumbed.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="A_simple_scalar_string"
>A simple scalar string</a></h2>

<p>Let&#39;s begin by looking a simple scalar which is holding a string.</p>

<pre class="sh_perl">        use Devel::Peek &#39;Dump&#39;;
        $a = &#34;hello&#34;;
        Dump $a;</pre>

<p>The output:</p>

<pre class="sh_perl">        SV = PVIV(0xbc288)
          REFCNT = 1
          FLAGS = (POK,pPOK)
          IV = 0
          PV = 0xb2048 &#34;hello&#34;\0
          CUR = 5
          LEN = 6</pre>

<p>This says <code>$a</code> is an SV, a scalar. The scalar is a PVIV, a string. Its reference count is 1. It has the <code>POK</code> flag set, meaning its current PV field is valid. Because POK is set we look at the PV item to see what is in the scalar. The \0 at the end indicate that this PV is properly NUL-terminated. If the FLAGS had been IOK we would look at the IV item. CUR indicates the number of characters in the PV. LEN indicates the number of bytes requested for the PV (one more than CUR, in this case, because LEN includes an extra byte for the end-of-string marker).</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="A_simple_scalar_number"
>A simple scalar number</a></h2>

<p>If the scalar contains a number the raw SV will be leaner.</p>

<pre class="sh_perl">        use Devel::Peek &#39;Dump&#39;;
        $a = 42;
        Dump $a;</pre>

<p>The output:</p>

<pre class="sh_perl">        SV = IV(0xbc818)
          REFCNT = 1
          FLAGS = (IOK,pIOK)
          IV = 42</pre>

<p>This says <code>$a</code> is an SV, a scalar. The scalar is an IV, a number. Its reference count is 1. It has the <code>IOK</code> flag set, meaning it is currently being evaluated as a number. Because IOK is set we look at the IV item to see what is in the scalar.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="A_simple_scalar_with_an_extra_reference"
>A simple scalar with an extra reference</a></h2>

<p>If the scalar from the previous example had an extra reference:</p>

<pre class="sh_perl">        use Devel::Peek &#39;Dump&#39;;
        $a = 42;
        $b = \$a;
        Dump $a;</pre>

<p>The output:</p>

<pre class="sh_perl">        SV = IV(0xbe860)
          REFCNT = 2
          FLAGS = (IOK,pIOK)
          IV = 42</pre>

<p>Notice that this example differs from the previous example only in its reference count. Compare this to the next example, where we dump <code>$b</code> instead of <code>$a</code>.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="A_reference_to_a_simple_scalar"
>A reference to a simple scalar</a></h2>

<p>This shows what a reference looks like when it references a simple scalar.</p>

<pre class="sh_perl">        use Devel::Peek &#39;Dump&#39;;
        $a = 42;
        $b = \$a;
        Dump $b;</pre>

<p>The output:</p>

<pre class="sh_perl">        SV = RV(0xf041c)
          REFCNT = 1
          FLAGS = (ROK)
          RV = 0xbab08
        SV = IV(0xbe860)
          REFCNT = 2
          FLAGS = (IOK,pIOK)
          IV = 42</pre>

<p>Starting from the top, this says <code>$b</code> is an SV. The scalar is an RV, a reference. It has the <code>ROK</code> flag set, meaning it is a reference. Because ROK is set we have an RV item rather than an IV or PV. Notice that Dump follows the reference and shows us what <code>$b</code> was referencing. We see the same <code>$a</code> that we found in the previous example.</p>

<p>Note that the value of <code>RV</code> coincides with the numbers we see when we stringify $b. The addresses inside RV() and IV() are addresses of <code>X***</code> structure which holds the current state of an <code>SV</code>. This address may change during lifetime of an SV.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="A_reference_to_an_array"
>A reference to an array</a></h2>

<p>This shows what a reference to an array looks like.</p>

<pre class="sh_perl">        use Devel::Peek &#39;Dump&#39;;
        $a = [42];
        Dump $a;</pre>

<p>The output:</p>

<pre class="sh_perl">        SV = RV(0xf041c)
          REFCNT = 1
          FLAGS = (ROK)
          RV = 0xb2850
        SV = PVAV(0xbd448)
          REFCNT = 1
          FLAGS = ()
          IV = 0
          NV = 0
          ARRAY = 0xb2048
          ALLOC = 0xb2048
          FILL = 0
          MAX = 0
          ARYLEN = 0x0
          FLAGS = (REAL)
        Elt No. 0 0xb5658
        SV = IV(0xbe860)
          REFCNT = 1
          FLAGS = (IOK,pIOK)
          IV = 42</pre>

<p>This says <code>$a</code> is an SV and that it is an RV. That RV points to another SV which is a PVAV, an array. The array has one element, element zero, which is another SV. The field <code>FILL</code> above indicates the last element in the array, similar to <code>$#$a</code>.</p>

<p>If <code>$a</code> pointed to an array of two elements then we would see the following.</p>

<pre class="sh_perl">        use Devel::Peek &#39;Dump&#39;;
        $a = [42,24];
        Dump $a;</pre>

<p>The output:</p>

<pre class="sh_perl">        SV = RV(0xf041c)
          REFCNT = 1
          FLAGS = (ROK)
          RV = 0xb2850
        SV = PVAV(0xbd448)
          REFCNT = 1
          FLAGS = ()
          IV = 0
          NV = 0
          ARRAY = 0xb2048
          ALLOC = 0xb2048
          FILL = 0
          MAX = 0
          ARYLEN = 0x0
          FLAGS = (REAL)
        Elt No. 0  0xb5658
        SV = IV(0xbe860)
          REFCNT = 1
          FLAGS = (IOK,pIOK)
          IV = 42
        Elt No. 1  0xb5680
        SV = IV(0xbe818)
          REFCNT = 1
          FLAGS = (IOK,pIOK)
          IV = 24</pre>

<p>Note that <code>Dump</code> will not report <i>all</i> the elements in the array, only several first (depending on how deep it already went into the report tree).</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="A_reference_to_a_hash"
>A reference to a hash</a></h2>

<p>The following shows the raw form of a reference to a hash.</p>

<pre class="sh_perl">        use Devel::Peek &#39;Dump&#39;;
        $a = {hello=&#62;42};
        Dump $a;</pre>

<p>The output:</p>

<pre class="sh_perl">        SV = RV(0xf041c)
          REFCNT = 1
          FLAGS = (ROK)
          RV = 0xb2850
        SV = PVHV(0xbd448)
          REFCNT = 1
          FLAGS = ()
          NV = 0
          ARRAY = 0xbd748
          KEYS = 1
          FILL = 1
          MAX = 7
          RITER = -1
          EITER = 0x0
        Elt &#34;hello&#34; =&#62; 0xbaaf0
        SV = IV(0xbe860)
          REFCNT = 1
          FLAGS = (IOK,pIOK)
          IV = 42</pre>

<p>This shows <code>$a</code> is a reference pointing to an SV. That SV is a PVHV, a hash. Fields RITER and EITER are used by <code><a href="/perldoc?each" class="podlinkpod"
>each</a></code>.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Dumping_a_large_array_or_hash"
>Dumping a large array or hash</a></h2>

<p>The <code>Dump()</code> function, by default, dumps up to 4 elements from a toplevel array or hash. This number can be increased by supplying a second argument to the function.</p>

<pre class="sh_perl">        use Devel::Peek &#39;Dump&#39;;
        $a = [10,11,12,13,14];
        Dump $a;</pre>

<p>Notice that <code>Dump()</code> prints only elements 10 through 13 in the above code. The following code will print all of the elements.</p>

<pre class="sh_perl">        use Devel::Peek &#39;Dump&#39;;
        $a = [10,11,12,13,14];
        Dump $a, 5;</pre>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="A_reference_to_an_SV_which_holds_a_C_pointer"
>A reference to an SV which holds a C pointer</a></h2>

<p>This is what you really need to know as an XS programmer, of course. When an XSUB returns a pointer to a C structure that pointer is stored in an SV and a reference to that SV is placed on the XSUB stack. So the output from an XSUB which uses something like the T_PTROBJ map might look something like this:</p>

<pre class="sh_perl">        SV = RV(0xf381c)
          REFCNT = 1
          FLAGS = (ROK)
          RV = 0xb8ad8
        SV = PVMG(0xbb3c8)
          REFCNT = 1
          FLAGS = (OBJECT,IOK,pIOK)
          IV = 729160
          NV = 0
          PV = 0
          STASH = 0xc1d10       &#34;CookBookB::Opaque&#34;</pre>

<p>This shows that we have an SV which is an RV. That RV points at another SV. In this case that second SV is a PVMG, a blessed scalar. Because it is blessed it has the <code>OBJECT</code> flag set. Note that an SV which holds a C pointer also has the <code>IOK</code> flag set. The <code>STASH</code> is set to the package name which this SV was blessed into.</p>

<p>The output from an XSUB which uses something like the T_PTRREF map, which doesn&#39;t bless the object, might look something like this:</p>

<pre class="sh_perl">        SV = RV(0xf381c)
          REFCNT = 1
          FLAGS = (ROK)
          RV = 0xb8ad8
        SV = PVMG(0xbb3c8)
          REFCNT = 1
          FLAGS = (IOK,pIOK)
          IV = 729160
          NV = 0
          PV = 0</pre>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="A_reference_to_a_subroutine"
>A reference to a subroutine</a></h2>

<p>Looks like this:</p>

<pre class="sh_perl">        SV = RV(0x798ec)
          REFCNT = 1
          FLAGS = (TEMP,ROK)
          RV = 0x1d453c
        SV = PVCV(0x1c768c)
          REFCNT = 2
          FLAGS = ()
          IV = 0
          NV = 0
          COMP_STASH = 0x31068  &#34;main&#34;
          START = 0xb20e0
          ROOT = 0xbece0
          XSUB = 0x0
          XSUBANY = 0
          GVGV::GV = 0x1d44e8   &#34;MY&#34; :: &#34;top_targets&#34;
          FILEGV = 0x1fab74     &#34;_&#60;(eval 5)&#34;
          DEPTH = 0
          PADLIST = 0x1c9338</pre>

<p>This shows that</p>

<ul>
<li>the subroutine is not an XSUB (since <code>START</code> and <code>ROOT</code> are non-zero, and <code>XSUB</code> is zero);</li>

<li>that it was compiled in the package <code>main</code>;</li>

<li>under the name <code>MY::top_targets</code>;</li>

<li>inside a 5th eval in the program;</li>

<li>it is not currently executed (see <code>DEPTH</code>);</li>

<li>it has no prototype (<code>PROTOTYPE</code> field is missing).
<blockquote></blockquote>
</li>
</ul>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="EXPORTS"
>EXPORTS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><code>Peek</code>, <code>mstats</code>, <code>DeadCode</code> by default. Additionally available <code>SvREFCNT</code>, <code>SvREFCNT_inc</code>, <code>SvREFCNT_dec</code>.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="BUGS"
>BUGS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Readers have been known to skip important parts of <a href="/perldoc?perlguts" class="podlinkpod"
>perlguts</a>, causing much frustration for all.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SEE_ALSO"
>SEE ALSO <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><a href="/perldoc?perlguts" class="podlinkpod"
>perlguts</a>, and <a href="/perldoc?perlguts" class="podlinkpod"
>perlguts</a>, again.</p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78276 Uploads, 24724 Distributions
106002 Modules, 9649 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Sat Apr 28 02:51:41 2012 GMT (0.110602855682373) @cpansearch1 -->
 </body>
</html>
