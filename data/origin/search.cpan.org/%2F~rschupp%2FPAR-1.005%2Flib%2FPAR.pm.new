<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>PAR - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","PAR",3]);
    _gaq.push(["_setCustomVar",5,"Release","PAR-1.005",3]);
    _gaq.push(["_setCustomVar",3,"Module","PAR",3]);
    _gaq.push(["_setCustomVar",1,"Author","RSCHUPP",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?PAR">permalink</a></div>
  <a href="/~rschupp/">Roderich Schupp</a> &gt;
  <a href="/~rschupp/PAR-1.005/">PAR-1.005</a> &gt;
  PAR
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/12f1ea5df52a78cb3a11495a66e92444?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/R/RS/RSCHUPP/PAR-1.005.tar.gz">PAR-1.005.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=PAR;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~RSCHUPP/PAR-1.005/lib/PAR.pm">Annotate this POD
(1)
</a></p>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>New&nbsp;</td><td style="text-align:right"> 6</td></tr>
<tr><td>Open&nbsp;</td><td style="text-align:right"> 16</td></tr>
<tr><td>Stalled&nbsp;</td><td style="text-align:right"> 3</td></tr>
</table>
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=PAR">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  1.004 &nbsp;
<span class="noprint">
  <a href="/src/RSCHUPP/PAR-1.005/lib/PAR.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <li class='indexItem indexItem1'><a href='#NOTES'>NOTES</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#import_options'>import options</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#SEE_ALSO'>SEE ALSO</a>
  <li class='indexItem indexItem1'><a href='#ACKNOWLEDGMENTS'>ACKNOWLEDGMENTS</a>
  <li class='indexItem indexItem1'><a href='#AUTHORS'>AUTHORS</a>
  <li class='indexItem indexItem1'><a href='#COPYRIGHT'>COPYRIGHT</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>PAR - Perl Archive Toolkit</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>(If you want to make an executable that contains all module,
scripts and data files,
please consult the <a href="/perldoc?pp" class="podlinkpod"
>pp</a> utility instead.
<a href="/perldoc?pp" class="podlinkpod"
>pp</a> used to be part of the PAR distribution but is now shipped as part of the <a href="/perldoc?PAR%3A%3APacker" class="podlinkpod"
>PAR::Packer</a> distribution instead.)</p>

<p>Following examples assume a <em>foo.par</em> file in Zip format.</p>

<p>To use <em>Hello.pm</em> from <em>./foo.par</em>:</p>

<pre class="sh_perl">    % perl -MPAR=./foo.par -MHello
    % perl -MPAR=./foo -MHello          # the .par part is optional</pre>

<p>Same thing, but search <em>foo.par</em> in the <code>@INC</code>;</p>

<pre class="sh_perl">    % perl -MPAR -Ifoo.par -MHello
    % perl -MPAR -Ifoo -MHello          # ditto</pre>

<p>Following paths inside the PAR file are searched:</p>

<pre class="sh_perl">    /lib/
    /arch/
    /i386-freebsd/              # i.e. $Config{archname}
    /5.8.0/                     # i.e. $Config{version}
    /5.8.0/i386-freebsd/        # both of the above
    /</pre>

<p>PAR files may also (recursively) contain other PAR files. All files under following paths will be considered as PAR files and searched as well:</p>

<pre class="sh_perl">    /par/i386-freebsd/          # i.e. $Config{archname}
    /par/5.8.0/                 # i.e. $Config{version}
    /par/5.8.0/i386-freebsd/    # both of the above
    /par/</pre>

<p>Run <em>script/test.pl</em> or <em>test.pl</em> from <em>foo.par</em>:</p>

<pre class="sh_perl">    % perl -MPAR foo.par test.pl        # only when $0 ends in &#39;.par&#39;</pre>

<p>However, if the <em>.par</em> archive contains either <em>script/main.pl</em> or <em>main.pl</em>, then it is used instead:</p>

<pre class="sh_perl">    % perl -MPAR foo.par test.pl        # runs main.pl; @ARGV is &#39;test.pl&#39;</pre>

<p>Use in a program:</p>

<pre class="sh_perl">    use PAR &#39;foo.par&#39;;
    use Hello; # reads within foo.par

    # PAR::read_file() returns a file inside any loaded PARs
    my $conf = PAR::read_file(&#39;data/MyConfig.yaml&#39;);

    # PAR::par_handle() returns an Archive::Zip handle
    my $zip = PAR::par_handle(&#39;foo.par&#39;)
    my $src = $zip-&#62;memberNamed(&#39;lib/Hello.pm&#39;)-&#62;contents;</pre>

<p>You can also use wildcard characters:</p>

<pre class="sh_perl">    use PAR &#39;/home/foo/*.par&#39;;  # loads all PAR files in that directory</pre>

<p>Since version 0.950, you can also use a different syntax for loading <em>.par</em> archives:</p>

<pre class="sh_perl">    use PAR { file =&#62; &#39;foo.par&#39; }, { file =&#62; &#39;otherfile.par&#39; };</pre>

<p>Why? Because you can also do this:</p>

<pre class="sh_perl">    use PAR { file =&#62; &#39;foo.par, fallback =&#62; 1 };
    use Foo::Bar;</pre>

<p>Foo::Bar will be searched in the system libs first and loaded from <em>foo.par</em> if it wasn&#39;t found!</p>

<pre class="sh_perl">    use PAR { file =&#62; &#39;foo.par&#39;, run =&#62; &#39;myscript&#39; };</pre>

<p>This will load <em>foo.par</em> as usual and then execute the <em>script/myscript</em> file from the archive. Note that your program will not regain control. When <em>script/myscript</em> exits, so does your main program. To make this more useful, you can defer this to runtime: (otherwise equivalent)</p>

<pre class="sh_perl">    require PAR;
    PAR-&#62;import( { file =&#62; &#39;foo.par&#39;, run =&#62; &#39;myscript&#39; } );</pre>

<p>If you have <a href="/perldoc?PAR%3A%3ARepository%3A%3AClient" class="podlinkpod"
>PAR::Repository::Client</a> installed, you can do this:</p>

<pre class="sh_perl">    use PAR { repository =&#62; &#39;<a href="http://foo/bar/" class="podlinkurl"
>http://foo/bar/</a>&#39; };
    use Module; # not locally installed!</pre>

<p>And PAR will fetch any modules you don&#39;t have from the specified PAR repository. For details on how this works, have a look at the SEE ALSO section below. Instead of an URL or local path, you can construct an <a href="/perldoc?PAR%3A%3ARepository%3A%3AClient" class="podlinkpod"
>PAR::Repository::Client</a> object manually and pass that to PAR. If you specify the <code>install =&#62; 1</code> option in the <code>use PAR</code> line above, the distribution containing <code>Module</code> will be permanently installed on your system. (<code>use PAR { repository =&#62; &#39;<a href="http://foo/bar" class="podlinkurl"
>http://foo/bar</a>&#39;, install =&#62; 1 };</code>)</p>

<p>Furthermore, there is an <code>upgrade =&#62; 1</code> option that checks for upgrades in the repository in addition to installing. Please note that an upgraded version of a module is only loaded on the next run of your application.</p>

<p>Adding the <code>dependencies =&#62; 1</code> option will enable PAR::Repository::Client&#39;s static dependency resolution (PAR::Repository::Client 0.23 and up).</p>

<p>Finally, you can combine the <code>run</code> and <code>repository</code> options to run an application directly from a repository! (And you can add the <code>install</code> option, too.)</p>

<pre class="sh_perl">  use PAR { repository =&#62; &#39;<a href="http://foo/bar/" class="podlinkurl"
>http://foo/bar/</a>&#39;, run =&#62; &#39;my_app&#39; };
  # Will not reach this point as we executed my_app,</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This module lets you use special zip files, called <b>P</b>erl <b>Ar</b>chives, as libraries from which Perl modules can be loaded.</p>

<p>It supports loading XS modules by overriding <b>DynaLoader</b> bootstrapping methods; it writes shared object file to a temporary file at the time it is needed.</p>

<p>A <em>.par</em> file is mostly a zip of the <em>blib/</em> directory after the build process of a CPAN distribution. To generate a <em>.par</em> file yourself, all you have to do is compress the modules under <em>arch/</em> and <em>lib/</em>, e.g.:</p>

<pre class="sh_perl">    % perl Makefile.PL
    % make
    % cd blib
    % zip -r mymodule.par arch/ lib/</pre>

<p>Afterward, you can just use <em>mymodule.par</em> anywhere in your <code>@INC</code>, use <b>PAR</b>, and it will Just Work. Support for generating <em>.par</em> files is going to be in the next (beyond 0.2805) release of Module::Build.</p>

<p>For convenience, you can set the <code>PERL5OPT</code> environment variable to <code>-MPAR</code> to enable <code>PAR</code> processing globally (the overhead is small if not used); setting it to <code>-MPAR=/path/to/mylib.par</code> will load a specific PAR file. Alternatively, consider using the <em>par.pl</em> utility bundled with the <a href="/perldoc?PAR%3A%3APacker" class="podlinkpod"
>PAR::Packer</a> distribution, or using the self-contained <em>parl</em> utility which is also distributed with <a href="/perldoc?PAR%3A%3APacker" class="podlinkpod"
>PAR::Packer</a> on machines without PAR.pm installed.</p>

<p>Note that self-containing scripts and executables created with <em>par.pl</em> and <em>pp</em> may also be used as <em>.par</em> archives:</p>

<pre class="sh_perl">    % pp -o packed.exe source.pl        # generate packed.exe (see PAR::Packer)
    % perl -MPAR=packed.exe other.pl    # this also works
    % perl -MPAR -Ipacked.exe other.pl  # ditto</pre>

<p>Please see <a href="#SYNOPSIS" class="podlinkpod"
>&#34;SYNOPSIS&#34;</a> for most typical use cases.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NOTES"
>NOTES <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Settings in <em>META.yml</em> packed inside the PAR file may affect PAR&#39;s operation. For example, <em>pp</em> provides the <code>-C</code> (<code>--clean</code>) option to control the default behavior of temporary file creation.</p>

<p>Currently, <em>pp</em>-generated PAR files may attach four PAR-specific attributes in <em>META.yml</em>:</p>

<pre class="sh_perl">    par:
      clean: 0          # default value of PAR_CLEAN
      signature: &#39;&#39;     # key ID of the SIGNATURE file
      verbatim: 0       # was packed prerequisite&#39;s PODs preserved?
      version: x.xx     # PAR.pm version that generated this PAR</pre>

<p>User-defined environment variables, like <i>PAR_GLOBAL_CLEAN</i>, always overrides the ones set in <em>META.yml</em>. The algorithm for generating caching/temporary directory is as follows:</p>

<ul>
<li>If <i>PAR_GLOBAL_TEMP</i> is specified, use it as the cache directory for extracted libraries, and do not clean it up after execution.</li>

<li>If <i>PAR_GLOBAL_TEMP</i> is not set, but <i>PAR_CLEAN</i> is specified, set <i>PAR_GLOBAL_TEMP</i> to <code><i>TEMP</i>/par-<i>USER</i>/temp-<i>PID</i>/</code>, cleaning it after execution.</li>

<li>If both are not set, use <code><i>TEMP</i>/par-<i>USER</i>/cache-<i>HASH</i>/</code> as the <i>PAR_GLOBAL_TEMP</i>, reusing any existing files inside.</li>
</ul>

<p>Here is a description of the variables the previous paths.</p>

<ul>
<li><i>TEMP</i> is a temporary directory, which can be set via <code>$ENV{PAR_GLOBAL_TMPDIR}</code>, <code>$ENV{TMPDIR}</code>, <code>$ENV{TEMPDIR}</code>, <code>$ENV{TEMP}</code> or <code>$ENV{TMP}</code>, in that order of priority. If none of those are set, <i>C:\TEMP</i>, <i>/tmp</i> are checked. If neither of them exists, <i>.</i> is used.</li>

<li><i>USER</i> is the user name, or SYSTEM if none can be found. On Win32, this is <code>$Win32::LoginName</code>. On Unix, this is <code>$ENV{USERNAME}</code> or <code>$ENV{USER}</code>.</li>

<li><i>PID</i> is the process ID. Forked children use the parent&#39;s PID.</li>

<li><i>HASH</i> is a crypto-hash of the entire par file or executable, calculated at creation time. This value can be overloaded with <code>pp</code>&#39;s --tempdir parameter.</li>
</ul>

<p>By default, PAR strips POD sections from bundled modules. In case that causes trouble, you can turn this off by setting the environment variable <code>PAR_VERBATIM</code> to <code>1</code>.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="import_options"
>import options</a></h2>

<p>When you &#34;use PAR {...}&#34; or call PAR-&#62;import({...}), the following options are available.</p>

<pre class="sh_perl">  PAR-&#62;import({ file =&#62; &#39;foo.par&#39; });
  # or
  PAR-&#62;import({ repository =&#62; &#39;<a href="http://foo/bar/" class="podlinkurl"
>http://foo/bar/</a>&#39; });</pre>

<dl>
<dt><a name="file"
>file</a></dt>

<dd>
<p>The par filename.</p>

<p>You must pass <i>one</i> option of either &#39;file&#39; or &#39;repository&#39;.</p>

<dt><a name="repository"
>repository</a></dt>

<dd>
<p>A par repository (exclusive of file)</p>

<dt><a name="fallback"
>fallback</a></dt>

<dd>
<p>Search the system <code>@INC</code> before the par.</p>

<p>Off by default for loading <em>.par</em> files via <code>file =</code> ...&#62;. On by default for PAR repositories.</p>

<p>To prefer loading modules from a repository over the locally installed modules, you can load the repository as follows:</p>

<pre class="sh_perl">  use PAR { repository =&#62; &#39;<a href="http://foo/bar/" class="podlinkurl"
>http://foo/bar/</a>&#39;, fallback =&#62; 0 };</pre>

<dt><a name="run"
>run</a></dt>

<dd>
<p>The name of a script to run in the par. Exits when done.</p>

<dt><a name="no_shlib_unpack"
>no_shlib_unpack</a></dt>

<dd>
<p>Skip unpacking bundled dynamic libraries from shlib/$archname. The client may have them installed, or you may wish to cache them yourself. In either case, they must end up in the standard install location (such as /usr/local/lib/) or in $ENV{PAR_TEMP} <i>before</i> you require the module which needs them. If they are not accessible before you require the dependent module, perl will die with a message such as &#34;cannot open shared object file...&#34;</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SEE_ALSO"
>SEE ALSO <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>The PAR homepage at <a href="http://par.perl.org" class="podlinkurl"
>http://par.perl.org</a>.</p>

<p><a href="/~rschupp/PAR-1.005/lib/PAR/Tutorial.pod" class="podlinkpod"
>PAR::Tutorial</a>, <a href="/~rschupp/PAR-1.005/lib/PAR/FAQ.pod" class="podlinkpod"
>PAR::FAQ</a> (For a more current FAQ, refer to the homepage.)</p>

<p>The <a href="/perldoc?PAR%3A%3APacker" class="podlinkpod"
>PAR::Packer</a> distribution which contains the packaging utilities: <a href="/perldoc?par.pl" class="podlinkpod"
>par.pl</a>, <a href="/perldoc?parl" class="podlinkpod"
>parl</a>, <a href="/perldoc?pp" class="podlinkpod"
>pp</a>.</p>

<p><a href="/perldoc?PAR%3A%3ADist" class="podlinkpod"
>PAR::Dist</a> for details on PAR distributions.</p>

<p><a href="/perldoc?PAR%3A%3ARepository%3A%3AClient" class="podlinkpod"
>PAR::Repository::Client</a> for details on accessing PAR repositories. <a href="/perldoc?PAR%3A%3ARepository" class="podlinkpod"
>PAR::Repository</a> for details on how to set up such a repository.</p>

<p><a href="/perldoc?Archive%3A%3AZip" class="podlinkpod"
>Archive::Zip</a>, <a href="/perldoc?perlfunc#require" class="podlinkpod"
>&#34;require&#34; in perlfunc</a></p>

<p><a href="/perldoc?ex%3A%3Alib%3A%3Azip" class="podlinkpod"
>ex::lib::zip</a>, <a href="/perldoc?Acme%3A%3Ause%3A%3Astrict%3A%3Awith%3A%3Apride" class="podlinkpod"
>Acme::use::strict::with::pride</a></p>

<p>Steffen Mueller has detailed slides on using PAR for application deployment at <a href="http://steffen-mueller.net/talks/appdeployment/" class="podlinkurl"
>http://steffen-mueller.net/talks/appdeployment/</a>.</p>

<p>PAR supports the <a href="/perldoc?prefork" class="podlinkpod"
>prefork</a> module. It declares various run-time dependencies so you can use the <a href="/perldoc?prefork" class="podlinkpod"
>prefork</a> module to get streamlined processes in a forking environment.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="ACKNOWLEDGMENTS"
>ACKNOWLEDGMENTS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Nicholas Clark for pointing out the mad source filter hook within the (also mad) coderef <code>@INC</code> hook, as well as (even madder) tricks one can play with PerlIO to avoid source filtering.</p>

<p>Ton Hospel for convincing me to ditch the <code>Filter::Simple</code> implementation.</p>

<p>Uri Guttman for suggesting <code>read_file</code> and <code>par_handle</code> interfaces.</p>

<p>Antti Lankila for making me implement the self-contained executable options via <code>par.pl -O</code>.</p>

<p>See the <em>AUTHORS</em> file in the distribution for a list of people who have sent helpful patches, ideas or comments.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHORS"
>AUTHORS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Audrey Tang &#60;cpan@audreyt.org&#62;</p>

<p>Steffen Mueller &#60;smueller@cpan.org&#62;</p>

<p><a href="http://par.perl.org/" class="podlinkurl"
>http://par.perl.org/</a> is the official PAR website. You can write to the mailing list at &#60;par@perl.org&#62;, or send an empty mail to &#60;par-subscribe@perl.org&#62; to participate in the discussion.</p>

<p>Please submit bug reports to &#60;bug-par@rt.cpan.org&#62;. If you need support, however, joining the &#60;par@perl.org&#62; mailing list is preferred.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="COPYRIGHT"
>COPYRIGHT <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Copyright 2002-2010 by Audrey Tang &#60;cpan@audreyt.org&#62;. Copyright 2005-2010 by Steffen Mueller &#60;smueller@cpan.org&#62;</p>

<p>This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</p>

<p>See <a href="http://www.perl.com/perl/misc/Artistic.html" class="podlinkurl"
>http://www.perl.com/perl/misc/Artistic.html</a></p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78087 Uploads, 24688 Distributions
105907 Modules, 9637 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Sun Apr 22 20:45:34 2012 GMT (0.0683770179748535) @cpansearch1 -->
 </body>
</html>
