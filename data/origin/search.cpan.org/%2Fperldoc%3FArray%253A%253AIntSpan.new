<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>Array::IntSpan - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","Array-IntSpan",3]);
    _gaq.push(["_setCustomVar",5,"Release","Array-IntSpan-2.002",3]);
    _gaq.push(["_setCustomVar",3,"Module","Array::IntSpan",3]);
    _gaq.push(["_setCustomVar",1,"Author","DDUMONT",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?Array::IntSpan">permalink</a></div>
  <a href="/~ddumont/">Dominique Dumont</a> &gt;
  <a href="/~ddumont/Array-IntSpan-2.002/">Array-IntSpan-2.002</a> &gt;
  Array::IntSpan
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/751f7128a6159d47f8d1ecbbbf595269?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/D/DD/DDUMONT/Array-IntSpan-2.002.tar.gz">Array-IntSpan-2.002.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=Array%3A%3AIntSpan;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~DDUMONT/Array-IntSpan-2.002/Array/IntSpan.pm">Annotate this POD
</a></p>
<div class=box style='width:150px; float: right'>
<h1 class=t5>Related Modules</h1>
<div style="margin:2px">
<a href="/perldoc?Inline%3A%3AFiles">Inline::Files</a><br>
<a href="/perldoc?Data%3A%3ADumper">Data::Dumper</a><br>
<a href="/perldoc?Net%3A%3ANetmask">Net::Netmask</a><br>
<a href="/perldoc?Net%3A%3ACIDR">Net::CIDR</a><br>
<a href="/perldoc?Tie%3A%3ARegexpHash">Tie::RegexpHash</a><br>
<a href="/perldoc?Set%3A%3AInfinite">Set::Infinite</a><br>
<a href="/perldoc?Set%3A%3AIntSpan">Set::IntSpan</a><br>
<small>
<a href="http://perlmonks.org/?node=cpan+module+search&pivot=1&module=Array%3A%3AIntSpan">more...</a><br>
By <a href="http://perlmonks.org/">perlmonks.org</a></small>
</div>
</div>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>Open&nbsp;</td><td style="text-align:right"> 0</td></tr>
</table>
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=Array-IntSpan">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  2.002 &nbsp;
<span class="noprint">
  <a href="/src/DDUMONT/Array-IntSpan-2.002/Array/IntSpan.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <li class='indexItem indexItem1'><a href='#Ranges_of_objects'>Ranges of objects</a>
  <li class='indexItem indexItem1'><a href='#Ranges_specified_with_integer_fields'>Ranges specified with integer fields</a>
  <li class='indexItem indexItem1'><a href='#METHODS'>METHODS</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#new_(...)'>new (...)</a>
    <li class='indexItem indexItem2'><a href='#clear'>clear</a>
    <li class='indexItem indexItem2'><a href='#set_range_(start,_end,_value_[,_code_ref]_)'>set_range (start, end, value [, code ref] )</a>
    <li class='indexItem indexItem2'><a href='#get_range_(start,_end_[,_filler_|_undef_,_copy_cb_[,_set_cb]])'>get_range (start, end [, filler | undef , copy_cb [, set_cb]])</a>
    <li class='indexItem indexItem2'><a href='#lookup(_index_)'>lookup( index )</a>
    <li class='indexItem indexItem2'><a href='#get_element(_element_number_)'>get_element( element_number )</a>
    <li class='indexItem indexItem2'><a href='#consolidate(_bottom,_top_,_[_set_cb_]_)'>consolidate( bottom, top , [ set_cb ] )</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#AUTHOR'>AUTHOR</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Array::IntSpan - Handles arrays of scalars or objects using IntSpan techniques</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">  use Array::IntSpan;

  my $foo = Array::IntSpan-&#62;new([0, 59, &#39;F&#39;], [60, 69, &#39;D&#39;], [80, 89, &#39;B&#39;]);

  print &#34;A score of 84% results in a &#34;.$foo-&#62;lookup(84).&#34;.\n&#34;;
  unless (defined($foo-&#62;lookup(70))) {
    print &#34;The grade for the score 70% is currently undefined.\n&#34;;
  }

  $foo-&#62;set_range(70, 79, &#39;C&#39;);
  print &#34;A score of 75% now results in a &#34;.$foo-&#62;lookup(75).&#34;.\n&#34;;

  $foo-&#62;set_range(0, 59, undef);
  unless (defined($foo-&#62;lookup(40))) {
    print &#34;The grade for the score 40% is now undefined.\n&#34;;
  }

  $foo-&#62;set_range(87, 89, &#39;B+&#39;);
  $foo-&#62;set_range(85, 100, &#39;A&#39;);
  $foo-&#62;set_range(100, 1_000_000, &#39;A+&#39;);</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><code>Array::IntSpan</code> brings the speed advantages of <code>Set::IntSpan</code> (written by Steven McDougall) to arrays. Uses include manipulating grades, routing tables, or any other situation where you have mutually exclusive ranges of integers that map to given values.</p>

<p>The new version of <code>Array::IntSpan</code> is also able to consolidate the ranges by comparing the adjacent values of the range. If 2 adjacent values are identical, the 2 adjacent ranges are merged.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="Ranges_of_objects"
>Ranges of objects <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><code>Array::IntSpan</code> can also handle objects instead of scalar values.</p>

<p>But for the consolidation to work, the payload class must overload the <code>&#34;&#34;</code>, <code>eq</code> and <code>==</code> operators to perform the consolidation comparisons.</p>

<p>When a get_range method is called to a range of objects, it will return a new range of object referencess. These object references points to the objects stored in the original range. In other words the objects contained in the returned range are <b>not</b> copied.</p>

<p>Thus if the user calls a methods on the objects contained in the returned range, the method is actually invoked on the objects stored in the original range.</p>

<p>When a get_range method is called on a range of objects, several things may happen:</p>

<ul>
<li>The get_range spans empty slots. By default the returned range will skip the empty slots. But the user may provide a callback to create new objects (for instance). See details below.</li>

<li>The get_range splits existing ranges. By default, the split range will contains the same object reference. The user may provide callback to perform the object copy so that the split range will contains different objects. See details below.</li>
</ul>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="Ranges_specified_with_integer_fields"
>Ranges specified with integer fields <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<ul>
<li><code>Array::IntSpan::IP</code> is also provided with the distribution. It lets you use IP addresses in any of three forms (dotted decimal, network string, and integer) for the indices into the array. See the POD for that module for more information. See <a href="/~ddumont/Array-IntSpan-2.002/Array/IntSpan/IP.pm" class="podlinkpod"
>Array::IntSpan::IP</a> for details.</li>

<li><code>Array::IntSpan::Fields</code> is also provided with the distribution. It let you specify an arbitrary specification to handle ranges with strings made of several integer separared by dots (like IP addresses of ANSI SS7 point codes). See <a href="/~ddumont/Array-IntSpan-2.002/Array/IntSpan/Fields.pm" class="podlinkpod"
>Array::IntSpan::Fields</a> for details.</li>
</ul>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="METHODS"
>METHODS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="new_(...)"
>new (...)</a></h2>

<p>The <code>new</code> method takes an optional list of array elements. The elements should be in the form <code>[start_index, end_index, value]</code>. They should be in sorted order and there should be no overlaps. The internal method <code>_check_structure</code> will be called to verify the data is correct. If you wish to avoid the performance penalties of checking the structure, you can use <code>Data::Dumper</code> to dump an object and use that code to reconstitute it.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="clear"
>clear</a></h2>

<p>Clear the range.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="set_range_(start,_end,_value_[,_code_ref]_)"
>set_range (start, end, value [, code ref] )</a></h2>

<p>This method takes three parameters - the <code>start_index</code>, the <code>end_index</code>, and the <code>value</code>. If you wish to erase a range, specify <code>undef</code> for the <code>value</code>. It properly deals with overlapping ranges and will replace existing data as appropriate. If the new range lies after the last existing range, the method will execute in O(1) time. If the new range lies within the existing ranges, the method executes in O(n) time, where n is the number of ranges. It does not consolidate contiguous ranges that have the same <code>value</code>.</p>

<p>If you have a large number of inserts to do, it would be beneficial to sort them first. Sorting is O(n lg(n)), and since appending is O(1), that will be considerably faster than the O(n^2) time for inserting n unsorted elements.</p>

<p>The method returns <code>0</code> if there were no overlapping ranges and <code>1</code> if there were.</p>

<p>The optional code ref is called back when an existing range is split. For instance if the original range is <code>[0,10,$foo_obj]</code> and set_range is called with <code>[5,7,$bar_obj&#39;]</code>, the callback will be called twice:</p>

<pre class="sh_perl"> $callback-&#62;(0, 4,$foo_obj)
 $callback-&#62;(8,10,$foo_obj)</pre>

<p>It will be the callback responsability to make sure that the range <code>0-4</code> and <code>7-10</code> holds 2 <i>different</i> objects.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="get_range_(start,_end_[,_filler_|_undef_,_copy_cb_[,_set_cb]])"
>get_range (start, end [, filler | undef , copy_cb [, set_cb]])</a></h2>

<p>This method returns a range (actually an Array::IntSpan object) from <code>start</code> to <code>end</code>.</p>

<p>If <code>start</code> and <code>end</code> span empty slot in the original range, get_range will skip the empty slots. If a <code>filler</code> value is provided, get_range will fill the slots with it.</p>

<pre class="sh_perl"> original range    : [2-4,X],[7-9,Y],[12-14,Z]
 get_range(3,8)    : [3-4,X],[7-8,Y]
 get_range(2,10,f) : [3-4,X],[5-6,f],[7-8,Y]</pre>

<p>If the <code>filler</code> parameter is a CODE reference, the filler value will be the one returned by the sub ref. The sub ref is invoked with <code>(start,end)</code>, i.e. the range of the empty span to fill (<code>get_range(5,6)</code> in the example above). When handling object, the sub ref can invoke an object constructor.</p>

<p>If <code>start</code> or <code>end</code> split an original range in 2, the default behavior is to copy the value or object ref contained in the original range:</p>

<pre class="sh_perl"> original range     : [1-4,X]
 split range        : [1-1,X],[2-2,X],[3-4,X]
 get_range(2)       : [2-2,X]</pre>

<p>If the original range contains object, this may lead to disapointing results. In the example below the 2 ranges contains references (<code>obj_a</code>) that points to the same object:</p>

<pre class="sh_perl"> original range     : [1-4,obj_a]
 split range        : [1-1,obj_a],[2-2,obj_a],[3-4,obj_a]
 get_range(2)       : [2-2,obj_a]</pre>

<p>Which means that invoking a method on the object returned by <code>get_range(2)</code> will also be invoked on the range 1-4 of the original range which may not be what you want.</p>

<p>If <code>get_range</code> is invoked with a copy parameter (actually a code reference), the result of this routine will be stored in the split range <i>outside</i> of the get_range:</p>

<pre class="sh_perl"> original range     : [1-4,X]
 get_range(2)       : [2-2,X]
 split range        : [1-1,copy_of_X],[2-2,X],[3-4,copy_of_X]</pre>

<p>When dealing with object, the sub ref should provide a copy of the object:</p>

<pre class="sh_perl"> original range     : [1-4,obj_a]
 get_range(2)       : [2-2,obj_a]
 split range        : [1-1,obj_a1],[2-2,obj_a],[3-4,obj_a2]</pre>

<p>Note that the <code>obj_a</code> contained in the <code>split range</code> and the <code>obj_a</code> contained in the returned range point to the <i>same object</i>.</p>

<p>The sub ref is invoked with <code>(start,end,obj_a)</code> and is expected to return a copy of <code>obj_a</code> that will be stored in the split ranges. In the example above, 2 different copies are made: <code>obj_a1</code> and <code>obj_a2</code>.</p>

<p>Last, a 3rd callback may be defined by the user: the <code>set_cb</code>. This callback will be used when the range start or end that holds an object changes. In the example above, the <code>set_cb</code> will be called this way:</p>

<pre class="sh_perl"> $obj_a-&#62;&#38;$set_cb(2,2) ;</pre>

<p>As a matter of fact, the 3 callback can be used in the same call. In the example below, <code>get_range</code> is invoked with 3 subs refs: <code>\&#38;f,\&#38;cp,\&#38;set</code>:</p>

<pre class="sh_perl"> original range     : [1-4,obj_a],[7-9,obj_b]
 get_range(3-8,...) : [3-4,obj_a],[5-6,obj_fill],[7-8,obj_b]
 split range        : [1-2,obj_a1], [3-4,obj_a],[5-6,obj_fill],
                      [7-8,obj_b],[9-9,obj_b1]</pre>

<p>To obtain this, get_range will perform the following calls:</p>

<pre class="sh_perl"> $obj_fill = &#38;f ;
 $obj_a1 = &#38;cp(5,6,obj_a);
 &#38;set(3,4,$obj_a) ;
 $obj_b = &#38;cp(9,9,obj_b) ;
 &#38;set(7-8,obj_b) ; </pre>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="lookup(_index_)"
>lookup( index )</a></h2>

<p>This method takes as a single parameter the <code>index</code> to look up. If there is an appropriate range, the method will return the associated value. Otherwise, it returns <code>undef</code>.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="get_element(_element_number_)"
>get_element( element_number )</a></h2>

<p>Returns an array containing the Nth range element:</p>

<pre class="sh_perl"> ( start, end, value )</pre>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="consolidate(_bottom,_top_,_[_set_cb_]_)"
>consolidate( bottom, top , [ set_cb ] )</a></h2>

<p>This function scan the range from the range index <code>bottom</code> to <code>top</code> and compare the values held by the adjacent ranges. If the values are identical, the adjacent ranges are merged.</p>

<p>The comparision is made with the <code>==</code> operator. Objects stored in the range <b>must</b> overload the <code>==</code> operator. If not, the comparison will be made with the standard stringification of an object and the merge will never happen.</p>

<p>If provided, the <code>set_cb</code> will be invoked on the contained object after 2 ranges are merged.</p>

<p>For instance, if the <code>&#34;$obj_a&#34; eq &#34;$obj_b&#34;</code>:</p>

<pre class="sh_perl"> original range         : [1-4,obj_a],[5-9,obj_b]
 consolidate(0,1,\&#38;set) : [1-9,obj_a]</pre>

<p>And consolidate will perform this call:</p>

<pre class="sh_perl"> &#38;$set(1,9,obj_a) ;</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHOR"
>AUTHOR <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<ul>
<li>Toby Everett, teverett@alascom.att.com</li>

<li>Dominique Dumont, dominique.dumont@hp.com</li>
</ul>

<p>Copyright (c) 2000 Toby Everett. Copyright (c) 2003-2004 Dominique Dumont. All rights reserved. This program is free software.</p>

<p>This module is distributed under the Artistic License. See <a href="http://www.ActiveState.com/corporate/artistic_license.htm" class="podlinkurl"
>http://www.ActiveState.com/corporate/artistic_license.htm</a> or the license that comes with your perl distribution.</p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78058 Uploads, 24685 Distributions
105890 Modules, 9637 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Sat Apr 21 22:48:44 2012 GMT (0.0944199562072754) @cpansearch1 -->
 </body>
</html>
