<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>Math::Big - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","Math-Big",3]);
    _gaq.push(["_setCustomVar",5,"Release","Math-Big-1.12",3]);
    _gaq.push(["_setCustomVar",3,"Module","Math::Big",3]);
    _gaq.push(["_setCustomVar",1,"Author","TELS",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?Math::Big">permalink</a></div>
  <a href="/~tels/">Tels</a> &gt;
  <a href="/~tels/Math-Big-1.12/">Math-Big-1.12</a> &gt;
  Math::Big
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/7fa2249c39cb9fc7272025701b47c845?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/T/TE/TELS/math/Math-Big-1.12.tar.gz">math/Math-Big-1.12.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=Math%3A%3ABig;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~TELS/Math-Big-1.12/lib/Math/Big.pm">Annotate this POD
</a></p>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>New&nbsp;</td><td style="text-align:right"> 1</td></tr>
<tr><td>Open&nbsp;</td><td style="text-align:right"> 0</td></tr>
</table>
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=Math-Big">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  1.12 &nbsp;
<span class="noprint">
  <a href="/src/TELS/Math-Big-1.12/lib/Math/Big.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#REQUIRES'>REQUIRES</a>
  <li class='indexItem indexItem1'><a href='#EXPORTS'>EXPORTS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <li class='indexItem indexItem1'><a href='#METHODS'>METHODS</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#primes()'>primes()</a>
    <li class='indexItem indexItem2'><a href='#fibonacci()'>fibonacci()</a>
    <li class='indexItem indexItem2'><a href='#hailstone()'>hailstone()</a>
    <li class='indexItem indexItem2'><a href='#base()'>base()</a>
    <li class='indexItem indexItem2'><a href='#to_base()'>to_base()</a>
    <li class='indexItem indexItem2'><a href='#factorial()'>factorial()</a>
    <li class='indexItem indexItem2'><a href='#bernoulli()'>bernoulli()</a>
    <li class='indexItem indexItem2'><a href='#euler()'>euler()</a>
    <li class='indexItem indexItem2'><a href='#sin()'>sin()</a>
    <li class='indexItem indexItem2'><a href='#cos()'>cos()</a>
    <li class='indexItem indexItem2'><a href='#tan()'>tan()</a>
    <li class='indexItem indexItem2'><a href='#arctan()'>arctan()</a>
    <li class='indexItem indexItem2'><a href='#arctanh()'>arctanh()</a>
    <li class='indexItem indexItem2'><a href='#arcsin()'>arcsin()</a>
    <li class='indexItem indexItem2'><a href='#arcsinh()'>arcsinh()</a>
    <li class='indexItem indexItem2'><a href='#cosh()'>cosh()</a>
    <li class='indexItem indexItem2'><a href='#sinh()'>sinh()</a>
    <li class='indexItem indexItem2'><a href='#pi()'>pi()</a>
    <li class='indexItem indexItem2'><a href='#log()'>log()</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#BUGS'>BUGS</a>
  <li class='indexItem indexItem1'><a href='#LICENSE'>LICENSE</a>
  <li class='indexItem indexItem1'><a href='#AUTHOR'>AUTHOR</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Math::Big - routines (cos,sin,primes,hailstone,euler,fibbonaci etc) with big numbers</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">    use Math::Big qw/primes fibonacci hailstone factors wheel
      cos sin tan euler bernoulli arctan arcsin pi/;

    @primes     = primes(100);          # first 100 primes
    $prime      = primes(100);          # 100th prime
    @fib        = fibonacci (100);      # first 100 fibonacci numbers
    $fib_1000   = fibonacci (1000);     # 1000th fibonacci number
    $hailstone  = hailstone (1000);     # length of sequence
    @hailstone  = hailstone (127);      # the entire sequence
    
    $factorial  = factorial(1000);      # factorial 1000!
 
    $e = euler(1,64);                   # e to 64 digits

    $b3 = bernoulli(3);

    $cos        = cos(0.5,128);         # cosinus to 128 digits
    $sin        = sin(0.5,128);         # sinus to 128 digits
    $cosh       = cosh(0.5,128);        # cosinus hyperbolicus to 128 digits
    $sinh       = sinh(0.5,128);        # sinus hyperbolicus to 128 digits
    $tan        = tan(0.5,128);         # tangens to 128 digits
    $arctan     = arctan(0.5,64);       # arcus tangens to 64 digits
    $arcsin     = arcsin(0.5,32);       # arcus sinus to 32 digits
    $arcsinh    = arcsin(0.5,18);       # arcus sinus hyperbolicus to 18 digits

    $pi         = pi(1024);             # first 1024 digits
    $log        = log(64,2);            # $log==6, because 2**6==64
    $log        = log(100,10);          # $log==2, because 10**2==100
    $log        = log(100);             # base defaults to 10: $log==2</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="REQUIRES"
>REQUIRES <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>perl5.006002, Exporter, Math::BigInt, Math::BigFloat</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="EXPORTS"
>EXPORTS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Exports nothing on default, but can export <code>primes()</code>, <code>fibonacci()</code>, <code>hailstone()</code>, <code>bernoulli</code>, <code>euler</code>, <code>sin</code>, <code>cos</code>, <code>tan</code>, <code>cosh</code>, <code>sinh</code>, <code>arctan</code>, <code>arcsin</code>, <code>arcsinh</code>, <code>pi</code>, <code>log</code> and <code>factorial</code>.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This module contains some routines that may come in handy when you want to do some math with really, really big (or small) numbers. These are primarily examples.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="METHODS"
>METHODS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="primes()"
><b>primes()</b></a></h2>

<pre class="sh_perl">        @primes = primes($n);
        $primes = primes($n);</pre>

<p>Calculates all the primes below N and returns them as array. In scalar context returns the number of primes below N.</p>

<p>This uses an optimized version of the <b>Sieve of Eratosthenes</b>, which takes half of the time and half of the space, but is still O(N). Or in other words, quite slow.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="fibonacci()"
><b>fibonacci()</b></a></h2>

<pre class="sh_perl">        @fib = fibonacci($n);
        $fib = fibonacci($n);</pre>

<p>Calculates the first N fibonacci numbers and returns them as array. In scalar context returns the Nth number of the Fibonacci series.</p>

<p>The scalar context version uses an ultra-fast conquer-divide style algorithm to calculate the result and is many times faster than the straightforward way of calculating the linear sum.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="hailstone()"
><b>hailstone()</b></a></h2>

<pre class="sh_perl">        @hail = hailstone($n);          # sequence
        $hail = hailstone($n);          # length of sequence</pre>

<p>Calculates the <i>Hailstone</i> sequence for the number N. This sequence is defined as follows:</p>

<pre class="sh_perl">        while (N != 0)
          {
          if (N is even)
            {
            N is N /2
            }
          else
            {
            N = N * 3 +1
            }
          }</pre>

<p>It is not yet proven whether for every N the sequence reaches 1, but it apparently does so. The number of steps is somewhat chaotically.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="base()"
><b>base()</b></a></h2>

<pre class="sh_perl">        ($n,$a) = base($number,$base);</pre>

<p>Reduces a number to <code>$base</code> to the <code>$n</code>th power plus <code>$a</code>. Example:</p>

<pre class="sh_perl">        use Math::BigInt :constant;
        use Math::Big qw/base/;

        print base ( 2 ** 150 + 42,2);</pre>

<p>This will print 150 and 42.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="to_base()"
><b>to_base()</b></a></h2>

<pre class="sh_perl">        $string = to_base($number,$base);

        $string = to_base($number,$base, $alphabet);</pre>

<p>Returns a string of <code>$number</code> in base <code>$base</code>. The alphabet is optional if <code>$base</code> is less or equal than 36. <code>$alphabet</code> is a string.</p>

<p>Examples:</p>

<pre class="sh_perl">        print to_base(15,2);            # 1111
        print to_base(15,16);           # F
        print to_base(31,16);           # 1F</pre>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="factorial()"
><b>factorial()</b></a></h2>

<pre class="sh_perl">        $n = factorial($number);</pre>

<p>Calculate <code>n!</code> for <code>n </code>= 0&#62;.</p>

<p>Uses internally Math::BigInt&#39;s bfac() method.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="bernoulli()"
><b>bernoulli()</b></a></h2>

<pre class="sh_perl">        $b = bernoulli($n);
        ($c,$d) = bernoulli($n);        # $b = $c/$d</pre>

<p>Calculate the Nth number in the <i>Bernoulli</i> series. Only the first 40 are defined for now.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="euler()"
><b>euler()</b></a></h2>

<pre class="sh_perl">        $e = euler($x,$d);</pre>

<p>Calculate <i>Euler&#39;s constant</i> to the power of $x (usual 1), to $d digits. Defaults to 1 and 42 digits.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="sin()"
><b>sin()</b></a></h2>

<pre class="sh_perl">        $sin = sin($x,$d);</pre>

<p>Calculate <i>sinus</i> of <code>$x</code>, to <code>$d</code> digits.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="cos()"
><b>cos()</b></a></h2>

<pre class="sh_perl">        $cos = cos($x,$d);</pre>

<p>Calculate <i>cosinus</i> of <code>$x</code>, to <code>$d</code> digits.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="tan()"
><b>tan()</b></a></h2>

<pre class="sh_perl">        $tan = tan($x,$d);</pre>

<p>Calculate <i>tangens</i> of <code>$x</code>, to <code>$d</code> digits.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="arctan()"
><b>arctan()</b></a></h2>

<pre class="sh_perl">        $arctan = arctan($x,$d);</pre>

<p>Calculate <i>arcus tangens</i> of <code>$x</code>, to <code>$d</code> digits.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="arctanh()"
><b>arctanh()</b></a></h2>

<pre class="sh_perl">        $arctanh = arctanh($x,$d);</pre>

<p>Calculate <i>arcus tangens hyperbolicus</i> of <code>$x</code>, to <code>$d</code> digits.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="arcsin()"
><b>arcsin()</b></a></h2>

<pre class="sh_perl">        $arcsin = arcsin($x,$d);</pre>

<p>Calculate <i>arcus sinus</i> of <code>$x</code>, to <code>$d</code> digits.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="arcsinh()"
><b>arcsinh()</b></a></h2>

<pre class="sh_perl">        $arcsinh = arcsinh($x,$d);</pre>

<p>Calculate <i>arcus sinus hyperbolicus</i> of <code>$x</code>, to <code>$d</code> digits.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="cosh()"
><b>cosh()</b></a></h2>

<pre class="sh_perl">        $cosh = cosh($x,$d);</pre>

<p>Calculate <i>cosinus hyperbolicus</i> of <code>$x</code>, to <code>$d</code> digits.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="sinh()"
><b>sinh()</b></a></h2>

<pre class="sh_perl">        $sinh = sinh($x,$d);</pre>

<p>Calculate <i>sinus hyperbolicus</i> of $&#60;$x&#62;, to <code>$d</code> digits.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="pi()"
><b>pi()</b></a></h2>

<pre class="sh_perl">        $pi = pi($N);</pre>

<p>The number PI to <code>$N</code> digits after the dot.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="log()"
><b>log()</b></a></h2>

<pre class="sh_perl">        $log = log($number,$base,$A);</pre>

<p>Calculates the logarithmn of <code>$number</code> to base <code>$base</code>, with <code>$A</code> digits accuracy and returns a new number as the result (leaving <code>$number</code> alone).</p>

<p>BigInts are promoted to BigFloats, meaning you will never get a truncated integer result like when using <code>Math::BigInt::blog</code>.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="BUGS"
>BUGS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<ul>
<li>Primes and the Fibonacci series use an array of size N and will not be able to calculate big sequences due to memory constraints.
<p>The exception is fibonacci in scalar context, this is able to calculate arbitrarily big numbers in O(N) time:</p>

<pre class="sh_perl">        use Math::Big;
        use Math::BigInt qw/:constant/;

        $fib = Math::Big::fibonacci( 2 ** 320 );</pre>
</li>

<li>The Bernoulli numbers are not yet calculated, but looked up in a table, which has only 40 elements. So <code>bernoulli($x)</code> with $x &#62; 42 will fail.
<p>If you know of an algorithmn to calculate them, please drop me a note.</p>
</li>
</ul>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="LICENSE"
>LICENSE <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This program is free software; you may redistribute it and/or modify it under the same terms as Perl itself.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHOR"
>AUTHOR <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>If you use this module in one of your projects, then please email me. I want to hear about how my code helps you ;)</p>

<p>Quite a lot of ideas from other people, especially D. E. Knuth, have been used, thank you!</p>

<p>Tels <a href="http://bloodgate.com" class="podlinkurl"
>http://bloodgate.com</a> 2001 - 2007.</p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78262 Uploads, 24722 Distributions
105996 Modules, 9649 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Fri Apr 27 15:51:20 2012 GMT (0.130637884140015) @cpansearch1 -->
 </body>
</html>
