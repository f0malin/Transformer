<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>PDF::API2 - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","PDF-API2",3]);
    _gaq.push(["_setCustomVar",5,"Release","PDF-API2-2.019",3]);
    _gaq.push(["_setCustomVar",3,"Module","PDF::API2",3]);
    _gaq.push(["_setCustomVar",1,"Author","SSIMMS",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?PDF::API2">permalink</a></div>
  <a href="/~ssimms/">Steve Simms</a> &gt;
  <a href="/~ssimms/PDF-API2-2.019/">PDF-API2-2.019</a> &gt;
  PDF::API2
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/743db0407e390b68e1550ff953c0548a?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/S/SS/SSIMMS/PDF-API2-2.019.tar.gz">PDF-API2-2.019.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=PDF%3A%3AAPI2;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~SSIMMS/PDF-API2-2.019/lib/PDF/API2.pm">Annotate this POD
(12)
</a></p>
<div class=box style='width:150px; float: right'>
<h1 class=t5>Related Modules</h1>
<div style="margin:2px">
<a href="/perldoc?PDF%3A%3ATemplate">PDF::Template</a><br>
<a href="/perldoc?PDF%3A%3AReuse">PDF::Reuse</a><br>
<a href="/perldoc?PDF%3A%3ACreate">PDF::Create</a><br>
<a href="/perldoc?Compress%3A%3AZlib">Compress::Zlib</a><br>
<a href="/perldoc?HTML%3A%3ATemplate">HTML::Template</a><br>
<a href="/perldoc?Win32%3A%3AOLE">Win32::OLE</a><br>
<a href="/perldoc?PDF%3A%3AParse">PDF::Parse</a><br>
<a href="/perldoc?PDF%3A%3ATable">PDF::Table</a><br>
<a href="/perldoc?Excel%3A%3ATemplate">Excel::Template</a><br>
<a href="/perldoc?Parse%3A%3ARecDescent">Parse::RecDescent</a><br>
<small>
<a href="http://perlmonks.org/?node=cpan+module+search&pivot=1&module=PDF%3A%3AAPI2">more...</a><br>
By <a href="http://perlmonks.org/">perlmonks.org</a></small>
</div>
</div>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>New&nbsp;</td><td style="text-align:right"> 6</td></tr>
<tr><td>Open&nbsp;</td><td style="text-align:right"> 9</td></tr>
</table>
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=PDF-API2">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  2.019 &nbsp;
<span class="noprint">
  <a href="/src/SSIMMS/PDF-API2-2.019/lib/PDF/API2.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#GENERIC_METHODS'>GENERIC METHODS</a>
  <li class='indexItem indexItem1'><a href='#PAGE_METHODS'>PAGE METHODS</a>
  <li class='indexItem indexItem1'><a href='#FONT_METHODS'>FONT METHODS</a>
  <li class='indexItem indexItem1'><a href='#IMAGE_METHODS'>IMAGE METHODS</a>
  <li class='indexItem indexItem1'><a href='#COLORSPACE_METHODS'>COLORSPACE METHODS</a>
  <li class='indexItem indexItem1'><a href='#BARCODE_METHODS'>BARCODE METHODS</a>
  <li class='indexItem indexItem1'><a href='#OTHER_METHODS'>OTHER METHODS</a>
  <li class='indexItem indexItem1'><a href='#RESOURCE_METHODS'>RESOURCE METHODS</a>
  <li class='indexItem indexItem1'><a href='#BUGS'>BUGS</a>
  <li class='indexItem indexItem1'><a href='#AUTHOR'>AUTHOR</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>PDF::API2 - Facilitates the creation and modification of PDF files</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">    use PDF::API2;

    # Create a blank PDF file
    $pdf = PDF::API2-&#62;new();

    # Open an existing PDF file
    $pdf = PDF::API2-&#62;open(&#39;some.pdf&#39;);

    # Add a blank page
    $page = $pdf-&#62;page();

    # Retrieve an existing page
    $page = $pdf-&#62;openpage($page_number);

    # Set the page size
    $page-&#62;mediabox(&#39;Letter&#39;);

    # Add a built-in font to the PDF
    $font = $pdf-&#62;corefont(&#39;Helvetica-Bold&#39;);

    # Add an external TTF font to the PDF
    $font = $pdf-&#62;ttfont(&#39;/path/to/font.ttf&#39;);

    # Add some text to the page
    $text = $page-&#62;text();
    $text-&#62;font($font, 20);
    $text-&#62;translate(200, 700);
    $text-&#62;text(&#39;Hello World!&#39;);

    # Save the PDF
    $pdf-&#62;saveas(&#39;/path/to/new.pdf&#39;);</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="GENERIC_METHODS"
>GENERIC METHODS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<dl>
<dt><a name='pdf'></a><a name="$pdf_=_PDF::API2-&#62;new(%options)"
>$pdf = PDF::API2-&#62;new(%options)</a></dt>

<dd>
<p>Creates a new PDF object. If you will be saving it as a file and already know the filename, you can give the &#39;-file&#39; option to minimize possible memory requirements later on.</p>

<p><b>Example:</b></p>

<pre class="sh_perl">    $pdf = PDF::API2-&#62;new();
    ...
    print $pdf-&#62;stringify();

    $pdf = PDF::API2-&#62;new();
    ...
    $pdf-&#62;saveas(&#39;our/new.pdf&#39;);

    $pdf = PDF::API2-&#62;new(-file =&#62; &#39;our/new.pdf&#39;);
    ...
    $pdf-&#62;save();</pre>

<dt><a name='pdf'></a><a name="$pdf_=_PDF::API2-&#62;open($pdf_file)"
>$pdf = PDF::API2-&#62;open($pdf_file)</a></dt>

<dd>
<p>Opens an existing PDF file.</p>

<p><b>Example:</b></p>

<pre class="sh_perl">    $pdf = PDF::API2-&#62;open(&#39;our/old.pdf&#39;);
    ...
    $pdf-&#62;saveas(&#39;our/new.pdf&#39;);

    $pdf = PDF::API2-&#62;open(&#39;our/to/be/updated.pdf&#39;);
    ...
    $pdf-&#62;update();</pre>

<dt><a name='pdf'></a><a name="$pdf_=_PDF::API2-&#62;openScalar($pdf_string)"
>$pdf = PDF::API2-&#62;openScalar($pdf_string)</a></dt>

<dd>
<p>Opens a PDF contained in a string.</p>

<p><b>Example:</b></p>

<pre class="sh_perl">    # Read a PDF into a string, for the purpose of demonstration
    open $fh, &#39;our/old.pdf&#39; or die $@;
    undef $/;  # Read the whole file at once
    $pdf_string = &#60;$fh&#62;;

    $pdf = PDF::API2-&#62;openScalar($pdf_string);
    ...
    $pdf-&#62;saveas(&#39;our/new.pdf&#39;);</pre>

<dt><a name='pdf'></a><a name="$pdf-&#62;preferences(%options)"
>$pdf-&#62;preferences(%options)</a></dt>

<dd>
<p>Controls viewing preferences for the PDF.</p>

<p><b>Page Mode Options:</b></p>

<dl>
<dt><a name='fullscreen'></a><a name="-fullscreen"
>-fullscreen</a></dt>

<dd>
<p>Full-screen mode, with no menu bar, window controls, or any other window visible.</p>

<dt><a name='thumbs'></a><a name="-thumbs"
>-thumbs</a></dt>

<dd>
<p>Thumbnail images visible.</p>

<dt><a name='outlines'></a><a name="-outlines"
>-outlines</a></dt>

<dd>
<p>Document outline visible.</p>
</dd>
</dl>

<p><b>Page Layout Options:</b></p>

<dl>
<dt><a name='singlepage'></a><a name="-singlepage"
>-singlepage</a></dt>

<dd>
<p>Display one page at a time.</p>

<dt><a name='onecolumn'></a><a name="-onecolumn"
>-onecolumn</a></dt>

<dd>
<p>Display the pages in one column.</p>

<dt><a name='twocolumnleft'></a><a name="-twocolumnleft"
>-twocolumnleft</a></dt>

<dd>
<p>Display the pages in two columns, with oddnumbered pages on the left.</p>

<dt><a name='twocolumnright'></a><a name="-twocolumnright"
>-twocolumnright</a></dt>

<dd>
<p>Display the pages in two columns, with oddnumbered pages on the right.</p>
</dd>
</dl>

<p><b>Viewer Options:</b></p>

<dl>
<dt><a name='hidetoolbar'></a><a name="-hidetoolbar"
>-hidetoolbar</a></dt>

<dd>
<p>Specifying whether to hide tool bars.</p>

<dt><a name='hidemenubar'></a><a name="-hidemenubar"
>-hidemenubar</a></dt>

<dd>
<p>Specifying whether to hide menu bars.</p>

<dt><a name='hidewindowui'></a><a name="-hidewindowui"
>-hidewindowui</a></dt>

<dd>
<p>Specifying whether to hide user interface elements.</p>

<dt><a name='fitwindow'></a><a name="-fitwindow"
>-fitwindow</a></dt>

<dd>
<p>Specifying whether to resize the document&#39;s window to the size of the displayed page.</p>

<dt><a name='centerwindow'></a><a name="-centerwindow"
>-centerwindow</a></dt>

<dd>
<p>Specifying whether to position the document&#39;s window in the center of the screen.</p>

<dt><a name='displaytitle'></a><a name="-displaytitle"
>-displaytitle</a></dt>

<dd>
<p>Specifying whether the window&#39;s title bar should display the document title taken from the Title entry of the document information dictionary.</p>

<dt><a name='afterfullscreenthumbs'></a><a name="-afterfullscreenthumbs"
>-afterfullscreenthumbs</a></dt>

<dd>
<p>Thumbnail images visible after Full-screen mode.</p>

<dt><a name='afterfullscreenoutlines'></a><a name="-afterfullscreenoutlines"
>-afterfullscreenoutlines</a></dt>

<dd>
<p>Document outline visible after Full-screen mode.</p>

<dt><a name='printscalingnone'></a><a name="-printscalingnone"
>-printscalingnone</a></dt>

<dd>
<p>Set the default print setting for page scaling to none.</p>
</dd>
</dl>

<p><b>Initial Page Options</b>:</p>

<dl>
<dt><a name='firstpage'></a><a name="-firstpage_=&#62;_[_$page,_%options_]"
>-firstpage =&#62; [ $page, %options ]</a></dt>

<dd>
<p>Specifying the page to be displayed, plus one of the following options:</p>

<dl>
<dt><a name='fit'></a><a name="-fit_=&#62;_1"
>-fit =&#62; 1</a></dt>

<dd>
<p>Display the page designated by page, with its contents magnified just enough to fit the entire page within the window both horizontally and vertically. If the required horizontal and vertical magnification factors are different, use the smaller of the two, centering the page within the window in the other dimension.</p>

<dt><a name='fith'></a><a name="-fith_=&#62;_$top"
>-fith =&#62; $top</a></dt>

<dd>
<p>Display the page designated by page, with the vertical coordinate top positioned at the top edge of the window and the contents of the page magnified just enough to fit the entire width of the page within the window.</p>

<dt><a name='fitv'></a><a name="-fitv_=&#62;_$left"
>-fitv =&#62; $left</a></dt>

<dd>
<p>Display the page designated by page, with the horizontal coordinate left positioned at the left edge of the window and the contents of the page magnified just enough to fit the entire height of the page within the window.</p>

<dt><a name='fitr'></a><a name="-fitr_=&#62;_[_$left,_$bottom,_$right,_$top_]"
>-fitr =&#62; [ $left, $bottom, $right, $top ]</a></dt>

<dd>
<p>Display the page designated by page, with its contents magnified just enough to fit the rectangle specified by the coordinates left, bottom, right, and top entirely within the window both horizontally and vertically. If the required horizontal and vertical magnification factors are different, use the smaller of the two, centering the rectangle within the window in the other dimension.</p>

<dt><a name='fitb'></a><a name="-fitb_=&#62;_1"
>-fitb =&#62; 1</a></dt>

<dd>
<p>Display the page designated by page, with its contents magnified just enough to fit its bounding box entirely within the window both horizontally and vertically. If the required horizontal and vertical magnification factors are different, use the smaller of the two, centering the bounding box within the window in the other dimension.</p>

<dt><a name='fitbh'></a><a name="-fitbh_=&#62;_$top"
>-fitbh =&#62; $top</a></dt>

<dd>
<p>Display the page designated by page, with the vertical coordinate top positioned at the top edge of the window and the contents of the page magnified just enough to fit the entire width of its bounding box within the window.</p>

<dt><a name='fitbv'></a><a name="-fitbv_=&#62;_$left"
>-fitbv =&#62; $left</a></dt>

<dd>
<p>Display the page designated by page, with the horizontal coordinate left positioned at the left edge of the window and the contents of the page magnified just enough to fit the entire height of its bounding box within the window.</p>

<dt><a name='xyz'></a><a name="-xyz_=&#62;_[_$left,_$top,_$zoom_]"
>-xyz =&#62; [ $left, $top, $zoom ]</a></dt>

<dd>
<p>Display the page designated by page, with the coordinates (left, top) positioned at the top-left corner of the window and the contents of the page magnified by the factor zoom. A zero (0) value for any of the parameters left, top, or zoom specifies that the current value of that parameter is to be retained unchanged.</p>
</dd>
</dl>
</dd>
</dl>

<p><b>Example:</b></p>

<pre class="sh_perl">    $pdf-&#62;preferences(
        -fullscreen =&#62; 1,
        -onecolumn =&#62; 1,
        -afterfullscreenoutlines =&#62; 1,
        -firstpage =&#62; [$page, -fit =&#62; 1],
    );</pre>

<dt><a name='val'></a><a name="$val_=_$pdf-&#62;default($parameter)"
>$val = $pdf-&#62;default($parameter)</a></dt>

<dd>
<dt><a name='pdf'></a><a name="$pdf-&#62;default($parameter,_$value)"
>$pdf-&#62;default($parameter, $value)</a></dt>

<dd>
<p>Gets/sets the default value for a behaviour of PDF::API2.</p>

<p><b>Supported Parameters:</b></p>

<dl>
<dt><a name="nounrotate"
>nounrotate</a></dt>

<dd>
<p>prohibits API2 from rotating imported/opened page to re-create a default pdf-context.</p>

<dt><a name="pageencaps"
>pageencaps</a></dt>

<dd>
<p>enables than API2 will add save/restore commands upon imported/opened pages to preserve graphics-state for modification.</p>

<dt><a name="copyannots"
>copyannots</a></dt>

<dd>
<p>enables importing of annotations (<b>*EXPERIMENTAL*</b>).</p>
</dd>
</dl>

<dt><a name='bool'></a><a name="$bool_=_$pdf-&#62;isEncrypted()"
>$bool = $pdf-&#62;isEncrypted()</a></dt>

<dd>
<p>Checks if the previously opened PDF is encrypted.</p>

<dt><a name='infohash'></a><a name="%infohash_=_$pdf-&#62;info(%infohash)"
>%infohash = $pdf-&#62;info(%infohash)</a></dt>

<dd>
<p>Gets/sets the info structure of the document.</p>

<p><b>Example:</b></p>

<pre class="sh_perl">    %h = $pdf-&#62;info(
        &#39;Author&#39;       =&#62; &#34;Alfred Reibenschuh&#34;,
        &#39;CreationDate&#39; =&#62; &#34;D:20020911000000+01&#39;00&#39;&#34;,
        &#39;ModDate&#39;      =&#62; &#34;D:YYYYMMDDhhmmssOHH&#39;mm&#39;&#34;,
        &#39;Creator&#39;      =&#62; &#34;fredos-script.pl&#34;,
        &#39;Producer&#39;     =&#62; &#34;PDF::API2&#34;,
        &#39;Title&#39;        =&#62; &#34;some Publication&#34;,
        &#39;Subject&#39;      =&#62; &#34;perl ?&#34;,
        &#39;Keywords&#39;     =&#62; &#34;all good things are pdf&#34;
    );
    print &#34;Author: $h{Author}\n&#34;;</pre>

<dt><a name='metadata_attributes'></a><a name="@metadata_attributes_=_$pdf-&#62;infoMetaAttributes(@metadata_attributes)"
>@metadata_attributes = $pdf-&#62;infoMetaAttributes(@metadata_attributes)</a></dt>

<dd>
<p>Gets/sets the supported info-structure tags.</p>

<p><b>Example:</b></p>

<pre class="sh_perl">    @attributes = $pdf-&#62;infoMetaAttributes;
    print &#34;Supported Attributes: @attr\n&#34;;

    @attributes = $pdf-&#62;infoMetaAttributes(&#39;CustomField1&#39;);
    print &#34;Supported Attributes: @attributes\n&#34;;</pre>

<dt><a name='xml'></a><a name="$xml_=_$pdf-&#62;xmpMetadata($xml)"
>$xml = $pdf-&#62;xmpMetadata($xml)</a></dt>

<dd>
<p>Gets/sets the XMP XML data stream.</p>

<p><b>Example:</b></p>

<pre class="sh_perl">    $xml = $pdf-&#62;xmpMetadata();
    print &#34;PDFs Metadata reads: $xml\n&#34;;
    $xml=&#60;&#60;EOT;
    &#60;?xpacket begin=&#39;&#39; id=&#39;W5M0MpCehiHzreSzNTczkc9d&#39;?&#62;
    &#60;?adobe-xap-filters esc=&#34;CRLF&#34;?&#62;
    &#60;x:xmpmeta
      xmlns:x=&#39;adobe:ns:meta/&#39;
      x:xmptk=&#39;XMP toolkit 2.9.1-14, framework 1.6&#39;&#62;
        &#60;rdf:RDF
          xmlns:rdf=&#39;<a href="http://www.w3.org/1999/02/22-rdf-syntax-ns" class="podlinkurl"
>http://www.w3.org/1999/02/22-rdf-syntax-ns</a>#&#39;
          xmlns:iX=&#39;<a href="http://ns.adobe.com/iX/1.0/" class="podlinkurl"
>http://ns.adobe.com/iX/1.0/</a>&#39;&#62;
            &#60;rdf:Description
              rdf:about=&#39;uuid:b8659d3a-369e-11d9-b951-000393c97fd8&#39;
              xmlns:pdf=&#39;<a href="http://ns.adobe.com/pdf/1.3/" class="podlinkurl"
>http://ns.adobe.com/pdf/1.3/</a>&#39;
              pdf:Producer=&#39;Acrobat Distiller 6.0.1 for Macintosh&#39;&#62;&#60;/rdf:Description&#62;
            &#60;rdf:Description
              rdf:about=&#39;uuid:b8659d3a-369e-11d9-b951-000393c97fd8&#39;
              xmlns:xap=&#39;<a href="http://ns.adobe.com/xap/1.0/" class="podlinkurl"
>http://ns.adobe.com/xap/1.0/</a>&#39;
              xap:CreateDate=&#39;2004-11-14T08:41:16Z&#39;
              xap:ModifyDate=&#39;2004-11-14T16:38:50-08:00&#39;
              xap:CreatorTool=&#39;FrameMaker 7.0&#39;
              xap:MetadataDate=&#39;2004-11-14T16:38:50-08:00&#39;&#62;&#60;/rdf:Description&#62;
            &#60;rdf:Description
              rdf:about=&#39;uuid:b8659d3a-369e-11d9-b951-000393c97fd8&#39;
              xmlns:xapMM=&#39;<a href="http://ns.adobe.com/xap/1.0/mm/" class="podlinkurl"
>http://ns.adobe.com/xap/1.0/mm/</a>&#39;
              xapMM:DocumentID=&#39;uuid:919b9378-369c-11d9-a2b5-000393c97fd8&#39;/&#62;&#60;/rdf:Description&#62;
            &#60;rdf:Description
              rdf:about=&#39;uuid:b8659d3a-369e-11d9-b951-000393c97fd8&#39;
              xmlns:dc=&#39;<a href="http://purl.org/dc/elements/1.1/" class="podlinkurl"
>http://purl.org/dc/elements/1.1/</a>&#39;
              dc:format=&#39;application/pdf&#39;&#62;
                &#60;dc:description&#62;
                  &#60;rdf:Alt&#62;
                    &#60;rdf:li xml:lang=&#39;x-default&#39;&#62;Adobe Portable Document Format (PDF)&#60;/rdf:li&#62;
                  &#60;/rdf:Alt&#62;
                &#60;/dc:description&#62;
                &#60;dc:creator&#62;
                  &#60;rdf:Seq&#62;
                    &#60;rdf:li&#62;Adobe Systems Incorporated&#60;/rdf:li&#62;
                  &#60;/rdf:Seq&#62;
                &#60;/dc:creator&#62;
                &#60;dc:title&#62;
                  &#60;rdf:Alt&#62;
                    &#60;rdf:li xml:lang=&#39;x-default&#39;&#62;PDF Reference, version 1.6&#60;/rdf:li&#62;
                  &#60;/rdf:Alt&#62;
                &#60;/dc:title&#62;
            &#60;/rdf:Description&#62;
        &#60;/rdf:RDF&#62;
    &#60;/x:xmpmeta&#62;
    &#60;?xpacket end=&#39;w&#39;?&#62;
    EOT

    $xml = $pdf-&#62;xmpMetadata($xml);
    print &#34;PDF metadata now reads: $xml\n&#34;;</pre>

<dt><a name='pdf'></a><a name="$pdf-&#62;pageLabel($index,_$options)"
>$pdf-&#62;pageLabel($index, $options)</a></dt>

<dd>
<p>Sets page label options.</p>

<p><b>Supported Options:</b></p>

<dl>
<dt><a name='style'></a><a name="-style"
>-style</a></dt>

<dd>
<p>Roman, roman, decimal, Alpha or alpha.</p>

<dt><a name='start'></a><a name="-start"
>-start</a></dt>

<dd>
<p>Restart numbering at given number.</p>

<dt><a name='prefix'></a><a name="-prefix"
>-prefix</a></dt>

<dd>
<p>Text prefix for numbering.</p>
</dd>
</dl>

<p><b>Example:</b></p>

<pre class="sh_perl">    # Start with Roman Numerals
    $pdf-&#62;pageLabel(0, {
        -style =&#62; &#39;roman&#39;,
    });

    # Switch to Arabic
    $pdf-&#62;pageLabel(4, {
        -style =&#62; &#39;decimal&#39;,
    });

    # Numbering for Appendix A
    $pdf-&#62;pageLabel(32, {
        -start =&#62; 1,
        -prefix =&#62; &#39;A-&#39;
    });
    
    # Numbering for Appendix B
    $pdf-&#62;pageLabel( 36, {
        -start =&#62; 1,
        -prefix =&#62; &#39;B-&#39;
    });
    
    # Numbering for the Index
    $pdf-&#62;pageLabel(40, {
        -style =&#62; &#39;Roman&#39;
        -start =&#62; 1,
        -prefix =&#62; &#39;Index &#39;
    });</pre>

<dt><a name='pdf'></a><a name="$pdf-&#62;finishobjects(@objects)"
>$pdf-&#62;finishobjects(@objects)</a></dt>

<dd>
<p>Force objects to be written to file if possible.</p>

<p><b>Example:</b></p>

<pre class="sh_perl">    $pdf = PDF::API2-&#62;new(-file =&#62; &#39;our/new.pdf&#39;);
    ...
    $pdf-&#62;finishobjects($page, $gfx, $txt);
    ...
    $pdf-&#62;save();</pre>

<dt><a name='pdf'></a><a name="$pdf-&#62;update()"
>$pdf-&#62;update()</a></dt>

<dd>
<p>Saves a previously opened document.</p>

<p><b>Example:</b></p>

<pre class="sh_perl">    $pdf = PDF::API2-&#62;open(&#39;our/to/be/updated.pdf&#39;);
    ...
    $pdf-&#62;update();</pre>

<dt><a name='pdf'></a><a name="$pdf-&#62;saveas($file)"
>$pdf-&#62;saveas($file)</a></dt>

<dd>
<p>Saves the document to file.</p>

<p><b>Example:</b></p>

<pre class="sh_perl">    $pdf = PDF::API2-&#62;new();
    ...
    $pdf-&#62;saveas(&#39;our/new.pdf&#39;);</pre>

<dt><a name='string'></a><a name="$string_=_$pdf-&#62;stringify()"
>$string = $pdf-&#62;stringify()</a></dt>

<dd>
<p>Returns the document as a string.</p>

<p><b>Example:</b></p>

<pre class="sh_perl">    $pdf = PDF::API2-&#62;new();
    ...
    print $pdf-&#62;stringify();</pre>

<dt><a name='pdf'></a><a name="$pdf-&#62;end()"
>$pdf-&#62;end()</a></dt>

<dd>
<p>Destroys the document.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="PAGE_METHODS"
>PAGE METHODS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<dl>
<dt><a name='page'></a><a name="$page_=_$pdf-&#62;page()"
>$page = $pdf-&#62;page()</a></dt>

<dd>
<dt><a name='page'></a><a name="$page_=_$pdf-&#62;page($page_number)"
>$page = $pdf-&#62;page($page_number)</a></dt>

<dd>
<p>Returns a new page object. By default, the page is added to the end of the document. If you include an existing page number, the new page will be inserted in that position, pushing existing pages back.</p>

<p>$page_number can also have one of the following values:</p>

<dl>
<dt><a name='1'></a><a name="-1_inserts_the_new_page_as_the_second-last_page"
>-1 inserts the new page as the second-last page</a></dt>

<dd>
<dt><a name='0'></a><a name="0_inserts_the_page_as_the_last_page"
>0 inserts the page as the last page</a></dt>
</dl>

<p><b>Example:</b></p>

<pre class="sh_perl">    $pdf = PDF::API2-&#62;new();

    # Add a page.  This becomes page 1.
    $page = $pdf-&#62;page();

    # Add a new first page.  $page becomes page 2.
    $another_page = $pdf-&#62;page(1);</pre>

<dt><a name='page'></a><a name="$page_=_$pdf-&#62;openpage($page_number)"
>$page = $pdf-&#62;openpage($page_number)</a></dt>

<dd>
<p>Returns the <a href="/~ssimms/PDF-API2-2.019/lib/PDF/API2/Page.pm" class="podlinkpod"
>PDF::API2::Page</a> object of page $page_number.</p>

<p>If $page_number is 0 or -1, it will return the last page in the document.</p>

<p><b>Example:</b></p>

<pre class="sh_perl">    $pdf = PDF::API2-&#62;open(&#39;our/99page.pdf&#39;);
    $page = $pdf-&#62;openpage(1);   # returns the first page
    $page = $pdf-&#62;openpage(99);  # returns the last page
    $page = $pdf-&#62;openpage(-1);  # returns the last page
    $page = $pdf-&#62;openpage(999); # returns undef</pre>

<dt><a name='xoform'></a><a name="$xoform_=_$pdf-&#62;importPageIntoForm($source_pdf,_$source_page_number)"
>$xoform = $pdf-&#62;importPageIntoForm($source_pdf, $source_page_number)</a></dt>

<dd>
<p>Returns a Form XObject created by extracting the specified page from $source_pdf.</p>

<p>This is useful if you want to transpose the imported page somewhat differently onto a page (e.g. two-up, four-up, etc.).</p>

<p>If $source_page_number is 0 or -1, it will return the last page in the document.</p>

<p><b>Example:</b></p>

<pre class="sh_perl">    $pdf = PDF::API2-&#62;new();
    $old = PDF::API2-&#62;open(&#39;our/old.pdf&#39;);
    $page = $pdf-&#62;page();
    $gfx = $page-&#62;gfx();

    # Import Page 2 from the old PDF
    $xo = $pdf-&#62;importPageIntoForm($old, 2);

    # Add it to the new PDF&#39;s first page at 1/2 scale
    $gfx-&#62;formimage($xo, 0, 0, 0.5); 

    $pdf-&#62;saveas(&#39;our/new.pdf&#39;);</pre>

<p><b>Note:</b> You can only import a page from an existing PDF file.</p>

<dt><a name='page'></a><a name="$page_=_$pdf-&#62;importpage($source_pdf,_$source_page_number,_$target_page_number)"
>$page = $pdf-&#62;importpage($source_pdf, $source_page_number, $target_page_number)</a></dt>

<dd>
<p>Imports a page from $source_pdf and adds it to the specified position in $pdf.</p>

<p>If $source_page_number or $target_page_number is 0 or -1, the last page in the document is used.</p>

<p><b>Note:</b> If you pass a page object instead of a page number for $target_page_number, the contents of the page will be merged into the existing page.</p>

<p><b>Example:</b></p>

<pre class="sh_perl">    $pdf = PDF::API2-&#62;new();
    $old = PDF::API2-&#62;open(&#39;our/old.pdf&#39;);

    # Add page 2 from the old PDF as page 1 of the new PDF
    $page = $pdf-&#62;importpage($old, 2);

    $pdf-&#62;saveas(&#39;our/new.pdf&#39;);</pre>

<p><b>Note:</b> You can only import a page from an existing PDF file.</p>

<dt><a name='count'></a><a name="$count_=_$pdf-&#62;pages()"
>$count = $pdf-&#62;pages()</a></dt>

<dd>
<p>Returns the number of pages in the document.</p>

<dt><a name='pdf'></a><a name="$pdf-&#62;mediabox($name)"
>$pdf-&#62;mediabox($name)</a></dt>

<dd>
<dt><a name='pdf'></a><a name="$pdf-&#62;mediabox($w,_$h)"
>$pdf-&#62;mediabox($w, $h)</a></dt>

<dd>
<dt><a name='pdf'></a><a name="$pdf-&#62;mediabox($llx,_$lly,_$urx,_$ury)"
>$pdf-&#62;mediabox($llx, $lly, $urx, $ury)</a></dt>

<dd>
<p>Sets the global mediabox.</p>

<p><b>Example:</b></p>

<pre class="sh_perl">    $pdf = PDF::API2-&#62;new();
    $pdf-&#62;mediabox(&#39;A4&#39;);
    ...
    $pdf-&#62;saveas(&#39;our/new.pdf&#39;);

    $pdf = PDF::API2-&#62;new();
    $pdf-&#62;mediabox(595, 842);
    ...
    $pdf-&#62;saveas(&#39;our/new.pdf&#39;);

    $pdf = PDF::API2-&#62;new;
    $pdf-&#62;mediabox(0, 0, 595, 842);
    ...
    $pdf-&#62;saveas(&#39;our/new.pdf&#39;);</pre>

<dt><a name='pdf'></a><a name="$pdf-&#62;cropbox($name)"
>$pdf-&#62;cropbox($name)</a></dt>

<dd>
<dt><a name='pdf'></a><a name="$pdf-&#62;cropbox($w,_$h)"
>$pdf-&#62;cropbox($w, $h)</a></dt>

<dd>
<dt><a name='pdf'></a><a name="$pdf-&#62;cropbox($llx,_$lly,_$urx,_$ury)"
>$pdf-&#62;cropbox($llx, $lly, $urx, $ury)</a></dt>

<dd>
<p>Sets the global cropbox.</p>

<dt><a name='pdf'></a><a name="$pdf-&#62;bleedbox($name)"
>$pdf-&#62;bleedbox($name)</a></dt>

<dd>
<dt><a name='pdf'></a><a name="$pdf-&#62;bleedbox($w,_$h)"
>$pdf-&#62;bleedbox($w, $h)</a></dt>

<dd>
<dt><a name='pdf'></a><a name="$pdf-&#62;bleedbox($llx,_$lly,_$urx,_$ury)"
>$pdf-&#62;bleedbox($llx, $lly, $urx, $ury)</a></dt>

<dd>
<p>Sets the global bleedbox.</p>

<dt><a name='pdf'></a><a name="$pdf-&#62;trimbox($name)"
>$pdf-&#62;trimbox($name)</a></dt>

<dd>
<dt><a name='pdf'></a><a name="$pdf-&#62;trimbox($w,_$h)"
>$pdf-&#62;trimbox($w, $h)</a></dt>

<dd>
<dt><a name='pdf'></a><a name="$pdf-&#62;trimbox($llx,_$lly,_$urx,_$ury)"
>$pdf-&#62;trimbox($llx, $lly, $urx, $ury)</a></dt>

<dd>
<p>Sets the global trimbox.</p>

<dt><a name='pdf'></a><a name="$pdf-&#62;artbox($name)"
>$pdf-&#62;artbox($name)</a></dt>

<dd>
<dt><a name='pdf'></a><a name="$pdf-&#62;artbox($w,_$h)"
>$pdf-&#62;artbox($w, $h)</a></dt>

<dd>
<dt><a name='pdf'></a><a name="$pdf-&#62;artbox($llx,_$lly,_$urx,_$ury)"
>$pdf-&#62;artbox($llx, $lly, $urx, $ury)</a></dt>

<dd>
<p>Sets the global artbox.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="FONT_METHODS"
>FONT METHODS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<dl>
<dt><a name='directories'></a><a name="@directories_=_PDF::API2::addFontDirs($dir1,_$dir2,_...)"
>@directories = PDF::API2::addFontDirs($dir1, $dir2, ...)</a></dt>

<dd>
<p>Adds one or more directories to the search path for finding font files.</p>

<p>Returns the list of searched directories.</p>

<dt><a name='font'></a><a name="$font_=_$pdf-&#62;corefont($fontname,_[%options])"
>$font = $pdf-&#62;corefont($fontname, [%options])</a></dt>

<dd>
<p>Returns a new Adobe core font object.</p>

<p><b>Examples:</b></p>

<pre class="sh_perl">    $font = $pdf-&#62;corefont(&#39;Times-Roman&#39;);
    $font = $pdf-&#62;corefont(&#39;Times-Bold&#39;);
    $font = $pdf-&#62;corefont(&#39;Helvetica&#39;);
    $font = $pdf-&#62;corefont(&#39;ZapfDingbats&#39;);</pre>

<p>Valid %options are:</p>

<dl>
<dt><a name='encode'></a><a name="-encode"
>-encode</a></dt>

<dd>
<p>Changes the encoding of the font from its default.</p>

<dt><a name='dokern'></a><a name="-dokern"
>-dokern</a></dt>

<dd>
<p>Enables kerning if data is available.</p>
</dd>
</dl>

<p>See Also: <a href="/~ssimms/PDF-API2-2.019/lib/PDF/API2/Resource/Font/CoreFont.pm" class="podlinkpod"
>PDF::API2::Resource::Font::CoreFont</a>.</p>

<dt><a name='font'></a><a name="$font_=_$pdf-&#62;psfont($ps_file,_[%options])"
>$font = $pdf-&#62;psfont($ps_file, [%options])</a></dt>

<dd>
<p>Returns a new Adobe Type1 font object.</p>

<p><b>Examples:</b></p>

<pre class="sh_perl">    $font = $pdf-&#62;psfont(&#39;Times-Book.pfa&#39;, -afmfile =&#62; &#39;Times-Book.afm&#39;);
    $font = $pdf-&#62;psfont(&#39;/fonts/Synest-FB.pfb&#39;, -pfmfile =&#62; &#39;/fonts/Synest-FB.pfm&#39;);</pre>

<p>Valid %options are:</p>

<dl>
<dt><a name='encode'></a><a name="-encode"
>-encode</a></dt>

<dd>
<p>Changes the encoding of the font from its default.</p>

<dt><a name='afmfile'></a><a name="-afmfile"
>-afmfile</a></dt>

<dd>
<p>Specifies the location of the font metrics file.</p>

<dt><a name='pfmfile'></a><a name="-pfmfile"
>-pfmfile</a></dt>

<dd>
<p>Specifies the location of the printer font metrics file. This option overrides the -encode option.</p>

<dt><a name='dokern'></a><a name="-dokern"
>-dokern</a></dt>

<dd>
<p>Enables kerning if data is available.</p>
</dd>
</dl>

<dt><a name='font'></a><a name="$font_=_$pdf-&#62;ttfont($ttf_file,_[%options])"
>$font = $pdf-&#62;ttfont($ttf_file, [%options])</a></dt>

<dd>
<p>Returns a new TrueType or OpenType font object.</p>

<p><b>Examples:</b></p>

<pre class="sh_perl">    $font = $pdf-&#62;ttfont(&#39;Times.ttf&#39;);
    $font = $pdf-&#62;ttfont(&#39;Georgia.otf&#39;);</pre>

<p>Valid %options are:</p>

<dl>
<dt><a name='encode'></a><a name="-encode"
>-encode</a></dt>

<dd>
<p>Changes the encoding of the font from its default.</p>

<dt><a name='isocmap'></a><a name="-isocmap"
>-isocmap</a></dt>

<dd>
<p>Use the ISO Unicode Map instead of the default MS Unicode Map.</p>

<dt><a name='dokern'></a><a name="-dokern"
>-dokern</a></dt>

<dd>
<p>Enables kerning if data is available.</p>

<dt><a name='noembed'></a><a name="-noembed"
>-noembed</a></dt>

<dd>
<p>Disables embedding of the font file.</p>
</dd>
</dl>

<dt><a name='font'></a><a name="$font_=_$pdf-&#62;cjkfont($cjkname,_[%options])"
>$font = $pdf-&#62;cjkfont($cjkname, [%options])</a></dt>

<dd>
<p>Returns a new CJK font object.</p>

<p><b>Examples:</b></p>

<pre class="sh_perl">    $font = $pdf-&#62;cjkfont(&#39;korean&#39;);
    $font = $pdf-&#62;cjkfont(&#39;traditional&#39;);</pre>

<p>Valid %options are:</p>

<dl>
<dt><a name='encode'></a><a name="-encode"
>-encode</a></dt>

<dd>
<p>Changes the encoding of the font from its default.</p>
</dd>
</dl>

<p>See Also: <a href="/~ssimms/PDF-API2-2.019/lib/PDF/API2/Resource/CIDFont/CJKFont.pm" class="podlinkpod"
>PDF::API2::Resource::CIDFont::CJKFont</a></p>

<dt><a name='font'></a><a name="$font_=_$pdf-&#62;synfont($basefont,_[%options])"
>$font = $pdf-&#62;synfont($basefont, [%options])</a></dt>

<dd>
<p>Returns a new synthetic font object.</p>

<p><b>Examples:</b></p>

<pre class="sh_perl">    $cf  = $pdf-&#62;corefont(&#39;Times-Roman&#39;, -encode =&#62; &#39;latin1&#39;);
    $sf  = $pdf-&#62;synfont($cf, -slant =&#62; 0.85);  # compressed 85%
    $sfb = $pdf-&#62;synfont($cf, -bold =&#62; 1);      # embolden by 10em
    $sfi = $pdf-&#62;synfont($cf, -oblique =&#62; -12); # italic at -12 degrees</pre>

<p>Valid %options are:</p>

<dl>
<dt><a name='slant'></a><a name="-slant"
>-slant</a></dt>

<dd>
<p>Slant/expansion factor (0.1-0.9 = slant, 1.1+ = expansion).</p>

<dt><a name='oblique'></a><a name="-oblique"
>-oblique</a></dt>

<dd>
<p>Italic angle (+/-)</p>

<dt><a name='bold'></a><a name="-bold"
>-bold</a></dt>

<dd>
<p>Emboldening factor (0.1+, bold = 1, heavy = 2, ...)</p>

<dt><a name='space'></a><a name="-space"
>-space</a></dt>

<dd>
<p>Additional character spacing in ems (0-1000)</p>
</dd>
</dl>

<p>See Also: <a href="/~ssimms/PDF-API2-2.019/lib/PDF/API2/Resource/Font/SynFont.pm" class="podlinkpod"
>PDF::API2::Resource::Font::SynFont</a></p>

<dt><a name='font'></a><a name="$font_=_$pdf-&#62;bdfont($bdf_file)"
>$font = $pdf-&#62;bdfont($bdf_file)</a></dt>

<dd>
<p>Returns a new BDF font object, based on the specified Adobe BDF file.</p>

<p>See Also: <a href="/~ssimms/PDF-API2-2.019/lib/PDF/API2/Resource/Font/BdFont.pm" class="podlinkpod"
>PDF::API2::Resource::Font::BdFont</a></p>

<dt><a name='font'></a><a name="$font_=_$pdf-&#62;unifont(@fontspecs,_%options)"
>$font = $pdf-&#62;unifont(@fontspecs, %options)</a></dt>

<dd>
<p>Returns a new uni-font object, based on the specified fonts and options.</p>

<p><b>BEWARE:</b> This is not a true pdf-object, but a virtual/abstract font definition!</p>

<p>See Also: <a href="/~ssimms/PDF-API2-2.019/lib/PDF/API2/Resource/UniFont.pm" class="podlinkpod"
>PDF::API2::Resource::UniFont</a>.</p>

<p>Valid %options are:</p>

<dl>
<dt><a name='encode'></a><a name="-encode"
>-encode</a></dt>

<dd>
<p>Changes the encoding of the font from its default.</p>
</dd>
</dl>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="IMAGE_METHODS"
>IMAGE METHODS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<dl>
<dt><a name='jpeg'></a><a name="$jpeg_=_$pdf-&#62;image_jpeg($file)"
>$jpeg = $pdf-&#62;image_jpeg($file)</a></dt>

<dd>
<p>Imports and returns a new JPEG image object.</p>

<dt><a name='tiff'></a><a name="$tiff_=_$pdf-&#62;image_tiff($file)"
>$tiff = $pdf-&#62;image_tiff($file)</a></dt>

<dd>
<p>Imports and returns a new TIFF image object.</p>

<dt><a name='pnm'></a><a name="$pnm_=_$pdf-&#62;image_pnm($file)"
>$pnm = $pdf-&#62;image_pnm($file)</a></dt>

<dd>
<p>Imports and returns a new PNM image object.</p>

<dt><a name='png'></a><a name="$png_=_$pdf-&#62;image_png($file)"
>$png = $pdf-&#62;image_png($file)</a></dt>

<dd>
<p>Imports and returns a new PNG image object.</p>

<dt><a name='gif'></a><a name="$gif_=_$pdf-&#62;image_gif($file)"
>$gif = $pdf-&#62;image_gif($file)</a></dt>

<dd>
<p>Imports and returns a new GIF image object.</p>

<dt><a name='gdf'></a><a name="$gdf_=_$pdf-&#62;image_gd($gd_object,_%options)"
>$gdf = $pdf-&#62;image_gd($gd_object, %options)</a></dt>

<dd>
<p>Imports and returns a new image object from GD::Image.</p>

<p><b>Options:</b> The only option currently supported is <code>-lossless =&#62; 1</code>.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="COLORSPACE_METHODS"
>COLORSPACE METHODS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<dl>
<dt><a name='cs'></a><a name="$cs_=_$pdf-&#62;colorspace_act($file)"
>$cs = $pdf-&#62;colorspace_act($file)</a></dt>

<dd>
<p>Returns a new colorspace object based on an Adobe Color Table file.</p>

<p>See <a href="/~ssimms/PDF-API2-2.019/lib/PDF/API2/Resource/ColorSpace/Indexed/ACTFile.pm" class="podlinkpod"
>PDF::API2::Resource::ColorSpace::Indexed::ACTFile</a> for a reference to the file format&#39;s specification.</p>

<dt><a name='cs'></a><a name="$cs_=_$pdf-&#62;colorspace_web()"
>$cs = $pdf-&#62;colorspace_web()</a></dt>

<dd>
<p>Returns a new colorspace-object based on the web color palette.</p>

<dt><a name='cs'></a><a name="$cs_=_$pdf-&#62;colorspace_hue()"
>$cs = $pdf-&#62;colorspace_hue()</a></dt>

<dd>
<p>Returns a new colorspace-object based on the hue color palette.</p>

<p>See <a href="/perldoc?PDF%3A%3AAPI2%3A%3AResource%3A%3AColorSpace%3A%3AIndexed%3A%3AHue" class="podlinkpod"
>PDF::API2::Resource::ColorSpace::Indexed::Hue</a> for an explanation.</p>

<dt><a name='cs'></a><a name="$cs_=_$pdf-&#62;colorspace_separation($tint,_$color)"
>$cs = $pdf-&#62;colorspace_separation($tint, $color)</a></dt>

<dd>
<p>Returns a new separation colorspace object based on the parameters.</p>

<p><i>$tint</i> can be any valid ink identifier, including but not limited to: &#39;Cyan&#39;, &#39;Magenta&#39;, &#39;Yellow&#39;, &#39;Black&#39;, &#39;Red&#39;, &#39;Green&#39;, &#39;Blue&#39; or &#39;Orange&#39;.</p>

<p><i>$color</i> must be a valid color specification limited to: &#39;#rrggbb&#39;, &#39;!hhssvv&#39;, &#39;%ccmmyykk&#39; or a &#34;named color&#34; (rgb).</p>

<p>The colorspace model will automatically be chosen based on the specified color.</p>

<dt><a name='cs'></a><a name="$cs_=_$pdf-&#62;colorspace_devicen(\@tintCSx,_[$samples])"
>$cs = $pdf-&#62;colorspace_devicen(\@tintCSx, [$samples])</a></dt>

<dd>
<p>Returns a new DeviceN colorspace object based on the parameters.</p>

<p><b>Example:</b></p>

<pre class="sh_perl">    $cy = $pdf-&#62;colorspace_separation(&#39;Cyan&#39;,    &#39;%f000&#39;);
    $ma = $pdf-&#62;colorspace_separation(&#39;Magenta&#39;, &#39;%0f00&#39;);
    $ye = $pdf-&#62;colorspace_separation(&#39;Yellow&#39;,  &#39;%00f0&#39;);
    $bk = $pdf-&#62;colorspace_separation(&#39;Black&#39;,   &#39;%000f&#39;);

    $pms023 = $pdf-&#62;colorspace_separation(&#39;PANTONE 032CV&#39;, &#39;%0ff0&#39;);

    $dncs = $pdf-&#62;colorspace_devicen( [ $cy,$ma,$ye,$bk,$pms023 ] );</pre>

<p>The colorspace model will automatically be chosen based on the first colorspace specified.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="BARCODE_METHODS"
>BARCODE METHODS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<dl>
<dt><a name='bc'></a><a name="$bc_=_$pdf-&#62;xo_codabar(%options)"
>$bc = $pdf-&#62;xo_codabar(%options)</a></dt>

<dd>
<dt><a name='bc'></a><a name="$bc_=_$pdf-&#62;xo_code128(%options)"
>$bc = $pdf-&#62;xo_code128(%options)</a></dt>

<dd>
<dt><a name='bc'></a><a name="$bc_=_$pdf-&#62;xo_2of5int(%options)"
>$bc = $pdf-&#62;xo_2of5int(%options)</a></dt>

<dd>
<dt><a name='bc'></a><a name="$bc_=_$pdf-&#62;xo_3of9(%options)"
>$bc = $pdf-&#62;xo_3of9(%options)</a></dt>

<dd>
<dt><a name='bc'></a><a name="$bc_=_$pdf-&#62;xo_ean13(%options)"
>$bc = $pdf-&#62;xo_ean13(%options)</a></dt>

<dd>
<p>Creates the specified barcode object as a form XObject.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="OTHER_METHODS"
>OTHER METHODS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<dl>
<dt><a name='xo'></a><a name="$xo_=_$pdf-&#62;xo_form()"
>$xo = $pdf-&#62;xo_form()</a></dt>

<dd>
<p>Returns a new form XObject.</p>

<dt><a name='egs'></a><a name="$egs_=_$pdf-&#62;egstate()"
>$egs = $pdf-&#62;egstate()</a></dt>

<dd>
<p>Returns a new extended graphics state object.</p>

<dt><a name='obj'></a><a name="$obj_=_$pdf-&#62;pattern()"
>$obj = $pdf-&#62;pattern()</a></dt>

<dd>
<p>Returns a new pattern object.</p>

<dt><a name='obj'></a><a name="$obj_=_$pdf-&#62;shading()"
>$obj = $pdf-&#62;shading()</a></dt>

<dd>
<p>Returns a new shading object.</p>

<dt><a name='otls'></a><a name="$otls_=_$pdf-&#62;outlines()"
>$otls = $pdf-&#62;outlines()</a></dt>

<dd>
<p>Returns a new or existing outlines object.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="RESOURCE_METHODS"
>RESOURCE METHODS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<dl>
<dt><a name='pdf'></a><a name="$pdf-&#62;resource($type,_$key,_$obj,_$force)"
>$pdf-&#62;resource($type, $key, $obj, $force)</a></dt>

<dd>
<p>Adds a resource to the global PDF tree.</p>

<p><b>Example:</b></p>

<pre class="sh_perl">    $pdf-&#62;resource(&#39;Font&#39;, $fontkey, $fontobj);
    $pdf-&#62;resource(&#39;XObject&#39;, $imagekey, $imageobj);
    $pdf-&#62;resource(&#39;Shading&#39;, $shadekey, $shadeobj);
    $pdf-&#62;resource(&#39;ColorSpace&#39;, $spacekey, $speceobj);</pre>

<p><b>Note:</b> You only have to add the required resources if they are NOT handled by the font, image, shade or space methods.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="BUGS"
>BUGS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This module does not work with perl&#39;s -l command-line switch.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHOR"
>AUTHOR <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>PDF::API2 was originally written by Alfred Reibenschuh.</p>

<p>It is currently being maintained by Steve Simms.</p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78262 Uploads, 24722 Distributions
105996 Modules, 9649 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Fri Apr 27 15:29:51 2012 GMT (0.106659889221191) @cpansearch1 -->
 </body>
</html>
