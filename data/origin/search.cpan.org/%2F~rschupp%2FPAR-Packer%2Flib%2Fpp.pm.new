<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>pp - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","PAR-Packer",3]);
    _gaq.push(["_setCustomVar",5,"Release","PAR-Packer-1.013",3]);
    _gaq.push(["_setCustomVar",3,"Module","pp",3]);
    _gaq.push(["_setCustomVar",1,"Author","RSCHUPP",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?pp">permalink</a></div>
  <a href="/~rschupp/">Roderich Schupp</a> &gt;
  <a href="/~rschupp/PAR-Packer/">PAR-Packer</a> &gt;
  pp
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/12f1ea5df52a78cb3a11495a66e92444?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/R/RS/RSCHUPP/PAR-Packer-1.013.tar.gz">PAR-Packer-1.013.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=pp;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~RSCHUPP/PAR-Packer-1.013/lib/pp.pm">Annotate this POD
(6)
</a></p>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>New&nbsp;</td><td style="text-align:right"> 18</td></tr>
<tr><td>Open&nbsp;</td><td style="text-align:right"> 37</td></tr>
<tr><td>Stalled&nbsp;</td><td style="text-align:right"> 5</td></tr>
</table>
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=PAR-Packer">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  0.992 &nbsp;
<span class="noprint">
  <a href="/src/RSCHUPP/PAR-Packer-1.013/lib/pp.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#EXAMPLES'>EXAMPLES</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <li class='indexItem indexItem1'><a href='#OPTIONS'>OPTIONS</a>
  <li class='indexItem indexItem1'><a href='#ENVIRONMENT'>ENVIRONMENT</a>
  <li class='indexItem indexItem1'><a href='#NOTES'>NOTES</a>
  <li class='indexItem indexItem1'><a href='#SEE_ALSO'>SEE ALSO</a>
  <li class='indexItem indexItem1'><a href='#ACKNOWLEDGMENTS'>ACKNOWLEDGMENTS</a>
  <li class='indexItem indexItem1'><a href='#AUTHORS'>AUTHORS</a>
  <li class='indexItem indexItem1'><a href='#COPYRIGHT'>COPYRIGHT</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>pp - PAR Packager</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><b>pp</b> [&#160;<b>-ABCEFILMPTSVXacdefghilmnoprsvxz</b>&#160;] [&#160;<i>parfile</i>&#160;|&#160;<i>scriptfile</i>&#160;]...</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="EXAMPLES"
>EXAMPLES <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Note: When running on Microsoft Windows,
the <em>a.out</em> below will be replaced by <em>a.exe</em> instead.</p>

<pre class="sh_perl">    % pp hello.pl               # Pack &#39;hello.pl&#39; into executable &#39;a.out&#39;
    % pp -o hello hello.pl      # Pack &#39;hello.pl&#39; into executable &#39;hello&#39;
                                # (or &#39;hello.exe&#39; on Win32)

    % pp -o foo foo.pl bar.pl   # Pack &#39;foo.pl&#39; and &#39;bar.pl&#39; into &#39;foo&#39;
    % ./foo                     # Run &#39;foo.pl&#39; inside &#39;foo&#39;
    % mv foo bar; ./bar         # Run &#39;bar.pl&#39; inside &#39;foo&#39;
    % mv bar baz; ./baz         # Error: Can&#39;t open perl script &#34;baz&#34;

    % pp -p file                # Creates a PAR file, &#39;a.par&#39;
    % pp -o hello a.par         # Pack &#39;a.par&#39; to executable &#39;hello&#39;
    % pp -S -o hello file       # Combine the two steps above

    % pp -p -o out.par file     # Creates &#39;out.par&#39; from &#39;file&#39;
    % pp -B -p -o out.par file  # same as above, but bundles core modules
                                # and removes any local paths from @INC
    % pp -P -o out.pl file      # Creates &#39;out.pl&#39; from &#39;file&#39;
    % pp -B -p -o out.pl file   # same as above, but bundles core modules
                                # and removes any local paths from @INC
                                # (-B is assumed when making executables)

    % pp -e &#34;print 123&#34;         # Pack a one-liner into &#39;a.out&#39;
    % pp -p -e &#34;print 123&#34;      # Creates a PAR file &#39;a.par&#39;
    % pp -P -e &#34;print 123&#34;      # Creates a perl script &#39;a.pl&#39;

    % pp -c hello               # Check dependencies from &#34;perl -c hello&#34;
    % pp -x hello               # Check dependencies from &#34;perl hello&#34;
    % pp -n -x hello            # same as above, but skips static scanning

    % pp -I /foo hello          # Extra include paths
    % pp -M Foo::Bar hello      # Extra modules in the include path
    % pp -M abbrev.pl hello     # Extra libraries in the include path
    % pp -X Foo::Bar hello      # Exclude modules
    % pp -a data.txt hello      # Additional data files

    % pp -r hello               # Pack &#39;hello&#39; into &#39;a.out&#39;, runs &#39;a.out&#39;
    % pp -r hello a b c         # Pack &#39;hello&#39; into &#39;a.out&#39;, runs &#39;a.out&#39;
                                # with arguments &#39;a b c&#39;

    % pp hello --log=c          # Pack &#39;hello&#39; into &#39;a.out&#39;, logs
                                # messages into &#39;c&#39;

    # Pack &#39;hello&#39; into a console-less &#39;out.exe&#39; with icon (Win32 only)
    % pp --gui --icon hello.ico -o out.exe hello

    % pp @file hello.pl         # Pack &#39;hello.pl&#39; but read _additional_
                                # options from file &#39;file&#39;</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><em>pp</em> creates standalone executables from Perl programs, using the compressed packager provided by <a href="/perldoc?PAR" class="podlinkpod"
>PAR</a>, and dependency detection heuristics offered by <a href="/perldoc?Module%3A%3AScanDeps" class="podlinkpod"
>Module::ScanDeps</a>. Source files are compressed verbatim without compilation.</p>

<p>You may think of <em>pp</em> as &#34;<em>perlcc</em> that works without hassle&#34;. :-)</p>

<p>A GUI interface is also available as the <em>tkpp</em> command.</p>

<p>It does not provide the compilation-step acceleration provided by <em>perlcc</em> (however, see <b>-f</b> below for byte-compiled, source-hiding techniques), but makes up for it with better reliability, smaller executable size, and full retrieval of original source code.</p>

<p>When a single input program is specified, the resulting executable will behave identically as that program. However, when multiple programs are packaged, the produced executable will run the one that has the same basename as <code>$0</code> (i.e. the filename used to invoke it). If nothing matches, it dies with the error <code>Can&#39;t open perl script &#34;$0&#34;</code>.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="OPTIONS"
>OPTIONS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Options are available in a <i>short</i> form and a <i>long</i> form. For example, the three lines below are all equivalent:</p>

<pre class="sh_perl">    % pp -o output.exe input.pl
    % pp --output output.exe input.pl
    % pp --output=output.exe input.pl</pre>

<p>Since the command lines can become sufficiently long to reach the limits imposed by some shells, it is possible to have <i>pp</i> read some of its options from one or more text files. The basic usage is to just include an argument starting with an &#39;at&#39; (@) sigil. This argument will be interpeted as a file to read options from. Mixing ordinary options and <code>@file</code> options is possible. This is implemented using the <a href="/perldoc?Getopt%3A%3AArgvFile" class="podlinkpod"
>Getopt::ArgvFile</a> module, so read its documentation for advanced usage.</p>

<dl>
<dt><a name='a'></a><a name="-a,_--addfile=FILE|DIR"
><b>-a</b>, <b>--addfile</b>=<i>FILE</i>|<i>DIR</i></a></dt>

<dd>
<p>Add an extra file into the package. If the file is a directory, recursively add all files inside that directory, with links turned into actual files.</p>

<p>By default, files are placed under <code>/</code> inside the package with their original names. You may override this by appending the target filename after a <code>;</code>, like this:</p>

<pre class="sh_perl">    % pp -a &#34;old_filename.txt;new_filename.txt&#34;
    % pp -a &#34;old_dirname;new_dirname&#34;</pre>

<p>You may specify <code>-a</code> multiple times.</p>

<dt><a name='A'></a><a name="-A,_--addlist=FILE"
><b>-A</b>, <b>--addlist</b>=<i>FILE</i></a></dt>

<dd>
<p>Read a list of file/directory names from <i>FILE</i>, adding them into the package. Each line in <i>FILE</i> is taken as an argument to <b>-a</b> above.</p>

<p>You may specify <code>-A</code> multiple times.</p>

<dt><a name='B'></a><a name="-B,_--bundle"
><b>-B</b>, <b>--bundle</b></a></dt>

<dd>
<p>Bundle core modules in the resulting package. This option is enabled by default, except when <code>-p</code> or <code>-P</code> is specified.</p>

<p>Since PAR version 0.953, this also strips any local paths from the list of module search paths <code>@INC</code> before running the contained script.</p>

<dt><a name='C'></a><a name="-C,_--clean"
><b>-C</b>, <b>--clean</b></a></dt>

<dd>
<p>Clean up temporary files extracted from the application at runtime. By default, these files are cached in the temporary directory; this allows the program to start up faster next time.</p>

<dt><a name='c'></a><a name="-c,_--compile"
><b>-c</b>, <b>--compile</b></a></dt>

<dd>
<p>Run <code>perl -c inputfile</code> to determine additonal run-time dependencies.</p>

<dt><a name='cd'></a><a name="-cd,_--cachedeps=FILE"
><b>-cd</b>, <b>--cachedeps</b>=<i>FILE</i></a></dt>

<dd>
<p>Use <i>FILE</i> to cache detected dependencies. Creates <i>FILE</i> unless present. This will speed up the scanning process on subsequent runs.</p>

<dt><a name='d'></a><a name="-d,_--dependent"
><b>-d</b>, <b>--dependent</b></a></dt>

<dd>
<p>Reduce the executable size by not including a copy of perl interpreter. Executables built this way will need a separate <em>perl5x.dll</em> or <em>libperl.so</em> to function correctly. This option is only available if perl is built as a shared library.</p>

<dt><a name='e'></a><a name="-e,_--eval=STRING"
><b>-e</b>, <b>--eval</b>=<i>STRING</i></a></dt>

<dd>
<p>Package a one-liner, much the same as <code>perl -e &#39;...&#39;</code></p>

<dt><a name='E'></a><a name="-E,_--evalfeature=STRING"
><b>-E</b>, <b>--evalfeature</b>=<i>STRING</i></a></dt>

<dd>
<p>Behaves just like <code>-e</code>, except that it implicitly enables all optional features (in the main compilation unit) with Perl 5.10 and later. See <a href="/perldoc?feature" class="podlinkpod"
>feature</a>.</p>

<dt><a name='x'></a><a name="-x,_--execute"
><b>-x</b>, <b>--execute</b></a></dt>

<dd>
<p>Run <code>perl inputfile</code> to determine additonal run-time dependencies.</p>

<dt><a name='X'></a><a name="-X,_--exclude=MODULE"
><b>-X</b>, <b>--exclude</b>=<i>MODULE</i></a></dt>

<dd>
<p>Exclude the given module from the dependency search path and from the package. If the given file is a zip or par or par executable, all the files in the given file (except MANIFEST, META.yml and script/*) will be excluded and the output file will &#34;use&#34; the given file at runtime.</p>

<dt><a name='f'></a><a name="-f,_--filter=FILTER"
><b>-f</b>, <b>--filter</b>=<i>FILTER</i></a></dt>

<dd>
<p>Filter source script(s) with a <a href="/~rschupp/PAR-Packer-1.013/lib/PAR/Filter.pm" class="podlinkpod"
>PAR::Filter</a> subclass. You may specify multiple such filters.</p>

<p>If you wish to hide the source code from casual prying, this will do:</p>

<pre class="sh_perl">    % pp -f Bleach source.pl</pre>

<p>If you are more serious about hiding your source code, you should have a look at Steve Hay&#39;s <a href="/perldoc?PAR%3A%3AFilter%3A%3ACrypto" class="podlinkpod"
>PAR::Filter::Crypto</a> module. Make sure you understand the Filter::Crypto caveats!</p>

<dt><a name='g'></a><a name="-g,_--gui"
><b>-g</b>, <b>--gui</b></a></dt>

<dd>
<p>Build an executable that does not have a console window. This option is ignored on non-MSWin32 platforms or when <code>-p</code> is specified.</p>

<dt><a name='h'></a><a name="-h,_--help"
><b>-h</b>, <b>--help</b></a></dt>

<dd>
<p>Show basic usage information.</p>

<dt><a name='i'></a><a name="-i,_--icon=FILE"
><b>-i</b>, <b>--icon</b>=<i>FILE</i></a></dt>

<dd>
<p>Specify an icon file (in <em>.ico</em>, <em>.exe</em> or <em>.dll</em> format) for the executable. This option is ignored on non-MSWin32 platforms or when <code>-p</code> is specified.</p>

<dt><a name='N'></a><a name="-N,_--info=KEY=VAL"
><b>-N</b>, <b>--info</b>=<i>KEY=VAL</i></a></dt>

<dd>
<p>Add additional information for the packed file, both in <code>META.yml</code> and in the executable header (if applicable). The name/value pair is joined by <code>=</code>. You may specify <code>-N</code> multiple times, or use <code>;</code> to link several pairs.</p>

<p>For Win32 executables, these special <code>KEY</code> names are recognized:</p>

<pre class="sh_perl">    Comments        CompanyName     FileDescription FileVersion
    InternalName    LegalCopyright  LegalTrademarks OriginalFilename
    ProductName     ProductVersion</pre>

<dt><a name='I'></a><a name="-I,_--lib=DIR"
><b>-I</b>, <b>--lib</b>=<i>DIR</i></a></dt>

<dd>
<p>Add the given directory to the perl library file search path. May be specified multiple times.</p>

<dt><a name='l'></a><a name="-l,_--link=FILE|LIBRARY"
><b>-l</b>, <b>--link</b>=<i>FILE</i>|<i>LIBRARY</i></a></dt>

<dd>
<p>Add the given shared library (a.k.a. shared object or DLL) into the packed file. Also accepts names under library paths; i.e. <code>-l ncurses</code> means the same thing as <code>-l libncurses.so</code> or <code>-l /usr/local/lib/libncurses.so</code> in most Unixes. May be specified multiple times.</p>

<dt><a name='L'></a><a name="-L,_--log=FILE"
><b>-L</b>, <b>--log</b>=<i>FILE</i></a></dt>

<dd>
<p>Log the output of packaging to a file rather than to stdout.</p>

<dt><a name='F'></a><a name="-F,_--modfilter=FILTER[=REGEX],"
><b>-F</b>, <b>--modfilter</b>=<i>FILTER[=REGEX]</i>,</a></dt>

<dd>
<p>Filter included perl module(s) with a <a href="/~rschupp/PAR-Packer-1.013/lib/PAR/Filter.pm" class="podlinkpod"
>PAR::Filter</a> subclass. You may specify multiple such filters.</p>

<p>By default, the <i>PodStrip</i> filter is applied. In case that causes trouble, you can turn this off by setting the environment variable <code>PAR_VERBATIM</code> to <code>1</code>.</p>

<p>Since PAR 0.958, you can use an optional regular expression (<i>REGEX</i> above) to select the files in the archive which should be filtered. Example:</p>

<pre class="sh_perl">  pp -o foo.exe -F Bleach=warnings\.pm$ foo.pl</pre>

<p>This creates a binary executable <em>foo.exe</em> from <em>foo.pl</em> packaging all files as usual except for files ending in <code>warnings.pm</code> which are filtered with <a href="/~rschupp/PAR-Packer-1.013/lib/PAR/Filter/Bleach.pm" class="podlinkpod"
>PAR::Filter::Bleach</a>.</p>

<dt><a name='M'></a><a name="-M,_--module=MODULE"
><b>-M</b>, <b>--module</b>=<i>MODULE</i></a></dt>

<dd>
<p>Add the specified module into the package, along with its dependencies. Also accepts filenames relative to the <code>@INC</code> path; i.e. <code>-M Module::ScanDeps</code> means the same thing as <code>-M Module/ScanDeps.pm</code>.</p>

<p>If <i>MODULE</i> has an extension that is not <code>.pm</code>/<code>.ix</code>/<code>.al</code>, it will not be scanned for dependencies, and will be placed under <code>/</code> instead of <code>/lib/</code> inside the PAR file. This use is deprecated -- consider using the <b>-a</b> option instead.</p>

<p>You may specify <code>-M</code> multiple times.</p>

<dt><a name='m'></a><a name="-m,_--multiarch"
><b>-m</b>, <b>--multiarch</b></a></dt>

<dd>
<p>Build a multi-architecture PAR file. Implies <b>-p</b>.</p>

<dt><a name='n'></a><a name="-n,_--noscan"
><b>-n</b>, <b>--noscan</b></a></dt>

<dd>
<p>Skip the default static scanning altogether, using run-time dependencies from <b>-c</b> or <b>-x</b> exclusively.</p>

<dt><a name='o'></a><a name="-o,_--output=FILE"
><b>-o</b>, <b>--output</b>=<i>FILE</i></a></dt>

<dd>
<p>File name for the final packaged executable.</p>

<dt><a name='p'></a><a name="-p,_--par"
><b>-p</b>, <b>--par</b></a></dt>

<dd>
<p>Create PAR archives only; do not package to a standalone binary.</p>

<dt><a name='P'></a><a name="-P,_--perlscript"
><b>-P</b>, <b>--perlscript</b></a></dt>

<dd>
<p>Create stand-alone perl script; do not package to a standalone binary.</p>

<dt><a name='r'></a><a name="-r,_--run"
><b>-r</b>, <b>--run</b></a></dt>

<dd>
<p>Run the resulting packaged script after packaging it.</p>

<dt><a name='reusable'></a><a name="--reusable"
><b>--reusable</b></a></dt>

<dd>
<p><b>EXPERIMENTAL</b></p>

<p>Make the packaged executable reusable for running arbitrary, external Perl scripts as if they were part of the package:</p>

<pre class="sh_perl">  pp -o myapp --reusable someapp.pl
  ./myapp --par-options --reuse otherapp.pl</pre>

<p>The second line will run <em>otherapp.pl</em> instead of <em>someapp.pl</em>.</p>

<dt><a name='S'></a><a name="-S,_--save"
><b>-S</b>, <b>--save</b></a></dt>

<dd>
<p>Do not delete generated PAR file after packaging.</p>

<dt><a name='s'></a><a name="-s,_--sign"
><b>-s</b>, <b>--sign</b></a></dt>

<dd>
<p>Cryptographically sign the generated PAR or binary file using <a href="/perldoc?Module%3A%3ASignature" class="podlinkpod"
>Module::Signature</a>.</p>

<dt><a name='T'></a><a name="-T,_--tempcache"
><b>-T</b>, <b>--tempcache</b></a></dt>

<dd>
<p>Set the program unique part of the cache directory name that is used if the program is run without -C. If not set, a hash of the executable is used.</p>

<p>When the program is run, its contents are extracted to a temporary directory. On Unix systems, this is commonly <em>/tmp/par-USERNAME/cache-XXXXXXX</em>. <em>USERNAME</em> is replaced by the user running the program, and <em>XXXXXXX</em> is either a hash of the executable or the value passed to the <code>-T</code> or <code>--tempcache</code> switch.</p>

<dt><a name='v'></a><a name="-v,_--verbose[=NUMBER]"
><b>-v</b>, <b>--verbose</b>[=<i>NUMBER</i>]</a></dt>

<dd>
<p>Increase verbosity of output; <i>NUMBER</i> is an integer from <code>1</code> to <code>3</code>, <code>3</code> being the most verbose. Defaults to <code>1</code> if specified without an argument. Alternatively, <b>-vv</b> sets verbose level to <code>2</code>, and <b>-vvv</b> sets it to <code>3</code>.</p>

<dt><a name='V'></a><a name="-V,_--version"
><b>-V</b>, <b>--version</b></a></dt>

<dd>
<p>Display the version number and copyrights of this program.</p>

<dt><a name='z'></a><a name="-z,_--compress=NUMBER"
><b>-z</b>, <b>--compress</b>=<i>NUMBER</i></a></dt>

<dd>
<p>Set zip compression level; <i>NUMBER</i> is an integer from <code>0</code> to <code>9</code>, <code>0</code> = no compression, <code>9</code> = max compression. Defaults to <code>6</code> if <b>-z</b> is not used.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="ENVIRONMENT"
>ENVIRONMENT <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<dl>
<dt><a name="PP_OPTS"
>PP_OPTS</a></dt>

<dd>
<p>Command-line options (switches). Switches in this variable are taken as if they were on every <em>pp</em> command line.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NOTES"
>NOTES <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Here are some recipes showing how to utilize <em>pp</em> to bundle <em>source.pl</em> with all its dependencies, on target machines with different expected settings:</p>

<dl>
<dt><a name='Stone'></a><a name="Stone-alone_setup:"
>Stone-alone setup:</a></dt>

<dd>
<p>To make a stand-alone executable, suitable for running on a machine that doesn&#39;t have perl installed:</p>

<pre class="sh_perl">    % pp -o packed.exe source.pl        # makes packed.exe
    # Now, deploy &#39;packed.exe&#39; to target machine...
    $ packed.exe                        # run it</pre>

<dt><a name='Perl'></a><a name="Perl_interpreter_only,_without_core_modules:"
>Perl interpreter only, without core modules:</a></dt>

<dd>
<p>To make a packed .pl file including core modules, suitable for running on a machine that has a perl interpreter, but where you want to be sure of the versions of the core modules that your program uses:</p>

<pre class="sh_perl">    % pp -B -P -o packed.pl source.pl   # makes packed.pl
    # Now, deploy &#39;packed.pl&#39; to target machine...
    $ perl packed.pl                    # run it</pre>

<dt><a name='Perl'></a><a name="Perl_with_core_modules_installed:"
>Perl with core modules installed:</a></dt>

<dd>
<p>To make a packed .pl file without core modules, relying on the target machine&#39;s perl interpreter and its core libraries. This produces a significantly smaller file than the previous version:</p>

<pre class="sh_perl">    % pp -P -o packed.pl source.pl      # makes packed.pl
    # Now, deploy &#39;packed.pl&#39; to target machine...
    $ perl packed.pl                    # run it</pre>

<dt><a name='Perl'></a><a name="Perl_with_PAR.pm_and_its_dependencies_installed:"
>Perl with PAR.pm and its dependencies installed:</a></dt>

<dd>
<p>Make a separate archive and executable that uses the archive. This relies upon the perl interpreter and libraries on the target machine.</p>

<pre class="sh_perl">    % pp -p source.pl                   # makes source.par
    % echo &#34;use PAR &#39;source.par&#39;;&#34; &#62; packed.pl;
    % cat source.pl &#62;&#62; packed.pl;       # makes packed.pl
    # Now, deploy &#39;source.par&#39; and &#39;packed.pl&#39; to target machine...
    $ perl packed.pl                    # run it, perl + core modules required</pre>
</dd>
</dl>

<p>Note that even if your perl was built with a shared library, the &#39;Stand-alone executable&#39; above will <i>not</i> need a separate <em>perl5x.dll</em> or <em>libperl.so</em> to function correctly. But even in this case, the underlying system libraries such as <i>libc</i> must be compatible between the host and target machines. Use <code>--dependent</code> if you are willing to ship the shared library with the application, which can significantly reduce the executable size.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SEE_ALSO"
>SEE ALSO <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><a href="/~rschupp/PAR-Packer-1.013/script/tkpp" class="podlinkpod"
>tkpp</a>, <a href="/~rschupp/PAR-Packer-1.013/script/par.pl" class="podlinkpod"
>par.pl</a>, <a href="/~rschupp/PAR-Packer-1.013/script/parl.pod" class="podlinkpod"
>parl</a>, <a href="/perldoc?perlcc" class="podlinkpod"
>perlcc</a></p>

<p><a href="/perldoc?PAR" class="podlinkpod"
>PAR</a>, <a href="/~rschupp/PAR-Packer-1.013/lib/PAR/Packer.pm" class="podlinkpod"
>PAR::Packer</a>, <a href="/perldoc?Module%3A%3AScanDeps" class="podlinkpod"
>Module::ScanDeps</a></p>

<p><a href="/perldoc?Getopt%3A%3ALong" class="podlinkpod"
>Getopt::Long</a>, <a href="/perldoc?Getopt%3A%3AArgvFile" class="podlinkpod"
>Getopt::ArgvFile</a></p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="ACKNOWLEDGMENTS"
>ACKNOWLEDGMENTS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Simon Cozens, Tom Christiansen and Edward Peschko for writing <em>perlcc</em>; this program try to mimic its interface as close as possible, and copied liberally from their code.</p>

<p>Jan Dubois for writing the <em>exetype.pl</em> utility, which has been partially adapted into the <code>-g</code> flag.</p>

<p>Mattia Barbon for providing the <code>myldr</code> binary loader code.</p>

<p>Jeff Goff for suggesting the name <code>pp</code>.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHORS"
>AUTHORS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Audrey Tang &#60;cpan@audreyt.org&#62;, Steffen Mueller &#60;smueller@cpan.org&#62;</p>

<p><a href="http://par.perl.org/" class="podlinkurl"
>http://par.perl.org/</a> is the official PAR website. You can write to the mailing list at &#60;par@perl.org&#62;, or send an empty mail to &#60;par-subscribe@perl.org&#62; to participate in the discussion.</p>

<p>Please submit bug reports to &#60;bug-par@rt.cpan.org&#62;.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="COPYRIGHT"
>COPYRIGHT <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Copyright 2002-2009 by Audrey Tang &#60;cpan@audreyt.org&#62;.</p>

<p>Neither this program nor the associated <a href="/~rschupp/PAR-Packer-1.013/script/parl.pod" class="podlinkpod"
>parl</a> program impose any licensing restrictions on files generated by their execution, in accordance with the 8th article of the Artistic License:</p>

<pre class="sh_perl">    &#34;Aggregation of this Package with a commercial distribution is
    always permitted provided that the use of this Package is embedded;
    that is, when no overt attempt is made to make this Package&#39;s
    interfaces visible to the end user of the commercial distribution.
    Such use shall not be construed as a distribution of this Package.&#34;</pre>

<p>Therefore, you are absolutely free to place any license on the resulting executable, as long as the packed 3rd-party libraries are also available under the Artistic License.</p>

<p>This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</p>

<p>See <a href="http://www.perl.com/perl/misc/Artistic.html" class="podlinkurl"
>http://www.perl.com/perl/misc/Artistic.html</a></p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78197 Uploads, 24711 Distributions
106008 Modules, 9645 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Wed Apr 25 13:37:14 2012 GMT (0.127524852752686) @cpansearch1 -->
 </body>
</html>
