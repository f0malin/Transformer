<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>IO-stringy - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","IO-stringy",3]);
    _gaq.push(["_setCustomVar",5,"Release","IO-stringy-2.110",3]);
    _gaq.push(["_setCustomVar",4,"Document","IO-stringy",3]);
    _gaq.push(["_setCustomVar",1,"Author","DSKOLL",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?IO-stringy">permalink</a></div>
  <a href="/~dskoll/">David F. Skoll</a> &gt;
  <a href="/~dskoll/IO-stringy-2.110/">IO-stringy-2.110</a> &gt;
  IO-stringy
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/77ceb1d700a17c6454d82e26e73d9807?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/D/DS/DSKOLL/IO-stringy-2.110.tar.gz">IO-stringy-2.110.tar.gz</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~DSKOLL/IO-stringy-2.110/lib/IO/Stringy.pm">Annotate this POD
</a></p>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>New&nbsp;</td><td style="text-align:right"> 15</td></tr>
<tr><td>Open&nbsp;</td><td style="text-align:right"> 3</td></tr>
</table>
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=IO-stringy">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
<span class="noprint">
  <a href="/src/DSKOLL/IO-stringy-2.110/lib/IO/Stringy.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <li class='indexItem indexItem1'><a href='#WARNINGS'>WARNINGS</a>
  <li class='indexItem indexItem1'><a href='#INSTALLATION'>INSTALLATION</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#Requirements'>Requirements</a>
    <li class='indexItem indexItem2'><a href='#Directions'>Directions</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#VERSION'>VERSION</a>
  <li class='indexItem indexItem1'><a href='#TO_DO'>TO DO</a>
  <li class='indexItem indexItem1'><a href='#CHANGE_LOG'>CHANGE LOG</a>
  <li class='indexItem indexItem1'><a href='#AUTHOR'>AUTHOR</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>IO-stringy - I/O on in-core objects like strings and arrays</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">    IO::
    ::AtomicFile   adpO  Write a file which is updated atomically     ERYQ
    ::Lines        bdpO  I/O handle to read/write to array of lines   ERYQ
    ::Scalar       RdpO  I/O handle to read/write to a string         ERYQ
    ::ScalarArray  RdpO  I/O handle to read/write to array of scalars ERYQ
    ::Wrap         RdpO  Wrap old-style FHs in standard OO interface  ERYQ
    ::WrapTie      adpO  Tie your handles &#38; retain full OO interface  ERYQ</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This toolkit primarily provides modules for performing both traditional and object-oriented i/o) on things <i>other</i> than normal filehandles; in particular, <a href="/~dskoll/IO-stringy-2.110/lib/IO/Scalar.pm" class="podlinkpod"
>IO::Scalar</a>, <a href="/~dskoll/IO-stringy-2.110/lib/IO/ScalarArray.pm" class="podlinkpod"
>IO::ScalarArray</a>, and <a href="/~dskoll/IO-stringy-2.110/lib/IO/Lines.pm" class="podlinkpod"
>IO::Lines</a>.</p>

<p>In the more-traditional IO::Handle front, we have <a href="/~dskoll/IO-stringy-2.110/lib/IO/AtomicFile.pm" class="podlinkpod"
>IO::AtomicFile</a> which may be used to painlessly create files which are updated atomically.</p>

<p>And in the &#34;this-may-prove-useful&#34; corner, we have <a href="/~dskoll/IO-stringy-2.110/lib/IO/Wrap.pm" class="podlinkpod"
>IO::Wrap</a>, whose exported wraphandle() function will clothe anything that&#39;s not a blessed object in an IO::Handle-like wrapper... so you can just use OO syntax and stop worrying about whether your function&#39;s caller handed you a string, a globref, or a FileHandle.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="WARNINGS"
>WARNINGS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Perl&#39;s TIEHANDLE spec was incomplete prior to 5.005_57; it was missing support for <code>seek()</code>, <code>tell()</code>, and <code>eof()</code>. Attempting to use these functions with an IO::Scalar, IO::ScalarArray, IO::Lines, etc. <b>will not work</b> prior to 5.005_57. None of the relevant methods will be invoked by Perl; and even worse, this kind of bug can lie dormant for a while. If you turn warnings on (via <code>$^W</code> or <code>perl -w</code>), and you see something like this...</p>

<pre class="sh_perl">    seek() on unopened file</pre>

<p>...then you are probably trying to use one of these functions on one of our IO:: classes with an old Perl. The remedy is to simply use the OO version; e.g.:</p>

<pre class="sh_perl">    $SH-&#62;seek(0,0);    ### GOOD: will work on any 5.005
    seek($SH,0,0);     ### WARNING: will only work on 5.005_57 and beyond</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="INSTALLATION"
>INSTALLATION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Requirements"
>Requirements</a></h2>

<p>As of version 2.x, this toolkit requires Perl 5.005 for the IO::Handle subclasses, and 5.005_57 or better is <b>strongly</b> recommended. See <a href="#WARNINGS" class="podlinkpod"
>&#34;WARNINGS&#34;</a> for details.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Directions"
>Directions</a></h2>

<p>Most of you already know the drill...</p>

<pre class="sh_perl">    perl Makefile.PL
    make
    make test
    make install</pre>

<p>For everyone else out there... if you&#39;ve never installed Perl code before, or you&#39;re trying to use this in an environment where your sysadmin or ISP won&#39;t let you do interesting things, <b>relax:</b> since this module contains no binary extensions, you can cheat. That means copying the directory tree under my &#34;./lib&#34; directory into someplace where your script can &#34;see&#34; it. For example, under Linux:</p>

<pre class="sh_perl">    cp -r IO-stringy-1.234/lib/* /path/to/my/perl/</pre>

<p>Now, in your Perl code, do this:</p>

<pre class="sh_perl">    use lib &#34;/path/to/my/perl&#34;;
    use IO::Scalar;                   ### or whatever</pre>

<p>Ok, now you&#39;ve been told. At this point, anyone who whines about not being given enough information gets an unflattering haiku written about them in the next change log. I&#39;ll do it. Don&#39;t think I won&#39;t.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="VERSION"
>VERSION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>$Id: Stringy.pm,v 1.3 2005/02/10 21:24:05 dfs Exp $</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="TO_DO"
>TO DO <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<dl>
<dt><a name='2000'></a><a name="(2000/08/02)_Finalize_$/_support"
>(2000/08/02) Finalize $/ support</a></dt>

<dd>
<p>Graham Barr submitted this patch half a <i>year</i> ago; Like a moron, I lost his message under a ton of others, and only now have the experimental implementation done.</p>

<p>Will the sudden sensitivity to $/ hose anyone out there? I&#39;m worried, so you have to enable it explicitly in 1.x. It will be on by default in 2.x, though only IO::Scalar has been implemented.</p>

<dt><a name='2001'></a><a name="(2001/08/08)_Remove_IO::WrapTie_from_new_IO::_classes"
>(2001/08/08) Remove IO::WrapTie from new IO:: classes</a></dt>

<dd>
<p>It&#39;s not needed. Backwards compatibility could be maintained by having new_tie() be identical to new(). Heck, I&#39;ll bet that IO::WrapTie should be reimplemented so the returned object is just like an IO::Scalar in its use of globrefs.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="CHANGE_LOG"
>CHANGE LOG <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<dl>
<dt><a name='Version'></a><a name="Version_2.110_(2005/02/10)"
>Version 2.110 (2005/02/10)</a></dt>

<dd>
<p>Maintainership taken over by DSKOLL &#60;dfs@roaringpenguin.com&#62;</p>

<p>Closed the following bugs at <a href="https://rt.cpan.org/NoAuth/Bugs.html?Dist=IO-stringy" class="podlinkurl"
>https://rt.cpan.org/NoAuth/Bugs.html?Dist=IO-stringy</a>:</p>

<dt><a name="_"
></a></dt>

<dd>
<p>2208 IO::ScalarArray-&#62;getline does not return undef for EOF if undef($/)</p>

<dt><a name="_"
></a></dt>

<dd>
<p>7132 IO-stringy/Makefile.PL bug - name should be module name</p>

<dt><a name="_"
></a></dt>

<dd>
<p>11249 IO::Scalar flush shouldn&#39;t return undef</p>

<dt><a name="_"
></a></dt>

<dd>
<p>2172 $\ (output record separator) not respected</p>

<dt><a name="_"
></a></dt>

<dd>
<p>8605 IO::InnerFile::seek() should return 1 on success</p>

<dt><a name="_"
></a></dt>

<dd>
<p>4798 *.html in lib/</p>

<dt><a name="_"
></a></dt>

<dd>
<p>4369 Improvement: handling of fixed-size reads in IO::Scalar</p>

<p>(Actually, bug 4369 was closed in Version 2.109)</p>

<dt><a name='Version'></a><a name="Version_2.109_(2003/12/21)"
>Version 2.109 (2003/12/21)</a></dt>

<dd>
<p>IO::Scalar::getline now works with ref to int. <i>Thanks to Dominique Quatravaux for this patch.</i></p>

<dt><a name='Version'></a><a name="Version_2.108_(2001/08/20)"
>Version 2.108 (2001/08/20)</a></dt>

<dd>
<p>The terms-of-use have been placed in the distribution file &#34;COPYING&#34;. Also, small documentation tweaks were made.</p>

<dt><a name='Version'></a><a name="Version_2.105_(2001/08/09)"
>Version 2.105 (2001/08/09)</a></dt>

<dd>
<p>Added support for various seek() whences to IO::ScalarArray.</p>

<p>Added support for consulting $/ in IO::Scalar and IO::ScalarArray. The old <code>use_RS()</code> is not even an option. Unsupported record separators will cause a croak().</p>

<p>Added a lot of regression tests to supoprt the above.</p>

<p>Better on-line docs (hyperlinks to individual functions).</p>

<dt><a name='Version'></a><a name="Version_2.103_(2001/08/08)"
>Version 2.103 (2001/08/08)</a></dt>

<dd>
<p>After sober consideration I have reimplemented IO::Scalar::print() so that it once again always seeks to the end of the string. Benchmarks show the new implementation to be just as fast as Juergen&#39;s contributed patch; until someone can convince me otherwise, the current, safer implementation stays.</p>

<p>I thought more about giving IO::Scalar two separate handles, one for reading and one for writing, as suggested by Binkley. His points about what tell() and eof() return are, I think, show-stoppers for this feature. Even the manpages for stdio&#39;s fseek() seem to imply a <i>single</i> file position indicator, not two. So I think I will take this off the TO DO list. <b>Remedy:</b> you can always have two handles open on the same scalar, one which you only write to, and one which you only read from. That should give the same effect.</p>

<dt><a name='Version'></a><a name="Version_2.101_(2001/08/07)"
>Version 2.101 (2001/08/07)</a></dt>

<dd>
<p><b>Alpha release.</b> This is the initial release of the &#34;IO::Scalar and friends are now subclasses of IO::Handle&#34;. I&#39;m flinging it against the wall. Please tell me if the banana sticks. When it does, the banana will be called 2.2x.</p>

<p>First off, <i>many many thanks to Doug Wilson</i>, who has provided an <i>invaluable</i> service by patching IO::Scalar and friends so that they (1) inherit from IO::Handle, (2) automatically tie themselves so that the <code>new()</code> objects can be used in native i/o constructs, and (3) doing it so that the whole damn thing passes its regression tests. As Doug knows, my globref Kung-Fu was not up to the task; he graciously provided the patches. This has earned him a seat at the <a href="#AUTHOR" class="podlinkpod"
>Co-Authors</a> table, and the right to have me address him as <i>sensei</i>.</p>

<p>Performance of IO::Scalar::print() has been improved by as much as 2x for lots of little prints, with the cost of forcing those who print-then-seek-then-print to explicitly seek to end-of-string before printing again. <i>Thanks to Juergen Zeller for this patch.</i></p>

<p>Added the COPYING file, which had been missing from prior versions. <i>Thanks to Albert Chin-A-Young for pointing this out.</i></p>

<p>IO::Scalar consults $/ by default (1.x ignored it by default). Yes, I still need to support IO::ScalarArray.</p>

<dt><a name='Version'></a><a name="Version_1.221_(2001/08/07)"
>Version 1.221 (2001/08/07)</a></dt>

<dd>
<p>I threatened in <a href="#INSTALLATION" class="podlinkpod"
>&#34;INSTALLATION&#34;</a> to write an unflattering haiku about anyone who whined that I gave them insufficient information... but it turns out that I left out a crucial direction. D&#39;OH! <i>Thanks to David Beroff for the &#34;patch&#34; and the haiku...</i></p>

<pre class="sh_perl">       Enough info there?
         Here&#39;s unflattering haiku:
       Forgot the line, &#34;make&#34;!  ;-)</pre>

<dt><a name='Version'></a><a name="Version_1.220_(2001/04/03)"
>Version 1.220 (2001/04/03)</a></dt>

<dd>
<p>Added untested SEEK, TELL, and EOF methods to IO::Scalar and IO::ScalarArray to support corresponding functions for tied filehandles: untested, because I&#39;m still running 5.00556 and Perl is complaining about &#34;tell() on unopened file&#34;. <i>Thanks to Graham Barr for the suggestion.</i></p>

<p>Removed not-fully-blank lines from modules; these were causing lots of POD-related warnings. <i>Thanks to Nicolas Joly for the suggestion.</i></p>

<dt><a name='Version'></a><a name="Version_1.219_(2001/02/23)"
>Version 1.219 (2001/02/23)</a></dt>

<dd>
<p>IO::Scalar objects can now be made sensitive to $/ . Pains were taken to keep the fast code fast while adding this feature. <i>Cheers to Graham Barr for submitting his patch; jeers to me for losing his email for 6 months.</i></p>

<dt><a name='Version'></a><a name="Version_1.218_(2001/02/23)"
>Version 1.218 (2001/02/23)</a></dt>

<dd>
<p>IO::Scalar has a new sysseek() method. <i>Thanks again to Richard Jones.</i></p>

<p>New &#34;TO DO&#34; section, because people who submit patches/ideas should at least know that they&#39;re in the system... and that I won&#39;t lose their stuff. Please read it.</p>

<p>New entries in <a href="#AUTHOR" class="podlinkpod"
>&#34;AUTHOR&#34;</a>. Please read those too.</p>

<dt><a name='Version'></a><a name="Version_1.216_(2000/09/28)"
>Version 1.216 (2000/09/28)</a></dt>

<dd>
<p><b>IO::Scalar and IO::ScalarArray now inherit from IO::Handle.</b> I thought I&#39;d remembered a problem with this ages ago, related to the fact that these IO:: modules don&#39;t have &#34;real&#34; filehandles, but the problem apparently isn&#39;t surfacing now. If you suddenly encounter Perl warnings during global destruction (especially if you&#39;re using tied filehandles), then please let me know! <i>Thanks to B. K. Oxley (binkley) for this.</i></p>

<p><b>Nasty bug fixed in IO::Scalar::write().</b> Apparently, the offset and the number-of-bytes arguments were, for all practical purposes, <i>reversed.</i> You were okay if you did all your writing with print(), but boy was <i>this</i> a stupid bug! <i>Thanks to Richard Jones for finding this one. For you, Rich, a double-length haiku:</i></p>

<pre class="sh_perl">       Newspaper headline
          typeset by dyslexic man
       loses urgency

       BABY EATS FISH is
          simply not equivalent
       to FISH EATS BABY</pre>

<p><b>New sysread and syswrite methods for IO::Scalar.</b> <i>Thanks again to Richard Jones for this.</i></p>

<dt><a name='Version'></a><a name="Version_1.215_(2000/09/05)"
>Version 1.215 (2000/09/05)</a></dt>

<dd>
<p>Added &#39;bool&#39; overload to &#39;&#34;&#34;&#39; overload, so object always evaluates to true. (Whew. Glad I caught this before it went to CPAN.)</p>

<dt><a name='Version'></a><a name="Version_1.214_(2000/09/03)"
>Version 1.214 (2000/09/03)</a></dt>

<dd>
<p>Evaluating an IO::Scalar in a string context now yields the underlying string. <i>Thanks to B. K. Oxley (binkley) for this.</i></p>

<dt><a name='Version'></a><a name="Version_1.213_(2000/08/16)"
>Version 1.213 (2000/08/16)</a></dt>

<dd>
<p>Minor documentation fixes.</p>

<dt><a name='Version'></a><a name="Version_1.212_(2000/06/02)"
>Version 1.212 (2000/06/02)</a></dt>

<dd>
<p>Fixed IO::InnerFile incompatibility with Perl5.004. <i>Thanks to many folks for reporting this.</i></p>

<dt><a name='Version'></a><a name="Version_1.210_(2000/04/17)"
>Version 1.210 (2000/04/17)</a></dt>

<dd>
<p>Added flush() and other no-op methods. <i>Thanks to Doru Petrescu for suggesting this.</i></p>

<dt><a name='Version'></a><a name="Version_1.209_(2000/03/17)"
>Version 1.209 (2000/03/17)</a></dt>

<dd>
<p>Small bug fixes.</p>

<dt><a name='Version'></a><a name="Version_1.208_(2000/03/14)"
>Version 1.208 (2000/03/14)</a></dt>

<dd>
<p>Incorporated a number of contributed patches and extensions, mostly related to speed hacks, support for &#34;offset&#34;, and WRITE/CLOSE methods. <i>Thanks to Richard Jones, Doru Petrescu, and many others.</i></p>

<dt><a name='Version'></a><a name="Version_1.206_(1999/04/18)"
>Version 1.206 (1999/04/18)</a></dt>

<dd>
<p>Added creation of ./testout when Makefile.PL is run.</p>

<dt><a name='Version'></a><a name="Version_1.205_(1999/01/15)"
>Version 1.205 (1999/01/15)</a></dt>

<dd>
<p>Verified for Perl5.005.</p>

<dt><a name='Version'></a><a name="Version_1.202_(1998/04/18)"
>Version 1.202 (1998/04/18)</a></dt>

<dd>
<p>New IO::WrapTie and IO::AtomicFile added.</p>

<dt><a name='Version'></a><a name="Version_1.110"
>Version 1.110</a></dt>

<dd>
<p>Added IO::WrapTie.</p>

<dt><a name='Version'></a><a name="Version_1.107"
>Version 1.107</a></dt>

<dd>
<p>Added IO::Lines, and made some bug fixes to IO::ScalarArray. Also, added getc().</p>

<dt><a name='Version'></a><a name="Version_1.105"
>Version 1.105</a></dt>

<dd>
<p>No real changes; just upgraded IO::Wrap to have a $VERSION string.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHOR"
>AUTHOR <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<dl>
<dt><a name='Primary'></a><a name="Primary_Maintainer"
>Primary Maintainer</a></dt>

<dd>
<p>David F. Skoll (<em>dfs@roaringpenguin.com</em>).</p>

<dt><a name='Original'></a><a name="Original_Author"
>Original Author</a></dt>

<dd>
<p>Eryq (<em>eryq@zeegee.com</em>). President, ZeeGee Software Inc (<em><a href="http://www.zeegee.com" class="podlinkurl"
>http://www.zeegee.com</a></em>).</p>

<dt><a name='Co'></a><a name="Co-Authors"
>Co-Authors</a></dt>

<dd>
<p>For all their bug reports and patch submissions, the following are officially recognized:</p>

<pre class="sh_perl">     Richard Jones
     B. K. Oxley (binkley)
     Doru Petrescu
     Doug Wilson (for picking up the ball I dropped, and doing tie() right)</pre>
</dd>
</dl>

<p>Go to <em><a href="http://www.zeegee.com" class="podlinkurl"
>http://www.zeegee.com</a></em> for the latest downloads and on-line documentation for this module.</p>

<p>Enjoy. Yell if it breaks.</p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78248 Uploads, 24724 Distributions
106031 Modules, 9649 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Document']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Document']);
    });
  });
</script>
<!-- Fri Apr 27 05:36:37 2012 GMT (0.0998318195343018) @cpansearch1 -->
 </body>
</html>
