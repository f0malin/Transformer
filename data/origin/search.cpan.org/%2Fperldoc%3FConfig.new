<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>Config - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","perl",3]);
    _gaq.push(["_setCustomVar",5,"Release","perl-5.14.2",3]);
    _gaq.push(["_setCustomVar",4,"Document","Config",3]);
    _gaq.push(["_setCustomVar",1,"Author","FLORA",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?Config">permalink</a></div>
  <a href="/~flora/">Florian Ragwitz</a> &gt;
  <a href="/~flora/perl-5.14.2/">perl-5.14.2</a> &gt;
  Config
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/fd2bdaaefe41908133793d1ddf38f75d?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/F/FL/FLORA/perl-5.14.2.tar.gz">perl-5.14.2.tar.gz</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~FLORA/perl-5.14.2/configpm">Annotate this POD
</a></p>
     <p style="text-align:right"><a href="http://www.perl.org/">Website</a></p>

<div style="float:right">

</div>
</div>
<span class="noprint">
  <a href="/src/FLORA/perl-5.14.2/configpm">Source</a> &nbsp;
  Latest&nbsp;Release:&nbsp;<a href="/~abigail/perl/configpm">perl-5.15.9</a>
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <li class='indexItem indexItem1'><a href='#EXAMPLE'>EXAMPLE</a>
  <li class='indexItem indexItem1'><a href='#WARNING'>WARNING</a>
  <li class='indexItem indexItem1'><a href='#GLOSSARY'>GLOSSARY</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#$c'>$c</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#GIT_DATA'>GIT DATA</a>
  <li class='indexItem indexItem1'><a href='#NOTE'>NOTE</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Config - access Perl configuration information</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">    use Config;
    if ($Config{usethreads}) {
        print &#34;has thread support\n&#34;
    } 

    use Config qw(myconfig config_sh config_vars config_re);

    print myconfig();

    print config_sh();

    print config_re();

    config_vars(qw(osname archname));</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>The Config module contains all the information that was available to the <code>Configure</code> program at Perl build time (over 900 values).</p>

<p>Shell variables from the <em>config.sh</em> file (written by Configure) are stored in the readonly-variable <code>%Config</code>, indexed by their names.</p>

<p>Values stored in config.sh as &#39;undef&#39; are returned as undefined values. The perl <code>exists</code> function can be used to check if a named variable exists.</p>

<p>For a description of the variables, please have a look at the Glossary file, as written in the Porting folder, or use the url: <a href="http://perl5.git.perl.org/perl.git/blob/HEAD:/Porting/Glossary" class="podlinkurl"
>http://perl5.git.perl.org/perl.git/blob/HEAD:/Porting/Glossary</a></p>

<dl>
<dt><a name='myconfig'></a><a name="myconfig()"
>myconfig()</a></dt>

<dd>
<p>Returns a textual summary of the major perl configuration values. See also <code>-V</code> in <a href="/~flora/perl-5.14.2/pod/perlrun.pod#Switches" class="podlinkpod"
>&#34;Switches&#34; in perlrun</a>.</p>

<dt><a name='config_sh'></a><a name="config_sh()"
>config_sh()</a></dt>

<dd>
<p>Returns the entire perl configuration information in the form of the original config.sh shell variable assignment script.</p>

<dt><a name='config_re'></a><a name="config_re($regex)"
>config_re($regex)</a></dt>

<dd>
<p>Like config_sh() but returns, as a list, only the config entries who&#39;s names match the $regex.</p>

<dt><a name='config_vars'></a><a name="config_vars(@names)"
>config_vars(@names)</a></dt>

<dd>
<p>Prints to STDOUT the values of the named configuration variable. Each is printed on a separate line in the form:</p>

<pre class="sh_perl">  name=&#39;value&#39;;</pre>

<p>Names which are unknown are output as <code>name=&#39;UNKNOWN&#39;;</code>. See also <code>-V:name</code> in <a href="/~flora/perl-5.14.2/pod/perlrun.pod#Switches" class="podlinkpod"
>&#34;Switches&#34; in perlrun</a>.</p>

<dt><a name='bincompat_options'></a><a name="bincompat_options()"
>bincompat_options()</a></dt>

<dd>
<p>Returns a list of C pre-processor options used when compiling this <em>perl</em> binary, which affect its binary compatibility with extensions. <code>bincompat_options()</code> and <code>non_bincompat_options()</code> are shown together in the output of <code>perl -V</code> as <i>Compile-time options</i>.</p>

<dt><a name='non_bincompat_options'></a><a name="non_bincompat_options()"
>non_bincompat_options()</a></dt>

<dd>
<p>Returns a list of C pre-processor options used when compiling this <em>perl</em> binary, which do not affect binary compatibility with extensions.</p>

<dt><a name='compile_date'></a><a name="compile_date()"
>compile_date()</a></dt>

<dd>
<p>Returns the compile date (as a string), equivalent to what is shown by <code>perl -V</code></p>

<dt><a name='local_patches'></a><a name="local_patches()"
>local_patches()</a></dt>

<dd>
<p>Returns a list of the names of locally applied patches, equivalent to what is shown by <code>perl -V</code>.</p>

<dt><a name='header_files'></a><a name="header_files()"
>header_files()</a></dt>

<dd>
<p>Returns a list of the header files that should be used as dependencies for XS code, for this version of Perl on this platform.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="EXAMPLE"
>EXAMPLE <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Here&#39;s a more sophisticated example of using %Config:</p>

<pre class="sh_perl">    use Config;
    use strict;

    my %sig_num;
    my @sig_name;
    unless($Config{sig_name} &#38;&#38; $Config{sig_num}) {
        die &#34;No sigs?&#34;;
    } else {
        my @names = split &#39; &#39;, $Config{sig_name};
        @sig_num{@names} = split &#39; &#39;, $Config{sig_num};
        foreach (@names) {
            $sig_name[$sig_num{$_}] ||= $_;
        }   
    }

    print &#34;signal #17 = $sig_name[17]\n&#34;;
    if ($sig_num{ALRM}) { 
        print &#34;SIGALRM is $sig_num{ALRM}\n&#34;;
    }   </pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="WARNING"
>WARNING <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Because this information is not stored within the perl executable itself it is possible (but unlikely) that the information does not relate to the actual perl binary which is being used to access it.</p>

<p>The Config module is installed into the architecture and version specific library directory ($Config{installarchlib}) and it checks the perl version number when loaded.</p>

<p>The values stored in config.sh may be either single-quoted or double-quoted. Double-quoted strings are handy for those cases where you need to include escape sequences in the strings. To avoid runtime variable interpolation, any <code>$</code> and <code>@</code> characters are replaced by <code>\$</code> and <code>\@</code>, respectively. This isn&#39;t foolproof, of course, so don&#39;t embed <code>\$</code> or <code>\@</code> in double-quoted strings unless you&#39;re willing to deal with the consequences. (The slashes will end up escaped and the <code>$</code> or <code>@</code> will trigger variable interpolation)</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="GLOSSARY"
>GLOSSARY <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Most <code>Config</code> variables are determined by the <code>Configure</code> script on platforms supported by it (which is most UNIX platforms). Some platforms have custom-made <code>Config</code> variables, and may thus not have some of the variables described below, or may have extraneous variables specific to that particular port. See the port specific documentation in such cases.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="$c"
>$c</a></h2>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="GIT_DATA"
>GIT DATA <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Information on the git commit from which the current perl binary was compiled can be found in the variable <code>$Config::Git_Data</code>. The variable is a structured string that looks something like this:</p>

<pre class="sh_perl">  git_commit_id=&#39;ea0c2dbd5f5ac6845ecc7ec6696415bf8e27bd52&#39;
  git_describe=&#39;GitLive-blead-1076-gea0c2db&#39;
  git_branch=&#39;smartmatch&#39;
  git_uncommitted_changes=&#39;&#39;
  git_commit_id_title=&#39;Commit id:&#39;
  git_commit_date=&#39;2009-05-09 17:47:31 +0200&#39;</pre>

<p>Its format is not guaranteed not to change over time.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NOTE"
>NOTE <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This module contains a good example of how to use tie to implement a cache and an example of how to make a tied variable readonly to those outside of it.</p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78067 Uploads, 24685 Distributions
105889 Modules, 9637 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Document']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Document']);
    });
  });
</script>
<!-- Sat Apr 21 15:13:34 2012 GMT (0.123696088790894) @cpansearch1 -->
 </body>
</html>
