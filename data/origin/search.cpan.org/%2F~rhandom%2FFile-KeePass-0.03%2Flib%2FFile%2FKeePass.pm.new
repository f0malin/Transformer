<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>File::KeePass - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","File-KeePass",3]);
    _gaq.push(["_setCustomVar",5,"Release","File-KeePass-0.03",3]);
    _gaq.push(["_setCustomVar",3,"Module","File::KeePass",3]);
    _gaq.push(["_setCustomVar",1,"Author","RHANDOM",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?File::KeePass">permalink</a></div>
  <a href="/~rhandom/">Paul Seamons</a> &gt;
  <a href="/~rhandom/File-KeePass-0.03/">File-KeePass-0.03</a> &gt;
  File::KeePass
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/155a7fc84d55b819ca4a55f6423fcad9?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/R/RH/RHANDOM/File-KeePass-0.03.tar.gz">File-KeePass-0.03.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=File%3A%3AKeePass;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~RHANDOM/File-KeePass-0.03/lib/File/KeePass.pm">Annotate this POD
</a></p>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>New&nbsp;</td><td style="text-align:right"> 2</td></tr>
<tr><td>Open&nbsp;</td><td style="text-align:right"> 1</td></tr>
</table>
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=File-KeePass">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  0.03 &nbsp;
<span class="noprint">
  <a href="/src/RHANDOM/File-KeePass-0.03/lib/File/KeePass.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#METHODS'>METHODS</a>
  <li class='indexItem indexItem1'><a href='#BUGS'>BUGS</a>
  <li class='indexItem indexItem1'><a href='#SOURCES'>SOURCES</a>
  <li class='indexItem indexItem1'><a href='#AUTHOR'>AUTHOR</a>
  <li class='indexItem indexItem1'><a href='#LICENSE'>LICENSE</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>File::KeePass - Interface to KeePass V1 database files</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">    use File::KeePass;
    use Data::Dumper qw(Dumper);

    my $k = File::KeePass-&#62;new;
    if (! eval { $k-&#62;load_db($file, $master_pass) }) {
        die &#34;Couldn&#39;t load the file $file: $@&#34;;
    }

    print Dumper $k-&#62;groups; # passwords are locked

    $k-&#62;unlock;
    print Dumper $k-&#62;groups; # passwords are now visible

    $k-&#62;clear; # delete current db from memory


    my $group = $k-&#62;add_group({
        title =&#62; &#39;Foo&#39;,
    }); # root level group
    my $gid = $group-&#62;{&#39;id&#39;};

    my $group = $k-&#62;find_group({id =&#62; $gid});
    # OR
    my $group = $k-&#62;find_group({title =&#62; &#39;Foo&#39;});


    my $group2 = $k-&#62;add_group({
        title =&#62; &#39;Bar&#39;,
        group =&#62; $gid,
        # OR group =&#62; $group,
    }); # nested group


    my $e = $k-&#62;add_entry({
        title    =&#62; &#39;Something&#39;,
        username =&#62; &#39;someuser&#39;,
        password =&#62; &#39;somepass&#39;,
        group    =&#62; $gid,
        # OR group =&#62; $group,
    });
    my $eid = $e-&#62;{&#39;id&#39;};

    my $e = $k-&#62;find_entry({id =&#62; $eid});
    # OR
    my $e = $k-&#62;find_entry({title =&#62; &#39;Something&#39;});

    $k-&#62;lock;
    print $e-&#62;{&#39;password&#39;}; # eq undef
    print $k-&#62;locked_entry_password($e); # eq &#39;somepass&#39;

    $k-&#62;unlock;
    print $e-&#62;{&#39;password&#39;}; # eq &#39;somepass&#39;


    $k-&#62;save_db(&#34;/some/file/location.kdb&#34;, $master_pass);</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="METHODS"
>METHODS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<dl>
<dt><a name="new"
>new</a></dt>

<dd>
<p>Returns a new File::KeePass object. Any named arguments are added to self.</p>

<dt><a name="auto_lock"
>auto_lock</a></dt>

<dd>
<p>Default true. If true, passwords are automatically hidden when a database loaded via parse_db or load_db.</p>

<pre class="sh_perl">    $k-&#62;auto_lock(0); # turn off auto locking</pre>

<dt><a name="load_db"
>load_db</a></dt>

<dd>
<p>Takes a kdb filename and a master password. Returns true on success. Errors die. The resulting database can be accessed via various methods including $k-&#62;groups.</p>

<dt><a name="save_db"
>save_db</a></dt>

<dd>
<p>Takes a kdb filename and a master password. Stores out the current groups in the object. Writes attempt to write first to $file.new.$epoch and are then renamed into the correct location.</p>

<p>You will need to unlock the db via $k-&#62;unlock before calling this method if the database is currently locked.</p>

<dt><a name="clear"
>clear</a></dt>

<dd>
<p>Clears any currently loaded groups database.</p>

<dt><a name="parse_db"
>parse_db</a></dt>

<dd>
<p>Takes an encrypted kdb database and a master password. Returns true on success. Errors die. The resulting database can be accessed via various methods including $k-&#62;groups.</p>

<dt><a name="parse_header"
>parse_header</a></dt>

<dd>
<p>Used by parse_db.</p>

<dt><a name="parse_groups"
>parse_groups</a></dt>

<dd>
<p>Used by parse_db.</p>

<dt><a name="parse_entries"
>parse_entries</a></dt>

<dd>
<p>Used by parse_db.</p>

<dt><a name="parse_date"
>parse_date</a></dt>

<dd>
<p>Parses a kdb packed date.</p>

<dt><a name="decrypt_rijndael_cbc"
>decrypt_rijndael_cbc</a></dt>

<dd>
<p>Takes an encrypted string, a key, and an encryption_iv string. Returns a plaintext string.</p>

<dt><a name="encrypt_rijndael_cbc"
>encrypt_rijndael_cbc</a></dt>

<dd>
<p>Takes a plaintext string, a key, and an encryption_iv string. Returns an encrypted string.</p>

<dt><a name="gen_db"
>gen_db</a></dt>

<dd>
<p>Takes a master password. Optionally takes a &#34;groups&#34; arrayref and a &#34;headers&#34; hashref. If groups are not passed, it defaults to using the currently loaded groups. If headers are not passed, a fresh set of headers are generated based on the groups and the master password. The headers can be passed in to test round trip portability.</p>

<p>You will need to unlock the db via $k-&#62;unlock before calling this method if the database is currently locked.</p>

<dt><a name="gen_header"
>gen_header</a></dt>

<dd>
<p>Returns a kdb file header.</p>

<dt><a name="gen_date"
>gen_date</a></dt>

<dd>
<p>Returns a kdb packed date.</p>

<dt><a name="dump_groups"
>dump_groups</a></dt>

<dd>
<p>Returns a simplified string representation of the currently loaded database.</p>

<pre class="sh_perl">    print $k-&#62;dump_groups;</pre>

<p>You can optionally pass a match argument hashref. Only entries matching the criteria will be returned.</p>

<dt><a name="groups"
>groups</a></dt>

<dd>
<p>Returns an arrayref of groups from the currently loaded database. Groups returned will be hierarchal. Note, groups simply returns a reference to all of the data. It makes no attempts at cleaning up the data (find_groups will make sure the data is groomed).</p>

<pre class="sh_perl">    my $g = $k-&#62;groups;</pre>

<p>Groups will look similar to the following:</p>

<pre class="sh_perl">    $g = [{
         expanded =&#62; 0,
         icon     =&#62; 0,
         id       =&#62; 234234234,
         title    =&#62; &#39;Foo&#39;,
         level    =&#62; 0,
         entries =&#62; [{
             accessed =&#62; &#34;2010-06-24 15:09:19&#34;,
             bin_desc =&#62; &#34;&#34;,
             binary   =&#62; &#34;&#34;,
             comment  =&#62; &#34;&#34;,
             created  =&#62; &#34;2010-06-24 15:09:19&#34;,
             expires  =&#62; &#34;2999-12-31 23:23:59&#34;,
             icon     =&#62; 0,
             modified =&#62; &#34;2010-06-24 15:09:19&#34;,
             title    =&#62; &#34;Something&#34;,
             password =&#62; &#39;somepass&#39;, # will be hidden if the database is locked
             url      =&#62; &#34;&#34;,
             username =&#62; &#34;someuser&#34;,
             id       =&#62; &#34;0a55ac30af68149f62c072d7cc8bd5ee&#34;
         }],
         groups =&#62; [{
             expanded =&#62; 0,
             icon     =&#62; 0,
             id       =&#62; 994414667,
             level    =&#62; 1,
             title    =&#62; &#34;Bar&#34;
         }],
     }];</pre>

<dt><a name="header"
>header</a></dt>

<dd>
<p>Returns the current loaded db header.</p>

<dt><a name="add_group"
>add_group</a></dt>

<dd>
<p>Adds a new group to the database. Returns a reference to the new group. If a database isn&#39;t loaded, it begins a new one. Takes a hashref of arguments for the new entry including title, icon, expanded. A new random group id will be generated. An optional group argument can be passed. If a group is passed the new group will be added under that parent group.</p>

<pre class="sh_perl">    my $group = $k-&#62;add_group({title =&#62; &#39;Foo&#39;});
    my $gid = $group-&#62;{&#39;id&#39;};

    my $group2 = $k-&#62;add_group({title =&#62; &#39;Bar&#39;, group =&#62; $gid});</pre>

<p>The group argument&#39;s value may also be a reference to a group - such as that returned by find_group.</p>

<dt><a name='finder_tests'></a><a name="finder_tests_{"
>finder_tests {</a></dt>

<dd>
<p>Used by find_groups and find_entries. Takes a hashref of arguments and returns a list of test code refs.</p>

<pre class="sh_perl">    {title =&#62; &#39;Foo&#39;} # will check if title equals Foo
    {&#39;title !&#39; =&#62; &#39;Foo&#39;} # will check if title does not equal Foo
    {&#39;title =~&#39; =&#62; qr{^Foo$}} # will check if title does matches the regex
    {&#39;title !~&#39; =&#62; qr{^Foo$}} # will check if title does not match the regex</pre>

<dt><a name="find_groups"
>find_groups</a></dt>

<dd>
<p>Takes a hashref of search criteria and returns all matching groups. Can be passed id, title, icon, and level. Search arguments will be parsed by finder_tests.</p>

<pre class="sh_perl">    my @groups = $k-&#62;find_groups({title =&#62; &#39;Foo&#39;});

    my @all_groups_flattened = $k-&#62;find_groups({});</pre>

<p>The find_groups method also checks to make sure group ids are unique and that all needed values are defined.</p>

<dt><a name="find_group"
>find_group</a></dt>

<dd>
<p>Calls find_groups and returns the first group found. Dies if multiple results are found. In scalar context it returns only the group. In list context it returns the group, and its the arrayref in which it is stored (either the root level group or a sub groups group item).</p>

<dt><a name="delete_group"
>delete_group</a></dt>

<dd>
<p>Passes arguments to find_group to find the group to delete. Then deletes the group. Returns the group that was just deleted.</p>

<dt><a name="add_entry"
>add_entry</a></dt>

<dd>
<p>Adds a new entry to the database. Returns a reference to the new entry. An optional group argument can be passed. If a group is not passed, the entry will be added to the first group in the database. A new entry id will be created if one is not passed or if it conflicts with an existing group.</p>

<p>The following fields can be passed.</p>

<pre class="sh_perl">    accessed =&#62; &#34;2010-06-24 15:09:19&#34;, # last accessed date
    bin_desc =&#62; &#34;&#34;, # description of the stored binary - typically a filename
    binary   =&#62; &#34;&#34;, # raw data to be stored in the system - typically a file
    comment  =&#62; &#34;&#34;, # a comment for the system - auto-type info is normally here
    created  =&#62; &#34;2010-06-24 15:09:19&#34;, # entry creation date
    expires  =&#62; &#34;2999-12-31 23:23:59&#34;, # date entry expires
    icon     =&#62; 0, # icon number for use with agents
    modified =&#62; &#34;2010-06-24 15:09:19&#34;, # last modified
    title    =&#62; &#34;Something&#34;,
    password =&#62; &#39;somepass&#39;, # will be hidden if the database is locked
    url      =&#62; &#34;&#34;,
    username =&#62; &#34;someuser&#34;,
    id       =&#62; &#34;0a55ac30af68149f62c072d7cc8bd5ee&#34; # randomly generated automatically

    group    =&#62; $gid, # which group to add the entry to</pre>

<p>The group argument&#39;s value may also be a reference to a group - such as that returned by find_group.</p>

<dt><a name="find_entries"
>find_entries</a></dt>

<dd>
<p>Takes a hashref of search criteria and returns all matching groups. Can be passed an entry id, title, username, comment, url, active, group_id, group_title, or any other entry property. Search arguments will be parsed by finder_tests.</p>

<pre class="sh_perl">    my @entries = $k-&#62;find_entries({title =&#62; &#39;Something&#39;});

    my @all_entries_flattened = $k-&#62;find_entries({});</pre>

<dt><a name="find_entry"
>find_entry</a></dt>

<dd>
<p>Calls find_entries and returns the first entry found. Dies if multiple results are found. In scalar context it returns only the entry. In list context it returns the entry, and its group.</p>

<dt><a name="delete_entry"
>delete_entry</a></dt>

<dd>
<p>Passes arguments to find_entry to find the entry to delete. Then deletes the entry. Returns the entry that was just deleted.</p>

<dt><a name="now"
>now</a></dt>

<dd>
<p>Returns the current localtime datetime stamp.</p>

<dt><a name="is_locked"
>is_locked</a></dt>

<dd>
<p>Returns true if the current database is locked.</p>

<dt><a name="lock"
>lock</a></dt>

<dd>
<p>Locks the database. This moves all passwords into a protected, in memory, encrypted storage location. Returns 1 on success. Returns 2 if the db is already locked. If a database is loaded vai parse_db or load_db and auto_lock is true, the newly loaded database will start out locked.</p>

<dt><a name="unlock"
>unlock</a></dt>

<dd>
<p>Unlocks a previously locked database. You will need to unlock a database before calling save_db or gen_db.</p>

<dt><a name="locked_entry_password"
>locked_entry_password</a></dt>

<dd>
<p>Allows access to individual passwords for a database that is locked. Dies if the database is not locked.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="BUGS"
>BUGS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Only Rijndael is supported.</p>

<p>Only passkeys are supported (no key files).</p>

<p>This module makes no attempt to act as a password agent. That is the job of File::KeePass::Agent. This isn&#39;t really a bug but some people will think it is.</p>

<p>Groups and entries don&#39;t have true objects associated with them. At the moment this is by design. The data is kept as plain boring data.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SOURCES"
>SOURCES <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Knowledge about the KeePass DB v1 format was gleaned from the source code of keepassx-0.4.3. That source code is published under the GPL2 license. KeePassX 0.4.3 bears the copyright of</p>

<pre class="sh_perl">    Copyright (C) 2005-2008 Tarek Saidi &#60;tarek.saidi@arcor.de&#62;
    Copyright (C) 2007-2009 Felix Geyer &#60;debfx-keepassx {at} fobos.de&#62;</pre>

<p>The encryption/decryption algorithms of File::KeePass are of derivative nature from KeePassX and could not have been created without this insight - though the perl code is from scratch.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHOR"
>AUTHOR <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Paul Seamons &#60;paul at seamons dot com&#62;</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="LICENSE"
>LICENSE <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This module may be distributed under the same terms as Perl itself.</p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78283 Uploads, 24725 Distributions
106015 Modules, 9649 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Sat Apr 28 08:05:29 2012 GMT (0.508469104766846) @cpansearch1 -->
 </body>
</html>
