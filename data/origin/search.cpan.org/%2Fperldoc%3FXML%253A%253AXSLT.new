<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>XML::XSLT - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","XML-XSLT",3]);
    _gaq.push(["_setCustomVar",5,"Release","XML-XSLT-0.48",3]);
    _gaq.push(["_setCustomVar",3,"Module","XML::XSLT",3]);
    _gaq.push(["_setCustomVar",1,"Author","JSTOWE",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?XML::XSLT">permalink</a></div>
  <a href="/~jstowe/">Jonathan Stowe</a> &gt;
  <a href="/~jstowe/XML-XSLT-0.48/">XML-XSLT-0.48</a> &gt;
  XML::XSLT
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/4128f818211cc76c8c6453752a2bb0d6?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/J/JS/JSTOWE/XML-XSLT-0.48.tar.gz">XML-XSLT-0.48.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=XML%3A%3AXSLT;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~JSTOWE/XML-XSLT-0.48/lib/XML/XSLT.pm">Annotate this POD
</a></p>
<div class=box style='width:150px; float: right'>
<h1 class=t5>Related Modules</h1>
<div style="margin:2px">
<a href="/perldoc?XML%3A%3ALibXML">XML::LibXML</a><br>
<a href="/perldoc?XML%3A%3ATwig">XML::Twig</a><br>
<a href="/perldoc?XML%3A%3AParser">XML::Parser</a><br>
<a href="/perldoc?XML%3A%3ASimple">XML::Simple</a><br>
<a href="/perldoc?XML%3A%3ADOM">XML::DOM</a><br>
<a href="/perldoc?HTML%3A%3ATemplate">HTML::Template</a><br>
<a href="/perldoc?XML%3A%3ASablotron">XML::Sablotron</a><br>
<a href="/perldoc?Data%3A%3ADumper">Data::Dumper</a><br>
<a href="/perldoc?XML%3A%3AWriter">XML::Writer</a><br>
<a href="/perldoc?XML%3A%3AXPath">XML::XPath</a><br>
<small>
<a href="http://perlmonks.org/?node=cpan+module+search&pivot=1&module=XML%3A%3AXSLT">more...</a><br>
By <a href="http://perlmonks.org/">perlmonks.org</a></small>
</div>
</div>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>New&nbsp;</td><td style="text-align:right"> 8</td></tr>
<tr><td>Open&nbsp;</td><td style="text-align:right"> 2</td></tr>
</table>
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=XML-XSLT">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  0.48 &nbsp;
<span class="noprint">
  <a href="/src/JSTOWE/XML-XSLT-0.48/lib/XML/XSLT.pm">Source</a> &nbsp;
  Latest&nbsp;Release:&nbsp;<a href="/~jstowe/XML-XSLT/lib/XML/XSLT.pm">XML-XSLT-0.50_2</a>
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <li class='indexItem indexItem1'><a href='#Specifying_Sources'>Specifying Sources</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#METHODS'>METHODS</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#XML::XSLT_Commands'>XML::XSLT Commands</a>
  <li class='indexItem indexItem1'><a href='#SUPPORT'>SUPPORT</a>
  <li class='indexItem indexItem1'><a href='#DEPRECATIONS'>DEPRECATIONS</a>
  <li class='indexItem indexItem1'><a href='#BUGS'>BUGS</a>
  <li class='indexItem indexItem1'><a href='#HISTORY'>HISTORY</a>
  <li class='indexItem indexItem1'><a href='#LICENCE'>LICENCE</a>
  <li class='indexItem indexItem1'><a href='#AUTHORS'>AUTHORS</a>
  <li class='indexItem indexItem1'><a href='#SEE_ALSO'>SEE ALSO</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>XML::XSLT - A perl module for processing XSLT</p>

<dl>
<dt><a name="xsl_output_method"
>xsl_output_method</a></dt>

<dd>
<p>Get or set the &#60;xsl:output method= attribute.
Valid arguments are &#39;html&#39;,
&#39;text&#39; and &#39;xml&#39;</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl"> use XML::XSLT;

 my $xslt = XML::XSLT-&#62;new ($xsl, warnings =&#62; 1);

 $xslt-&#62;transform ($xmlfile);
 print $xslt-&#62;toString;

 $xslt-&#62;dispose();</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This module implements the W3C&#39;s XSLT specification. The goal is full implementation of this spec, but we have not yet achieved that. However, it already works well. See <a href="#XML::XSLT_Commands" class="podlinkpod"
>&#34;XML::XSLT Commands&#34;</a> for the current status of each command.</p>

<p>XML::XSLT makes use of XML::DOM and LWP::Simple, while XML::DOM uses XML::Parser. Therefore XML::Parser, XML::DOM and LWP::Simple have to be installed properly for XML::XSLT to run.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="Specifying_Sources"
>Specifying Sources <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>The stylesheets and the documents may be passed as filenames, file handles regular strings, string references or DOM-trees. Functions that require sources (e.g. new), will accept either a named parameter or simply the argument.</p>

<p>Either of the following are allowed:</p>

<pre class="sh_perl"> my $xslt = XML::XSLT-&#62;new($xsl);
 my $xslt = XML::XSLT-&#62;new(Source =&#62; $xsl);</pre>

<p>In documentation, the named parameter `Source&#39; is always shown, but it is never required.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="METHODS"
>METHODS</a></h2>

<dl>
<dt><a name='new'></a><a name="new(Source_=&#62;_$xml_[,_%args])"
>new(Source =&#62; $xml [, %args])</a></dt>

<dd>
<p>Returns a new XSLT parser object. Valid flags are:</p>

<dl>
<dt><a name="DOMparser_args"
>DOMparser_args</a></dt>

<dd>
<p>Hashref of arguments to pass to the XML::DOM::Parser object&#39;s parse method.</p>

<dt><a name="variables"
>variables</a></dt>

<dd>
<p>Hashref of variables and their values for the stylesheet.</p>

<dt><a name="base"
>base</a></dt>

<dd>
<p>Base of URL for file inclusion.</p>

<dt><a name="debug"
>debug</a></dt>

<dd>
<p>Turn on debugging messages.</p>

<dt><a name="warnings"
>warnings</a></dt>

<dd>
<p>Turn on warning messages.</p>

<dt><a name="indent"
>indent</a></dt>

<dd>
<p>Starting amount of indention for debug messages. Defaults to 0.</p>

<dt><a name="indent_incr"
>indent_incr</a></dt>

<dd>
<p>Amount to indent each level of debug message. Defaults to 1.</p>
</dd>
</dl>

<dt><a name='open_xml'></a><a name="open_xml(Source_=&#62;_$xml_[,_%args])"
>open_xml(Source =&#62; $xml [, %args])</a></dt>

<dd>
<p>Gives the XSLT object new XML to process. Returns an XML::DOM object corresponding to the XML.</p>

<dl>
<dt><a name="base"
>base</a></dt>

<dd>
<p>The base URL to use for opening documents.</p>

<dt><a name="parser_args"
>parser_args</a></dt>

<dd>
<p>Arguments to pase to the parser.</p>
</dd>
</dl>

<dt><a name='open_xsl'></a><a name="open_xsl(Source_=&#62;_$xml,_[,_%args])"
>open_xsl(Source =&#62; $xml, [, %args])</a></dt>

<dd>
<p>Gives the XSLT object a new stylesheet to use in processing XML. Returns an XML::DOM object corresponding to the stylesheet. Any arguments present are passed to the XML::DOM::Parser.</p>

<dl>
<dt><a name="base"
>base</a></dt>

<dd>
<p>The base URL to use for opening documents.</p>

<dt><a name="parser_args"
>parser_args</a></dt>

<dd>
<p>Arguments to pase to the parser.</p>
</dd>
</dl>

<dt><a name='process'></a><a name="process(%variables)"
>process(%variables)</a></dt>

<dd>
<p>Processes the previously loaded XML through the stylesheet using the variables set in the argument.</p>

<dt><a name='transform'></a><a name="transform(Source_=&#62;_$xml_[,_%args])"
>transform(Source =&#62; $xml [, %args])</a></dt>

<dd>
<p>Processes the given XML through the stylesheet. Returns an XML::DOM object corresponding to the transformed XML. Any arguments present are passed to the XML::DOM::Parser.</p>

<dt><a name='serve'></a><a name="serve(Source_=&#62;_$xml_[,_%args])"
>serve(Source =&#62; $xml [, %args])</a></dt>

<dd>
<p>Processes the given XML through the stylesheet. Returns a string containg the result. Example:</p>

<pre class="sh_perl">  use XML::XSLT qw(serve);

  $xslt = XML::XSLT-&#62;new($xsl);
  print $xslt-&#62;serve $xml;</pre>

<dl>
<dt><a name="http_headers"
>http_headers</a></dt>

<dd>
<p>If true, then prepends the appropriate HTTP headers (e.g. Content-Type, Content-Length);</p>

<p>Defaults to true.</p>

<dt><a name="xml_declaration"
>xml_declaration</a></dt>

<dd>
<p>If true, then the result contains the appropriate &#60;?xml?&#62; header.</p>

<p>Defaults to true.</p>

<dt><a name="xml_version"
>xml_version</a></dt>

<dd>
<p>The version of the XML.</p>

<p>Defaults to 1.0.</p>

<dt><a name="doctype"
>doctype</a></dt>

<dd>
<p>The type of DOCTYPE this document is. Defaults to SYSTEM.</p>
</dd>
</dl>

<dt><a name="toString"
>toString</a></dt>

<dd>
<p>Returns the result of transforming the XML with the stylesheet as a string.</p>

<dt><a name="to_dom"
>to_dom</a></dt>

<dd>
<p>Returns the result of transforming the XML with the stylesheet as an XML::DOM object.</p>

<dt><a name="media_type"
>media_type</a></dt>

<dd>
<p>Returns the media type (aka mime type) of the object.</p>

<dt><a name="dispose"
>dispose</a></dt>

<dd>
<p>Executes the <code>dispose</code> method on each XML::DOM object.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="XML::XSLT_Commands"
>XML::XSLT Commands <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<dl>
<dt><a name='xsl'></a><a name="xsl:apply-imports_no"
>xsl:apply-imports no</a></dt>

<dd>
<p>Not supported yet.</p>

<dt><a name='xsl'></a><a name="xsl:apply-templates_limited"
>xsl:apply-templates limited</a></dt>

<dd>
<p>Attribute &#39;select&#39; is supported to the same extent as xsl:value-of supports path selections.</p>

<p>Not supported yet: - attribute &#39;mode&#39; - xsl:sort and xsl:with-param in content</p>

<dt><a name='xsl'></a><a name="xsl:attribute_partially"
>xsl:attribute partially</a></dt>

<dd>
<p>Adds an attribute named to the value of the attribute &#39;name&#39; and as value the stringified content-template.</p>

<p>Not supported yet: - attribute &#39;namespace&#39;</p>

<dt><a name='xsl'></a><a name="xsl:attribute-set_yes"
>xsl:attribute-set yes</a></dt>

<dd>
<p>Partially</p>

<dt><a name='xsl'></a><a name="xsl:call-template_yes"
>xsl:call-template yes</a></dt>

<dd>
<p>Takes attribute &#39;name&#39; which selects xsl:template&#39;s by name.</p>

<p>Weak support: - xsl:with-param (select attrib not supported)</p>

<p>Not supported yet: - xsl:sort</p>

<dt><a name='xsl'></a><a name="xsl:choose_yes"
>xsl:choose yes</a></dt>

<dd>
<p>Tests sequentially all xsl:whens until one succeeds or until an xsl:otherwise is found. Limited test support, see xsl:when</p>

<dt><a name='xsl'></a><a name="xsl:comment_yes"
>xsl:comment yes</a></dt>

<dd>
<p>Supported.</p>

<dt><a name='xsl'></a><a name="xsl:copy_partially"
>xsl:copy partially</a></dt>

<dd>
<dt><a name='xsl'></a><a name="xsl:copy-of_limited"
>xsl:copy-of limited</a></dt>

<dd>
<p>Attribute &#39;select&#39; functions as well as with xsl:value-of</p>

<dt><a name='xsl'></a><a name="xsl:decimal-format_no"
>xsl:decimal-format no</a></dt>

<dd>
<p>Not supported yet.</p>

<dt><a name='xsl'></a><a name="xsl:element_yes"
>xsl:element yes</a></dt>

<dd>
<dt><a name='xsl'></a><a name="xsl:fallback_no"
>xsl:fallback no</a></dt>

<dd>
<p>Not supported yet.</p>

<dt><a name='xsl'></a><a name="xsl:for-each_limited"
>xsl:for-each limited</a></dt>

<dd>
<p>Attribute &#39;select&#39; functions as well as with xsl:value-of</p>

<p>Not supported yet: - xsl:sort in content</p>

<dt><a name='xsl'></a><a name="xsl:if_limited"
>xsl:if limited</a></dt>

<dd>
<p>Identical to xsl:when, but outside xsl:choose context.</p>

<dt><a name='xsl'></a><a name="xsl:import_no"
>xsl:import no</a></dt>

<dd>
<p>Not supported yet.</p>

<dt><a name='xsl'></a><a name="xsl:include_yes"
>xsl:include yes</a></dt>

<dd>
<p>Takes attribute href, which can be relative-local, absolute-local as well as an URL (preceded by identifier http:).</p>

<dt><a name='xsl'></a><a name="xsl:key_no"
>xsl:key no</a></dt>

<dd>
<p>Not supported yet.</p>

<dt><a name='xsl'></a><a name="xsl:message_no"
>xsl:message no</a></dt>

<dd>
<p>Not supported yet.</p>

<dt><a name='xsl'></a><a name="xsl:namespace-alias_no"
>xsl:namespace-alias no</a></dt>

<dd>
<p>Not supported yet.</p>

<dt><a name='xsl'></a><a name="xsl:number_no"
>xsl:number no</a></dt>

<dd>
<p>Not supported yet.</p>

<dt><a name='xsl'></a><a name="xsl:otherwise_yes"
>xsl:otherwise yes</a></dt>

<dd>
<p>Supported.</p>

<dt><a name='xsl'></a><a name="xsl:output_limited"
>xsl:output limited</a></dt>

<dd>
<p>Only the initial xsl:output element is used. The &#34;text&#34; output method is not supported, but shouldn&#39;t be difficult to implement. Only the &#34;doctype-public&#34;, &#34;doctype-system&#34;, &#34;omit-xml-declaration&#34;, &#34;method&#34;, and &#34;encoding&#34; attributes have any support.</p>

<dt><a name='xsl'></a><a name="xsl:param_experimental"
>xsl:param experimental</a></dt>

<dd>
<p>Synonym for xsl:variable (currently). See xsl:variable for support.</p>

<dt><a name='xsl'></a><a name="xsl:preserve-space_no"
>xsl:preserve-space no</a></dt>

<dd>
<p>Not supported yet. Whitespace is always preserved.</p>

<dt><a name='xsl'></a><a name="xsl:processing-instruction_yes"
>xsl:processing-instruction yes</a></dt>

<dd>
<p>Supported.</p>

<dt><a name='xsl'></a><a name="xsl:sort_no"
>xsl:sort no</a></dt>

<dd>
<p>Not supported yet.</p>

<dt><a name='xsl'></a><a name="xsl:strip-space_no"
>xsl:strip-space no</a></dt>

<dd>
<p>Not supported yet. No whitespace is stripped.</p>

<dt><a name='xsl'></a><a name="xsl:stylesheet_limited"
>xsl:stylesheet limited</a></dt>

<dd>
<p>Minor namespace support: other namespace than &#39;xsl:&#39; for xsl-commands is allowed if xmlns-attribute is present. xmlns URL is verified. Other attributes are ignored.</p>

<dt><a name='xsl'></a><a name="xsl:template_limited"
>xsl:template limited</a></dt>

<dd>
<p>Attribute &#39;name&#39; and &#39;match&#39; are supported to minor extend. (&#39;name&#39; must match exactly and &#39;match&#39; must match with full path or no path)</p>

<p>Not supported yet: - attributes &#39;priority&#39; and &#39;mode&#39;</p>

<dt><a name='xsl'></a><a name="xsl:text_yes"
>xsl:text yes</a></dt>

<dd>
<p>Supported.</p>

<dt><a name='xsl'></a><a name="xsl:transform_limited"
>xsl:transform limited</a></dt>

<dd>
<p>Synonym for xsl:stylesheet</p>

<dt><a name='xsl'></a><a name="xsl:value-of_limited"
>xsl:value-of limited</a></dt>

<dd>
<p>Inserts attribute or element values. Limited support:</p>

<p>&#60;xsl:value-of select=&#34;.&#34;/&#62;</p>

<p>&#60;xsl:value-of select=&#34;/root-elem&#34;/&#62;</p>

<p>&#60;xsl:value-of select=&#34;elem&#34;/&#62;</p>

<p>&#60;xsl:value-of select=&#34;//elem&#34;/&#62;</p>

<p>&#60;xsl:value-of select=&#34;elem[n]&#34;/&#62;</p>

<p>&#60;xsl:value-of select=&#34;//elem[n]&#34;/&#62;</p>

<p>&#60;xsl:value-of select=&#34;@attr&#34;/&#62;</p>

<p>&#60;xsl:value-of select=&#34;text()&#34;/&#62;</p>

<p>&#60;xsl:value-of select=&#34;processing-instruction()&#34;/&#62;</p>

<p>&#60;xsl:value-of select=&#34;comment()&#34;/&#62;</p>

<p>and combinations of these.</p>

<p>Not supported yet: - attribute &#39;disable-output-escaping&#39;</p>

<dt><a name='xsl'></a><a name="xsl:variable_partial_or_from_literal_text_in_the_stylesheet."
>xsl:variable partial or from literal text in the stylesheet.</a></dt>

<dd>
<dt><a name='xsl'></a><a name="xsl:when_limited"
>xsl:when limited</a></dt>

<dd>
<p>Only inside xsl:choose. Limited test support:</p>

<p>&#60;xsl:when test=&#34;@attr=&#39;value&#39;&#34;&#62;</p>

<p>&#60;xsl:when test=&#34;elem=&#39;value&#39;&#34;&#62;</p>

<p>&#60;xsl:when test=&#34;path/[@attr=&#39;value&#39;]&#34;&#62;</p>

<p>&#60;xsl:when test=&#34;path/[elem=&#39;value&#39;]&#34;&#62;</p>

<p>&#60;xsl:when test=&#34;path&#34;&#62;</p>

<p>path is supported to the same extend as with xsl:value-of</p>

<dt><a name='xsl'></a><a name="xsl:with-param_experimental"
>xsl:with-param experimental</a></dt>

<dd>
<p>It is currently not functioning. (or is it?)</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SUPPORT"
>SUPPORT <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>General information, bug reporting tools, the latest version, mailing lists, etc. can be found at the XML::XSLT homepage:</p>

<pre class="sh_perl">  <a href="http://xmlxslt.sourceforge.net/" class="podlinkurl"
>http://xmlxslt.sourceforge.net/</a></pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DEPRECATIONS"
>DEPRECATIONS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Methods and interfaces from previous versions that are not documented in this version are deprecated. Each of these deprecations can still be used but will produce a warning when the deprecation is first used. You can use the old interfaces without warnings by passing <code>new()</code> the flag <code>use_deprecated</code>. Example:</p>

<pre class="sh_perl"> $parser = XML::XSLT-&#62;new($xsl, &#34;FILE&#34;,
                          use_deprecated =&#62; 1);</pre>

<p>The deprecated methods will disappear by the time a 1.0 release is made.</p>

<p>The deprecated methods are :</p>

<dl>
<dt><a name="output_string"
>output_string</a></dt>

<dd>
<p>use toString instead</p>

<dt><a name="result_string"
>result_string</a></dt>

<dd>
<p>use toString instead</p>

<dt><a name="output"
>output</a></dt>

<dd>
<p>use toString instead</p>

<dt><a name="result"
>result</a></dt>

<dd>
<p>use toString instead</p>

<dt><a name="result_mime_type"
>result_mime_type</a></dt>

<dd>
<p>use media_type instead</p>

<dt><a name="output_mime_type"
>output_mime_type</a></dt>

<dd>
<p>use media_type instead</p>

<dt><a name="result_tree"
>result_tree</a></dt>

<dd>
<p>use to_dom instead</p>

<dt><a name="output_tree"
>output_tree</a></dt>

<dd>
<p>use to_dom instead</p>

<dt><a name="transform_document"
>transform_document</a></dt>

<dd>
<p>use transform instead</p>

<dt><a name="process_project"
>process_project</a></dt>

<dd>
<p>use process instead</p>

<dt><a name="open_project"
>open_project</a></dt>

<dd>
<p>use <code>Source</code> argument to <b>new()</b> and <b>transform</b> instead.</p>

<dt><a name="print_output"
>print_output</a></dt>

<dd>
<p>use <b>serve()</b> instead.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="BUGS"
>BUGS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Yes.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="HISTORY"
>HISTORY <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Geert Josten and Egon Willighagen developed and maintained XML::XSLT up to version 0.22. At that point, Mark Hershberger started moving the project to Sourceforge and began working on it with Bron Gondwana.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="LICENCE"
>LICENCE <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Copyright (c) 1999 Geert Josten &#38; Egon Willighagen. All Rights Reserverd. This module is free software, and may be distributed under the same terms and conditions as Perl.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHORS"
>AUTHORS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Geert Josten &#60;gjosten@sci.kun.nl&#62;</p>

<p>Egon Willighagen &#60;egonw@sci.kun.nl&#62;</p>

<p>Mark A. Hershberger &#60;mah@everybody.org&#62;</p>

<p>Bron Gondwana &#60;perlcode@brong.net&#62;</p>

<p>Jonathan Stowe &#60;jns@gellyfish.com&#62;</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SEE_ALSO"
>SEE ALSO <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><a href="/perldoc?XML%3A%3ADOM" class="podlinkpod"
>XML::DOM</a>, <a href="/perldoc?LWP%3A%3ASimple" class="podlinkpod"
>LWP::Simple</a>, <a href="/perldoc?XML%3A%3AParser" class="podlinkpod"
>XML::Parser</a></p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78269 Uploads, 24722 Distributions
105999 Modules, 9649 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Fri Apr 27 16:54:27 2012 GMT (0.306370973587036) @cpansearch1 -->
 </body>
</html>
