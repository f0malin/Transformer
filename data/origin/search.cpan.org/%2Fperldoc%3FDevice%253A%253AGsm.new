<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>Device::Gsm - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","Device-Gsm",3]);
    _gaq.push(["_setCustomVar",5,"Release","Device-Gsm-1.60",3]);
    _gaq.push(["_setCustomVar",3,"Module","Device::Gsm",3]);
    _gaq.push(["_setCustomVar",1,"Author","COSIMO",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?Device::Gsm">permalink</a></div>
  <a href="/~cosimo/">Cosimo Streppone</a> &gt;
  <a href="/~cosimo/Device-Gsm-1.60/">Device-Gsm-1.60</a> &gt;
  Device::Gsm
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/5ff5e7f57a011f5c49781459e66ad61f?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/C/CO/COSIMO/Device-Gsm-1.60.tar.gz">Device-Gsm-1.60.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=Device%3A%3AGsm;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~COSIMO/Device-Gsm-1.60/lib/Device/Gsm.pm">Annotate this POD
</a></p>
<div class=box style='width:150px; float: right'>
<h1 class=t5>Related Modules</h1>
<div style="margin:2px">
<a href="/perldoc?GSM%3A%3ASMS">GSM::SMS</a><br>
<a href="/perldoc?Net%3A%3ASMS">Net::SMS</a><br>
<a href="/perldoc?Net%3A%3ASSH2">Net::SSH2</a><br>
<a href="/perldoc?HTTP%3A%3ACookies">HTTP::Cookies</a><br>
<a href="/perldoc?LWP%3A%3AUserAgent">LWP::UserAgent</a><br>
<a href="/perldoc?Net%3A%3ASSH%3A%3APerl">Net::SSH::Perl</a><br>
<small>
<a href="http://perlmonks.org/?node=cpan+module+search&pivot=1&module=Device%3A%3AGsm">more...</a><br>
By <a href="http://perlmonks.org/">perlmonks.org</a></small>
</div>
</div>

<div style="float:right">
<a href="mailto:bug-device-gsm@rt.cpan.org">View/Report Bugs</a><br/>

</div>
</div>
  Module Version:  1.60 &nbsp;
<span class="noprint">
  <a href="/src/COSIMO/Device-Gsm-1.60/lib/Device/Gsm.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <li class='indexItem indexItem1'><a href='#METHODS'>METHODS</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#new()'>new()</a>
    <li class='indexItem indexItem2'><a href='#connect()'>connect()</a>
    <li class='indexItem indexItem2'><a href='#datetime()'>datetime()</a>
    <li class='indexItem indexItem2'><a href='#delete_sms()'>delete_sms()</a>
    <li class='indexItem indexItem2'><a href='#forward()'>forward()</a>
    <li class='indexItem indexItem2'><a href='#hangup()'>hangup()</a>
    <li class='indexItem indexItem2'><a href='#imei()'>imei()</a>
    <li class='indexItem indexItem2'><a href='#manufacturer()'>manufacturer()</a>
    <li class='indexItem indexItem2'><a href='#messages()'>messages()</a>
    <li class='indexItem indexItem2'><a href='#mode()'>mode()</a>
    <li class='indexItem indexItem2'><a href='#model()'>model()</a>
    <li class='indexItem indexItem2'><a href='#network()'>network()</a>
    <li class='indexItem indexItem2'><a href='#signal_quality()'>signal_quality()</a>
    <li class='indexItem indexItem2'><a href='#software_version()'>software_version()</a>
    <li class='indexItem indexItem2'><a href='#storage()'>storage()</a>
    <li class='indexItem indexItem2'><a href='#test_command()'>test_command()</a>
    <li class='indexItem indexItem2'><a href='#register()'>register()</a>
    <li class='indexItem indexItem2'><a href='#send_sms()'>send_sms()</a>
    <li class='indexItem indexItem2'><a href='#service_center()'>service_center()</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#REQUIRES'>REQUIRES</a>
  <li class='indexItem indexItem1'><a href='#EXPORT'>EXPORT</a>
  <li class='indexItem indexItem1'><a href='#TROUBLESHOOTING'>TROUBLESHOOTING</a>
  <li class='indexItem indexItem1'><a href='#TO-DO'>TO-DO</a>
  <li class='indexItem indexItem1'><a href='#AUTHOR'>AUTHOR</a>
  <li class='indexItem indexItem1'><a href='#SEE_ALSO'>SEE ALSO</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Device::Gsm - Perl extension to interface GSM phones / modems</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">  use Device::Gsm;

  my $gsm = new Device::Gsm( port =&#62; &#39;/dev/ttyS1&#39;, pin =&#62; &#39;xxxx&#39; );

  if( $gsm-&#62;connect() ) {
      print &#34;connected!\n&#34;;
  } else {
      print &#34;sorry, no connection with gsm phone on serial port!\n&#34;;
  }

  # Register to GSM network (you must supply PIN number in above new() call)
  # See &#39;assume_registered&#39; in the new() method documentation
  $gsm-&#62;register();

  # Send quickly a short text message
  $gsm-&#62;send_sms(
      recipient =&#62; &#39;+3934910203040&#39;,
      content   =&#62; &#39;Hello world! from Device::Gsm&#39;
  );

  # Get list of Device::Gsm::Sms message objects
  # see `examples/read_messages.pl&#39; for all the details
  my @messages = $gsm-&#62;messages();</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><code>Device::Gsm</code> class implements basic GSM functions, network registration and SMS sending.</p>

<p>This class supports also <code>PDU</code> mode to send <code>SMS</code> messages, and should be fairly usable. In the past, I have developed and tested it under Linux RedHat 7.1 with a 16550 serial port and Siemens C35i/C45 GSM phones attached with a Siemens-compatible serial cable. Currently, I&#39;m developing and testing this stuff with Linux Slackware 10.2 and a <b>Cambridge Silicon Radio</b> (CSR) USB bluetooth dongle, connecting to a Nokia 6600 phone.</p>

<p>Please be kind to the universe and contact me if you have troubles or you are interested in this.</p>

<p>Please be monstruosly kind to the universe and (if you don&#39;t mind spending an SMS) use the <code>examples/send_to_cosimo.pl</code> script to make me know that Device::Gsm works with your device (thanks!).</p>

<p>Recent versions of <code>Device::Gsm</code> have also an utility called <code>autoscan</code> in the <code>bin/</code> folder, that creates a little profile of the devices it runs against, that contains information about supported commands and exact output of commands to help recognize similar devices.</p>

<p>Be sure to send me your profile by email (if you want to), so I can add better support for your device in the future!</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="METHODS"
>METHODS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>The following documents all supported methods with simple examples of usage.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="new()"
>new()</a></h2>

<p>Inherited from <a href="/perldoc?Device%3A%3AModem" class="podlinkpod"
>Device::Modem</a>. See <a href="/perldoc?Device%3A%3AModem" class="podlinkpod"
>Device::Modem</a> documentation for more details.</p>

<p>The only mandatory argument is the <code>port</code> you want to use to connect to the GSM device:</p>

<pre class="sh_perl">    my $gsm = Device::Gsm-&#62;new(
        port =&#62; &#39;/dev/ttyS0&#39;,
    );</pre>

<p>On some phones, you may experience problems in the GSM network registration step. For this reasons, you can pass a special <code>assume_registered</code> option to have <a href="/~cosimo/Device-Gsm-1.60/lib/Device/Gsm.pm" class="podlinkpod"
>Device::Gsm</a> ignore the registration step and assume the device is already registered on the GSM network. Example:</p>

<pre class="sh_perl">    my $gsm = Device::Gsm-&#62;new(
        port =&#62; &#39;/dev/ttyS0&#39;,
        assume_registered =&#62; 1,
    );</pre>

<p>If you want to send debugging information to your own log file instead of the default setting, you can:</p>

<pre class="sh_perl">    my $gsm = Device::Gsm-&#62;new(
        port =&#62; &#39;/dev/ttyS1&#39;,
        log =&#62; &#39;file,/tmp/myfile.log&#39;,
        loglevel =&#62; &#39;debug&#39;,  # default is &#39;warning&#39;
    );</pre>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="connect()"
>connect()</a></h2>

<p>This is the main call that connects to the appropriate device. After the connection has been established, you can start issuing commands. The list of accepted parameters (to be specified as hash keys and values) is the same of <code>Device::SerialPort</code> (or <code>Win32::SerialPort</code> on Windows platform), as all parameters are passed to those classes&#39; connect() method.</p>

<p>The default value for <code>baudrate</code> parameter is <code>19200</code>.</p>

<p>Example:</p>

<pre class="sh_perl">    my $gsm = Device::Gsm-&#62;new( port=&#62;&#39;/dev/ttyS0&#39;, log=&#62;&#39;syslog&#39; );
    # ...
    if( $gsm-&#62;connect(baudrate =&#62; 19200) ) {
        print &#34;Connected!&#34;;
    } else {
        print &#34;Could not connect, sorry!&#34;;
    }
    # ...</pre>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="datetime()"
>datetime()</a></h2>

<p>Used to get or set your phone/gsm modem date and time.</p>

<p>If called without parameters, it gets the current phone/gsm date and time in &#34;gsm&#34; format &#34;YY/MM/DD,HH:MN:SS&#34;. For example <code>03/12/15,22:48:59</code> means December the 15th, at 10:48:59 PM. Example:</p>

<pre class="sh_perl">    $datestr = $gsm-&#62;datetime();</pre>

<p>If called with parameters, sets the current phone/gsm date and time to that of supplied value. Example:</p>

<pre class="sh_perl">    $newdate = $gsm-&#62;datetime( time() );</pre>

<p>where <code>time()</code> is the perl&#39;s builtin <code>time()</code> function (see <code>perldoc -f time</code> for details). Another variant allows to pass a <code>localtime</code> array to set the correspondent datetime. Example:</p>

<pre class="sh_perl">    $newdate = $gsm-&#62;datetime( localtime() );</pre>

<p>(Note the list context). Again you can read the details for <code>localtime</code> function with <code>perldoc -f localtime</code>.</p>

<p>If your device does not support this command, an <b>undefined</b> value will be returned in either case.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="delete_sms()"
>delete_sms()</a></h2>

<p>This method deletes a message from your SIM card, given the message index number. Example:</p>

<pre class="sh_perl">    $gsm-&#62;delete_sms(3);</pre>

<p>An optional second parameter specifies the &#34;storage&#34;. It allows to delete messages from gsm phone memory or sim card memory. Example:</p>

<pre class="sh_perl">    # Deletes first message from gsm phone memory
    $gsm-&#62;delete_sms(1, &#39;ME&#39;);

    # Deletes 3rd message from sim card
    $gsm-&#62;delete_sms(3, &#39;SM&#39;);</pre>

<p>By default, it uses the currently set storage, via the <code>storage()</code> method.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="forward()"
>forward()</a></h2>

<p>Sets call forwarding. Accepts three arguments: reason, mode and number. Reason can be the string <code>unconditional</code>, <code>busy</code>, <code>no reply</code> and <code>unreachable</code>. Mode can be the string <code>disable</code>, <code>enable</code>, <code>query</code>, <code>register</code>, <code>erase</code>.</p>

<p>Example:</p>

<pre class="sh_perl">    # Set unconditional call forwarding to +47 123456789
    $gsm-&#62;forward(&#39;unconditional&#39;,&#39;register&#39;,&#39;+47123456789&#39;);

    # Erase unconditional call forwarding
    $gsm-&#62;forward(&#39;unconditional&#39;,&#39;erase&#39;);</pre>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="hangup()"
>hangup()</a></h2>

<p>Hangs up the phone, terminating the active calls, if any. This method has been never tested on real &#34;live&#34; conditions, but it needs to be specialized for GSM phones, because it relies on <code>+HUP</code> GSM command. Example:</p>

<pre class="sh_perl">    $gsm-&#62;hangup();</pre>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="imei()"
>imei()</a></h2>

<p>Returns the device own IMEI number (International Mobile Equipment Identifier ???). This identifier is numeric and should be unique among all GSM mobile devices and phones. This is not really true, but ... . Example:</p>

<pre class="sh_perl">    my $imei = $gsm-&#62;imei();</pre>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="manufacturer()"
>manufacturer()</a></h2>

<p>Returns the device manufacturer, usually only the first word (example: <code>Nokia</code>, <code>Siemens</code>, <code>Falcom</code>, ...). Example:</p>

<pre class="sh_perl">    my $man_name = $gsm-&#62;manufacturer();
    if( $man_name eq &#39;Nokia&#39; ) {
        print &#34;We have a nokia phone...&#34;;
    } else {
        print &#34;We have a $man_name phone...&#34;;
    }</pre>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="messages()"
>messages()</a></h2>

<p>This method is a somewhat unstable and subject to change, but for now it seems to work. It is meant to extract all text SMS messages stored on your SIM card or gsm phone. In list context, it returns a list of messages (or undefined value if no message or errors), every message being a <code>Device::Gsm::Sms</code> object.</p>

<p>The only parameter specifies the <code>storage</code> where you want to read the messages, and can assume some of the following values (but check your phone/modem manual for special manufacturer values):</p>

<dl>
<dt><a name="ME"
><code>ME</code></a></dt>

<dd>
<p>Means gsm phone <b>ME</b>mory</p>

<dt><a name="MT"
><code>MT</code></a></dt>

<dd>
<p>Means gsm phone <b>ME</b>mory on Nokia phones?</p>

<dt><a name="SM"
><code>SM</code></a></dt>

<dd>
<p>Means <b>S</b>im card <b>M</b>emory (default value)</p>
</dd>
</dl>

<p>Example:</p>

<pre class="sh_perl">    my $gsm = Device::Gsm-&#62;new();
    $gsm-&#62;connect(port=&#62;&#39;/dev/ttyS0&#39;) or die &#34;Can&#39;t connect!&#34;;

    for( $gsm-&#62;messages(&#39;SM&#39;) )
    {
        print $_-&#62;sender(), &#39;: &#39;, $_-&#62;content(), &#34;\n&#34;;
    }</pre>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="mode()"
>mode()</a></h2>

<p>Sets the device GSM command mode. Accepts one parameter to set the new mode that can be the string <code>text</code> or <code>pdu</code>. Example:</p>

<pre class="sh_perl">    # Set text mode
    $gsm-&#62;mode(&#39;text&#39;);
    
    # Set pdu mode
    $gsm-&#62;mode(&#39;pdu&#39;);</pre>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="model()"
>model()</a></h2>

<p>Returns phone/device model name or number. Example:</p>

<pre class="sh_perl">    my $model = $gsm-&#62;model();</pre>

<p>For example, for Siemens C45, <code>$model</code> holds <code>C45</code>; for Nokia 6600, <code>$model</code> holds <code>6600</code>.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="network()"
>network()</a></h2>

<p>Returns the current registered or preferred GSM network operator. Example:</p>

<pre class="sh_perl">    my $net_name = $gsm-&#62;network();
    # Returns &#39;Wind Telecom Spa&#39;

    my($net_name, $net_code) = $gsm-&#62;network();
    # Returns (&#39;Wind Telecom Spa&#39;, &#39;222 88&#39;)</pre>

<p>This obviously varies depending on country and network operator. For me now, it holds &#34;Wind Telecomunicazioni SpA&#34;. It is not guaranteed that the mobile phone returns the decoded network name. It can also return a gsm network code, like <code>222 88</code>. In this case, an attempt to decode the network name is made.</p>

<p>Be sure to call the <code>network()</code> method when already registered to gsm network. See <code>register()</code> method.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="signal_quality()"
>signal_quality()</a></h2>

<p>Returns the measure of signal quality expressed in dBm units, where near to zero is better. An example value is -91 dBm, and reported value is <code>-91</code>. Values should range from -113 to -51 dBm, where -113 is the minimum signal quality and -51 is the theorical maximum quality.</p>

<pre class="sh_perl">    my $level = $gsm-&#62;signal_quality();</pre>

<p>If signal quality can&#39;t be read or your device does not support this command, an <b>undefined</b> value will be returned.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="software_version()"
>software_version()</a></h2>

<p>Returns the device firmare version, as stored by the manufacturer. Example:</p>

<pre class="sh_perl">    my $rev = $gsm-&#62;software_revision();</pre>

<p>For example, for my Siemens C45, <code>$rev</code> holds <code>06</code>.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="storage()"
>storage()</a></h2>

<p>Allows to get/set the current sms storage, that is where the sms messages are saved, either the sim card or gsm phone memory. Phones/modems that do not support this feature (implemented by <code>+CPMS</code> AT command won&#39;t be affected by this method.</p>

<pre class="sh_perl">    my @msg;
    my $storage = $gsm-&#62;storage();
    print &#34;Current storage is $storage\n&#34;;

    # Read all messages on sim card
    $gsm-&#62;storage(&#39;SM&#39;);
    @msg = $gsm-&#62;messages();

    # Read messages from gsm phone memory
    $gsm-&#62;storage(&#39;ME&#39;);
    push @msg, $gsm-&#62;messages();</pre>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="test_command()"
>test_command()</a></h2>

<p>This method allows to query the device to know if a specific AT GSM command is supported. This is used only with GSM commands (those with <code>AT+</code> prefix). For example, I want to know if my device supports the <code>AT+GXXX</code> command. All we have to do is:</p>

<pre class="sh_perl">    my $gsm = Device::Gsm-&#62;new( port =&#62; &#39;/dev/myport&#39; );

    ...

    if( $gsm-&#62;test_command(&#39;GXXX&#39;) ) {
        # Ok, command is supported
    } else {
        # Nope, no GXXX command
    }</pre>

<p>Note that if you omit the starting <code>+</code> character, it is automatically added. You can also test commands like <code>^SNBR</code> or the like, without <code>+</code> char being added.</p>


<I>Must be explained better, uh?</I>


<h2><a class='u' href='#___top' title='click to go to top of document'
name="register()"
>register()</a></h2>

<p>&#34;Registering&#34; on the GSM network is what happens when you turn on your mobile phone or GSM equipment and the device tries to reach the GSM operator network. If your device requires a <b>PIN</b> number, it is used here (but remember to supply the <code>pin</code> parameter in new() object constructor for this to work.</p>

<p>Registration can take some seconds, don&#39;t worry for the wait. After that, you are ready to send your SMS messages or do some voice calls, ... . Normally you don&#39;t need to call register() explicitly because it is done automatically for you when/if needed.</p>

<p>If return value is true, registration was successful, otherwise there is something wrong; probably you supplied the wrong PIN code or network unreachable.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="send_sms()"
>send_sms()</a></h2>

<p>Obviously, this sends out SMS text messages. I should warn you that <b>you cannot send</b> (for now) MMS, ringtone, smart, ota messages of any kind with this method.</p>

<p>Send out an SMS message quickly:</p>

<pre class="sh_perl">    my $sent = $gsm-&#62;send_sms(
        content   =&#62; &#39;Hello, world!&#39;,   # SMS text
        recipient =&#62; &#39;+99000123456&#39;,    # recipient phone number
    );

    if( $sent ) {
        print &#34;OK!&#34;;
    } else {
        print &#34;Troubles...&#34;;
    }</pre>

<p>The allowed parameters to send_sms() are:</p>

<dl>
<dt><a name="class"
><code>class</code></a></dt>

<dd>
<p>Class parameter can assume two values: <code>normal</code> and <code>flash</code>. Flash (or class zero) messages are particular because they are immediately displayed (without user confirm) and never stored on phone memory, while <code>normal</code> is the default.</p>

<dt><a name="content"
><code>content</code></a></dt>

<dd>
<p>This is the text you want to send, consisting of max 160 chars if you use <b>PDU</b> mode and 140 (?) if in <b>text</b> mode (more on this later).</p>

<dt><a name="mode"
><code>mode</code></a></dt>

<dd>
<p>Can assume two values (case insensitive): <code>pdu</code> and <code>text</code>. <code>PDU</code> means <b>Protocol Data Unit</b> and it is a sort of <b>binary</b> encoding of commands, to save time/space, while <code>text</code> is the normal GSM commands text mode.</p>

<p>Recent mobile phones and GSM equipments surely have support for <code>PDU</code> mode. Older OEM modules (like Falcom Swing, for example) don&#39;t have PDU mode, but only text mode. It is just a matter of trying.</p>

<dt><a name="recipient"
><code>recipient</code></a></dt>

<dd>
<p>Phone number of message recipient</p>

<dt><a name="status_report"
><code>status_report</code></a></dt>

<dd>
<p>If present with a true value, it enables sending of SMS messages (only for PDU mode, text mode SMS won&#39;t be influenced by this parameter) with the status report, also known as delivery report, that is a short message that reports the status of your sent message. Usually this is only available if your mobile company supports this feature, and probably you will be charged a small amount for this service.</p>

<p>More information on this would be welcome.</p>
</dd>
</dl>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="service_center()"
>service_center()</a></h2>

<p>If called without parameters, returns the actual SMS Service Center phone number. This is the number your phone automatically calls when receiving and sending SMS text messages, and your network operator should tell you what this number is.</p>

<p>Example:</p>

<pre class="sh_perl">    my $gsm = Device::Gsm-&#62;new( port =&#62; &#39;COM1&#39; );
    $gsm-&#62;connect() or die &#34;Can&#39;t connect&#34;;
    $srv_cnt = $gsm-&#62;service_center();
    print &#34;My service center number is: $srv_cnt\n&#34;;</pre>

<p>If you want to set or change this number (if used improperly this can disable sending of SMS messages, so be warned!), you can try something like:</p>

<pre class="sh_perl">    my $ok = $gsm-&#62;service_center(&#39;+99001234567&#39;);
    print &#34;Service center changed!\n&#34; if $ok;</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="REQUIRES"
>REQUIRES <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<ul>
<li>Device::Modem, which in turn requires</li>

<li>Device::SerialPort (or Win32::SerialPort on Windows machines)</li>
</ul>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="EXPORT"
>EXPORT <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>None</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="TROUBLESHOOTING"
>TROUBLESHOOTING <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>If you experience problems, please double check:</p>

<dl>
<dt><a name='Device'></a><a name="Device_permissions"
>Device permissions</a></dt>

<dd>
<p>Maybe you don&#39;t have necessary permissions to access your serial, irda or bluetooth port device. Try executing your script as root, or try, if you don&#39;t mind, <code>chmod a+rw /dev/ttyS1</code> (or whatever device you use instead of <code>/dev/ttyS1</code>).</p>

<dt><a name='Connection'></a><a name="Connection_speed"
>Connection speed</a></dt>

<dd>
<p>Try switching <code>baudrate</code> parameter from 19200 (the default value) to 9600 or viceversa. This one is the responsible of 80% of the problems, because there is no baudrate auto-detection.</p>

<dt><a name='Device'></a><a name="Device_autoscan"
>Device autoscan</a></dt>

<dd>
<p>If all else fails, please use the <b>autoscan</b> utility in the <code>bin/</code> folder of the <code>Device::Gsm</code> distribution. Try running this autoscan utility and examine the log file produced in the current directory.</p>

<p>If you lose any hope, send me this log file so I can eventually have any clue about the problem / failure.</p>

<p>Also this is a profiling tool, to know which commands are supported by your device, so please send me profiles of your devices, so I can add better support for all devices in the future!</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="TO-DO"
>TO-DO <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<dl>
<dt><a name="Spooler"
>Spooler</a></dt>

<dd>
<p>Build a simple spooler program that sends all SMS stored in a special queue (that could be a simple filesystem folder).</p>

<dt><a name='Validity'></a><a name="Validity_Period"
>Validity Period</a></dt>

<dd>
<p>Support <code>validity</code> period option on SMS sending. Tells how much time the SMS Service Center must hold the SMS for delivery when not received.</p>

<dt><a name="Profiles"
>Profiles</a></dt>

<dd>
<p>Build a profile of the GSM device used, so that we don&#39;t have to <code>always</code> test each command to know whether it is supported or not, because this takes too time to be done every time.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHOR"
>AUTHOR <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Cosimo Streppone, cosimo@cpan.org</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SEE_ALSO"
>SEE ALSO <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><a href="/perldoc?Device%3A%3AModem" class="podlinkpod"
>Device::Modem</a>, <a href="/perldoc?Device%3A%3ASerialPort" class="podlinkpod"
>Device::SerialPort</a>, <a href="/perldoc?Win32%3A%3ASerialPort" class="podlinkpod"
>Win32::SerialPort</a>, perl(1)</p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78276 Uploads, 24724 Distributions
106002 Modules, 9649 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Sat Apr 28 03:03:19 2012 GMT (0.198648929595947) @cpansearch1 -->
 </body>
</html>
