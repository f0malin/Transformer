<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>Net::ParseWhois - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","Net-ParseWhois",3]);
    _gaq.push(["_setCustomVar",5,"Release","Net-ParseWhois-0.7",3]);
    _gaq.push(["_setCustomVar",3,"Module","Net::ParseWhois",3]);
    _gaq.push(["_setCustomVar",1,"Author","RIFFER",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?Net::ParseWhois">permalink</a></div>
  <a href="/~riffer/">Jeff Mercer</a> &gt;
  <a href="/~riffer/Net-ParseWhois-0.7/">Net-ParseWhois-0.7</a> &gt;
  Net::ParseWhois
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/e1ce8f0f6eb9899c2eec04da49f170f7?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/R/RI/RIFFER/Net-ParseWhois-0.7.tar.gz">Net-ParseWhois-0.7.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=Net%3A%3AParseWhois;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~RIFFER/Net-ParseWhois-0.7/lib/Net/ParseWhois.pm">Annotate this POD
</a></p>
<div class=box style='width:150px; float: right'>
<h1 class=t5>Related Modules</h1>
<div style="margin:2px">
<a href="/perldoc?Net%3A%3AWhois">Net::Whois</a><br>
<a href="/perldoc?Data%3A%3ADumper">Data::Dumper</a><br>
<a href="/perldoc?Net%3A%3AXWhois">Net::XWhois</a><br>
<small>
<a href="http://perlmonks.org/?node=cpan+module+search&pivot=1&module=Net%3A%3AParseWhois">more...</a><br>
By <a href="http://perlmonks.org/">perlmonks.org</a></small>
</div>
</div>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>New&nbsp;</td><td style="text-align:right"> 2</td></tr>
<tr><td>Open&nbsp;</td><td style="text-align:right"> 0</td></tr>
</table>
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=Net-ParseWhois">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  0.7 &nbsp;
<span class="noprint">
  <a href="/src/RIFFER/Net-ParseWhois-0.7/lib/Net/ParseWhois.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <li class='indexItem indexItem1'><a href='#REGISTRARS'>REGISTRARS</a>
  <li class='indexItem indexItem1'><a href='#COMMON_METHODS_(Specific_to_Net::ParseWhois)'>COMMON METHODS (Specific to Net::ParseWhois)</a>
  <li class='indexItem indexItem1'><a href='#GENERIC_METHODS_(From_Net::Whois)'>GENERIC METHODS (From Net::Whois)</a>
  <li class='indexItem indexItem1'><a href='#SEE_ALSO'>SEE ALSO</a>
  <li class='indexItem indexItem1'><a href='#AUTHORS_/_ACKNOWLEDGMENTS'>AUTHORS / ACKNOWLEDGMENTS</a>
  <li class='indexItem indexItem1'><a href='#COPYRIGHT'>COPYRIGHT</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Net::ParseWhois - An extendable alternative to Net::Whois for parsing whois information.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">  # below code based on t/whois.pl in Net::ParseWhois distribution package ...

  use Net::ParseWhois;

  my $dom = &#39;honestabe.net&#39;;

  my $w = Net::ParseWhois::Domain-&#62;new($dom);
  unless ($w-&#62;ok) {
        warn &#34;error: &#34; . $w-&#62;{&#39;error&#39;} . &#34;\n&#34; if $w-&#62;{&#39;error&#39;};
        die &#34;No match for $dom\n&#34;;
  }

  print &#34;Registrar: &#34;, $w-&#62;registrar, &#34;\n&#34;;
  print &#34;Domain: &#34;, $w-&#62;domain, &#34;\n&#34;;
  print &#34;Name: &#34;, $w-&#62;name, &#34;\n&#34;;
  print &#34;Tag: &#34;, $w-&#62;tag, &#34;\n&#34;;
  print &#34;Address:\n&#34;, map { &#34;    $_\n&#34; } $w-&#62;address;
  print &#34;Country: &#34;, $w-&#62;country, &#34;\n&#34;;
  print &#34;Name Servers:\n&#34;, map { &#34;    $$_[0] ($$_[1])\n&#34; }  @{$w-&#62;servers};
  my ($c, $t);
  if ($c = $w-&#62;contacts) {
    print &#34;Contacts:\n&#34;;
    for $t (sort keys %$c) {
      print &#34;    $t:\n&#34;;
      print map { &#34;\t$_\n&#34; } @{$$c{$t}};
    }
  }
  print &#34;Record created:&#34;, $w-&#62;record_created ;
  print &#34;\nRecord updated:&#34;, $w-&#62;record_updated,&#34;\n&#34;;</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Net::ParseWhois currently only supports domains from major TLDs and Registrars (.com, .net &#38; .org -- see REGISTRARS for an exact list of who&#39;s supported) and tries to maintain backward interface compatability with Net::Whois.</p>

<p>Net::ParseWhois is my attempt at updating Net::Whois to support whois referrals. The author of Net::Whois (Dana Hudes) and I disgreed on how to solve the problem of parsing a distrubuted and non-standardized whois system, so I created this divergent module. (It&#39;s my understanding that Mr. Hudes wants to create an IETF draft and assumes registrars/registries will then follow it. I&#39;ve simply taken the current not-so-defined situation and coded around it.)</p>

<p>Net::ParseWhois contains a generalized parsing system that can be configured for each Registrar, or completely overridden as needed.</p>

<p>The class <code>Net::ParseWhois::Domain::Registrar</code> contains a list of known servers that could be returned in a whois referral, and specifies the specific class to use for each. When <code>Net::ParseWhois</code> receives a referral from the &#39;root&#39; whois server, it creates the specified object and calls follow_referral on that object. If a domain is found and a referral given, but no Registrar class has been defined to handle that referral, the method <i>ok</i> will return true but method &#39;unknown_registrar&#39; will also return true. Net::ParseWhois will still follow the referral, and the raw output from the registrar will be available via the method &#39;raw_whois_text&#39;.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="REGISTRARS"
>REGISTRARS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Currently supported:</p>

<pre class="sh_perl">        whois.dotster.com - Dotster, Inc.
        whois.register.com - Register.com, Inc.
        whois.networksolutions.com - Network Solutions, Inc.
        whois.opensrs.net - Tucows.com, Inc.
        whois.domaindiscover.com - Tierranet, Inc.
        whois.bulkregister.com - Bulkregister.com, Inc.
        rs.domainbank.net - Domain Bank, Inc.
        whois.registrars.com - INTERNET DOMAIN REGISTRARS (Shopnow?)
        whois.corenic.net - Core Internet Council of Registrars
        whois.InternetNamesWW.com -  Melbourne IT, aka Internet Names Worldwide
        whois.easyspace.com - Easyspace, Ltd.</pre>

<p>Not supported (with notes..):</p>

<pre class="sh_perl">        whois.nordnet.net - should be easy.
        whois.namesecure.com - easy
        whois.compuserve.com - easy
        whois.itsyourdomain.com - easy
        whois.namesdirect.com - easy
        whois.enom.com - easy, but no nameserver or expire/updated data
        whois.domaininfo.com - not too hard. follows same structure, but uses different template/style
        whois.nameit.net - different style, not too hard
        whois.yesnic.com - Korean based registrar, field&#39;s are labeled. would require work.
        whois.gandi.net - French, RIPE style whois.
        whois.dotearth.com - might be ugly. no newlines between different sections
        whois.names4ever.com - no data?? down?

        Known registrars that I haven&#39;t looked at --

        whois.schlund.de
        whois.registrars.com
        whois.gandi.net
        whois.doregi.com
        whois.dotregistrar.com
        whois.ibi.net
        whois.OnlineNIC.com
        whois.paycenter.com.cn
        whois.domainpeople.com
        whois.awregistry.net
        whois.discount-domain.com
        whois.dotearth.com
        whois.psi-domains.com
        whois.gkg.net
        whois.enetregistry.com
        whois.speednic.net
        whois.domaininfo.com
        whois.catalog.com
        whois.oleane.net
        whois.totalnic.net
        whois.alldomains.com
        whois.signaturedomains.com
        whois.1stdomain.net
        whois.enterprice.net
        whois.stargateinc.com
        whois.e-names.org
        nswhois.domainregistry.com
        whois.worldnet.net
        whois.naame.com
        whois.eastcom.com
        whois.domainzoo.com</pre>

<p>Note: Now that CoreNic is supported (thanks Vern!), Net::ParseWhois&#39;s supported registrars should cover upwards of 90% of the GTLD registrations that are out there.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="COMMON_METHODS_(Specific_to_Net::ParseWhois)"
>COMMON METHODS (Specific to Net::ParseWhois) <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><i>new(&#34;a-domain-name-goes-here&#34;)</i> Creates a new instance of a Net::ParseWhois object, which attempts a lookup of the specified domain name.</p>

<p><i>ok</i> Returns a boolean value indicating whether the Net::ParseWhois object is &#34;safe&#34; or not. If it returns false, then a match was not found or some other error occurred when creating the object. A value of true indicates a match was found and the various methods for returning Registrar data should function. Coders should always check this method first after creating a new Net::ParseWhois object to avoid script failures.</p>

<p><i>error</i> Returns the error message indicating why the Whois lookup could not be completed. Will return null if there is no error.</p>

<pre class="sh_perl">  print &#34;Tag: &#34;, $w-&#62;tag, &#34;\n&#34;;
  print &#34;Country: &#34;, $w-&#62;country, &#34;\n&#34;;
  print &#34;Name Servers:\n&#34;, map { &#34;    $$_[0] ($$_[1])\n&#34; }  @{$w-&#62;servers};
  if ($c = $w-&#62;contacts) {
    print &#34;Contacts:\n&#34;;
    for $t (sort keys %$c) {
      print &#34;    $t:\n&#34;;
      print map { &#34;\t$_\n&#34; } @{$$c{$t}};</pre>

<p>The following methods apply only to when a succesful WHOIS lookup was performed.</p>

<p><i>domain</i> Returns the domain name the Net::ParseWhois object looked up.</p>

<p><i>registrar</i> Returns the name of the registrar of the domain</p>

<p><i>record_created</i> Returns the date and time the domain&#39;s entry was put into this registrar&#39;s system. Note that this does not necessarily reflect the original registration date of the domain!</p>

<p><i>record_updated</i> Returns the date and time the domain&#39;s entry was last updated. Updates include changes to contact info, registered name servers, etc.</p>

<p><i>name</i> Returns the name of the entity that registerted the domain. Typically this will be the name of either a person or a company, but pretty much depends on what was used in the initial registration process.</p>

<p><i>address</i> Returns an array of strings representing the physical address registered for the domain. This will be the domain owner&#39;s address, not that of a technical or administrative contact.</p>

<p><i></i></p>

<p><i></i></p>

<p><i></i></p>

<p><i></i></p>

<p><i></i></p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="GENERIC_METHODS_(From_Net::Whois)"
>GENERIC METHODS (From Net::Whois) <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl"> todo</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SEE_ALSO"
>SEE ALSO <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>The <a href="/~riffer/Net-ParseWhois-0.7/lib/Net/ParseWhois.pm" class="podlinkpod"
>Net::ParseWhois</a> project homepage:</p>

<pre class="sh_perl">    <a href="http://dajoba.com/projects/netparsewhois/" class="podlinkurl"
>http://dajoba.com/projects/netparsewhois/</a></pre>

<p>The <a href="/~riffer/Net-ParseWhois-0.7/lib/Net/ParseWhois.pm" class="podlinkpod"
>Net::ParseWhois</a> mailing list:</p>

<pre class="sh_perl">    netparsewhois at lists dot dajoba dot com
    <a href="http://lists.dajoba.com/m/listinfo/netparsewhois/" class="podlinkurl"
>http://lists.dajoba.com/m/listinfo/netparsewhois/</a></pre>

<p><a href="/perldoc?Net%3A%3AWhois" class="podlinkpod"
>Net::Whois</a>, <a href="/perldoc?Net%3A%3AWhois%3A%3ARaw" class="podlinkpod"
>Net::Whois::Raw</a>, <a href="/perldoc?Net%3A%3ARWhois" class="podlinkpod"
>Net::RWhois</a></p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHORS_/_ACKNOWLEDGMENTS"
>AUTHORS / ACKNOWLEDGMENTS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Net::ParseWhois is maintained by Abraham A. Ingersoll &#60;abe@dajoba.com&#62;.</p>

<p>This module is a based on Net::Whois, which is maintained by Dana Hudes (dhudes@hudes.org). Net::Whois was originally written by Chip Salzenberg (chip@pobox.com).</p>

<p>Thanks to:</p>

<p>Joseph Ingersoll for testing under ActivePerl. Curtis Poe for comments and bug testing. Andy Baio for first version of Registrars.pm. Simon Flack for newer registrars.com parsing module &#38; bug sleuthing. Douglas Freake for (yet to be used) address parsing contribution. Vern Hart for (especially tough) CoreNic.pm parsing module. Adam Stubbs for INameWW.pm and Easyspace.pm parsing modules.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="COPYRIGHT"
>COPYRIGHT <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Copyright 2000 Abraham A Ingersoll &#60;abe@dajoba.com&#62;</p>

<p>Some portions may be copyright 1998 Dana Hudes &#38; Chip Salzenberg.</p>

<p>This module is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78276 Uploads, 24724 Distributions
106002 Modules, 9649 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Sat Apr 28 04:10:05 2012 GMT (0.144639015197754) @cpansearch1 -->
 </body>
</html>
