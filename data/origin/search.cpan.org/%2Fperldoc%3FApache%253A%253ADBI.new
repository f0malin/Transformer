<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>Apache::DBI - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","Apache-DBI",3]);
    _gaq.push(["_setCustomVar",5,"Release","Apache-DBI-1.11",3]);
    _gaq.push(["_setCustomVar",3,"Module","Apache::DBI",3]);
    _gaq.push(["_setCustomVar",1,"Author","PHRED",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?Apache::DBI">permalink</a></div>
  <a href="/~phred/">Fred Moyer</a> &gt;
  <a href="/~phred/Apache-DBI-1.11/">Apache-DBI-1.11</a> &gt;
  Apache::DBI
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/c18b1af66a7f62015ecc26707a1321b9?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/P/PH/PHRED/Apache-DBI-1.11.tar.gz">Apache-DBI-1.11.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=Apache%3A%3ADBI;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~PHRED/Apache-DBI-1.11/lib/Apache/DBI.pm">Annotate this POD
</a></p>
<div class=box style='width:150px; float: right'>
<h1 class=t5>Related Modules</h1>
<div style="margin:2px">
<a href="/perldoc?Apache%3A%3ARegistry">Apache::Registry</a><br>
<a href="/perldoc?CGI%3A%3AApplication">CGI::Application</a><br>
<a href="/perldoc?Class%3A%3ADBI">Class::DBI</a><br>
<a href="/perldoc?DBD%3A%3Amysql">DBD::mysql</a><br>
<a href="/perldoc?HTML%3A%3ATemplate">HTML::Template</a><br>
<a href="/perldoc?DBIx%3A%3ASimple">DBIx::Simple</a><br>
<a href="/perldoc?Apache%3A%3ASession">Apache::Session</a><br>
<a href="/perldoc?Log%3A%3ALog4perl">Log::Log4perl</a><br>
<a href="/perldoc?DBD%3A%3AOracle">DBD::Oracle</a><br>
<a href="/perldoc?CGI%3A%3ACarp">CGI::Carp</a><br>
<small>
<a href="http://perlmonks.org/?node=cpan+module+search&pivot=1&module=Apache%3A%3ADBI">more...</a><br>
By <a href="http://perlmonks.org/">perlmonks.org</a></small>
</div>
</div>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>New&nbsp;</td><td style="text-align:right"> 2</td></tr>
<tr><td>Open&nbsp;</td><td style="text-align:right"> 5</td></tr>
<tr><td>Stalled&nbsp;</td><td style="text-align:right"> 1</td></tr>
</table>
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=Apache-DBI">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  1.11 &nbsp;
<span class="noprint">
  <a href="/src/PHRED/Apache-DBI-1.11/lib/Apache/DBI.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <li class='indexItem indexItem1'><a href='#CONFIGURATION'>CONFIGURATION</a>
  <li class='indexItem indexItem1'><a href='#PREREQUISITES'>PREREQUISITES</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#MOD_PERL_2.0'>MOD_PERL 2.0</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#DO_YOU_NEED_THIS_MODULE?'>DO YOU NEED THIS MODULE?</a>
  <li class='indexItem indexItem1'><a href='#SEE_ALSO'>SEE ALSO</a>
  <li class='indexItem indexItem1'><a href='#AUTHORS'>AUTHORS</a>
  <li class='indexItem indexItem1'><a href='#COPYRIGHT'>COPYRIGHT</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Apache::DBI - Initiate a persistent database connection</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl"> # Configuration in httpd.conf or startup.pl:

 PerlModule Apache::DBI  # this comes before all other modules using DBI</pre>

<p>Do NOT change anything in your scripts. The usage of this module is absolutely transparent !</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This module initiates a persistent database connection.</p>

<p>The database access uses Perl&#39;s DBI. For supported DBI drivers see:</p>

<pre class="sh_perl"> <a href="http://dbi.perl.org/" class="podlinkurl"
>http://dbi.perl.org/</a></pre>

<p>When loading the DBI module (do not confuse this with the Apache::DBI module) it checks if the environment variable &#39;MOD_PERL&#39; has been set and if the module Apache::DBI has been loaded. In this case every connect request will be forwarded to the Apache::DBI module. This checks if a database handle from a previous connect request is already stored and if this handle is still valid using the ping method. If these two conditions are fulfilled it just returns the database handle. The parameters defining the connection have to be exactly the same, including the connect attributes! If there is no appropriate database handle or if the ping method fails, a new connection is established and the handle is stored for later re-use. There is no need to remove the disconnect statements from your code. They won&#39;t do anything because the Apache::DBI module overloads the disconnect method.</p>

<p>The Apache::DBI module still has a limitation: it keeps database connections persistent on a per process basis. The problem is, if a user accesses a database several times, the http requests will be handled very likely by different processes. Every process needs to do its own connect. It would be nice if all servers could share the database handles, but currently this is not possible because of the distinct memory-space of each process. Also it is not possible to create a database handle upon startup of the httpd and then inherit this handle to every subsequent server. This will cause clashes when the handle is used by two processes at the same time. Apache::DBI has built-in protection against this. It will not make a connection persistent if it sees that it is being opened during the server startup. This allows you to safely open a connection for grabbing data needed at startup and disconnect it normally before the end of startup.</p>

<p>With this limitation in mind, there are scenarios, where the usage of Apache::DBI is depreciated. Think about a heavy loaded Web-site where every user connects to the database with a unique userid. Every server would create many database handles each of which spawning a new backend process. In a short time this would kill the web server.</p>

<p>Another problem are timeouts: some databases disconnect the client after a certain period of inactivity. The module tries to validate the database handle using the <code>ping()</code> method of the DBI-module. This method returns true by default. Most DBI drivers have a working <code>ping()</code> method, but if the driver you&#39;re using doesn&#39;t have one and the database handle is no longer valid, you will get an error when accessing the database. As a work-around you can try to add your own <code>ping()</code> method using any database command which is cheap and safe, or you can deactivate the usage of the ping method (see CONFIGURATION below).</p>

<p>Here is a generalized ping method, which can be added to the driver module:</p>

<pre class="sh_perl">   package DBD::xxx::db; # ====== DATABASE ======
   use strict;

   sub ping {
     my ($dbh) = @_;
     my $ret = 0;
     eval {
       local $SIG{__DIE__}  = sub { return (0); };
       local $SIG{__WARN__} = sub { return (0); };
       # adapt the select statement to your database:
       $ret = $dbh-&#62;do(&#39;select 1&#39;);
     };
     return ($@) ? 0 : $ret;
   }</pre>

<p>Transactions: a standard DBI script will automatically perform a rollback whenever the script exits. In the case of persistent database connections, the database handle will not be destroyed and hence no automatic rollback will occur. At a first glance it even seems possible to handle a transaction over multiple requests. But this should be avoided, because different requests are handled by different processes and a process does not know the state of a specific transaction which has been started by another process. In general, it is good practice to perform an explicit commit or rollback at the end of every request. In order to avoid inconsistencies in the database in case AutoCommit is off and the script finishes without an explicit rollback, the Apache::DBI module uses a PerlCleanupHandler to issue a rollback at the end of every request. Note, that this CleanupHandler will only be used, if the initial data_source sets AutoCommit = 0 or AutoCommit is turned off, after the connect has been done (ie begin_work). However, because a connection may have set other parameters, the handle is reset to its initial connection state before it is returned for a second time.</p>

<p>This module plugs in a menu item for Apache::Status or Apache2::Status. The menu lists the current database connections. It should be considered incomplete because of the limitations explained above. It shows the current database connections for one specific process, the one which happens to serve the current request. Other processes might have other database connections. The Apache::Status/Apache2::Status module has to be loaded before the Apache::DBI module !</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="CONFIGURATION"
>CONFIGURATION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>The module should be loaded upon startup of the Apache daemon. Add the following line to your httpd.conf or startup.pl:</p>

<pre class="sh_perl"> PerlModule Apache::DBI</pre>

<p>It is important, to load this module before any other modules using DBI !</p>

<p>A common usage is to load the module in a startup file called via the PerlRequire directive. See eg/startup.pl and eg/startup2.pl for examples.</p>

<p>There are two configurations which are server-specific and which can be done upon server startup:</p>

<pre class="sh_perl"> Apache::DBI-&#62;connect_on_init($data_source, $username, $auth, \%attr)</pre>

<p>This can be used as a simple way to have apache servers establish connections on process startup.</p>

<pre class="sh_perl"> Apache::DBI-&#62;setPingTimeOut($data_source, $timeout)</pre>

<p>This configures the usage of the ping method, to validate a connection. Setting the timeout to 0 will always validate the database connection using the ping method (default). Setting the timeout &#60; 0 will de-activate the validation of the database handle. This can be used for drivers, which do not implement the ping-method. Setting the timeout &#62; 0 will ping the database only if the last access was more than timeout seconds before.</p>

<p>For the menu item &#39;DBI connections&#39; you need to call Apache::Status/Apache2::Status BEFORE Apache::DBI ! For an example of the configuration order see startup.pl.</p>

<p>To enable debugging the variable $Apache::DBI::DEBUG must be set. This can either be done in startup.pl or in the user script. Setting the variable to 1, just reports about a new connect. Setting the variable to 2 enables full debug output.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="PREREQUISITES"
>PREREQUISITES <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="MOD_PERL_2.0"
>MOD_PERL 2.0</a></h2>

<p>Apache::DBI version 0.96 and later should work under mod_perl 2.0 RC5 and later with httpd 2.0.49 and later.</p>

<p>Apache::DBI versions less than 1.00 are NO longer supported. Additionally, mod_perl versions less then 2.0.0 are NO longer supported.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'

>MOD_PERL 1.0 Note that this module needs mod_perl-1.08 or higher, apache_1.3.0 or higher and that mod_perl needs to be configured with the appropriate call-back hooks:</a></h2>

<pre class="sh_perl">  PERL_CHILD_INIT=1 PERL_STACKED_HANDLERS=1</pre>

<p>Apache::DBI v0.94 was the last version before dual mod_perl 2.x support was begun. It still recommended that you use the latest version of Apache::DBI because Apache::DBI versions less than 1.00 are NO longer supported.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DO_YOU_NEED_THIS_MODULE?"
>DO YOU NEED THIS MODULE? <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Note that this module is intended for use in porting existing DBI code to mod_perl, or writing code that can run under both mod_perl and CGI. If you are using a database abstraction layer such as Class::DBI or DBIx::Class that already manages persistent connections for you, there is no need to use this module in addition. (Another popular choice, Rose::DB::Object, can cooperate with Apache::DBI or use your own custom connection handling.) If you are developing new code that is strictly for use in mod_perl, you may choose to use <code>DBI-&#62;connect_cached()</code> instead, but consider adding an automatic rollback after each request, as described above.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SEE_ALSO"
>SEE ALSO <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><a href="/perldoc?Apache" class="podlinkpod"
>Apache</a>, <a href="/perldoc?mod_perl" class="podlinkpod"
>mod_perl</a>, <a href="/perldoc?DBI" class="podlinkpod"
>DBI</a></p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHORS"
>AUTHORS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<ul>
<li>Philip M. Gollucci &#60;pgollucci@p6m7g8.com&#62; is currently packaging new releases.
<p>Ask Bjoern Hansen &#60;ask@develooper.com&#62; packaged a large number of releases.</p>
</li>

<li>Edmund Mergl was the original author of Apache::DBI. It is now supported and maintained by the modperl mailinglist, see the mod_perl documentation for instructions on how to subscribe.</li>

<li>mod_perl by Doug MacEachern.</li>

<li>DBI by Tim Bunce &#60;dbi-users-subscribe@perl.org&#62;</li>
</ul>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="COPYRIGHT"
>COPYRIGHT <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>The Apache::DBI module is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78276 Uploads, 24724 Distributions
106002 Modules, 9649 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Sat Apr 28 02:45:05 2012 GMT (0.252774953842163) @cpansearch1 -->
 </body>
</html>
