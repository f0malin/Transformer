<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>Thread::Conveyor::Monitored - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","Thread-Conveyor-Monitored",3]);
    _gaq.push(["_setCustomVar",5,"Release","Thread-Conveyor-Monitored-0.14",3]);
    _gaq.push(["_setCustomVar",3,"Module","Thread::Conveyor::Monitored",3]);
    _gaq.push(["_setCustomVar",1,"Author","ELIZABETH",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?Thread::Conveyor::Monitored">permalink</a></div>
  <a href="/~elizabeth/">Elizabeth Mattijsen</a> &gt;
  <a href="/~elizabeth/Thread-Conveyor-Monitored-0.14/">Thread-Conveyor-Monitored-0.14</a> &gt;
  Thread::Conveyor::Monitored
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/f6f8083d758244cb1b1df1997adc1791?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/E/EL/ELIZABETH/Thread-Conveyor-Monitored-0.14.tar.gz">Thread-Conveyor-Monitored-0.14.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=Thread%3A%3AConveyor%3A%3AMonitored;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~ELIZABETH/Thread-Conveyor-Monitored-0.14/lib/Thread/Conveyor/Monitored.pm">Annotate this POD
</a></p>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>New&nbsp;</td><td style="text-align:right"> 1</td></tr>
<tr><td>Open&nbsp;</td><td style="text-align:right"> 0</td></tr>
</table>
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=Thread-Conveyor-Monitored">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  0.14 &nbsp;
<span class="noprint">
  <a href="/src/ELIZABETH/Thread-Conveyor-Monitored-0.14/lib/Thread/Conveyor/Monitored.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#VERSION'>VERSION</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <li class='indexItem indexItem1'><a href='#CLASS_METHODS'>CLASS METHODS</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#new'>new</a>
    <li class='indexItem indexItem2'><a href='#belt'>belt</a>
    <li class='indexItem indexItem2'><a href='#frequency'>frequency</a>
    <li class='indexItem indexItem2'><a href='#optimize'>optimize</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#OBJECT_METHODS'>OBJECT METHODS</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#put'>put</a>
    <li class='indexItem indexItem2'><a href='#maxboxes'>maxboxes</a>
    <li class='indexItem indexItem2'><a href='#minboxes'>minboxes</a>
    <li class='indexItem indexItem2'><a href='#belt'>belt</a>
    <li class='indexItem indexItem2'><a href='#frequency'>frequency</a>
    <li class='indexItem indexItem2'><a href='#shutdown'>shutdown</a>
    <li class='indexItem indexItem2'><a href='#thread'>thread</a>
    <li class='indexItem indexItem2'><a href='#tid'>tid</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#REQUIRED_MODULES'>REQUIRED MODULES</a>
  <li class='indexItem indexItem1'><a href='#OPTIMIZATIONS'>OPTIMIZATIONS</a>
  <li class='indexItem indexItem1'><a href='#CAVEATS'>CAVEATS</a>
  <li class='indexItem indexItem1'><a href='#AUTHOR'>AUTHOR</a>
  <li class='indexItem indexItem1'><a href='#COPYRIGHT'>COPYRIGHT</a>
  <li class='indexItem indexItem1'><a href='#SEE_ALSO'>SEE ALSO</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Thread::Conveyor::Monitored - monitor a belt for specific content</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="VERSION"
>VERSION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This documentation describes version 0.14.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">    use Thread::Conveyor::Monitored;
    my $mbelt = Thread::Conveyor::Monitored-&#62;new(
     {
      monitor =&#62; sub { print &#34;monitoring value $_[0]\n&#34; }, # is a must
      pre =&#62; sub { print &#34;prepare monitoring\n&#34; },         # optional
      post =&#62; sub { print &#34;stop monitoring\n&#34; },           # optional
      belt =&#62; $belt,   # use existing belt, create new if not specified
      exit =&#62; &#39;exit&#39;,  # defaults to undef

      checkpoint =&#62; sub { print &#34;checkpointing\n&#34; },
      frequency =&#62; 1000,

      optimize =&#62; &#39;memory&#39;, # optimization
      maxboxes =&#62; 50,       # specify throttling
      minboxes =&#62; 25,       # parameters
     }
    );

    $mbelt-&#62;put( &#34;foo&#34;,[&#39;listref&#39;],{&#39;hashref&#39;} );
    $mbelt-&#62;put( undef ); # exit value by default
    $mbelt-&#62;shutdown;

    $mthread = $mbelt-&#62;thread;
    $mtid = $mbelt-&#62;tid;

    $belt = $mbelt-&#62;belt;

    @post = $mthread-&#62;join; # optional, wait for monitor thread to end

    $belt = Thread::Conveyor::Monitored-&#62;belt; # &#34;pre&#34;, &#34;do&#34;, &#34;post&#34;</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">                 *** A note of CAUTION ***

 This module only functions on Perl versions 5.8.0 and later.
 And then only when threads are enabled with -Dusethreads.
 It is of no use with any version of Perl before 5.8.0 or
 without threads enabled.

                 *************************</pre>

<p>The <code>Thread::Conveyor::Monitored</code> module implements a single worker thread that takes of boxes of values from a belt created with <a href="/perldoc?Thread%3A%3AConveyor" class="podlinkpod"
>Thread::Conveyor</a> and which checks the boxes for specific content.</p>

<p>It can be used for simply logging actions that are placed on the belt. Or only output warnings if a certain value is encountered in a box. Or create a safe sandbox for Perl modules that are not thread-safe yet.</p>

<p>The action performed in the thread, is determined by a name or reference to a subroutine. This subroutine is called for every box of values obtained from the belt.</p>

<p>Any number of threads can safely put boxes with values and reference on the belt.</p>

<p>Optional checkpointing allows you to check and save intermediate status.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="CLASS_METHODS"
>CLASS METHODS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="new"
>new</a></h2>

<pre class="sh_perl"> $mbelt = Thread::Conveyor::Monitored-&#62;new(
  {
   pre =&#62; \&#38;pre,
   monitor =&#62; &#39;monitor&#39;,
   post =&#62; \&#38;module::post,
   belt =&#62; $belt,   # use existing belt, create new if not specified
   exit =&#62; &#39;exit&#39;,  # defaults to undef

   checkpoint =&#62; \&#38;checkpoint,
   frequency =&#62; 1000,

   optimize =&#62; &#39;memory&#39;,
   maxboxes =&#62; 50,
   minboxes =&#62; 25,
  },
  @parameters
 );</pre>

<p>The <code>new</code> function creates a monitoring function on an existing or on a new (empty) belt. It returns the instantiated Thread::Conveyor::Monitored object.</p>

<p>The first input parameter is a reference to a hash that should at least contain the &#34;monitor&#34; key with a subroutine reference.</p>

<p>The other input parameters are optional. If specified, they are passed to the the &#34;pre&#34; routine which is executed once when the monitoring is started.</p>

<p>The following field <b>must</b> be specified in the hash reference:</p>

<dl>
<dt><a name="do"
>do</a></dt>

<dd>
<pre class="sh_perl"> monitor =&#62; &#39;monitor_the_belt&#39;, # assume caller&#39;s namespace</pre>

<p>or:</p>

<pre class="sh_perl"> monitor =&#62; &#39;Package::monitor_the_belt&#39;,</pre>

<p>or:</p>

<pre class="sh_perl"> monitor =&#62; \&#38;SomeOther::monitor_the_belt,</pre>

<p>or:</p>

<pre class="sh_perl"> monitor =&#62; sub {print &#34;anonymous sub monitoring the belt\n&#34;},</pre>

<p>The &#34;monitor&#34; field specifies the subroutine to be executed for each set of values that is removed from the belt. It must be specified as either the name of a subroutine or as a reference to a (anonymous) subroutine.</p>

<p>The specified subroutine should expect the following parameters to be passed:</p>

<pre class="sh_perl"> 1..N  set of values obtained from the box on the belt</pre>

<p>What the subroutine does with the values, is entirely up to the developer.</p>
</dd>
</dl>

<p>The following fields are <b>optional</b> in the hash reference:</p>

<dl>
<dt><a name="pre"
>pre</a></dt>

<dd>
<pre class="sh_perl"> pre =&#62; &#39;prepare_monitoring&#39;,           # assume caller&#39;s namespace</pre>

<p>or:</p>

<pre class="sh_perl"> pre =&#62; &#39;Package::prepare_monitoring&#39;,</pre>

<p>or:</p>

<pre class="sh_perl"> pre =&#62; \&#38;SomeOther::prepare_monitoring,</pre>

<p>or:</p>

<pre class="sh_perl"> pre =&#62; sub {print &#34;anonymous sub preparing the monitoring\n&#34;},</pre>

<p>The &#34;pre&#34; field specifies the subroutine to be executed once when the monitoring of the belt is started. It must be specified as either the name of a subroutine or as a reference to a (anonymous) subroutine.</p>

<p>The specified subroutine should expect the following parameters to be passed:</p>

<pre class="sh_perl"> 1..N  any extra parameters that were passed with the call to L&#60;new&#62;.</pre>

<dt><a name="post"
>post</a></dt>

<dd>
<pre class="sh_perl"> post =&#62; &#39;stop_monitoring&#39;,             # assume caller&#39;s namespace</pre>

<p>or:</p>

<pre class="sh_perl"> post =&#62; &#39;Package::stop_monitoring&#39;,</pre>

<p>or:</p>

<pre class="sh_perl"> post =&#62; \&#38;SomeOther::stop_monitoring,</pre>

<p>or:</p>

<pre class="sh_perl"> post =&#62; sub {print &#34;anonymous sub when stopping the monitoring\n&#34;},</pre>

<p>The &#34;post&#34; field specifies the subroutine to be executed once when the monitoring of the belt is stopped. It must be specified as either the name of a subroutine or as a reference to a (anonymous) subroutine.</p>

<p>The specified subroutine should expect the following parameters to be passed:</p>

<pre class="sh_perl"> 1..N  any parameters that were passed with the call to L&#60;new&#62;.</pre>

<p>Any values returned by the &#34;post&#34; routine, can be obtained with the <code>join</code> method on the thread object.</p>

<dt><a name="belt"
>belt</a></dt>

<dd>
<pre class="sh_perl"> belt =&#62; $belt,  # create new one if not specified</pre>

<p>The &#34;belt&#34; field specifies the Thread::Conveyor object that should be monitored. A new <a href="/perldoc?Thread%3A%3AConveyor" class="podlinkpod"
>Thread::Conveyor</a> object will be created if it is not specified.</p>

<dt><a name="exit"
>exit</a></dt>

<dd>
<pre class="sh_perl"> exit =&#62; &#39;exit&#39;,   # defaults to undef</pre>

<p>The &#34;exit&#34; field specifies the value that will cause the monitoring thread to seize monitoring. The &#34;undef&#34; value will be assumed if it is not specified. This value should be <a href="/perldoc?put" class="podlinkpod"
>put</a> in a box on the belt to have the monitoring thread stop.</p>

<dt><a name="checkpoint"
>checkpoint</a></dt>

<dd>
<pre class="sh_perl"> checkpoint =&#62; &#39;checkpointing&#39;,                 # assume caller&#39;s namespace</pre>

<p>or:</p>

<pre class="sh_perl"> checkpoint =&#62; &#39;Package::checkpointing&#39;,</pre>

<p>or:</p>

<pre class="sh_perl"> checkpoint =&#62; \&#38;SomeOther::checkpointing,</pre>

<p>or:</p>

<pre class="sh_perl"> checkpoint =&#62; sub {print &#34;anonymous sub to do checkpointing\n&#34;},</pre>

<p>The &#34;checkpoint&#34; field specifies the subroutine to be executed everytime a checkpoint should be made (e.g. for saving or updating status). It must be specified as either the name of a subroutine or as a reference to a (anonymous) subroutine.</p>

<p>No checkpointing will occur by default. The frequency of checkpointing can be specified with the &#34;frequency&#34; field.</p>

<p>The specified subroutine should not expect any parameters to be passed. Any values returned by the checkpointing routine, will be lost.</p>

<dt><a name="frequency"
>frequency</a></dt>

<dd>
<pre class="sh_perl"> frequency =&#62; 100,                             # default = 1000</pre>

<p>The &#34;frequency&#34; field specifies the number of boxes that should have been monitored before the &#34;checkpoint&#34; routine is called. If a checkpoint routine is specified but no frequency field is specified, then a frequency of <b>1000</b> will be assumed.</p>

<p>This field has no meaning if no checkpoint routine is specified with the &#34;checkpoint&#34; field. The default frequency can be changed with the <a href="/perldoc?frequency" class="podlinkpod"
>frequency</a> method.</p>

<dt><a name="optimize"
>optimize</a></dt>

<dd>
<pre class="sh_perl"> optimize =&#62; &#39;cpu&#39;, # default: &#39;memory&#39;</pre>

<p>The &#34;optimize&#34; field specifies which implementation of the belt will be selected if there is no existing belt specified with the &#39;belt&#39; field. Currently there are two choices: &#39;cpu&#39; and &#39;memory&#39;. By default, the &#34;memory&#34; optimization will be selected if no specific optmization is specified.</p>

<p>You can call the class method <a href="/perldoc?optimize" class="podlinkpod"
>optimize</a> to change the default optimization.</p>

<dt><a name="maxboxes"
>maxboxes</a></dt>

<dd>
<pre class="sh_perl"> maxboxes =&#62; 50,

 maxboxes =&#62; undef,  # disable throttling</pre>

<p>The &#34;maxboxes&#34; field specifies the <b>maximum</b> number of boxes that can be sitting on the belt to be handled (throttling). If a new <a href="/perldoc?put" class="podlinkpod"
>put</a> would exceed this amount, putting of boxes will be halted until the number of boxes waiting to be handled has become at least as low as the amount specified with the &#34;minboxes&#34; field.</p>

<p>Fifty boxes will be assumed for the &#34;maxboxes&#34; field if it is not specified. If you do not want to have any throttling, you can specify the value &#34;undef&#34; for the field. But beware! If you do not have throttling active, you may wind up using excessive amounts of memory used for storing all of the boxes that have not been handled yet.</p>

<p>The <a href="/perldoc?maxboxes" class="podlinkpod"
>maxboxes</a> method can be called to change the throttling settings during the lifetime of the object.</p>

<dt><a name="minboxes"
>minboxes</a></dt>

<dd>
<pre class="sh_perl"> minboxes =&#62; 25, # default: maxboxes / 2</pre>

<p>The &#34;minboxes&#34; field specified the <b>minimum</b> number of boxes that can be waiting on the belt to be handled before the <a href="/perldoc?put" class="podlinkpod"
>put</a>ting of boxes is allowed again (throttling).</p>

<p>If throttling is active and the &#34;minboxes&#34; field is not specified, then half of the &#34;maxboxes&#34; value will be assumed.</p>

<p>The <a href="/perldoc?minboxes" class="podlinkpod"
>minboxes</a> method can be called to change the throttling settings during the lifetime of the object.</p>
</dd>
</dl>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="belt"
>belt</a></h2>

<pre class="sh_perl"> $belt = Thread::Conveyor::Monitored-&#62;belt; # only within &#34;pre&#34; and &#34;do&#34;</pre>

<p>The class method &#34;belt&#34; returns the <a href="/perldoc?Thread%3A%3AConveyor" class="podlinkpod"
>Thread::Conveyor</a>::xxx object that this thread is monitoring. It is available within the &#34;pre&#34; and &#34;do&#34; subroutine only.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="frequency"
>frequency</a></h2>

<pre class="sh_perl"> Thread::Conveyor::Monitored-&#62;frequency( 100 );

 $frequency = Thread::Conveyor::Monitored-&#62;frequency;</pre>

<p>The &#34;frequency&#34; class method allows you to specify the default frequency that will be used when a checkpoint routine is specified with the &#34;checkpoint&#34; field. The default frequency is set to <b>1000</b> if no other value has been previously specified.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="optimize"
>optimize</a></h2>

<pre class="sh_perl"> Thread::Conveyor::Monitored-&#62;optimize( &#39;cpu&#39; );

 $optimize = Thread::Conveyor::Monitored-&#62;optimize;</pre>

<p>The &#34;optimize&#34; class method allows you to specify the default optimization type that will be used if no &#34;optimize&#34; field has been explicitely specified with a call to <a href="/perldoc?new" class="podlinkpod"
>new</a>. It returns the current default type of optimization.</p>

<p>Currently two types of optimization can be selected:</p>

<dl>
<dt><a name="memory"
>memory</a></dt>

<dd>
<p>Attempt to use as little memory as possible. Currently, this is achieved by starting a seperate thread which hosts an unshared array. This uses the &#34;Thread::Conveyor::Thread&#34; sub-class.</p>

<dt><a name="cpu"
>cpu</a></dt>

<dd>
<p>Attempt to use as little CPU as possible. Currently, this is achieved by using a shared array (using the &#34;Thread::Conveyor::Array&#34; sub-class), encapsulated in a hash reference if throttling is activated (then also using the &#34;Thread::Conveyor::Throttled&#34; sub-class).</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="OBJECT_METHODS"
>OBJECT METHODS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="put"
>put</a></h2>

<pre class="sh_perl"> $mbelt-&#62;put( $scalar,[],{} );
 $mbelt-&#62;put( &#39;exit&#39; ); # stop monitoring</pre>

<p>The &#34;put&#34; method freezes all specified parameters in a box and puts it on the belt. The monitoring thread will stop monitoring if the &#34;exit&#34; value is put in the box.</p>

<p>Please note that if you need to be very efficient, it may be wortwhile to extract the actual <a href="/perldoc?belt" class="podlinkpod"
>belt</a> object first and use that to put boxes on the belt. The monitored &#34;put&#34; method is in fact only a gateway to the actual belt that is inside this object.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="maxboxes"
>maxboxes</a></h2>

<pre class="sh_perl"> $mbelt-&#62;maxboxes( 100 );
 $maxboxes = $mbelt-&#62;maxboxes;</pre>

<p>The &#34;maxboxes&#34; method returns the maximum number of boxes that can be on the belt before throttling sets in. The input value, if specified, specifies the new maximum number of boxes that may be on the belt. Throttling will be switched off if the value <b>undef</b> is specified.</p>

<p>Specifying the &#34;maxboxes&#34; field when creating the object with <a href="/perldoc?new" class="podlinkpod"
>new</a> is equivalent to calling this method.</p>

<p>The <a href="/perldoc?minboxes" class="podlinkpod"
>minboxes</a> method can be called to specify the minimum number of boxes that must be on the belt before the putting of boxes is allowed again after reaching the maximum number of boxes. By default, half of the &#34;maxboxes&#34; value is assumed.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="minboxes"
>minboxes</a></h2>

<pre class="sh_perl"> $mbelt-&#62;minboxes( 50 );
 $minboxes = $mbelt-&#62;minboxes;</pre>

<p>The &#34;minboxes&#34; method returns the minimum number of boxes that must be on the belt before the putting of boxes is allowed again after reaching the maximum number of boxes. The input value, if specified, specifies the new minimum number of boxes that must be on the belt.</p>

<p>Specifying the &#34;minboxes&#34; field when creating the object with <a href="/perldoc?new" class="podlinkpod"
>new</a> is equivalent to calling this method.</p>

<p>The <a href="/perldoc?maxboxes" class="podlinkpod"
>maxboxes</a> method can be called to set the maximum number of boxes that may be on the belt before the putting of boxes will be halted.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="belt"
>belt</a></h2>

<pre class="sh_perl"> $belt = $mbelt-&#62;belt;</pre>

<p>The &#34;belt&#34; instance method returns the <a href="/perldoc?Thread%3A%3AConveyor" class="podlinkpod"
>Thread::Conveyor</a>::xxx object that is being monitored.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="frequency"
>frequency</a></h2>

<pre class="sh_perl"> $frequency = $mbelt-&#62;frequency;</pre>

<p>The &#34;frequency&#34; instance method returns the frequency with which the checkpoint routine is being called. Returns undef if no checkpointing is being done.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="shutdown"
>shutdown</a></h2>

<pre class="sh_perl"> $mbelt-&#62;shutdown;

 @from_monitor_thread = $mbelt-&#62;shutdown;</pre>

<p>The &#34;shutdown&#34; method performs an orderly shutdown of the belt. It waits until all of the boxes on the belt have been removed before it returns.</p>

<p>Whatever was returned by the &#34;post&#34; routine of the monitoring thread, will also be returned by the &#34;shutdown&#34; method.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="thread"
>thread</a></h2>

<pre class="sh_perl"> $mthread = $mbelt-&#62;thread;</pre>

<p>The &#34;thread&#34; method returns the thread object that is monitoring the contents of the belt.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="tid"
>tid</a></h2>

<pre class="sh_perl"> $tid = $mbelt-&#62;tid;</pre>

<p>The &#34;tid&#34; method returns the thread id of the thread object that is monitoring the contents of the belt.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="REQUIRED_MODULES"
>REQUIRED MODULES <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl"> load (any)
 Thread::Conveyor (0.15)</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="OPTIMIZATIONS"
>OPTIMIZATIONS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This module uses <a href="/perldoc?load" class="podlinkpod"
>load</a> to reduce memory and CPU usage. This causes subroutines only to be compiled in a thread when they are actually needed at the expense of more CPU when they need to be compiled. Simple benchmarks however revealed that the overhead of the compiling single routines is not much more (and sometimes a lot less) than the overhead of cloning a Perl interpreter with a lot of subroutines pre-loaded.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="CAVEATS"
>CAVEATS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>You cannot remove any boxes from the belt, as that is done by the monitoring thread. Therefore, the methods &#34;take&#34;, &#34;take_dontwait&#34;, &#34;peek&#34; and &#34;peek_dontwait&#34; are disabled on this object.</p>

<p>Passing unshared values between threads is accomplished by serializing the specified values using <a href="/perldoc?Thread%3A%3ASerialize" class="podlinkpod"
>Thread::Serialize</a>. Please see the CAVEATS section there for an up-to-date status of what can be passed around between threads.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHOR"
>AUTHOR <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Elizabeth Mattijsen, &#60;liz@dijkmat.nl&#62;.</p>

<p>Please report bugs to &#60;perlbugs@dijkmat.nl&#62;.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="COPYRIGHT"
>COPYRIGHT <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Copyright (c) 2002-2003, 2007, 2010 Elizabeth Mattijsen &#60;liz@dijkmat.nl&#62;. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SEE_ALSO"
>SEE ALSO <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><a href="/perldoc?threads" class="podlinkpod"
>threads</a>, <a href="/perldoc?threads%3A%3Ashared" class="podlinkpod"
>threads::shared</a>, <a href="/perldoc?Thread%3A%3AConveyor" class="podlinkpod"
>Thread::Conveyor</a>, <a href="/perldoc?Thread%3A%3ASerialize" class="podlinkpod"
>Thread::Serialize</a>, <a href="/perldoc?load" class="podlinkpod"
>load</a>.</p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78183 Uploads, 24710 Distributions
106004 Modules, 9645 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Wed Apr 25 09:24:52 2012 GMT (0.106853008270264) @cpansearch1 -->
 </body>
</html>
