<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>Exporter::Easy - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","Exporter-Easy",3]);
    _gaq.push(["_setCustomVar",5,"Release","Exporter-Easy-0.16",3]);
    _gaq.push(["_setCustomVar",3,"Module","Exporter::Easy",3]);
    _gaq.push(["_setCustomVar",1,"Author","FDALY",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?Exporter::Easy">permalink</a></div>
  <a href="/~fdaly/">Fergal Daly</a> &gt;
  <a href="/~fdaly/Exporter-Easy-0.16/">Exporter-Easy-0.16</a> &gt;
  Exporter::Easy
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/968b2769ef2a0e284089a132c89fb614?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/F/FD/FDALY/Exporter-Easy-0.16.tar.gz">Exporter-Easy-0.16.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=Exporter%3A%3AEasy;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~FDALY/Exporter-Easy-0.16/lib/Exporter/Easy.pm">Annotate this POD
</a></p>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>Open&nbsp;</td><td style="text-align:right"> 1</td></tr>
</table>
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=Exporter-Easy">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  0.16 &nbsp;
<span class="noprint">
  <a href="/src/FDALY/Exporter-Easy-0.16/lib/Exporter/Easy.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <li class='indexItem indexItem1'><a href='#HOW_TO_USE_IT'>HOW TO USE IT</a>
  <li class='indexItem indexItem1'><a href='#PROCESSING_ORDER'>PROCESSING ORDER</a>
  <li class='indexItem indexItem1'><a href='#SEE_ALSO'>SEE ALSO</a>
  <li class='indexItem indexItem1'><a href='#AUTHOR'>AUTHOR</a>
  <li class='indexItem indexItem1'><a href='#LICENSE'>LICENSE</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Exporter::Easy - Takes the drudgery out of Exporting symbols</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>In module YourModule.pm:</p>

<pre class="sh_perl">  package YourModule;
  use Exporter::Easy (
    OK =&#62; [ &#39;$munge&#39;, &#39;frobnicate&#39; ] # symbols to export on request
  );</pre>

<p>In other files which wish to use YourModule:</p>

<pre class="sh_perl">  use ModuleName qw(frobnicate);      # import listed symbols
  frobnicate ($left, $right)          # calls YourModule::frobnicate</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Exporter::Easy makes using Exporter easy. In it&#39;s simplest case it allows you to drop the boilerplate code that comes with using Exporter, so</p>

<pre class="sh_perl">  require Exporter;
  use base qw( Exporter );
  use vars qw( @EXPORT );
  @EXPORT = ( &#39;init&#39; );</pre>

<p>becomes</p>

<pre class="sh_perl">  use Exporter::Easy ( EXPORT =&#62; [ &#39;init&#39; ] );</pre>

<p>and more complicated situations where you use tags to build lists and more tags become easy, like this</p>

<pre class="sh_perl">  use Exporter::Easy (
        EXPORT =&#62; [qw( init :base )],
        TAGS =&#62; [
                base =&#62; [qw( open close )],
                read =&#62; [qw( read sysread readline )],
                write =&#62; [qw( print write writeline )],
                misc =&#62; [qw( select flush )],
                all =&#62; [qw( :base :read :write :misc)],
                no_misc =&#62; [qw( :all !:misc )],
        ],
        OK =&#62; [qw( some other stuff )],
  );</pre>

<p>This will set <code>@EXPORT</code>, <code>@EXPORT_OK</code>, <code>@EXPORT_FAIL</code> and <code>%EXPORT_TAGS</code> in the current package, add Exporter to that package&#39;s <code>@ISA</code> and do a <code>use vars</code> on all the variables mentioned. The rest is handled as normal by Exporter.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="HOW_TO_USE_IT"
>HOW TO USE IT <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Put</p>

<pre class="sh_perl">        use Exporter::Easy ( KEY =&#62; value, ...);</pre>

<p>in your package. Arguments are passes as key-value pairs, the following keys are available</p>

<dl>
<dt><a name="TAGS"
>TAGS</a></dt>

<dd>
<p>The value should be a reference to a list that goes like (TAG_NAME, TAG_VALUE, TAG_NAME, TAG_VALUE, ...), where TAG_NAME is a string and TAG_VALUE is a reference to an array of symbols and tags. For example</p>

<pre class="sh_perl">  TAGS =&#62; [
    file =&#62; [ &#39;open&#39;, &#39;close&#39;, &#39;read&#39;, &#39;write&#39;],
    string =&#62; [ &#39;length&#39;, &#39;substr&#39;, &#39;chomp&#39; ],
    hash =&#62; [ &#39;keys&#39;, &#39;values&#39;, &#39;each&#39; ],
    all =&#62; [ &#39;:file&#39;, &#39;:string&#39;, &#39;:hash&#39; ],
    some =&#62; [&#39;:all&#39;, &#39;!open&#39;, &#39;:hash&#39;],
  ]</pre>

<p>This is used to fill the <code>%EXPORT_TAGS</code> in your package. You can build tags from other tags - in the example above the tag <code>all</code> will contain all the symbols from <code>file</code>, <code>string</code> and <code>hash</code>. You can also subtract symbols and tags - in the example above, <code>some</code> contains the symbols from all but with <code>open</code> removed and all the symbols from <code>hash</code> removed.</p>

<p>The rule is that any symbol starting with a &#39;:&#39; is taken to be a tag which has been defined previously (if it&#39;s not defined you&#39;ll get an error). If a symbol is preceded by a &#39;!&#39; it will be subtracted from the list, otherwise it is added.</p>

<p>If you try to redefine a tag you will also get an error.</p>

<p>All the symbols which occur while building the tags are automatically added your package&#39;s <code>@EXPORT_OK</code> array.</p>

<dt><a name="OK"
>OK</a></dt>

<dd>
<p>The value should be a reference to a list of symbols and tags (which will be exapanded). These symbols will be added to the <code>@EXPORT_OK</code> array in your package. Using OK and and OK_ONLY together will give an error.</p>

<dt><a name="OK_ONLY"
>OK_ONLY</a></dt>

<dd>
<p>The value should be a reference to a list of symbols and tags (which will be exapanded). The <code>@EXPORT_OK</code> array in your package will contains only these symbols.. This totally overrides the automatic population of this array. If you just want to add some symbols to the list that Exporter::Easy has automatically built then you should use OK instead. Using OK_ONLY and OK together will give an error.</p>

<dt><a name="EXPORT"
>EXPORT</a></dt>

<dd>
<p>The value should be a reference to a list of symbol names and tags. Any tags will be expanded and the resulting list of symbol names will be placed in the <code>@EXPORT</code> array in your package. The tag created by the ALL key is not available at this stage.</p>

<dt><a name="FAIL"
>FAIL</a></dt>

<dd>
<p>The value should be a reference to a list of symbol names and tags. The tags will be expanded and the resulting list of symbol names will be placed in the <code>@EXPORT_FAIL</code> array in your package. They will also be added to the <code>@EXPORT_OK</code> list.</p>

<dt><a name="ALL"
>ALL</a></dt>

<dd>
<p>The value should be the name of tag that doesn&#39;t yet exist. This tag will contain a list of all symbols which can be exported.</p>

<dt><a name="ISA"
>ISA</a></dt>

<dd>
<p>If you set this to 0 then Exporter will not be added to your <code>@ISA</code> list.</p>

<dt><a name="VARS"
>VARS</a></dt>

<dd>
<p>If this is set to 1 or not provided then all $, @ and % variables mentioned previously will be available to use in your package as if you had done a <code>use vars</code> on them. If it&#39;s set to a reference to a list of symbols and tags then only those symbols will be available. If it&#39;s set to 0 then you&#39;ll have to do your own <code>use vars</code> in your package.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="PROCESSING_ORDER"
>PROCESSING ORDER <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>We need take the information provided and build @EXPORT, @EXPORT_OK, @EXPORT_FAIL and %EXPORT_TAGS in the calling package. We may also need to build a tag with all of the symbols and to make all the variables useable under strict.</p>

<p>The arguments are processed in the following order: TAGS, EXPORT, OK, OK_ONLY and FAIL, ALL, VARS and finally ISA. This means you cannot use the tag created by ALL anywhere except in VARS (although vars defaults to using all symbols anyway).</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SEE_ALSO"
>SEE ALSO <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>For details on what all these arrays and hashes actually do, see the Exporter documentation.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHOR"
>AUTHOR <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Written by Fergal Daly &#60;fergal@esatclear.ie&#62;.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="LICENSE"
>LICENSE <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Under the same license as Perl itself</p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78163 Uploads, 24704 Distributions
105968 Modules, 9645 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Tue Apr 24 20:55:17 2012 GMT (0.249055862426758) @cpansearch1 -->
 </body>
</html>
