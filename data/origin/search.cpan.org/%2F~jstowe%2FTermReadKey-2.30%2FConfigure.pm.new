<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>Configure - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","TermReadKey",3]);
    _gaq.push(["_setCustomVar",5,"Release","TermReadKey-2.30",3]);
    _gaq.push(["_setCustomVar",3,"Module","Configure",3]);
    _gaq.push(["_setCustomVar",1,"Author","JSTOWE",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?Configure">permalink</a></div>
  <a href="/~jstowe/">Jonathan Stowe</a> &gt;
  <a href="/~jstowe/TermReadKey-2.30/">TermReadKey-2.30</a> &gt;
  Configure
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/4128f818211cc76c8c6453752a2bb0d6?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/J/JS/JSTOWE/TermReadKey-2.30.tar.gz">TermReadKey-2.30.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=Configure;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~JSTOWE/TermReadKey-2.30/Configure.pm">Annotate this POD
</a></p>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>New&nbsp;</td><td style="text-align:right"> 6</td></tr>
<tr><td>Open&nbsp;</td><td style="text-align:right"> 12</td></tr>
<tr><td>Stalled&nbsp;</td><td style="text-align:right"> 1</td></tr>
</table>
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=TermReadKey">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
<span class="noprint">
  <a href="/src/JSTOWE/TermReadKey-2.30/Configure.pm">Source</a> &nbsp;
  Latest&nbsp;Release:&nbsp;<a href="/~stsi/TermReadKey/Configure.pm">TermReadKey-2.30.02</a>
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SUMMARY'>SUMMARY</a>
  <li class='indexItem indexItem1'><a href='#FUNCTIONS'>FUNCTIONS</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#CPP'>CPP</a>
    <li class='indexItem indexItem2'><a href='#Compile'>Compile</a>
    <li class='indexItem indexItem2'><a href='#Link'>Link</a>
    <li class='indexItem indexItem2'><a href='#Execute'>Execute</a>
    <li class='indexItem indexItem2'><a href='#FindHeader'>FindHeader</a>
    <li class='indexItem indexItem2'><a href='#FindLib'>FindLib</a>
    <li class='indexItem indexItem2'><a href='#_'></a>
    <li class='indexItem indexItem2'><a href='#ApplyHeadersAndLibs'>ApplyHeadersAndLibs</a>
    <li class='indexItem indexItem2'><a href='#ApplyHeadersAndLibsAndExecute'>ApplyHeadersAndLibsAndExecute</a>
    <li class='indexItem indexItem2'><a href='#ApplyHeaders'>ApplyHeaders</a>
    <li class='indexItem indexItem2'><a href='#ApplyLibs'>ApplyLibs</a>
    <li class='indexItem indexItem2'><a href='#CheckHeader'>CheckHeader</a>
    <li class='indexItem indexItem2'><a href='#CheckStructure'>CheckStructure</a>
    <li class='indexItem indexItem2'><a href='#CheckField'>CheckField</a>
    <li class='indexItem indexItem2'><a href='#CheckLSymbol'>CheckLSymbol</a>
    <li class='indexItem indexItem2'><a href='#CheckSymbol'>CheckSymbol</a>
    <li class='indexItem indexItem2'><a href='#CheckHSymbol'>CheckHSymbol</a>
    <li class='indexItem indexItem2'><a href='#CheckHPrototype_(unexported)'>CheckHPrototype (unexported)</a>
    <li class='indexItem indexItem2'><a href='#GetSymbol'>GetSymbol</a>
    <li class='indexItem indexItem2'><a href='#GetTextSymbol'>GetTextSymbol</a>
    <li class='indexItem indexItem2'><a href='#GetNumericSymbol'>GetNumericSymbol</a>
    <li class='indexItem indexItem2'><a href='#GetConstants'>GetConstants</a>
    <li class='indexItem indexItem2'><a href='#DeducePrototype_(unexported)'>DeducePrototype (unexported)</a>
  </ul>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Configure.pm - provide auto-configuration utilities</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SUMMARY"
>SUMMARY <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This perl module provides tools to figure out what is present in the C compilation environment.
This is intended mostly for perl extensions to use to configure themselves.
There are a number of functions,
with widely varying levels of specificity,
so here is a summary of what the functions can do:</p>

<p>CheckHeader: Look for headers.</p>

<p>CheckStructure: Look for a structure.</p>

<p>CheckField: Look for a field in a structure.</p>

<p>CheckHSymbol: Look for a symbol in a header.</p>

<p>CheckLSymbol: Look for a symbol in a library.</p>

<p>CheckSymbol: Look for a symbol in a header and library.</p>

<p>GetTextSymbol: Get the contents of a symbol as text.</p>

<p>GetNumericSymbol: Get the contents of a symbol as a number.</p>

<p>Apply: Try compiling code with a set of headers and libs.</p>

<p>ApplyHeaders: Try compiling code with a set of headers.</p>

<p>ApplyLibraries: Try linking code with a set of libraries.</p>

<p>ApplyHeadersAndLibaries: You get the idea.</p>

<p>ApplyHeadersAndLibariesAnExecute: You get the idea.</p>

<p>CPP: Feed some code through the C preproccessor.</p>

<p>Compile: Try to compile some C code.</p>

<p>Link: Try to compile &#38; link some C code.</p>

<p>Execute: Try to compile,
link,
&#38; execute some C code.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="FUNCTIONS"
>FUNCTIONS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="CPP"
>CPP</a></h2>

<p>Takes one or more arguments.
The first is a string containing a C program.
Embedded newlines are legal,
the text simply being stuffed into a temporary file.
The result is then fed to the C preproccessor (that preproccessor being previously determined by perl&#39;s Configure script.) Any additional arguments provided are passed to the preprocessing command.</p>

<p>In a scalar context,
the return value is either undef,
if something went wrong,
or the text returned by the preprocessor.
In an array context,
two values are returned: the numeric exit status and the output of the preproccessor.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Compile"
>Compile</a></h2>

<p>Takes one or more arguments.
The first is a string containing a C program.
Embedded newlines are legal,
the text simply being stuffed into a temporary file.
The result is then fed to the C compiler (that compiler being previously determined by perl&#39;s Configure script.) Any additional arguments provided are passed to the compiler command.</p>

<p>In a scalar context,
either 0 or 1 will be returned,
with 1 indicating a successful compilation.
In an array context,
three values are returned: the numeric exit status of the compiler,
a string consisting of the output generated by the compiler,
and a numeric value that is false if a &#34;.o&#34; file wasn&#39;t produced by the compiler,
error status or no.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Link"
>Link</a></h2>

<p>Takes one or more arguments.
The first is a string containing a C program.
Embedded newlines are legal,
the text simply being stuffed into a temporary file.
The result is then fed to the C compiler and linker (that compiler and linker being previously determined by perl&#39;s Configure script.) Any additional arguments provided are passed to the compilation/link command.</p>

<p>In a scalar context,
either 0 or 1 is returned,
with 1 indicating a successful compilation.
In an array context,
two values are returned: the numeric exit status of the compiler/linker,
and a string consisting of the output generated by the compiler/linker.</p>

<p>Note that this command <i>only</i> compiles and links the C code.
It does not attempt to execute it.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Execute"
>Execute</a></h2>

<p>Takes one or more arguments.
The first is a string containing a C program.
Embedded newlines are legal,
the text simply being stuffed into a temporary file.
The result is then fed to the C compiler and linker (that compiler and linker being previously determined by perl&#39;s metaconfig script.) and then executed.
Any additional arguments provided are passed to the compilation/link command.
(There is no way to feed arguments to the program being executed.)</p>

<p>In a scalar context,
the return value is either undef,
indicating the compilation or link failed,
or that the executed program returned a nonzero status.
Otherwise,
the return value is the text output by the program.</p>

<p>In an array context,
an array consisting of three values is returned: the first value is 0 or 1,
1 if the compile/link succeeded.
The second value either the exist status of the compiler or program,
and the third is the output text.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="FindHeader"
>FindHeader</a></h2>

<p>Takes an unlimited number of arguments,
consisting of both header names in the form &#34;header.h&#34;,
or directory specifications such as &#34;-I/usr/include/bsd&#34;.
For each supplied header,
FindHeader will attempt to find the complete path.
The return value is an array consisting of all the headers that were located.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="FindLib"
>FindLib</a></h2>

<p>Takes an unlimited number of arguments,
consisting of both library names in the form &#34;-llibname&#34;,
&#34;/usr/lib/libxyz.a&#34; or &#34;dld&#34;,
or directory specifications such as &#34;-L/usr/lib/foo&#34;.
For each supplied library,
FindLib will attempt to find the complete path.
The return value is an array consisting of the full paths to all of the libraries that were located.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="_"
></a></h2>

<p>Apply takes a chunk of code,
a series of libraries and headers,
and attempts to apply them,
in series,
to a given perl command.
In a scalar context,
the return value of the first set of headers and libraries that produces a non-zero return value from the command is returned.
In an array context,
the header and library set it returned.</p>

<p>This is best explained by some examples:</p>

<pre class="sh_perl">        Apply(\&#38;Compile,&#34;main(){}&#34;,&#34;sgtty.h&#34;,&#34;&#34;); </pre>

<p>In a scalar context either <code>undef</code> or <code>1</code>. In an array context, this returns <code>()</code> or <code>(&#34;sgtty.h&#34;,&#34;&#34;)</code>.</p>

<pre class="sh_perl">        Apply(\&#38;Link,&#34;main(){int i=COLOR_PAIRS;}&#34;,&#34;curses.h&#34;,&#34;-lcurses&#34;,
        &#34;ncurses.h&#34;,&#34;-lncurses&#34;,&#34;ncurses/ncurses.h&#34;,&#34;-lncurses&#34;);</pre>

<p>In a scalar context, this returns either <code>undef</code>, <code>1</code>. In an array context, this returns <code>(&#34;curses.h&#34;,&#34;-lcurses&#34;)</code>, <code>(&#34;ncurses.h&#34;,&#34;-lncurses&#34;)</code>, <code>(&#34;ncurses/ncurses.h&#34;,&#34;-lncurses&#34;)</code>, or <code>()</code>.</p>

<p>If we had instead said <code>Apply(\&#38;Execute,&#39;main(){printf(&#34;%d&#34;,(int)COLOR_PAIRS)&#39;,...)</code> then in a scalar context either <code>undef</code> or the value of COLOR_PAIRS would be returned.</p>

<p>Note that you can also supply multiple headers and/or libraries at one time, like this:</p>

<pre class="sh_perl">        Apply(\&#38;Compile,&#34;main(){fcntl(0,F_GETFD);}&#34;,&#34;fcntl.h&#34;,&#34;&#34;,
        &#34;ioctl.h fcntl.h&#34;,&#34;&#34;,&#34;sys/ioctl.h fcntl.h&#34;&#34;,&#34;&#34;);</pre>

<p>So if fcntl needs ioctl or sys/ioctl loaded first, this will catch it. In an array context, <code>()</code>, <code>(&#34;fcntl.h&#34;,&#34;&#34;)</code>, <code>(&#34;ioctl.h fcntl.h&#34;,&#34;&#34;)</code>, or <code>(&#34;sys/ioctl.h fcntl.h&#34;,&#34;&#34;)</code> could be returned.</p>

<p>You can also use nested arrays to get exactly the same effect. The returned array will always consist of a string, though, with elements separated by spaces.</p>

<pre class="sh_perl">        Apply(\&#38;Compile,&#34;main(){fcntl(0,F_GETFD);}&#34;,[&#34;fcntl.h&#34;],&#34;&#34;,
        [&#34;ioctl.h&#34;,&#34;fcntl.h&#34;],&#34;&#34;,[&#34;sys/ioctl.h&#34;,&#34;fcntl.h&#34;],&#34;&#34;);</pre>

<p>Note that there are many functions that provide simpler ways of doing these things, from GetNumericSymbol to get the value of a symbol, to ApplyHeaders which doesn&#39;t ask for libraries.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="ApplyHeadersAndLibs"
>ApplyHeadersAndLibs</a></h2>

<p>This function takes the same sort of arguments as Apply, it just sends them directly to Link.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="ApplyHeadersAndLibsAndExecute"
>ApplyHeadersAndLibsAndExecute</a></h2>

<p>This function is similar to Apply and ApplyHeadersAndLibs, but it always uses Execute.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="ApplyHeaders"
>ApplyHeaders</a></h2>

<p>If you are only checking headers, and don&#39;t need to look at libs, then you will probably want to use ApplyHeaders. The return value is the same in a scalar context, but in an array context the returned array will only consists of the headers, spread out.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="ApplyLibs"
>ApplyLibs</a></h2>

<p>If you are only checking libraries, and don&#39;t need to look at headers, then you will probably want to use ApplyLibs. The return value is the same in a scalar context, but in an array context the returned array will only consists of the libraries, spread out.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="CheckHeader"
>CheckHeader</a></h2>

<p>Takes an unlimited number of arguments, consiting of headers in the Apply style. The first set that is fully accepted by the compiler is returned.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="CheckStructure"
>CheckStructure</a></h2>

<p>Takes the name of a structure, and an unlimited number of further arguments consisting of header groups. The first group that defines that structure properly will be returned. <b>undef</b> will be returned if nothing succeeds.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="CheckField"
>CheckField</a></h2>

<p>Takes the name of a structure, the name of a field, and an unlimited number of further arguments consisting of header groups. The first group that defines a structure that contains the field will be returned. <b>undef</b> will be returned if nothing succeeds.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="CheckLSymbol"
>CheckLSymbol</a></h2>

<p>Takes the name of a symbol, and an unlimited number of further arguments consisting of library groups. The first group of libraries that defines that symbol will be returned. <b>undef</b> will be returned if nothing succeeds.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="CheckSymbol"
>CheckSymbol</a></h2>

<p>Takes the name of a symbol, and an unlimited number of further arguments consisting of header and library groups, in the Apply format. The first group of headers and libraries that defines that symbol will be returned. <b>undef</b> will be returned if nothing succeeds.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="CheckHSymbol"
>CheckHSymbol</a></h2>

<p>Takes the name of a symbol, and an unlimited number of further arguments consisting of header groups. The first group of headers that defines that symbol will be returned. <b>undef</b> will be returned if nothing succeeds.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="CheckHPrototype_(unexported)"
>CheckHPrototype (unexported)</a></h2>

<p>An experimental routine that takes a name of a function, a nested array consisting of the prototype, and then the normal header groups. It attempts to deduce whether the given prototype matches what the header supplies. Basically, it doesn&#39;t work. Or maybe it does. I wouldn&#39;t reccomend it, though.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="GetSymbol"
>GetSymbol</a></h2>

<p>Takes the name of a symbol, a printf command, a cast, and an unlimited number of further arguments consisting of header and library groups, in the Apply. The first group of headers and libraries that defines that symbol will be used to get the contents of the symbol in the format, and return it. <b>undef</b> will be returned if nothing defines that symbol.</p>

<p>Example:</p>

<pre class="sh_perl">        GetSymbol(&#34;__LINE__&#34;,&#34;ld&#34;,&#34;long&#34;,&#34;&#34;,&#34;&#34;);</pre>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="GetTextSymbol"
>GetTextSymbol</a></h2>

<p>Takes the name of a symbol, and an unlimited number of further arguments consisting of header and library groups, in the ApplyHeadersAndLibs format. The first group of headers and libraries that defines that symbol will be used to get the contents of the symbol in text format, and return it. <b>undef</b> will be returned if nothing defines that symbol.</p>

<p>Note that the symbol <i>must</i> actually be text, either a char* or a constant string. Otherwise, the results are undefined.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="GetNumericSymbol"
>GetNumericSymbol</a></h2>

<p>Takes the name of a symbol, and an unlimited number of further arguments consisting of header and library groups, in the ApplyHeadersAndLibs format. The first group of headers and libraries that defines that symbol will be used to get the contents of the symbol in numeric format, and return it. <b>undef</b> will be returned if nothing defines that symbol.</p>

<p>Note that the symbol <i>must</i> actually be numeric, in a format compatible with a float. Otherwise, the results are undefined.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="GetConstants"
>GetConstants</a></h2>

<p>Takes a list of header names (possibly including -I directives) and attempts to grep the specified files for constants, a constant being something #defined with a name that matches /[A-Z0-9_]+/. Returns the list of names.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="DeducePrototype_(unexported)"
>DeducePrototype (unexported)</a></h2>

<p>This one is <b>really</b> experimental. The idea is to figure out some basic characteristics of the compiler, and then attempt to &#34;feel out&#34; the prototype of a function. Eventually, it may work. It is guaranteed to be very slow, and it may simply not be capable of working on some systems.</p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78172 Uploads, 24707 Distributions
105971 Modules, 9645 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Wed Apr 25 01:59:58 2012 GMT (0.277065992355347) @cpansearch1 -->
 </body>
</html>
