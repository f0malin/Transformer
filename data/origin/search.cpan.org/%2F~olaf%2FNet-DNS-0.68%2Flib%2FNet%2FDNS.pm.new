<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>Net::DNS - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","Net-DNS",3]);
    _gaq.push(["_setCustomVar",5,"Release","Net-DNS-0.68",3]);
    _gaq.push(["_setCustomVar",3,"Module","Net::DNS",3]);
    _gaq.push(["_setCustomVar",1,"Author","OLAF",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?Net::DNS">permalink</a></div>
  <a href="/~olaf/">OLAF</a> &gt;
  <a href="/~olaf/Net-DNS-0.68/">Net-DNS-0.68</a> &gt;
  Net::DNS
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/e5747bf50b65faa67ee4828a0466d66d?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/O/OL/OLAF/Net-DNS-0.68.tar.gz">Net-DNS-0.68.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=Net%3A%3ADNS;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~OLAF/Net-DNS-0.68/lib/Net/DNS.pm">Annotate this POD
</a></p>
<div class=box style='width:150px; float: right'>
<h1 class=t5>Related Modules</h1>
<div style="margin:2px">
<a href="/perldoc?Net%3A%3ASMTP">Net::SMTP</a><br>
<a href="/perldoc?Net%3A%3ASNMP">Net::SNMP</a><br>
<a href="/perldoc?Data%3A%3ADumper">Data::Dumper</a><br>
<a href="/perldoc?LWP%3A%3ASimple">LWP::Simple</a><br>
<a href="/perldoc?CGI%3A%3ACarp">CGI::Carp</a><br>
<a href="/perldoc?Net%3A%3APing">Net::Ping</a><br>
<a href="/perldoc?Mail%3A%3ASendmail">Mail::Sendmail</a><br>
<a href="/perldoc?Net%3A%3AWhois">Net::Whois</a><br>
<a href="/perldoc?Thread%3A%3AQueue">Thread::Queue</a><br>
<a href="/perldoc?Net%3A%3Ahostent">Net::hostent</a><br>
<small>
<a href="http://perlmonks.org/?node=cpan+module+search&pivot=1&module=Net%3A%3ADNS">more...</a><br>
By <a href="http://perlmonks.org/">perlmonks.org</a></small>
</div>
</div>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>New&nbsp;</td><td style="text-align:right"> 2</td></tr>
<tr><td>Open&nbsp;</td><td style="text-align:right"> 8</td></tr>
<tr><td>Stalled&nbsp;</td><td style="text-align:right"> 5</td></tr>
</table>
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=Net-DNS">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  0.68 &nbsp;
<span class="noprint">
  <a href="/src/OLAF/Net-DNS-0.68/lib/Net/DNS.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#Resolver_Objects'>Resolver Objects</a>
    <li class='indexItem indexItem2'><a href='#Packet_Objects'>Packet Objects</a>
    <li class='indexItem indexItem2'><a href='#Update_Objects'>Update Objects</a>
    <li class='indexItem indexItem2'><a href='#Header_Objects'>Header Objects</a>
    <li class='indexItem indexItem2'><a href='#Question_Objects'>Question Objects</a>
    <li class='indexItem indexItem2'><a href='#RR_Objects'>RR Objects</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#METHODS'>METHODS</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#version'>version</a>
    <li class='indexItem indexItem2'><a href='#mx'>mx</a>
    <li class='indexItem indexItem2'><a href='#yxrrset'>yxrrset</a>
    <li class='indexItem indexItem2'><a href='#nxrrset'>nxrrset</a>
    <li class='indexItem indexItem2'><a href='#yxdomain'>yxdomain</a>
    <li class='indexItem indexItem2'><a href='#nxdomain'>nxdomain</a>
    <li class='indexItem indexItem2'><a href='#rr_add'>rr_add</a>
    <li class='indexItem indexItem2'><a href='#rr_del'>rr_del</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#Zone_Serial_Number_Management'>Zone Serial Number Management</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#Strictly_Sequential'>Strictly Sequential</a>
    <li class='indexItem indexItem2'><a href='#Time_Encoded'>Time Encoded</a>
    <li class='indexItem indexItem2'><a href='#Date_Encoded'>Date Encoded</a>
    <li class='indexItem indexItem2'><a href='#Sorting_of_RR_arrays'>Sorting of RR arrays</a>
    <ul   class='indexList indexList3'>
      <li class='indexItem indexItem3'><a href='#rrsort()'>rrsort()</a>
    </ul>
  </ul>
  <li class='indexItem indexItem1'><a href='#EXAMPLES'>EXAMPLES</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#Look_up_a_host&#39;s_addresses.'>Look up a host&#39;s addresses.</a>
    <li class='indexItem indexItem2'><a href='#Find_the_nameservers_for_a_domain.'>Find the nameservers for a domain.</a>
    <li class='indexItem indexItem2'><a href='#Find_the_MX_records_for_a_domain.'>Find the MX records for a domain.</a>
    <li class='indexItem indexItem2'><a href='#Print_a_domain&#39;s_SOA_record_in_zone_file_format.'>Print a domain&#39;s SOA record in zone file format.</a>
    <li class='indexItem indexItem2'><a href='#Perform_a_zone_transfer_and_print_all_the_records.'>Perform a zone transfer and print all the records.</a>
    <li class='indexItem indexItem2'><a href='#Perform_a_background_query_and_do_some_other_work_while_waiting_for_the_answer.'>Perform a background query and do some other work while waiting for the answer.</a>
    <li class='indexItem indexItem2'><a href='#Send_a_background_query_and_use_select_to_determine_when_the_answer_has_arrived.'>Send a background query and use select to determine when the answer has arrived.</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#BUGS'>BUGS</a>
  <li class='indexItem indexItem1'><a href='#COPYRIGHT'>COPYRIGHT</a>
  <li class='indexItem indexItem1'><a href='#AUTHOR_INFORMATION'>AUTHOR INFORMATION</a>
  <li class='indexItem indexItem1'><a href='#SEE_ALSO'>SEE ALSO</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Net::DNS - Perl interface to the Domain Name System</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">    use Net::DNS;</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Net::DNS is a collection of Perl modules that act as a Domain Name System (DNS) resolver. It allows the programmer to perform DNS queries that are beyond the capabilities of <code>gethostbyname</code> and <code>gethostbyaddr</code>.</p>

<p>The programmer should be somewhat familiar with the format of a DNS packet and its various sections. See RFC 1035 or <i>DNS and BIND</i> (Albitz &#38; Liu) for details.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Resolver_Objects"
>Resolver Objects</a></h2>

<p>A resolver object is an instance of the <a href="/~olaf/Net-DNS-0.68/lib/Net/DNS/Resolver.pm" class="podlinkpod"
>Net::DNS::Resolver</a> class. A program can have multiple resolver objects, each maintaining its own state information such as the nameservers to be queried, whether recursion is desired, etc.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Packet_Objects"
>Packet Objects</a></h2>

<p><a href="/~olaf/Net-DNS-0.68/lib/Net/DNS/Resolver.pm" class="podlinkpod"
>Net::DNS::Resolver</a> queries return <a href="/~olaf/Net-DNS-0.68/lib/Net/DNS/Packet.pm" class="podlinkpod"
>Net::DNS::Packet</a> objects. Packet objects have five sections:</p>

<ul>
<li>The header section, a <a href="/~olaf/Net-DNS-0.68/lib/Net/DNS/Header.pm" class="podlinkpod"
>Net::DNS::Header</a> object.</li>

<li>The question section, a list of <a href="/~olaf/Net-DNS-0.68/lib/Net/DNS/Question.pm" class="podlinkpod"
>Net::DNS::Question</a> objects.</li>

<li>The answer section, a list of <a href="/~olaf/Net-DNS-0.68/lib/Net/DNS/RR.pm" class="podlinkpod"
>Net::DNS::RR</a> objects.</li>

<li>The authority section, a list of <a href="/~olaf/Net-DNS-0.68/lib/Net/DNS/RR.pm" class="podlinkpod"
>Net::DNS::RR</a> objects.</li>

<li>The additional section, a list of <a href="/~olaf/Net-DNS-0.68/lib/Net/DNS/RR.pm" class="podlinkpod"
>Net::DNS::RR</a> objects.</li>
</ul>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Update_Objects"
>Update Objects</a></h2>

<p>The <a href="/~olaf/Net-DNS-0.68/lib/Net/DNS/Update.pm" class="podlinkpod"
>Net::DNS::Update</a> package is a subclass of <a href="/~olaf/Net-DNS-0.68/lib/Net/DNS/Packet.pm" class="podlinkpod"
>Net::DNS::Packet</a> for creating packet objects to be used in dynamic updates.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Header_Objects"
>Header Objects</a></h2>

<p><a href="/~olaf/Net-DNS-0.68/lib/Net/DNS/Header.pm" class="podlinkpod"
>Net::DNS::Header</a> objects represent the header section of a DNS packet.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Question_Objects"
>Question Objects</a></h2>

<p><a href="/~olaf/Net-DNS-0.68/lib/Net/DNS/Question.pm" class="podlinkpod"
>Net::DNS::Question</a> objects represent the question section of a DNS packet.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="RR_Objects"
>RR Objects</a></h2>

<p><a href="/~olaf/Net-DNS-0.68/lib/Net/DNS/RR.pm" class="podlinkpod"
>Net::DNS::RR</a> is the base class for DNS resource record (RR) objects in the answer, authority, and additional sections of a DNS packet.</p>

<p>Don&#39;t assume that RR objects will be of the type you requested -- always check an RR object&#39;s type before calling any of its methods.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="METHODS"
>METHODS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>See the manual pages listed above for other class-specific methods.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="version"
>version</a></h2>

<pre class="sh_perl">    print Net::DNS-&#62;version, &#34;\n&#34;;</pre>

<p>Returns the version of Net::DNS.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="mx"
>mx</a></h2>

<pre class="sh_perl">    # Use a default resolver -- can&#39;t get an error string this way.
    use Net::DNS;
    my @mx = mx(&#34;example.com&#34;);

    # Use your own resolver object.
    use Net::DNS;
    my $res = Net::DNS::Resolver-&#62;new;
    my  @mx = mx($res, &#34;example.com&#34;);</pre>

<p>Returns a list of <a href="/~olaf/Net-DNS-0.68/lib/Net/DNS/RR/MX.pm" class="podlinkpod"
>Net::DNS::RR::MX</a> objects representing the MX records for the specified name; the list will be sorted by preference. Returns an empty list if the query failed or no MX records were found.</p>

<p>This method does not look up A records -- it only performs MX queries.</p>

<p>See <a href="#EXAMPLES" class="podlinkpod"
>&#34;EXAMPLES&#34;</a> for a more complete example.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="yxrrset"
>yxrrset</a></h2>

<p>Use this method to add an &#34;RRset exists&#34; prerequisite to a dynamic update packet. There are two forms, value-independent and value-dependent:</p>

<pre class="sh_perl">    # RRset exists (value-independent)
    $update-&#62;push(pre =&#62; yxrrset(&#34;host.example.com A&#34;));</pre>

<p>Meaning: At least one RR with the specified name and type must exist.</p>

<pre class="sh_perl">    # RRset exists (value-dependent)
    $packet-&#62;push(pre =&#62; yxrrset(&#34;host.example.com A 10.1.2.3&#34;));</pre>

<p>Meaning: At least one RR with the specified name and type must exist and must have matching data.</p>

<p>Returns a <code>Net::DNS::RR</code> object or <code>undef</code> if the object couldn&#39;t be created.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="nxrrset"
>nxrrset</a></h2>

<p>Use this method to add an &#34;RRset does not exist&#34; prerequisite to a dynamic update packet.</p>

<pre class="sh_perl">    $packet-&#62;push(pre =&#62; nxrrset(&#34;host.example.com A&#34;));</pre>

<p>Meaning: No RRs with the specified name and type can exist.</p>

<p>Returns a <code>Net::DNS::RR</code> object or <code>undef</code> if the object couldn&#39;t be created.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="yxdomain"
>yxdomain</a></h2>

<p>Use this method to add a &#34;name is in use&#34; prerequisite to a dynamic update packet.</p>

<pre class="sh_perl">    $packet-&#62;push(pre =&#62; yxdomain(&#34;host.example.com&#34;));</pre>

<p>Meaning: At least one RR with the specified name must exist.</p>

<p>Returns a <code>Net::DNS::RR</code> object or <code>undef</code> if the object couldn&#39;t be created.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="nxdomain"
>nxdomain</a></h2>

<p>Use this method to add a &#34;name is not in use&#34; prerequisite to a dynamic update packet.</p>

<pre class="sh_perl">    $packet-&#62;push(pre =&#62; nxdomain(&#34;host.example.com&#34;));</pre>

<p>Meaning: No RR with the specified name can exist.</p>

<p>Returns a <code>Net::DNS::RR</code> object or <code>undef</code> if the object couldn&#39;t be created.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="rr_add"
>rr_add</a></h2>

<p>Use this method to add RRs to a zone.</p>

<pre class="sh_perl">    $packet-&#62;push(update =&#62; rr_add(&#34;host.example.com A 10.1.2.3&#34;));</pre>

<p>Meaning: Add this RR to the zone.</p>

<p>RR objects created by this method should be added to the &#34;update&#34; section of a dynamic update packet. The TTL defaults to 86400 seconds (24 hours) if not specified.</p>

<p>Returns a <code>Net::DNS::RR</code> object or <code>undef</code> if the object couldn&#39;t be created.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="rr_del"
>rr_del</a></h2>

<p>Use this method to delete RRs from a zone. There are three forms: delete an RRset, delete all RRsets, and delete an RR.</p>

<pre class="sh_perl">    # Delete an RRset.
    $packet-&#62;push(update =&#62; rr_del(&#34;host.example.com A&#34;));</pre>

<p>Meaning: Delete all RRs having the specified name and type.</p>

<pre class="sh_perl">    # Delete all RRsets.
    $packet-&#62;push(update =&#62; rr_del(&#34;host.example.com&#34;));</pre>

<p>Meaning: Delete all RRs having the specified name.</p>

<pre class="sh_perl">    # Delete an RR.
    $packet-&#62;push(update =&#62; rr_del(&#34;host.example.com A 10.1.2.3&#34;));</pre>

<p>Meaning: Delete all RRs having the specified name, type, and data.</p>

<p>RR objects created by this method should be added to the &#34;update&#34; section of a dynamic update packet.</p>

<p>Returns a <code>Net::DNS::RR</code> object or <code>undef</code> if the object couldn&#39;t be created.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="Zone_Serial_Number_Management"
>Zone Serial Number Management <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>The Net::DNS module provides auxiliary functions which support policy-driven zone serial numbering regimes.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Strictly_Sequential"
>Strictly Sequential</a></h2>

<pre class="sh_perl">    $successor = $soa-&#62;serial( SEQUENTIAL );</pre>

<p>The existing serial number is incremented modulo 2**32.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Time_Encoded"
>Time Encoded</a></h2>

<pre class="sh_perl">    $successor = $soa-&#62;serial( UNIXTIME );</pre>

<p>The Unix time scale will be used as the basis for zone serial numbering. The serial number will be incremented if the time elapsed since the previous update is less than one second.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Date_Encoded"
>Date Encoded</a></h2>

<pre class="sh_perl">    $successor = $soa-&#62;serial( YYYYMMDDxx );</pre>

<p>The 32 bit value returned by the auxiliary YYYYMMDDxx() function will be used as the base for the date-coded zone serial number. Serial number increments must be limited to 100 per day for the date information to remain useful.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Sorting_of_RR_arrays"
>Sorting of RR arrays</a></h2>

<p>As of version 0.55 there is functionality to help you sort RR arrays. &#39;rrsort()&#39; is the function that is available to do the sorting. In most cases rrsort will give you the answer that you want but you can specify your own sorting method by using the Net::DNS::RR::FOO-&#62;set_rrsort_func() class method. See <a href="/~olaf/Net-DNS-0.68/lib/Net/DNS/RR.pm" class="podlinkpod"
>Net::DNS::RR</a> for details.</p>

<h3><a class='u' href='#___top' title='click to go to top of document'
name="rrsort()"
>rrsort()</a></h3>

<pre class="sh_perl">   use Net::DNS qw(rrsort);

   my @prioritysorted=rrsort(&#34;SRV&#34;,&#34;priority&#34;,@rr_array);</pre>

<p>rrsort() selects all RRs from the input array that are of the type that are defined in the first argument. Those RRs are sorted based on the attribute that is specified as second argument.</p>

<p>There are a number of RRs for which the sorting function is specifically defined for certain attributes. If such sorting function is defined in the code (it can be set or overwritten using the set_rrsort_func() class method) that function is used.</p>

<p>For instance: my @prioritysorted=rrsort(&#34;SRV&#34;,&#34;priority&#34;,@rr_array); returns the SRV records sorted from lowest to heighest priority and for equal priorities from heighes to lowes weight.</p>

<p>If the function does not exist then a numerical sort on the attribute value is performed. my @portsorted=rrsort(&#34;SRV&#34;,&#34;port&#34;,@rr_array);</p>

<p>If the attribute does not exist for a certain RR than the RRs are sorted on string comparrisson of the rdata.</p>

<p>If the attribute is not defined than either the default_sort function will be defined or &#34;Canonical sorting&#34; (as defined by DNSSEC) will be used.</p>

<p>rrsort() returns a sorted array with only elements of the specified RR type or undef.</p>

<p>rrsort() returns undef when arguments are incorrect.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="EXAMPLES"
>EXAMPLES <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>The following examples show how to use the <code>Net::DNS</code> modules. See the other manual pages and the demo scripts included with the source code for additional examples.</p>

<p>See the <code>Net::DNS::Update</code> manual page for an example of performing dynamic updates.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Look_up_a_host&#39;s_addresses."
>Look up a host&#39;s addresses.</a></h2>

<pre class="sh_perl">  use Net::DNS;
  my $res   = Net::DNS::Resolver-&#62;new;
  my $query = $res-&#62;search(&#34;host.example.com&#34;);

  if ($query) {
      foreach my $rr ($query-&#62;answer) {
          next unless $rr-&#62;type eq &#34;A&#34;;
          print $rr-&#62;address, &#34;\n&#34;;
      }
  } else {
      warn &#34;query failed: &#34;, $res-&#62;errorstring, &#34;\n&#34;;
  }</pre>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Find_the_nameservers_for_a_domain."
>Find the nameservers for a domain.</a></h2>

<pre class="sh_perl">  use Net::DNS;
  my $res   = Net::DNS::Resolver-&#62;new;
  my $query = $res-&#62;query(&#34;example.com&#34;, &#34;NS&#34;);

  if ($query) {
      foreach $rr (grep { $_-&#62;type eq &#39;NS&#39; } $query-&#62;answer) {
          print $rr-&#62;nsdname, &#34;\n&#34;;
      }
  }
  else {
      warn &#34;query failed: &#34;, $res-&#62;errorstring, &#34;\n&#34;;
  }</pre>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Find_the_MX_records_for_a_domain."
>Find the MX records for a domain.</a></h2>

<pre class="sh_perl">  use Net::DNS;
  my $name = &#34;example.com&#34;;
  my $res  = Net::DNS::Resolver-&#62;new;
  my @mx   = mx($res, $name);

  if (@mx) {
      foreach $rr (@mx) {
          print $rr-&#62;preference, &#34; &#34;, $rr-&#62;exchange, &#34;\n&#34;;
      }
  } else {
      warn &#34;Can&#39;t find MX records for $name: &#34;, $res-&#62;errorstring, &#34;\n&#34;;
  }</pre>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Print_a_domain&#39;s_SOA_record_in_zone_file_format."
>Print a domain&#39;s SOA record in zone file format.</a></h2>

<pre class="sh_perl">  use Net::DNS;
  my $res   = Net::DNS::Resolver-&#62;new;
  my $query = $res-&#62;query(&#34;example.com&#34;, &#34;SOA&#34;);

  if ($query) {
      ($query-&#62;answer)[0]-&#62;print;
  } else {
      print &#34;query failed: &#34;, $res-&#62;errorstring, &#34;\n&#34;;
  }</pre>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Perform_a_zone_transfer_and_print_all_the_records."
>Perform a zone transfer and print all the records.</a></h2>

<pre class="sh_perl">  use Net::DNS;
  my $res  = Net::DNS::Resolver-&#62;new;
  $res-&#62;nameservers(&#34;ns.example.com&#34;);

  my @zone = $res-&#62;axfr(&#34;example.com&#34;);

  foreach $rr (@zone) {
      $rr-&#62;print;
  }</pre>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Perform_a_background_query_and_do_some_other_work_while_waiting_for_the_answer."
>Perform a background query and do some other work while waiting for the answer.</a></h2>

<pre class="sh_perl">  use Net::DNS;
  my $res    = Net::DNS::Resolver-&#62;new;
  my $socket = $res-&#62;bgsend(&#34;host.example.com&#34;);

  until ($res-&#62;bgisready($socket)) {
      # do some work here while waiting for the answer
      # ...and some more here
  }

  my $packet = $res-&#62;bgread($socket);
  $packet-&#62;print;</pre>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Send_a_background_query_and_use_select_to_determine_when_the_answer_has_arrived."
>Send a background query and use select to determine when the answer has arrived.</a></h2>

<pre class="sh_perl">  use Net::DNS;
  use IO::Select;

  my $timeout = 5;
  my $res     = Net::DNS::Resolver-&#62;new;
  my $bgsock  = $res-&#62;bgsend(&#34;host.example.com&#34;);
  my $sel     = IO::Select-&#62;new($bgsock);

  # Add more sockets to $sel if desired.
  my @ready = $sel-&#62;can_read($timeout);
  if (@ready) {
      foreach my $sock (@ready) {
          if ($sock == $bgsock) {
              my $packet = $res-&#62;bgread($bgsock);
              $packet-&#62;print;
              $bgsock = undef;
          }
          # Check for the other sockets.
          $sel-&#62;remove($sock);
          $sock = undef;
      }
  } else {
      warn &#34;timed out after $timeout seconds\n&#34;;
  }</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="BUGS"
>BUGS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><code>Net::DNS</code> is slow.</p>

<p>For other items to be fixed, or if you discover a bug in this distribution please use the CPAN bug reporting system.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="COPYRIGHT"
>COPYRIGHT <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Copyright (c)1997-2002 Michael Fuhr. Portions Copyright(c)2002-2004 Chris Reinhardt. Portions Copyright(c)2005 Olaf Kolkman (RIPE NCC) Portions Copyright(c)2006 Olaf Kolkman (NLnet Labs)</p>

<p>All rights reserved.</p>

<p>This program is free software; you may redistribute it and/or modify it under the same terms as Perl itself.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHOR_INFORMATION"
>AUTHOR INFORMATION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Net::DNS is currently maintained at NLnet Labs (www.nlnetlabs.nl) by: Olaf Kolkman olaf@net-dns.org</p>

<p>Between 2002 and 2004 Net::DNS was maintained by: Chris Reinhardt</p>

<p>Net::DNS was created by: Michael Fuhr mike@fuhr.org</p>

<p>For more information see: <a href="http://www.net-dns.org/" class="podlinkurl"
>http://www.net-dns.org/</a></p>

<p>Stay tuned and syndicate: <a href="http://www.net-dns.org/blog/" class="podlinkurl"
>http://www.net-dns.org/blog/</a></p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SEE_ALSO"
>SEE ALSO <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><a href="/perldoc?perl" class="podlinkpod"
>perl</a>, <a href="/~olaf/Net-DNS-0.68/lib/Net/DNS/Resolver.pm" class="podlinkpod"
>Net::DNS::Resolver</a>, <a href="/~olaf/Net-DNS-0.68/lib/Net/DNS/Packet.pm" class="podlinkpod"
>Net::DNS::Packet</a>, <a href="/~olaf/Net-DNS-0.68/lib/Net/DNS/Update.pm" class="podlinkpod"
>Net::DNS::Update</a>, <a href="/~olaf/Net-DNS-0.68/lib/Net/DNS/Header.pm" class="podlinkpod"
>Net::DNS::Header</a>, <a href="/~olaf/Net-DNS-0.68/lib/Net/DNS/Question.pm" class="podlinkpod"
>Net::DNS::Question</a>, <a href="/~olaf/Net-DNS-0.68/lib/Net/DNS/RR.pm" class="podlinkpod"
>Net::DNS::RR</a>, RFC 1035, <i>DNS and BIND</i> by Paul Albitz &#38; Cricket Liu</p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78260 Uploads, 24722 Distributions
105996 Modules, 9649 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Fri Apr 27 14:20:16 2012 GMT (0.248325109481812) @cpansearch1 -->
 </body>
</html>
