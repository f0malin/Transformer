<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>Net::IMAP - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","NetxAP",3]);
    _gaq.push(["_setCustomVar",5,"Release","NetxAP-0.02",3]);
    _gaq.push(["_setCustomVar",3,"Module","Net::IMAP",3]);
    _gaq.push(["_setCustomVar",1,"Author","KJOHNSON",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?Net::IMAP">permalink</a></div>
  <a href="/~kjohnson/">Kevin Johnson</a> &gt;
  <a href="/~kjohnson/NetxAP-0.02/">NetxAP-0.02</a> &gt;
  Net::IMAP
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/dbd180445c4e69fdd02fdd3651e23c29?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/K/KJ/KJOHNSON/NetxAP-0.02.tar.gz">NetxAP-0.02.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=Net%3A%3AIMAP;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~KJOHNSON/NetxAP-0.02/Net/IMAP.pm">Annotate this POD
(2)
</a></p>
<div class=box style='width:150px; float: right'>
<h1 class=t5>Related Modules</h1>
<div style="margin:2px">
<a href="/perldoc?Net%3A%3APOP3">Net::POP3</a><br>
<a href="/perldoc?Mail%3A%3AIMAPClient">Mail::IMAPClient</a><br>
<a href="/perldoc?Net%3A%3ASMTP">Net::SMTP</a><br>
<a href="/perldoc?Net%3A%3AIMAP%3A%3ASimple">Net::IMAP::Simple</a><br>
<a href="/perldoc?Mail%3A%3APOP3Client">Mail::POP3Client</a><br>
<a href="/perldoc?IMAP%3A%3AClient">IMAP::Client</a><br>
<a href="/perldoc?MIME%3A%3ALite">MIME::Lite</a><br>
<a href="/perldoc?IMAP%3A%3AAdmin">IMAP::Admin</a><br>
<a href="/perldoc?Net%3A%3ALDAP">Net::LDAP</a><br>
<a href="/perldoc?Win32%3A%3AOLE">Win32::OLE</a><br>
<small>
<a href="http://perlmonks.org/?node=cpan+module+search&pivot=1&module=Net%3A%3AIMAP">more...</a><br>
By <a href="http://perlmonks.org/">perlmonks.org</a></small>
</div>
</div>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>New&nbsp;</td><td style="text-align:right"> 4</td></tr>
<tr><td>Open&nbsp;</td><td style="text-align:right"> 0</td></tr>
</table>
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=NetxAP">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  0.02 &nbsp;
<span class="noprint">
  <a href="/src/KJOHNSON/NetxAP-0.02/Net/IMAP.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <li class='indexItem indexItem1'><a href='#METHODS'>METHODS</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#new_$host,_%options'>new $host, %options</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#IMAP_COMMAND_METHODS'>IMAP COMMAND METHODS</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#noop'>noop</a>
    <li class='indexItem indexItem2'><a href='#capability'>capability</a>
    <li class='indexItem indexItem2'><a href='#logout'>logout</a>
    <li class='indexItem indexItem2'><a href='#login_$user,_$password'>login $user, $password</a>
    <li class='indexItem indexItem2'><a href='#authenticate_$authtype,_@authinfo'>authenticate $authtype, @authinfo</a>
    <li class='indexItem indexItem2'><a href='#select_$mailbox'>select $mailbox</a>
    <li class='indexItem indexItem2'><a href='#examine_$mailbox'>examine $mailbox</a>
    <li class='indexItem indexItem2'><a href='#create_$mailbox_[,_$partition]'>create $mailbox [, $partition]</a>
    <li class='indexItem indexItem2'><a href='#delete_$mailbox'>delete $mailbox</a>
    <li class='indexItem indexItem2'><a href='#rename_$oldmailboxname,_$newmailboxname_[,_$partition]'>rename $oldmailboxname, $newmailboxname [, $partition]</a>
    <li class='indexItem indexItem2'><a href='#subscribe_$mailbox'>subscribe $mailbox</a>
    <li class='indexItem indexItem2'><a href='#unsubscribe_$mailbox'>unsubscribe $mailbox</a>
    <li class='indexItem indexItem2'><a href='#list_$referencename,_$mailbox_pattern'>list $referencename, $mailbox_pattern</a>
    <li class='indexItem indexItem2'><a href='#lsub_$referencename,_$mailbox_pattern'>lsub $referencename, $mailbox_pattern</a>
    <li class='indexItem indexItem2'><a href='#status_$mailbox,_@statusattrs'>status $mailbox, @statusattrs</a>
    <li class='indexItem indexItem2'><a href='#append_$mailbox,_$message_[,_Flags_=&#62;_$flaglistref]_[,_Date_=&#62;_$date]'>append $mailbox, $message [, Flags =&#62; $flaglistref] [, Date =&#62; $date]</a>
    <li class='indexItem indexItem2'><a href='#check'>check</a>
    <li class='indexItem indexItem2'><a href='#close'>close</a>
    <li class='indexItem indexItem2'><a href='#expunge'>expunge</a>
    <li class='indexItem indexItem2'><a href='#search_[Charset_=&#62;_$charset,]_@searchkeys'>search [Charset =&#62; $charset,] @searchkeys</a>
    <li class='indexItem indexItem2'><a href='#fetch_$msgset,_&#39;all&#39;|&#39;full&#39;|&#39;fast&#39;|$fetchattr|@fetchattrs'>fetch $msgset, &#39;all&#39;|&#39;full&#39;|&#39;fast&#39;|$fetchattr|@fetchattrs</a>
    <li class='indexItem indexItem2'><a href='#store_$msgset,_$itemname,_@storeattrflags'>store $msgset, $itemname, @storeattrflags</a>
    <li class='indexItem indexItem2'><a href='#copy_$msgset,_$mailbox'>copy $msgset, $mailbox</a>
    <li class='indexItem indexItem2'><a href='#uid_copy_$msgset,_$mailbox'>uid_copy $msgset, $mailbox</a>
    <li class='indexItem indexItem2'><a href='#uid_fetch_$msgset,_&#39;all&#39;|&#39;full&#39;|&#39;fast&#39;|$fetchattr|@fetchattrs'>uid_fetch $msgset, &#39;all&#39;|&#39;full&#39;|&#39;fast&#39;|$fetchattr|@fetchattrs</a>
    <li class='indexItem indexItem2'><a href='#uid_search_[Charset_=&#62;_$charset,]_@searchkeys'>uid_search [Charset =&#62; $charset,] @searchkeys</a>
    <li class='indexItem indexItem2'><a href='#uid_store_$msgset,_$itemname,_@storeattrflags'>uid_store $msgset, $itemname, @storeattrflags</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#CONVENIENCE_ROUTINES'>CONVENIENCE ROUTINES</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#is_preauth'>is_preauth</a>
    <li class='indexItem indexItem2'><a href='#banner'>banner</a>
    <li class='indexItem indexItem2'><a href='#capabilities'>capabilities</a>
    <li class='indexItem indexItem2'><a href='#has_capability_$capname'>has_capability $capname</a>
    <li class='indexItem indexItem2'><a href='#authtypes'>authtypes</a>
    <li class='indexItem indexItem2'><a href='#has_authtype_$authname'>has_authtype $authname</a>
    <li class='indexItem indexItem2'><a href='#qty_messages'>qty_messages</a>
    <li class='indexItem indexItem2'><a href='#qty_recent'>qty_recent</a>
    <li class='indexItem indexItem2'><a href='#first_unseen'>first_unseen</a>
    <li class='indexItem indexItem2'><a href='#uidvalidity'>uidvalidity</a>
    <li class='indexItem indexItem2'><a href='#uidnext'>uidnext</a>
    <li class='indexItem indexItem2'><a href='#permanentflags'>permanentflags</a>
    <li class='indexItem indexItem2'><a href='#is_permanentflag_$flag'>is_permanentflag $flag</a>
    <li class='indexItem indexItem2'><a href='#flags'>flags</a>
    <li class='indexItem indexItem2'><a href='#has_flag_$flag'>has_flag $flag</a>
    <li class='indexItem indexItem2'><a href='#mailbox'>mailbox</a>
    <li class='indexItem indexItem2'><a href='#is_readonly'>is_readonly</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#NAMESPACE_EXTENSION'>NAMESPACE EXTENSION</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#namespace'>namespace</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#ACCESS_CONTROL_EXTENSION'>ACCESS CONTROL EXTENSION</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#setacl_$mailbox,_$identifier,_$modrights'>setacl $mailbox, $identifier, $modrights</a>
    <li class='indexItem indexItem2'><a href='#getacl_$mailbox'>getacl $mailbox</a>
    <li class='indexItem indexItem2'><a href='#deleteacl_$mailbox,_$identifier'>deleteacl $mailbox, $identifier</a>
    <li class='indexItem indexItem2'><a href='#listrights_$mailbox,_$identifier'>listrights $mailbox, $identifier</a>
    <li class='indexItem indexItem2'><a href='#myrights_$mailbox'>myrights $mailbox</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#QUOTA_EXTENSION'>QUOTA EXTENSION</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#getquota_$quotaroot'>getquota $quotaroot</a>
    <li class='indexItem indexItem2'><a href='#setquota_$quotaroot,_@setquotalist'>setquota $quotaroot, @setquotalist</a>
    <li class='indexItem indexItem2'><a href='#getquotaroot_$mailbox'>getquotaroot $mailbox</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#UIDPLUS_EXTENSION'>UIDPLUS EXTENSION</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#uid_expunge_$msgset'>uid_expunge $msgset</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#CALLBACKS'>CALLBACKS</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#set_untagged_callback_$item,_$coderef'>set_untagged_callback $item, $coderef</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#RESPONSE_OBJECTS'>RESPONSE OBJECTS</a>
  <li class='indexItem indexItem1'><a href='#Response'>Response</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#is_tagged'>is_tagged</a>
    <li class='indexItem indexItem2'><a href='#has_trycreate'>has_trycreate</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#UntaggedResponse'>UntaggedResponse</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#tag'>tag</a>
    <li class='indexItem indexItem2'><a href='#is_tagged'>is_tagged</a>
    <li class='indexItem indexItem2'><a href='#parent'>parent</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#Ok'>Ok</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#code'>code</a>
    <li class='indexItem indexItem2'><a href='#name'>name</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#No'>No</a>
  <li class='indexItem indexItem1'><a href='#Bad'>Bad</a>
  <li class='indexItem indexItem1'><a href='#Bye'>Bye</a>
  <li class='indexItem indexItem1'><a href='#Expunge'>Expunge</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#msgnum'>msgnum</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#Capability'>Capability</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#capabilities'>capabilities</a>
    <li class='indexItem indexItem2'><a href='#has_capability_$capname'>has_capability $capname</a>
    <li class='indexItem indexItem2'><a href='#authtypes'>authtypes</a>
    <li class='indexItem indexItem2'><a href='#has_authtype_$authname'>has_authtype $authname</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#List'>List</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#mailbox'>mailbox</a>
    <li class='indexItem indexItem2'><a href='#delimiter'>delimiter</a>
    <li class='indexItem indexItem2'><a href='#flags'>flags</a>
    <li class='indexItem indexItem2'><a href='#has_flag_$flag'>has_flag $flag</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#List'>List</a>
  <li class='indexItem indexItem1'><a href='#Fetch'>Fetch</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#msgnum'>msgnum</a>
    <li class='indexItem indexItem2'><a href='#items'>items</a>
    <li class='indexItem indexItem2'><a href='#item_$item'>item $item</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#Status'>Status</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#mailbox'>mailbox</a>
    <li class='indexItem indexItem2'><a href='#items'>items</a>
    <li class='indexItem indexItem2'><a href='#item_$item'>item $item</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#Search'>Search</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#msgnums'>msgnums</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#Flags'>Flags</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#flags'>flags</a>
    <li class='indexItem indexItem2'><a href='#has_flag_$flag'>has_flag $flag</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#Exists'>Exists</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#exists'>exists</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#Recent'>Recent</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#recent'>recent</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#Namespace'>Namespace</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#personal_[$namespace]'>personal [$namespace]</a>
    <li class='indexItem indexItem2'><a href='#other_users_[$namespace]'>other_users [$namespace]</a>
    <li class='indexItem indexItem2'><a href='#shared_[$namespace]'>shared [$namespace]</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#ACL'>ACL</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#mailbox'>mailbox</a>
    <li class='indexItem indexItem2'><a href='#identifiers'>identifiers</a>
    <li class='indexItem indexItem2'><a href='#identifier_$identifier'>identifier $identifier</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#Listrights'>Listrights</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#mailbox'>mailbox</a>
    <li class='indexItem indexItem2'><a href='#identifier'>identifier</a>
    <li class='indexItem indexItem2'><a href='#rights'>rights</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#Myrights'>Myrights</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#mailbox'>mailbox</a>
    <li class='indexItem indexItem2'><a href='#rights'>rights</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#Quota'>Quota</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#quotaroot'>quotaroot</a>
    <li class='indexItem indexItem2'><a href='#quotas'>quotas</a>
    <li class='indexItem indexItem2'><a href='#usage_$quota'>usage $quota</a>
    <li class='indexItem indexItem2'><a href='#limit_$quota'>limit $quota</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#Quotaroot'>Quotaroot</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#mailbox'>mailbox</a>
    <li class='indexItem indexItem2'><a href='#quotaroots'>quotaroots</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#MISC_FETCH_OBJECTS'>MISC FETCH OBJECTS</a>
  <li class='indexItem indexItem1'><a href='#BodyStructure'>BodyStructure</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#type'>type</a>
    <li class='indexItem indexItem2'><a href='#subtype'>subtype</a>
    <li class='indexItem indexItem2'><a href='#parameters'>parameters</a>
    <li class='indexItem indexItem2'><a href='#disposition'>disposition</a>
    <li class='indexItem indexItem2'><a href='#disp_parameters'>disp_parameters</a>
    <li class='indexItem indexItem2'><a href='#language'>language</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#Multipart'>Multipart</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#parts'>parts</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#Bodypart'>Bodypart</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#id'>id</a>
    <li class='indexItem indexItem2'><a href='#description'>description</a>
    <li class='indexItem indexItem2'><a href='#encoding'>encoding</a>
    <li class='indexItem indexItem2'><a href='#size'>size</a>
    <li class='indexItem indexItem2'><a href='#lines'>lines</a>
    <li class='indexItem indexItem2'><a href='#envelope'>envelope</a>
    <li class='indexItem indexItem2'><a href='#bodystructure'>bodystructure</a>
    <li class='indexItem indexItem2'><a href='#md5'>md5</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#Envelope'>Envelope</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#date'>date</a>
    <li class='indexItem indexItem2'><a href='#subject'>subject</a>
    <li class='indexItem indexItem2'><a href='#from'>from</a>
    <li class='indexItem indexItem2'><a href='#sender'>sender</a>
    <li class='indexItem indexItem2'><a href='#reply_to'>reply_to</a>
    <li class='indexItem indexItem2'><a href='#to'>to</a>
    <li class='indexItem indexItem2'><a href='#cc'>cc</a>
    <li class='indexItem indexItem2'><a href='#bcc'>bcc</a>
    <li class='indexItem indexItem2'><a href='#in_reply_to'>in_reply_to</a>
    <li class='indexItem indexItem2'><a href='#message_id'>message_id</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#Addr'>Addr</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#phrase'>phrase</a>
    <li class='indexItem indexItem2'><a href='#route'>route</a>
    <li class='indexItem indexItem2'><a href='#localpart'>localpart</a>
    <li class='indexItem indexItem2'><a href='#domain'>domain</a>
    <li class='indexItem indexItem2'><a href='#as_string'>as_string</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#CAVEATS'>CAVEATS</a>
  <li class='indexItem indexItem1'><a href='#AUTHOR'>AUTHOR</a>
  <li class='indexItem indexItem1'><a href='#COPYRIGHT'>COPYRIGHT</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Net::IMAP - A client interface to IMAP (Internet Message Access Protocol).</p>

<p><b>WARNING: This code is in alpha release.
Expect the interface to change release to release.</b></p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><code>use Net::IMAP;</code></p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><code>Net::IMAP</code> provides a perl interface to the client portion of IMAP (Internet Message Access Protocol).</p>

<p><b>add more meat - describe overall design (commands,
responses,
callbacks,
convenience routines</b></p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="METHODS"
>METHODS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="new_$host,_%options"
>new $host,
%options</a></h2>

<p>Creates a new <code>Net::IMAP</code> object,
connects to <code>$host</code> on port 143,
performs some preliminary setup of the session,
and returns a reference to the object.</p>

<p>Once connected,
it processes the connection banner sent by the server.
If the considers the session to be preauthenticated,
<code>new</code> notes the fact,
allowing commands to be issued without logging in.</p>

<p>The method also issues a <code>capability</code> command,
and notes the result.
If the server does support IMAP4rev1,
the method closes the connection and returns <code>undef</code>.</p>

<p>The client will use non-synchronizing literals if the server supports the <code>LITERAL+</code> extension (RFC2088) and the <code>NonSyncLits</code> options is set to <code>1</code>.</p>

<p>The following <code>Net::xAP</code> options are relevant to <code>Net::IMAP</code>:</p>

<dl>
<dt><a name='Synchronous'></a><a name="Synchronous_=&#62;_1"
><code>Synchronous =&#62; 1</code></a></dt>

<dd>
<dt><a name='NonSyncLits'></a><a name="NonSyncLits_=&#62;_0"
><code>NonSyncLits =&#62; 0</code></a></dt>

<dd>
<dt><a name='Debug'></a><a name="Debug_=&#62;_0"
><code>Debug =&#62; 0</code></a></dt>

<dd>
<dt><a name='InternetDraft'></a><a name="InternetDraft_=&#62;_0"
><code>InternetDraft =&#62; 0</code></a></dt>
</dl>

<p><code>Net::IMAP</code> also understands the following options,
specific to the module:</p>

<dl>
<dt><a name='EOL'></a><a name="EOL_=&#62;_&#39;lf&#39;"
><code>EOL =&#62; &#39;lf&#39;</code></a></dt>

<dd>
<p>Controls what style of end-of-line processing to presented to the end-programmer.
The default,
<code>&#39;lf&#39;</code>,
assumes that the programemr wants to fling messages terminated with bare LFs when invoking append,
and when fetching messages.
In this case,
the module will map to/from CRLF accordingly.</p>

<p>If <code>EOL</code> is set to <code>&#39;crlf&#39;</code>,
the assumption is that the programmer wants messages,
or portions of messages,
to be terminated with CRLF.
It also assumes the programmer is providing messages terminated with the string when invoking the <code>append</code> method,
and will not provide an EOL mapping.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="IMAP_COMMAND_METHODS"
>IMAP COMMAND METHODS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>There are numerous commands in the IMAP protocol.
Each of these are mapped to a corresponding method in the <code>Net::IMAP</code> module.</p>

<p>Some commands can only be issued in certain protocol states.
Some commands alter the state of the session.
These facts are indicated in the documentation for the individual command methods.</p>

<p>The following list enumerates the protocol states:</p>

<dl>
<dt><a name='Non'></a><a name="Non-authenticated"
>Non-authenticated</a></dt>

<dd>
<p>The client has not authenticated with the server.
Most commands are unavailable in this state.</p>

<dt><a name="Authenticated"
>Authenticated</a></dt>

<dd>
<p>The client has authenticated with the server.</p>

<dt><a name="Selected"
>Selected</a></dt>

<dd>
<p>The client has opened a mailbox on the server.</p>
</dd>
</dl>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="noop"
>noop</a></h2>

<p>Sends a <code>noop</code> command to the server.
It is valid in any protocol state.</p>

<p>This method is useful for placating the auto-logout god,
or for triggering pending unsolicited responses from the server.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="capability"
>capability</a></h2>

<p>The <code>capability</code> method retrieves the capabilities the IMAP server supports.
This method is valid in any protocol state.</p>

<p>The server sends a <code>capability</code> response back to the client.</p>

<p>If the response does not indicate support for the <code>LITERAL+</code> extension,
the <code>NonSyncLits</code> option is forced off.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="logout"
>logout</a></h2>

<p>Logs off of the server.
This method is valid in any protocol state.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="login_$user,_$password"
>login $user,
$password</a></h2>

<p>Logs into the server using a simple plaintext password.
This method is only valid when the protocol is in the non-authenticated state.</p>

<p>If the server supports RFC2221 (IMAP4 Login Referrals),
the completion response could include a referral.
See RFC2221 for further information about login referrals.</p>

<p>If successful,
the session state is changed to <i>authenticated</i>.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="authenticate_$authtype,_@authinfo"
>authenticate $authtype,
@authinfo</a></h2>

<p>Logs into the server using the authentication mechanism specified in <code>$authtype</code>.
This method is only valid when the protocol is in the non-authenticated state.</p>

<p>The IMAP <code>authenticate</code> command is the same as that documented in RFC2222 (Simple Authentication and Security Layer (SASL)),
despite the fact that IMAP predates SASL.</p>

<p>If successful,
the session state is changed to <i>authenticated</i>.</p>

<p>The following authentication mechanisms are currently supported:</p>

<dl>
<dt><a name='login'></a><a name="&#39;login&#39;"
><code>&#39;login&#39;</code></a></dt>

<dd>
<p>This is a variation on the simple login technique,
except that the information is transmitted in Base64.
This does not provide any additional security,
but does allow clients to use <code>authenticate</code>.</p>

<dt><a name='cram'></a><a name="&#39;cram-md5&#39;"
><code>&#39;cram-md5&#39;</code></a></dt>

<dd>
<p>This implements the authentication mechanism defined in RFC2195 (IMAP/POP AUTHorize Extension for Simple Challenge/Response).
It uses keyed MD5 to avoid sending the password over the wire.</p>

<dt><a name='anonymous'></a><a name="&#39;anonymous&#39;"
><code>&#39;anonymous&#39;</code></a></dt>

<dd>
<p>This implements the authentication mechanism defined in RFC2245 (Anonymous SASL Mechanism).
Anonymous IMAP access is intended to provide access to public mailboxes or newsgroups.</p>
</dd>
</dl>

<p>The method returns <code>undef</code> is <code>$authtype</code> specifies an unsupported mechanism or if the server does not advertise support for the mechanism.
The <code>has_authtype</code> method can be used to see whether the server supports a particular authentication mechanism.</p>

<p>In general,
if the server supports a mechanism supported by <code>Net::IMAP</code>,
the <code>authenticate</code> command should be used instead of the <code>login</code> method.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="select_$mailbox"
>select $mailbox</a></h2>

<p>Opens the specified mailbox with the intention of performing reading and writing.
This method is valid only when the session is in the authenticated or selected states.</p>

<p>If successful,
the server sends several responses: <code>flags</code>,
<code>exists</code>,
<code>resent</code>,
as well as <code>ok</code> responses containing a <code>unseen</code>,
<code>permanentflags</code>,
<code>uidnext</code>,
and <code>uidvalidity</code> codes.
If also changes the session state to <i>selected</i>.</p>

<p>If server returns a <code>no</code> response containing a <code>newname</code> response code,
this means <code>$mailbox</code> does not exist but the server thinks this is because the folder was renamed.
In this case,
try specifiying the new folder name provided with the <code>newname</code> response code.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="examine_$mailbox"
>examine $mailbox</a></h2>

<p>Opens the specified mailbox in read-only mode.
This method is valid only when the session is in the authenticated or selected states.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="create_$mailbox_[,_$partition]"
>create $mailbox [,
$partition]</a></h2>

<p>Creates the specified mailbox.
This method is valid only when the session is in the authenticated or selected states.</p>

<p>The optional <code>$partition</code> argument is only valid with the Cyrus IMAP daemon.
Refer to the section &#39;Specifying Partitions with &#34;create&#34;&#39; the <code>doc/overview</code> file for that package for further information.
This feature can only be used by administrators creating new mailboxes.
Other servers will probably reject the command if this argument is used.
The results are undefined if another server accepts a second argument.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="delete_$mailbox"
>delete $mailbox</a></h2>

<p>Deletes the specified mailbox.
Returns <code>undef</code> if <code>$mailbox</code> is the currently open mailbox.
This method is valid only when the session is in the authenticated or selected states.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="rename_$oldmailboxname,_$newmailboxname_[,_$partition]"
>rename $oldmailboxname,
$newmailboxname [,
$partition]</a></h2>

<p>Renames the mailbox specified in <code>$oldmailbox</code> to the name specified in <code>$newmailbox</code>.
This method is valid only when the session is in the authenticated or selected states.</p>

<p>The optional <code>$partition</code> argument is only valid with the Cyrus IMAP daemon.
Refer to the section &#39;Specifying Partitions with &#34;rename&#34;&#39; the <code>doc/overview</code> file for that package for further information.
This feature can only be used by administrators.
Other servers will probably reject the command if this argument is used.
The results are undefined if another server accepts a third argument.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="subscribe_$mailbox"
>subscribe $mailbox</a></h2>

<p>Subscribe to the specified <code>$mailbox</code>.
Subscribing in IMAP is subscribing in Usenet News,
except that the server maintains the subscription list.
This method is valid only when the session is in the authenticated or selected states.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="unsubscribe_$mailbox"
>unsubscribe $mailbox</a></h2>

<p>Unsubscribe from the specified <code>$mailbox</code>.
This method is valid only when the session is in the authenticated or selected states.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="list_$referencename,_$mailbox_pattern"
>list $referencename,
$mailbox_pattern</a></h2>

<p>Send an IMAP <code>list</code> command to the server.
This method is valid only when the session is in the authenticated or selected states.</p>

<p>Although IMAP folders do not need to be implemented as directories,
think of an IMAP reference name as a parameter given to a <code>cd</code> or <code>chdir</code> command,
prior to checking for folders matching <code>$mailbox_pattern</code>.</p>

<p>The <code>$mailbox_pattern</code> parameter allows a couple wildcard characters to list subsets of the mailboxes on the server.</p>

<ul>
<li>Matches zero or more characters at the specified location.</li>

<li>%
<p>Like <code>*</code>,
matches zero or more characters at the specified location,
but does not match hierarchy delimiter characters.</p>

<p>If the last character in <code>$mailbox_pattern</code> is a <code>%</code>,
matching levels of hierarchy are also returned.
In other words: subfolders.</p>
</li>
</ul>

<p>This method will fail,
returning <code>undef</code>,
if <code>$mailbox_pattern</code> is <code>*</code>.
This behavior is not built into the IMAP protocol; it is wired into <code>Net::IMAP</code>.
Doing otherwise could be rude to both the client and server machines.
If you want to know why,
imagine doing <code>list(&#39;#news.&#39;,
&#39;*&#39;)</code> on a machine with a full news feed.
The <code>%</code> character should be used to build up a folder tree incrementally.</p>

<p>If successful,
the server sends a series of <code>list</code> responses.</p>

<p>Please note that the <code>$referencename</code> is an IMAPism,
not a Perl reference.
Also note that the wildcards usable in <code>$mailbox_pattern</code> are specific to IMAP.
Perl regexps are not usable here.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="lsub_$referencename,_$mailbox_pattern"
>lsub $referencename,
$mailbox_pattern</a></h2>

<p>Sends an IMAP <code>lsub</code> command to the server.
The <code>lsub</code> command is similar to the <code>list</code> command,
except that the server only returns subscribed mailboxes.
This method is valid only when the session is in the authenticated or selected states.</p>

<p>The parameters are the same as those for the <code>list</code> method.</p>

<p>If successful,
the server sends a series of <code>lsub</code> responses.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="status_$mailbox,_@statusattrs"
>status $mailbox,
@statusattrs</a></h2>

<p>Retrieves status information for the specified <code>$mailbox</code>.
This method is valid only when the session is in the authenticated or selected states.</p>

<p>Per RFC2060,
the <code>@statusattrs</code> can contain any of the following strings:</p>

<ul>
<li>messages
<p>The number of messages in the mailbox.</p>
</li>

<li>recent
<p>The number of messages with the <code>\recent</code> flag set.</p>
</li>

<li>uidnext
<p>The UID expected to be assigned to the next mailbox appended to the mailbox.
This requires some explanation.
Rather than using this value for prefetching the next UID,
it should be used to detect whether messages have been added to the mailbox.
The value will not change until messages are appended to the mailbox.</p>
</li>

<li>uidvalidity
<p>The unique identifier validity value of the mailbox.</p>
</li>

<li>unseen
<p>The number of messages without the <code>\seen</code> flag set.</p>
</li>
</ul>

<p>This method will fail,
returning <code>undef</code> if <code>$mailbox</code> is the currently open mailbox.</p>

<p>If successful,
the server sends one or more <code>status</code> responses.</p>

<p>The status operation can be rather expensive on some folder implementations,
so clients should use this method sparingly.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="append_$mailbox,_$message_[,_Flags_=&#62;_$flaglistref]_[,_Date_=&#62;_$date]"
>append $mailbox,
$message [,
Flags =&#62; $flaglistref] [,
Date =&#62; $date]</a></h2>

<p>Appends the email message specified in <code>$message</code> to the mailbox specified in <code>$mailbox</code>.
This method is valid only when the session is in the authenticated or selected states.</p>

<p>In general,
the email message should be a real RFC822 message,
although exceptions such as draft messages are reasonable in some situations.
Also note that the line terminators in <code>$message</code> need to be CRLF.</p>

<p>The <code>Flags</code> option allows a set of flags to be specified for the message when it is appended.
Servers are not required to honor this,
but most,
if not all,
do so.</p>

<p>The <code>Date</code> option forces the internaldate to the specified value.
If <code>$date</code> is a string,
the format of the string is <code>dd-mmm-yyyy hh:mm:ss [-+]zzzz</code>,
where <code>dd</code> is the day of the month (starting from 1),
<code>mmm</code> is the three-character abbreviation for the month name,
<code>yyyy</code> is the 4-digit year,
<code>hh</code> is the hour,
<code>mm</code> is the minutes,
<code>ss</code> is the seconds,
and <code>[-+]zzzz</code> is the numeric timezone offset.
This happens to be the same format returned by the <code>internaldate</code> item from the <code>fetch</code> command.
If <code>$date</code> is a list reference,
it is expected to contain two elements: a time integer and a timezone offset string.
The timezone string is expected to be formatted as <code>[-+]zzzz</code>.
These two values will be used to synthesize a string in the format expected by the IMAP server.
As with the <code>Flags</code> options,
servers are not required to honor the <code>Date</code> option,
but most,
if not all,
do so.</p>

<p>Note that the options are specified at the end of the list of method arguments.
This is due to the fact that it is possible to have a <code>$mailbox</code> named <code>Flags</code> or <code>Date</code>.
Processing the options at the end of the argument list simplifies argument processing.
The order of the arguments will be changed if enough people complain.</p>

<p>If server returns a <code>no</code> response containing a <code>trycreate</code> response code,
this means <code>$mailbox</code> does not exist but the server thinks the command would have succeeded if the an appropriate <code>create</code> command was issued.
On the other hand,
failure with no <code>trycreate</code> response code generally means that a <code>create</code> should not be attempted.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="check"
>check</a></h2>

<p>Ask the server to perform a checkpoint of its data.
This method is valid only when the session is in the selected state.</p>

<p>While not always needed,
this should be called if the client issues a large quantity of updates to a folder in an extended session.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="close"
>close</a></h2>

<p>Close the current mailbox.
This method is valid only when the session is in the selected state.</p>

<p>If successful,
the session state is changed to <i>authenticated</i>.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="expunge"
>expunge</a></h2>

<p>Delete messages marked for deletion.
This method is valid only when the session is in the selected state.</p>

<p>If successful,
the server sends a series of <code>expunge</code> responses.</p>

<p>It will return <code>undef</code> is the mailbox is marked read-only.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="search_[Charset_=&#62;_$charset,]_@searchkeys"
>search [Charset =&#62; $charset,] @searchkeys</a></h2>

<p>Searches the mailbox for messages matching the criteria contained in <code>@searchkeys</code>.
This method is valid only when the session is in the selected state.</p>

<p>The <code>@searchkeys</code> list contains strings matching the format described in Section 6.4.4 of RFC2060.</p>

<p>If successful,
the server send zero or more <code>search</code> responses.
Lack of a <code>search</code> response means the server found no matches.
Note that the server can send the results of one search in multiple responses.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="fetch_$msgset,_&#39;all&#39;|&#39;full&#39;|&#39;fast&#39;|$fetchattr|@fetchattrs"
>fetch $msgset,
&#39;all&#39;|&#39;full&#39;|&#39;fast&#39;|$fetchattr|@fetchattrs</a></h2>

<p>Retrieves data about a set of messages.
This method is valid only when the session is in the selected state.</p>

<p>The <code>$msgset</code> parameter identifies the set of messages from which to retrieve the items of interest.
The notation accepted is similar to that found in <code>.newsrc</code> files,
except that <code>:</code> is used to specify ranges,
instead of <code>-</code>.
Thus,
to specify messages 1,
2,
3,
5,
7,
8,
9,
the following string could be used: <code>&#39;1:3,5,7:9&#39;</code>.
The character <code>*</code> can be used to indicate the highest message number in the mailbox.
Thus,
to specify the last 4 messages in an 8-message mailbox,
you can use <code>&#39;5-*&#39;</code>.</p>

<p>The following list enumerates the items that can be retrieved with <code>fetch</code>.
Refer to Section 6.4.5 of RFC2060 for a description of each of these items.</p>

<ul>
<li>body[$section]&#60;$partial&#62;</li>

<li>body.peek[$section]&#60;$partial&#62;
<p>Important: the response item returned for a <code>body.peek</code> is <code>body</code>.</p>
</li>

<li>bodystructure</li>

<li>body</li>

<li>envelope</li>

<li>flags</li>

<li>internaldate</li>

<li>rfc822</li>

<li>rfc822.header</li>

<li>rfc822.size</li>

<li>rfc822.text</li>

<li>uid</li>
</ul>

<p>Please note that the items returning messages,
or portion of messages,
return strings terminated with CRLF.</p>

<p>RFC2060 also defines several items that are actually macros for other sets of items:</p>

<ul>
<li>all
<p>A macro equivalent to <code>(&#39;flags&#39;,
&#39;internaldate&#39;,
&#39;rfc822.size&#39;,
&#39;envelope&#39;)</code>.</p>
</li>

<li>full
<p>A macro equivalent to <code>(&#39;flags&#39;,
&#39;rfc822.size&#39;,
&#39;envelope&#39;,
&#39;body&#39;)</code>.</p>
</li>

<li>fast
<p>A macro equivalent to <code>(&#39;flags&#39;,
&#39;internaldate&#39;,
&#39;rfc822.size&#39;)</code>.</p>
</li>
</ul>

<p>The <code>all</code>,
<code>full</code>,
and <code>fast</code> items are not intended to be used with other items.</p>

<p>If successful,
the server responses with one or more <code>fetch</code> responses.</p>

<p>If the completion response from a <code>fetch</code> command is <code>no</code>,
the client should send a <code>noop</code> command,
to force any pending expunge responses from the server,
and retry the <code>fetch</code> command with <code>$msgset</code> adjusted accordingly.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="store_$msgset,_$itemname,_@storeattrflags"
>store $msgset,
$itemname,
@storeattrflags</a></h2>

<p>Sets various attributes for the messages identified in <code>$msgset</code>.
This method is valid only when the session is in the selected state.</p>

<p>The <code>$msgset</code> parameter is described in the section describing <code>fetch</code>.</p>

<p>The <code>$itemname</code> can be one of the following:</p>

<ul>
<li>flags
<p>Replaces the current flags with the flags specified in <code>@storeattrflags</code>.</p>
</li>

<li>+flags
<p>Adds the flags specified in <code>@storeattrflags</code> to the current flags.</p>
</li>

<li>-flags
<p>Removes the flags specified in <code>@storeattrflags</code> from the current flags.</p>
</li>
</ul>

<p>The <code>$itemname</code> can also have <code>.silent</code> appended,
which causes the server to not send back update responses for the messages.</p>

<p>If successful,
and <code>.silent</code> is used used in <code>$itemname</code>,
the server response with a series of <code>fetch</code> responses reflecting the updates to the specified messages.</p>

<p>If the completion response from a <code>store</code> command is <code>no</code>,
the client should send a <code>noop</code> command,
to force any pending expunge responses from the server,
and retry the <code>store</code> command with <code>$msgset</code> adjusted accordingly.</p>

<p>The <code>@storeattrflags</code> is a list of flag strings.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="copy_$msgset,_$mailbox"
>copy $msgset,
$mailbox</a></h2>

<p>Copy the messages <code>$msgset</code> to the specified mailbox.
This method is valid only when the session is in the selected state.</p>

<p>The <code>$msgset</code> parameter is described in the section describing <code>fetch</code>.</p>

<p>If server returns a <code>no</code> response containing a <code>trycreate</code> response code,
this means <code>$mailbox</code> does not exist but the server thinks the command would have succeeded if the an appropriate <code>create</code> command was issued.
On the other hand,
failure with no <code>trycreate</code> response code generally means that a <code>create</code> should not be attempted.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="uid_copy_$msgset,_$mailbox"
>uid_copy $msgset,
$mailbox</a></h2>

<p>A variant of <code>copy</code> that uses UIDs in <code>$msgset</code>,
instead of message numbers.
This method is valid only when the session is in the selected state.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="uid_fetch_$msgset,_&#39;all&#39;|&#39;full&#39;|&#39;fast&#39;|$fetchattr|@fetchattrs"
>uid_fetch $msgset,
&#39;all&#39;|&#39;full&#39;|&#39;fast&#39;|$fetchattr|@fetchattrs</a></h2>

<p>A variant of <code>fetch</code> that uses UIDs,
instead of message numbers,
in <code>$msgset</code> and <code>fetch</code> responses.
This method is valid only when the session is in the selected state.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="uid_search_[Charset_=&#62;_$charset,]_@searchkeys"
>uid_search [Charset =&#62; $charset,] @searchkeys</a></h2>

<p>A variant of <code>search</code> that uses UIDs,
instead of message numbers,
in <code>$msgset</code> and <code>search</code> responses.
This method is valid only when the session is in the selected state.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="uid_store_$msgset,_$itemname,_@storeattrflags"
>uid_store $msgset,
$itemname,
@storeattrflags</a></h2>

<p>A variant of <code>store</code> that uses UIDs,
instead of message numbers,
in <code>$msgset</code> and <code>fetch</code> responses.
This method is valid only when the session is in the selected state.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="CONVENIENCE_ROUTINES"
>CONVENIENCE ROUTINES <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>In addition to the core protocol methods,
<code>Net::IMAP</code> provides several methods for accessing various pieces of information.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="is_preauth"
>is_preauth</a></h2>

<p>Returns a boolean valud indicating whether the IMAP session is preauthenticated.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="banner"
>banner</a></h2>

<p>Returns the banner string issued by the server at connect time.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="capabilities"
>capabilities</a></h2>

<p>Returns the list of capabilities supported by the server,
minus the authentication capabilities.
The list is not guaranteed to be in any specific order.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="has_capability_$capname"
>has_capability $capname</a></h2>

<p>Returns a boolean value indicating whether the server supports the specified capability.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="authtypes"
>authtypes</a></h2>

<p>Returns a list of authentication types supported by the server.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="has_authtype_$authname"
>has_authtype $authname</a></h2>

<p>Returns a boolean value indicating whether the server supports the specified authentication type.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="qty_messages"
>qty_messages</a></h2>

<p>Returns the quantity of messages in the currently selected folder.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="qty_recent"
>qty_recent</a></h2>

<p>Returns the quantity of recent messages in the currently selected folder.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="first_unseen"
>first_unseen</a></h2>

<p>Returns the message number of the first unseen messages in the currently selected folder.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="uidvalidity"
>uidvalidity</a></h2>

<p>Returns the <code>uidvalidity</code> value for the currently selected folder.
This is useful for IMAP clients that cache data in persistent storage.
Cache data for a mailbox should only be considered valid if the <code>uidvalidity</code> is the same for both cached data and the remote mailbox.
See Section 2.3.1.1 of RFC2060 for further details.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="uidnext"
>uidnext</a></h2>

<p>Returns the <code>uidnext</code> value for the currently selected folder.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="permanentflags"
>permanentflags</a></h2>

<p>Returns the list of permanent flags the server has identified for the currently open mailbox.</p>

<p>If a <code>\*</code> flag is present,
the server allows new persistent keywords to be created.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="is_permanentflag_$flag"
>is_permanentflag $flag</a></h2>

<p>Returns a boolean value indicating whether the server considers <code>$flag</code> to be a permanent flag.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="flags"
>flags</a></h2>

<p>Returns a list of the flags associated with the mailbox.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="has_flag_$flag"
>has_flag $flag</a></h2>

<p>Returns a boolean value indicating whether the given $flag is defined for the mailbox.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="mailbox"
>mailbox</a></h2>

<p>Returns the name of the currently open mailbox.
Returns <code>undef</code> if no mailbox is currently open.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="is_readonly"
>is_readonly</a></h2>

<p>Returns a boolean value indicating whether the currently open mailbox is read-only.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAMESPACE_EXTENSION"
>NAMESPACE EXTENSION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>The following methods are available if the server advertises support for RFC2342 (IMAP4 Namespace).
Refer to that RFC for additional information.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="namespace"
>namespace</a></h2>

<p>Sends a <code>namespace</code> command to the server,
if the server advertises support for the extension extension.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="ACCESS_CONTROL_EXTENSION"
>ACCESS CONTROL EXTENSION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>The following methods are available if the server advertises support for RFC2086 (IMAP4 ACL Extension).
Refer to that RFC for additional information.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="setacl_$mailbox,_$identifier,_$modrights"
>setacl $mailbox,
$identifier,
$modrights</a></h2>

<p>Sets the access control list for <code>$identifier</code> on <code>$mailbox</code> according to the rights contained in <code>$modrights</code>.</p>

<p>The <code>$identifier</code> typically identifies an account name,
but can also specify abstract entities,
such as groups.</p>

<p>The format for <code>$modrights</code> is documented in RFC2086.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="getacl_$mailbox"
>getacl $mailbox</a></h2>

<p>Retrieves the access control list for <code>$mailbox</code>.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="deleteacl_$mailbox,_$identifier"
>deleteacl $mailbox,
$identifier</a></h2>

<p>Deletes all access control list entries for <code>$identifier</code> from <code>$mailbox</code>.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="listrights_$mailbox,_$identifier"
>listrights $mailbox,
$identifier</a></h2>

<p>List the rights available to <code>$identifier</code> for <code>$mailbox</code>.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="myrights_$mailbox"
>myrights $mailbox</a></h2>

<p>List the rights the current user has for <code>$mailbox</code>.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="QUOTA_EXTENSION"
>QUOTA EXTENSION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>The following methods are available if the server advertises support for RFC2087 (IMAP4 Quota Extension).
Refer to that RFC for additional information.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="getquota_$quotaroot"
>getquota $quotaroot</a></h2>

<p>Lists the resource usage and limits for <code>$quotaroot</code>.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="setquota_$quotaroot,_@setquotalist"
>setquota $quotaroot,
@setquotalist</a></h2>

<p>Sets the resource limits for <code>$quotaroot</code> to <code>@setquotalist</code>.</p>

<p>Valid values for <code>@setquotalist</code> are server-dependant.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="getquotaroot_$mailbox"
>getquotaroot $mailbox</a></h2>

<p>Lists the quota roots for <code>$mailbox</code>.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="UIDPLUS_EXTENSION"
>UIDPLUS EXTENSION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>The following method is available if the server advertises support for RFC2359 (IMAP4 UIDPLUS Extension).
Refer to that RFC for additional information.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="uid_expunge_$msgset"
>uid_expunge $msgset</a></h2>

<p>A variant of <code>expunge</code> that allows the operation to be narrowed to the messages with UIDs specified in <code>$msgset</code>.</p>

<p>The <code>$msgset</code> parameter is described in the section describing <code>fetch</code>.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="CALLBACKS"
>CALLBACKS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Many of the command methods result in the server sending back response data.
<code>Net::IMAP</code> processes each response by parsing the data,
packages it in an appropriate object,
and optionally calls a programmer-defined callback for the response.
This callback mechanism is how programmers get access to the data retrieved from the server.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="set_untagged_callback_$item,_$coderef"
>set_untagged_callback $item,
$coderef</a></h2>

<p>Assigns a programmer-defined code reference to the associated untagged response.
When an untagged response matching <code>$item</code> is received,
<code>$coderef</code> is called,
with the IMAP object and the associated response object passed as parameters.</p>

<p>The default callback for the <code>ok</code>,
<code>bye</code>,
<code>bad</code>,
and <code>no</code> untagged responses includes code to output the text from <code>alert</code> responses to stderr,
using <code>carp</code>.
If you set your own callback for these responses,
be sure to code handle <code>alert</code> codes.
Per Section 7.1 of RFC2060,
clients are required to clearly display <code>alert</code> messages to users.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="RESPONSE_OBJECTS"
>RESPONSE OBJECTS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>As mention in the previous section,
responses are parsed and packaged into response objects,
which are then passed to callbacks.
Each type of response has a corresponding object class.
This section describes the various response objects provided.</p>

<p>All of the class names itemized below are prefixed with <code>Net::IMAP</code>.</p>

<p>As a general rule,
IMAP <code>nil</code> items are set to <code>undef</code> in the parsed data,
and IMAP parenthetical lists are converted to list references (of one form or another).
In addition,
atoms,
quoted strings,
and literals are presented as Perl strings.</p>

<p>The condition responses (<code>ok</code>,
<code>no</code>,
<code>bad</code>,
<code>bye</code>,
and <code>preauth</code>) can include a response code.
Refer to Section 7.1 in RFC2060 for a description of each of the standard response codes.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="Response"
>Response <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This is the object class for completion responses.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="is_tagged"
>is_tagged</a></h2>

<p>Returns a boolean value indicating whether the response is tagged.
In the case of tagged completion responses,
this value is always <code>1</code>.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="has_trycreate"
>has_trycreate</a></h2>

<p>Returns a boolean value indicating whether the <code>TRYCREATE</code> response code is present in the response.
This can be used after a failed <code>append</code> or <code>copy</code> command to determine whether the server thinks the operation would succeed if a <code>create</code> was issued for the associated mailbox.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="UntaggedResponse"
>UntaggedResponse <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This class is common to all untagged server responses.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="tag"
>tag</a></h2>

<p>Returns a string containing the tag associated with the response.
In the case of untagged responses,
this is always <code>*</code>.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="is_tagged"
>is_tagged</a></h2>

<p>Returns a boolean value indicating whether the response is tagged.
Obviously,
in the case of untagged responses,
this value is always <code>0</code>.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="parent"
>parent</a></h2>

<p>Returns a reference to the parent IMAP object.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="Ok"
>Ok <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This is a container for untagged <code>ok</code> responses from the server.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="code"
>code</a></h2>

<p>Returns a list reference containing response code elements in the response.
Returns <code>undef</code> if no response code is present.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="name"
>name</a></h2>

<p>Returns the name of the response.
In the case of <code>Ok</code>,
this returns &#39;ok&#39;.
This method is provided as a convenience for end-programmers wanting to write one common subroutine for one or more of the responses <code>Ok</code>,
<code>No</code>,
<code>Bad</code>,
and <code>Bye</code>.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="No"
>No <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This is a container for untagged <code>no</code> responses from the server.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="Bad"
>Bad <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This is a container for untagged <code>bad</code> responses from the server.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="Bye"
>Bye <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This is a container for untagged <code>bye</code> responses from the server.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="Expunge"
>Expunge <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This is a container for <code>expunge</code> responses from the server.</p>

<p>The information returned by <code>qty_messages</code> is automatically updated when <code>expunge</code> responses are received.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="msgnum"
>msgnum</a></h2>

<p>Returns the message number specified in the <code>expunge</code> response.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="Capability"
>Capability <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This is a container for <code>capability</code> responses.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="capabilities"
>capabilities</a></h2>

<p>Returns the list of capabilities supported by the server,
minus the authentication capabilities.
The list is not guaranteed to be in any specific order.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="has_capability_$capname"
>has_capability $capname</a></h2>

<p>Returns a boolean value indicating whether the server supports the specified capability.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="authtypes"
>authtypes</a></h2>

<p>Returns a list of authentication types supported by the server.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="has_authtype_$authname"
>has_authtype $authname</a></h2>

<p>Returns a boolean value indicating whether the server supports the specified authentication type.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="List"
>List <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This is a container for <code>list</code> responses.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="mailbox"
>mailbox</a></h2>

<p>Returns the name of the mailbox contained in the object.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="delimiter"
>delimiter</a></h2>

<p>Returns the hierarchy delimiter associated with the mailbox.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="flags"
>flags</a></h2>

<p>Returns a list of the flags associated with the mailbox.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="has_flag_$flag"
>has_flag $flag</a></h2>

<p>Returns a boolean value indicating whether the given $flag is defined for the mailbox.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="List"
>List <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This is a container for <code>lsub</code> responses.
It provides the same interface as the <code>Net::IMAP::List</code> class.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="Fetch"
>Fetch <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This is a container for <code>fetch</code> responses.</p>

<p>Responses for partial fetches bear special mention.
While both the starting byte and quantity of bytes are specified when doing partial fetches with the <code>fetch</code> command,
the corresponding response will only show the starting byte.
In other words,
the command <code>$imap-&#62;fetch(1,
&#39;body[]&#60;0.1024&#62;&#39;</code> will,
if successful,
result in a fetch response item of <code>body[]&#60;0&#62;</code> containing a 1024 octet value.
To match a given response for a partial fetch,
you might need to use <code>length</code> to match it up with the corresponding item specified in the <code>fetch</code> command.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="msgnum"
>msgnum</a></h2>

<p>Returns the message number identified in the response.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="items"
>items</a></h2>

<p>Returns the list of data item names contained in the response.
The list is not guaranteed to be in any specific order.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="item_$item"
>item $item</a></h2>

<p>Returns the data associated with the specified data item.</p>

<p>The following list enumerates the data types associated with each fetch item:</p>

<dl>
<dt><a name="envelope"
>envelope</a></dt>

<dd>
<p>Net::IMAP::Envelope</p>

<dt><a name="bodystructure"
>bodystructure</a></dt>

<dd>
<p>Net::IMAP::BodyStructure</p>

<dt><a name="body"
>body</a></dt>

<dd>
<p>Net::IMAP::BodyStructure</p>

<dt><a name="flags"
>flags</a></dt>

<dd>
<p>Net::IMAP::Flags</p>

<dt><a name="UID"
>UID</a></dt>

<dd>
<p>Integer</p>

<dt><a name='rfc822'></a><a name="rfc822.size"
>rfc822.size</a></dt>

<dd>
<p>Integer</p>

<dt><a name="default"
><i>default</i></a></dt>

<dd>
<p>String</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="Status"
>Status <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This is a container for <code>status</code> responses.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="mailbox"
>mailbox</a></h2>

<p>Returns a string containing the mailbox the status information is associated with.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="items"
>items</a></h2>

<p>Returns the list of status items contains in the status response.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="item_$item"
>item $item</a></h2>

<p>Returns the value of the <code>$item</code> status item.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="Search"
>Search <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This is a container for <code>search</code> responses.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="msgnums"
>msgnums</a></h2>

<p>Returns the list of message numbers contained in the response.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="Flags"
>Flags <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This is a container for <code>flags</code> responses.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="flags"
>flags</a></h2>

<p>Returns the list of flags contained in the response.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="has_flag_$flag"
>has_flag $flag</a></h2>

<p>Returns a boolean value indicating whether the specified flag is contained in the response.</p>

<p>As a convenience,
the information from the <code>flags</code> response is also stored in the parent <code>Net::IMAP</code> object,
and is available via <code>Net::IMAP</code> versions of the <code>flags</code> and <code>has_flags</code> methods.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="Exists"
>Exists <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This is a container for <code>exists</code> responses.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="exists"
>exists</a></h2>

<p>Returns the quantity of messages in the currently selected mailbox.</p>

<p>This is information is also available in the <code>qty_messages</code> method in the <code>Net::IMAP</code> class.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="Recent"
>Recent <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This is a container for <code>recent</code> responses.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="recent"
>recent</a></h2>

<p>Returns the number of messages with the <code>\recent</code> flag set.</p>

<p>This information is also available in the <code>qty_recent</code> method in the <code>Net::IMAP</code> class.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="Namespace"
>Namespace <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This is a container for <code>namespace</code> responses.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="personal_[$namespace]"
>personal [$namespace]</a></h2>

<p>With no argument specified,
returns a list of personal namespaces.
If <code>$namespace</code> is specified,
returns the delimiter character for the specific personal namespace.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="other_users_[$namespace]"
>other_users [$namespace]</a></h2>

<p>With no argument specified,
returns a list of other users&#39; namespaces.
If <code>$namespace</code> is specified,
returns the delimiter character for the specific other users&#39; namespace.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="shared_[$namespace]"
>shared [$namespace]</a></h2>

<p>With no argument specified,
returns a list of shared namespaces.
If <code>$namespace</code> is specified,
returns the delimiter character for the specific shared namespace.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="ACL"
>ACL <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This is a container for <code>acl</code> responses&#62;</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="mailbox"
>mailbox</a></h2>

<p>Returns the name of the mailbox associated with the given ACL data.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="identifiers"
>identifiers</a></h2>

<p>Returns a list of identifiers contained in the ACL data.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="identifier_$identifier"
>identifier $identifier</a></h2>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="Listrights"
>Listrights <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This is a container for <code>listrights</code> responses.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="mailbox"
>mailbox</a></h2>

<p>Returns the name of the mailbox associated with the given rights.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="identifier"
>identifier</a></h2>

<p>Returns a string containing the identifier associated with the rights.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="rights"
>rights</a></h2>

<p>Returns a string containing the rights contained in the response.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="Myrights"
>Myrights <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This is a container for <code>myrights</code> responses&#62;</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="mailbox"
>mailbox</a></h2>

<p>Returns the name of the mailbox associated with the given rights.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="rights"
>rights</a></h2>

<p>Returns a string containing the rights contained in the response.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="Quota"
>Quota <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This is a container for <code>quota</code> responses.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="quotaroot"
>quotaroot</a></h2>

<p>Returns a string containing the name of the quota root in the response.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="quotas"
>quotas</a></h2>

<p>Returns a list of the quotas contained in the response.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="usage_$quota"
>usage $quota</a></h2>

<p>Returns the usage value associated with the given <code>$quota</code>.
Returns <code>undef</code> is the given <code>$quota</code> is not present in the response.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="limit_$quota"
>limit $quota</a></h2>

<p>Returns the usage limit associated with the given <code>$quota</code>.
Returns <code>undef</code> is the given <code>$quota</code> is not present in the response.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="Quotaroot"
>Quotaroot <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This is a container for <code>quotaroot</code> responses.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="mailbox"
>mailbox</a></h2>

<p>Returns the name of the mailbox associated with the quotaroot data.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="quotaroots"
>quotaroots</a></h2>

<p>If called in an array context,
returns the list of quotaroots associated with the mailbox.
If called in a scalar context,
returns a list reference.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="MISC_FETCH_OBJECTS"
>MISC FETCH OBJECTS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>A <code>fetch</code> response can be relatively complicated.
This section documents various classes and methods associated with the various pieces of information available in <code>fetch</code> responses.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="BodyStructure"
>BodyStructure <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This is a container for <code>bodystructure</code> items in <code>fetch</code> responses.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="type"
>type</a></h2>

<p>Returns a string containing the MIME type of the message.
This is the left-hand portion of a MIME media type.
For example,
the type of <code>text/plain</code> is <code>text</code>.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="subtype"
>subtype</a></h2>

<p>Returns a string containing the MIME subtype of the message.
This is the right-hand portion of a MIME media type.
For example,
the subtype of <code>text/plain</code> is <code>plain</code>.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="parameters"
>parameters</a></h2>

<p>Returns a reference to a hash containing the key/value attribute pairs in the <code>Content-Type</code> field.</p>

<p>If,
for example,
the <code>Content-Type</code> field was:</p>

<pre class="sh_perl">  Content-Type: text/plain; charset=us-ascii</pre>

<p>The hash would contain one entry the a key of <code>charset</code>, and a value of <code>us-ascii</code>. The key is always forced to be lowercase, but the case of the value is retained from the server.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="disposition"
>disposition</a></h2>

<p>Returns the disposition type in the <code>Content-Disposition</code> field. Returns <code>undef</code> if no such field exists.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="disp_parameters"
>disp_parameters</a></h2>

<p>Returns a reference to a hash containing the key/value attributer pairs in the <code>Content-Disposition</code> field. A reference to an empty hash is returned if no such field exists, or if there are no parameters in the field.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="language"
>language</a></h2>

<p>Returns a reference to a list of the language tags present in the <code>Content-Language</code> field. Returns a reference to an empty hash if no such field is present.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="Multipart"
>Multipart <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This is a container for <code>BodyStructure objects that are multipart entities.</code></p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="parts"
>parts</a></h2>

<p>Returns a list reference of the body parts contained in the multipart entity.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="Bodypart"
>Bodypart <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This is a container for singlepart entities in <code>BodyStructure</code> and <code>Multipart</code> objects.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="id"
>id</a></h2>

<p>Return a string containing the contents of the <code>Content-ID</code> field, if one is present, otherwise returns undef.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="description"
>description</a></h2>

<p>Return a string containing the contents of the <code>Content-Description</code> field, if one is present, otherwise returns undef.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="encoding"
>encoding</a></h2>

<p>Returns a string containing the contents of the <code>Content-Transfer-Encoding</code> field. Returns <code>undef</code> if no such field is in the entity.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="size"
>size</a></h2>

<p>Returns the number of octets in the entity.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="lines"
>lines</a></h2>

<p>If the MIME content type is <code>message/rfc822</code> or the major type is <code>text</code>, returns the number of lines in the entity, else returns <code>undef</code>.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="envelope"
>envelope</a></h2>

<p>If the MIME content type is <code>message/rfc822, returns a <code>Net::IMAP::Envelope</code> object, otherwise returns undef.</code></p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="bodystructure"
>bodystructure</a></h2>

<p>If the MIME content type is <code>message/rfc822, returns a <code>Net::IMAP::BodyStructure</code> object, otherwise returns undef.</code></p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="md5"
>md5</a></h2>

<p>Returns a string containing the contents of the <code>Content-MD5</code> field. Returns <code>undef</code> if no such field is in the entity.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="Envelope"
>Envelope <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This is a container for envelope data in <code>fetch</code> responses.</p>

<p>For those familiar with SMTP, this is not the same type envelope. Rather, it is a composite structure containing key source, destination, and reference information in the message. When retrieved from the server, it is populated into a <code>Net::IMAP::Envelope</code> object. The following methods are available.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="date"
>date</a></h2>

<p>Returns a string with the contents of the <code>Date</code> field.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="subject"
>subject</a></h2>

<p>Returns a string with the contents of the <code>Subject</code> field.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="from"
>from</a></h2>

<p>Returns a list reference of <code>Net::IMAP::Addr</code> objects with the contents of the <code>From</code> field.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="sender"
>sender</a></h2>

<p>Returns a list reference of <code>Net::IMAP::Addr</code> objects with the contents of the <code>Sender</code> field. If no <code>Sender</code> field is present in the message, the server will default it to the contents of the <code>From</code> field.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="reply_to"
>reply_to</a></h2>

<p>Returns a list reference of <code>Net::IMAP::Addr</code> objects with the contents of the <code>Reply-To</code> field. If no <code>Reply-To</code> field is present in the message, the server will default it to the contents of the <code>From</code> field.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="to"
>to</a></h2>

<p>Returns a list reference of <code>Net::IMAP::Addr</code> objects with the contents of the <code>To</code>field. Will return <code>undef</code> if no <code>To</code> field exists in the message.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="cc"
>cc</a></h2>

<p>Returns a list reference of <code>Net::IMAP::Addr</code> objects with the contents of the <code>Cc</code> field. Will return <code>undef</code> if no <code>Cc</code> field exists in the message.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="bcc"
>bcc</a></h2>

<p>Returns a list reference of <code>Net::IMAP::Addr</code> objects with the contents of the <code>Bcc</code> field. Will return <code>undef</code> if no <code>Bcc</code> field exists in the message.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="in_reply_to"
>in_reply_to</a></h2>

<p>Returns a string with the contents of the <code>In-Reply-To</code> field. Returns <code>undef</code> if no such field is present in the message.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="message_id"
>message_id</a></h2>

<p>Returns a string with the contents of the <code>Date</code> field. Returns <code>undef</code> if no such field is present in the message.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="Addr"
>Addr <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This is a container for address structures in <code>Envelope</code> objects.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="phrase"
>phrase</a></h2>

<p>Returns a string containing the phrase portion of the address, or <code>undef</code> if no phrase is present.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="route"
>route</a></h2>

<p>Returns a string containing the route portion of the address, or <code>undef</code> if no route information is present.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="localpart"
>localpart</a></h2>

<p>Returns a string containing the localpart portion of the address, or <code>undef</code> if no localpart is present.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="domain"
>domain</a></h2>

<p>Returns a string containing the domain portion of the address, or <code>undef</code> if no domain is present.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="as_string"
>as_string</a></h2>

<p>Returns a string representation of the contents of the object.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="CAVEATS"
>CAVEATS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Minimal testing has been done against the various IMAP server implementations. Refer to <code>BUGS</code> for known bugs/malfeatures.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHOR"
>AUTHOR <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Kevin Johnson &#60;<em>kjj@pobox.com</em>&#62;</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="COPYRIGHT"
>COPYRIGHT <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Copyright (c) 1997-1999 Kevin Johnson &#60;kjj@pobox.com&#62;.</p>

<p>All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78269 Uploads, 24722 Distributions
105999 Modules, 9649 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Fri Apr 27 16:52:31 2012 GMT (0.192662954330444) @cpansearch1 -->
 </body>
</html>
