<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>IPC::Cache - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","IPC-Cache",3]);
    _gaq.push(["_setCustomVar",5,"Release","IPC-Cache-0.02",3]);
    _gaq.push(["_setCustomVar",3,"Module","IPC::Cache",3]);
    _gaq.push(["_setCustomVar",1,"Author","DCLINTON",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?IPC::Cache">permalink</a></div>
  <a href="/~dclinton/">DeWitt Clinton</a> &gt;
  <a href="/~dclinton/IPC-Cache-0.02/">IPC-Cache-0.02</a> &gt;
  IPC::Cache
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/ba46313d627247be4b9e17a5a04e283b?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/D/DC/DCLINTON/IPC-Cache-0.02.tar.gz">IPC-Cache-0.02.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=IPC%3A%3ACache;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~DCLINTON/IPC-Cache-0.02/Cache.pm">Annotate this POD
</a></p>
<div class=box style='width:150px; float: right'>
<h1 class=t5>Related Modules</h1>
<div style="margin:2px">
<a href="/perldoc?IO%3A%3ASelect">IO::Select</a><br>
<a href="/perldoc?IPC%3A%3ARun">IPC::Run</a><br>
<a href="/perldoc?Apache%3A%3AASP">Apache::ASP</a><br>
<a href="/perldoc?IPC%3A%3AShareable">IPC::Shareable</a><br>
<a href="/perldoc?XML%3A%3ASimple">XML::Simple</a><br>
<small>
<a href="http://perlmonks.org/?node=cpan+module+search&pivot=1&module=IPC%3A%3ACache">more...</a><br>
By <a href="http://perlmonks.org/">perlmonks.org</a></small>
</div>
</div>

<div style="float:right">
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=IPC-Cache">View/Report Bugs</a><br/>

</div>
</div>
  Module Version:  0.02 &nbsp;
<span class="noprint">
  <a href="/src/DCLINTON/IPC-Cache-0.02/Cache.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#TYPICAL_USAGE'>TYPICAL USAGE</a>
    <li class='indexItem indexItem2'><a href='#METHODS'>METHODS</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#BUGS'>BUGS</a>
  <li class='indexItem indexItem1'><a href='#AUTHOR'>AUTHOR</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><b>IPC::Cache</b> - a perl module that implements an object storage space where data is persisted across process boundaries</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>use IPC::Cache;</p>

<p># create a cache in the specified namespace,
where objects # will expire in one day</p>

<p>my $cache = new Cache( { namespace =&#62; &#39;MyCache&#39;,
expires_in =&#62; 86400 } );</p>

<p># store a value in the cache (will expire in one day)</p>

<p>$cache-&#62;set(&#34;key1&#34;,
&#34;value1&#34;);</p>

<p># retrieve a value from the cache</p>

<p>$cache-&#62;get(&#34;key1&#34;);</p>

<p># store a value that expires in one hour</p>

<p>$cache-&#62;set(&#34;key2&#34;,
&#34;value2&#34;,
3600);</p>

<p># clear this cache&#39;s contents</p>

<p>$cache-&#62;clear();</p>

<p># delete all namespaces from shared memory</p>

<p>IPC::Cache::CLEAR();</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>IPC::Cache is used to persist data across processes via shared memory.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="TYPICAL_USAGE"
>TYPICAL USAGE</a></h2>

<p>A typical scenario for this would be a mod_perl or perl CGI application.
In a multi-tier architecture,
it is likely that a trip from the front-end to the database is the most expensive operation,
and that data may not change frequently.
Using this module will help keep that data on the front-end.</p>

<p>Consider the following usage in a mod_perl application,
where a mod_perl application serves out images that are retrieved from a database.
Those images change infrequently,
but we want to check them once an hour,
just in case.</p>

<p>my $cache = new Cache( { namespace =&#62; &#39;Images&#39;,
expires_in =&#62; 3600 } );</p>

<p>my $image = $imageCache-&#62;get(&#34;the_requested_image&#34;);</p>

<p>if (!$image) {</p>

<pre class="sh_perl">    # $image = [expensive database call to get the image]

    $cache-&#62;set(&#34;the_requested_image&#34;, $image);</pre>

<p>}</p>

<p>That bit of code, executed in any instance of the mod_perl/httpd process will first try the shared memory cache, and only perform the expensive database call if the image has not been fetched before, has timed out, or the cache has been cleared.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="METHODS"
>METHODS</a></h2>

<dl>
<dt><a name='new'></a><a name="new(\%options)"
><b>new(\%options)</b></a></dt>

<dd>
<p>Creates a new instance of the cache object. The constructor takes a reference to an options hash which can contain any or all of the following:</p>

<dl>
<dt><a name='options'></a><a name="$options{namespace}"
>$options{namespace}</a></dt>

<dd>
<p>Namespaces provide isolation between objects. Each cache refers to one and only one namespace. Multiple caches can refer to the same namespace, however. While specifying a namespace is not required, it is recommended so as not to have data collide.</p>

<dt><a name='options'></a><a name="$options{expires_in}"
>$options{expires_in}</a></dt>

<dd>
<p>If the &#34;expires_in&#34; option is set, all objects in this cache will be cleared in that number of seconds. It can be overridden on a per-object basis. If expires_in is not set, the objects will never expire unless explicitly set.</p>

<dt><a name='options'></a><a name="$options{cache_key}"
>$options{cache_key}</a></dt>

<dd>
<p>The &#34;cache_key&#34; is used to determine the underlying shared memory segment to use. In typical usage, leaving this unset and relying on namespaces alone will be more than adequate.</p>
</dd>
</dl>

<dt><a name='set'></a><a name="set($identifier,_$object,_$expires_in)"
><b>set($identifier, $object, $expires_in)</b></a></dt>

<dd>
<p>Adds an object to the cache. set takes the following parameters:</p>

<dl>
<dt><a name='identifier'></a><a name="$identifier"
>$identifier</a></dt>

<dd>
<p>The key the refers to this object.</p>

<dt><a name='object'></a><a name="$object"
>$object</a></dt>

<dd>
<p>The object to be stored.</p>

<dt><a name='expires_in'></a><a name="$expires_in_(optional)"
>$expires_in <i>(optional)</i></a></dt>

<dd>
<p>The object will be cleared from the cache in this number of seconds. Overrides the default expire_in for the cache.</p>
</dd>
</dl>

<dt><a name='get'></a><a name="get($identifier)"
><b>get($identifier)</b></a></dt>

<dd>
<p>Retrieves an object from the cache. get takes the following parameter:</p>

<dl>
<dt><a name='identifier'></a><a name="$identifier"
>$identifier</a></dt>

<dd>
<p>The key referring to the object to be retrieved.</p>
</dd>
</dl>

<dt><a name='clear'></a><a name="clear()"
><b>clear()</b></a></dt>

<dd>
<p>Removes all objects from this cache.</p>

<dt><a name='purge'></a><a name="purge()"
><b>purge()</b></a></dt>

<dd>
<p>Removes all objects that have expired</p>

<dt><a name='IPC'></a><a name="IPC::Cache::CLEAR($cache_key)"
><b>IPC::Cache::CLEAR($cache_key)</b></a></dt>

<dd>
<p>Removes this cache and all the associated namespaces from shared memory. CLEAR takes the following parameter:</p>

<dl>
<dt><a name='cache_key'></a><a name="$cache_key_(optional)"
>$cache_key <i>(optional)</i></a></dt>

<dd>
<p>Specifies the shared memory segment to be cleared. Needed only if a cache was created in a non-standard shared memory segment.</p>
</dd>
</dl>

<dt><a name='IPC'></a><a name="IPC::Cache::PURGE($cache_key)"
><b>IPC::Cache::PURGE($cache_key)</b></a></dt>

<dd>
<p>Removes all objects in all namespaces that have expired. PURGE takes the following parameter:</p>

<dl>
<dt><a name='cache_key'></a><a name="$cache_key_(optional)"
>$cache_key <i>(optional)</i></a></dt>

<dd>
<p>Specifies the shared memory segment to be purged. Needed only if a cache was created in a non-standard shared memory segment.</p>
</dd>
</dl>

<dt><a name='IPC'></a><a name="IPC::Cache::SIZE($cache_key)"
><b>IPC::Cache::SIZE($cache_key)</b></a></dt>

<dd>
<p>Roughly estimates the amount of memory in use. SIZE takes the following parameter:</p>

<dl>
<dt><a name='cache_key'></a><a name="$cache_key_(optional)"
>$cache_key <i>(optional)</i></a></dt>

<dd>
<p>Specifies the shared memory segment to be examined. Needed only if a cache was created in a non-standard shared memory segment.</p>
</dd>
</dl>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="BUGS"
>BUGS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<ul>
<li>The SIZE method estimates only the size of the frozen data, not the actual shared memory usage</li>

<li>There is no mechanism for limiting the amount of memory in use</li>
</ul>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHOR"
>AUTHOR <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>DeWitt Clinton &#60;dclinton@eziba.com&#62;</p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78269 Uploads, 24724 Distributions
106002 Modules, 9649 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Fri Apr 27 23:13:08 2012 GMT (0.627699136734009) @cpansearch1 -->
 </body>
</html>
