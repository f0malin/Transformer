<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>Net::POP3 - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","libnet",3]);
    _gaq.push(["_setCustomVar",5,"Release","libnet-1.22",3]);
    _gaq.push(["_setCustomVar",3,"Module","Net::POP3",3]);
    _gaq.push(["_setCustomVar",1,"Author","GBARR",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?Net::POP3">permalink</a></div>
  <a href="/~gbarr/">Graham Barr</a> &gt;
  <a href="/~gbarr/libnet-1.22/">libnet-1.22</a> &gt;
  Net::POP3
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/91e0a99c0201988cad4e53833c8aa2b5?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/G/GB/GBARR/libnet-1.22.tar.gz">libnet-1.22.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=Net%3A%3APOP3;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~GBARR/libnet-1.22/Net/POP3.pm">Annotate this POD
(2)
</a></p>
<div class=box style='width:150px; float: right'>
<h1 class=t5>Related Modules</h1>
<div style="margin:2px">
<a href="/perldoc?Net%3A%3ASMTP">Net::SMTP</a><br>
<a href="/perldoc?Mail%3A%3APOP3Client">Mail::POP3Client</a><br>
<a href="/perldoc?Mail%3A%3ABox">Mail::Box</a><br>
<a href="/perldoc?Mail%3A%3ASender">Mail::Sender</a><br>
<a href="/perldoc?MIME%3A%3ALite">MIME::Lite</a><br>
<a href="/perldoc?MIME%3A%3AParser">MIME::Parser</a><br>
<a href="/perldoc?IO%3A%3ASocket">IO::Socket</a><br>
<a href="/perldoc?Mail%3A%3ASendmail">Mail::Sendmail</a><br>
<a href="/perldoc?Win32%3A%3AOLE">Win32::OLE</a><br>
<a href="/perldoc?Mail%3A%3AInternet">Mail::Internet</a><br>
<small>
<a href="http://perlmonks.org/?node=cpan+module+search&pivot=1&module=Net%3A%3APOP3">more...</a><br>
By <a href="http://perlmonks.org/">perlmonks.org</a></small>
</div>
</div>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>New&nbsp;</td><td style="text-align:right"> 27</td></tr>
<tr><td>Open&nbsp;</td><td style="text-align:right"> 18</td></tr>
<tr><td>Stalled&nbsp;</td><td style="text-align:right"> 1</td></tr>
</table>
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=libnet">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  2.29 &nbsp;
<span class="noprint">
  <a href="/src/GBARR/libnet-1.22/Net/POP3.pm">Source</a> &nbsp;
  Latest&nbsp;Release:&nbsp;<a href="/~gbarr/libnet/Net/POP3.pm">libnet-1.22_01</a>
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <li class='indexItem indexItem1'><a href='#CONSTRUCTOR'>CONSTRUCTOR</a>
  <li class='indexItem indexItem1'><a href='#METHODS'>METHODS</a>
  <li class='indexItem indexItem1'><a href='#NOTES'>NOTES</a>
  <li class='indexItem indexItem1'><a href='#SEE_ALSO'>SEE ALSO</a>
  <li class='indexItem indexItem1'><a href='#AUTHOR'>AUTHOR</a>
  <li class='indexItem indexItem1'><a href='#COPYRIGHT'>COPYRIGHT</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Net::POP3 - Post Office Protocol 3 Client class (RFC1939)</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">    use Net::POP3;

    # Constructors
    $pop = Net::POP3-&#62;new(&#39;pop3host&#39;);
    $pop = Net::POP3-&#62;new(&#39;pop3host&#39;, Timeout =&#62; 60);

    if ($pop-&#62;login($username, $password) &#62; 0) {
      my $msgnums = $pop-&#62;list; # hashref of msgnum =&#62; size
      foreach my $msgnum (keys %$msgnums) {
        my $msg = $pop-&#62;get($msgnum);
        print @$msg;
        $pop-&#62;delete($msgnum);
      }
    }

    $pop-&#62;quit;</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This module implements a client interface to the POP3 protocol, enabling a perl5 application to talk to POP3 servers. This documentation assumes that you are familiar with the POP3 protocol described in RFC1939.</p>

<p>A new Net::POP3 object must be created with the <i>new</i> method. Once this has been done, all POP3 commands are accessed via method calls on the object.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="CONSTRUCTOR"
>CONSTRUCTOR <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<dl>
<dt><a name='new'></a><a name="new_(_[_HOST_]_[,_OPTIONS_]_0"
>new ( [ HOST ] [, OPTIONS ] 0</a></dt>

<dd>
<p>This is the constructor for a new Net::POP3 object. <code>HOST</code> is the name of the remote host to which an POP3 connection is required.</p>

<p><code>HOST</code> is optional. If <code>HOST</code> is not given then it may instead be passed as the <code>Host</code> option described below. If neither is given then the <code>POP3_Hosts</code> specified in <code>Net::Config</code> will be used.</p>

<p><code>OPTIONS</code> are passed in a hash like fashion, using key and value pairs. Possible options are:</p>

<p><b>Host</b> - POP3 host to connect to. It may be a single scalar, as defined for the <code>PeerAddr</code> option in <a href="/perldoc?IO%3A%3ASocket%3A%3AINET" class="podlinkpod"
>IO::Socket::INET</a>, or a reference to an array with hosts to try in turn. The <a href="#host" class="podlinkpod"
>&#34;host&#34;</a> method will return the value which was used to connect to the host.</p>

<p><b>ResvPort</b> - If given then the socket for the <code>Net::POP3</code> object will be bound to the local port given using <code>bind</code> when the socket is created.</p>

<p><b>Timeout</b> - Maximum time, in seconds, to wait for a response from the POP3 server (default: 120)</p>

<p><b>Debug</b> - Enable debugging information</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="METHODS"
>METHODS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Unless otherwise stated all methods return either a <i>true</i> or <i>false</i> value, with <i>true</i> meaning that the operation was a success. When a method states that it returns a value, failure will be returned as <i>undef</i> or an empty list.</p>

<dl>
<dt><a name='auth'></a><a name="auth_(_USERNAME,_PASSWORD_)"
>auth ( USERNAME, PASSWORD )</a></dt>

<dd>
<p>Attempt SASL authentication.</p>

<dt><a name='user'></a><a name="user_(_USER_)"
>user ( USER )</a></dt>

<dd>
<p>Send the USER command.</p>

<dt><a name='pass'></a><a name="pass_(_PASS_)"
>pass ( PASS )</a></dt>

<dd>
<p>Send the PASS command. Returns the number of messages in the mailbox.</p>

<dt><a name='login'></a><a name="login_(_[_USER_[,_PASS_]]_)"
>login ( [ USER [, PASS ]] )</a></dt>

<dd>
<p>Send both the USER and PASS commands. If <code>PASS</code> is not given the <code>Net::POP3</code> uses <code>Net::Netrc</code> to lookup the password using the host and username. If the username is not specified then the current user name will be used.</p>

<p>Returns the number of messages in the mailbox. However if there are no messages on the server the string <code>&#34;0E0&#34;</code> will be returned. This is will give a true value in a boolean context, but zero in a numeric context.</p>

<p>If there was an error authenticating the user then <i>undef</i> will be returned.</p>

<dt><a name='apop'></a><a name="apop_(_[_USER_[,_PASS_]]_)"
>apop ( [ USER [, PASS ]] )</a></dt>

<dd>
<p>Authenticate with the server identifying as <code>USER</code> with password <code>PASS</code>. Similar to <a href="#login" class="podlinkpod"
>&#34;login&#34;</a>, but the password is not sent in clear text.</p>

<p>To use this method you must have the Digest::MD5 or the MD5 module installed, otherwise this method will return <i>undef</i>.</p>

<dt><a name='banner'></a><a name="banner_()"
>banner ()</a></dt>

<dd>
<p>Return the sever&#39;s connection banner</p>

<dt><a name='capa'></a><a name="capa_()"
>capa ()</a></dt>

<dd>
<p>Return a reference to a hash of the capabilities of the server. APOP is added as a pseudo capability. Note that I&#39;ve been unable to find a list of the standard capability values, and some appear to be multi-word and some are not. We make an attempt at intelligently parsing them, but it may not be correct.</p>

<dt><a name='capabilities'></a><a name="capabilities_()"
>capabilities ()</a></dt>

<dd>
<p>Just like capa, but only uses a cache from the last time we asked the server, so as to avoid asking more than once.</p>

<dt><a name='top'></a><a name="top_(_MSGNUM_[,_NUMLINES_]_)"
>top ( MSGNUM [, NUMLINES ] )</a></dt>

<dd>
<p>Get the header and the first <code>NUMLINES</code> of the body for the message <code>MSGNUM</code>. Returns a reference to an array which contains the lines of text read from the server.</p>

<dt><a name='list'></a><a name="list_(_[_MSGNUM_]_)"
>list ( [ MSGNUM ] )</a></dt>

<dd>
<p>If called with an argument the <code>list</code> returns the size of the message in octets.</p>

<p>If called without arguments a reference to a hash is returned. The keys will be the <code>MSGNUM</code>&#39;s of all undeleted messages and the values will be their size in octets.</p>

<dt><a name='get'></a><a name="get_(_MSGNUM_[,_FH_]_)"
>get ( MSGNUM [, FH ] )</a></dt>

<dd>
<p>Get the message <code>MSGNUM</code> from the remote mailbox. If <code>FH</code> is not given then get returns a reference to an array which contains the lines of text read from the server. If <code>FH</code> is given then the lines returned from the server are printed to the filehandle <code>FH</code>.</p>

<dt><a name='getfh'></a><a name="getfh_(_MSGNUM_)"
>getfh ( MSGNUM )</a></dt>

<dd>
<p>As per get(), but returns a tied filehandle. Reading from this filehandle returns the requested message. The filehandle will return EOF at the end of the message and should not be reused.</p>

<dt><a name='last'></a><a name="last_()"
>last ()</a></dt>

<dd>
<p>Returns the highest <code>MSGNUM</code> of all the messages accessed.</p>

<dt><a name='popstat'></a><a name="popstat_()"
>popstat ()</a></dt>

<dd>
<p>Returns a list of two elements. These are the number of undeleted elements and the size of the mbox in octets.</p>

<dt><a name='ping'></a><a name="ping_(_USER_)"
>ping ( USER )</a></dt>

<dd>
<p>Returns a list of two elements. These are the number of new messages and the total number of messages for <code>USER</code>.</p>

<dt><a name='uidl'></a><a name="uidl_(_[_MSGNUM_]_)"
>uidl ( [ MSGNUM ] )</a></dt>

<dd>
<p>Returns a unique identifier for <code>MSGNUM</code> if given. If <code>MSGNUM</code> is not given <code>uidl</code> returns a reference to a hash where the keys are the message numbers and the values are the unique identifiers.</p>

<dt><a name='delete'></a><a name="delete_(_MSGNUM_)"
>delete ( MSGNUM )</a></dt>

<dd>
<p>Mark message <code>MSGNUM</code> to be deleted from the remote mailbox. All messages that are marked to be deleted will be removed from the remote mailbox when the server connection closed.</p>

<dt><a name='reset'></a><a name="reset_()"
>reset ()</a></dt>

<dd>
<p>Reset the status of the remote POP3 server. This includes resetting the status of all messages to not be deleted.</p>

<dt><a name='quit'></a><a name="quit_()"
>quit ()</a></dt>

<dd>
<p>Quit and close the connection to the remote POP3 server. Any messages marked as deleted will be deleted from the remote mailbox.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NOTES"
>NOTES <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>If a <code>Net::POP3</code> object goes out of scope before <code>quit</code> method is called then the <code>reset</code> method will called before the connection is closed. This means that any messages marked to be deleted will not be.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SEE_ALSO"
>SEE ALSO <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><a href="/~gbarr/libnet-1.22/Net/Netrc.pm" class="podlinkpod"
>Net::Netrc</a>, <a href="/~gbarr/libnet-1.22/Net/Cmd.pm" class="podlinkpod"
>Net::Cmd</a></p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHOR"
>AUTHOR <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Graham Barr &#60;gbarr@pobox.com&#62;</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="COPYRIGHT"
>COPYRIGHT <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Copyright (c) 1995-2003 Graham Barr. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78269 Uploads, 24722 Distributions
105999 Modules, 9649 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Fri Apr 27 17:37:50 2012 GMT (0.157541036605835) @cpansearch1 -->
 </body>
</html>
