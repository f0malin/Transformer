<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>Win32::ODBC - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","Win32-ODBC",3]);
    _gaq.push(["_setCustomVar",5,"Release","Win32-ODBC-0.034",3]);
    _gaq.push(["_setCustomVar",3,"Module","Win32::ODBC",3]);
    _gaq.push(["_setCustomVar",1,"Author","JDB",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?Win32::ODBC">permalink</a></div>
  <a href="/~jdb/">Jan Dubois</a> &gt;
  <a href="/~jdb/Win32-ODBC-0.034/">Win32-ODBC-0.034</a> &gt;
  Win32::ODBC
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/b9464f2c68f7d9e5337623051a0b1c39?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/J/JD/JDB/Win32-ODBC-0.034.tar.gz">Win32-ODBC-0.034.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=Win32%3A%3AODBC;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~JDB/Win32-ODBC-0.034/ODBC.pm">Annotate this POD
</a></p>
     <p style="text-align:right"><a href="http://code.google.com/p/libwin32/">Website</a></p>
<div class=box style='width:150px; float: right'>
<h1 class=t5>Related Modules</h1>
<div style="margin:2px">
<a href="/perldoc?DBD%3A%3AODBC">DBD::ODBC</a><br>
<a href="/perldoc?Win32%3A%3AOLE">Win32::OLE</a><br>
<a href="/perldoc?Net%3A%3APing">Net::Ping</a><br>
<a href="/perldoc?Data%3A%3ADumper">Data::Dumper</a><br>
<a href="/perldoc?Win32%3A%3AAPI">Win32::API</a><br>
<a href="/perldoc?DBD%3A%3ASybase">DBD::Sybase</a><br>
<a href="/perldoc?CGI%3A%3ACarp">CGI::Carp</a><br>
<a href="/perldoc?DBD%3A%3AADO">DBD::ADO</a><br>
<a href="/perldoc?File%3A%3AFind">File::Find</a><br>
<a href="/perldoc?Class%3A%3ADBI">Class::DBI</a><br>
<small>
<a href="http://perlmonks.org/?node=cpan+module+search&pivot=1&module=Win32%3A%3AODBC">more...</a><br>
By <a href="http://perlmonks.org/">perlmonks.org</a></small>
</div>
</div>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>New&nbsp;</td><td style="text-align:right"> 1</td></tr>
<tr><td>Open&nbsp;</td><td style="text-align:right"> 1</td></tr>
</table>
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=Win32-ODBC">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  0.034 &nbsp;
<span class="noprint">
  <a href="/src/JDB/Win32-ODBC-0.034/ODBC.pm">Source</a> &nbsp;
  Latest&nbsp;Release:&nbsp;<a href="/~xlat/Win32-ODBC/ODBC.pm">Win32-ODBC-0.035-withoutworldwriteables</a>
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#Background'>Background</a>
    <li class='indexItem indexItem2'><a href='#Benefits'>Benefits</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#CONSTANTS'>CONSTANTS</a>
  <li class='indexItem indexItem1'><a href='#SPECIAL_NOTATION'>SPECIAL NOTATION</a>
  <li class='indexItem indexItem1'><a href='#CONSTRUCTOR'>CONSTRUCTOR</a>
  <li class='indexItem indexItem1'><a href='#METHODS'>METHODS</a>
  <li class='indexItem indexItem1'><a href='#LIMITATIONS'>LIMITATIONS</a>
  <li class='indexItem indexItem1'><a href='#INSTALLATION_NOTES'>INSTALLATION NOTES</a>
  <li class='indexItem indexItem1'><a href='#OTHER_DOCUMENTATION'>OTHER DOCUMENTATION</a>
  <li class='indexItem indexItem1'><a href='#AUTHOR'>AUTHOR</a>
  <li class='indexItem indexItem1'><a href='#CREDITS'>CREDITS</a>
  <li class='indexItem indexItem1'><a href='#DISCLAIMER'>DISCLAIMER</a>
  <li class='indexItem indexItem1'><a href='#HISTORY'>HISTORY</a>
  <li class='indexItem indexItem1'><a href='#COPYRIGHT'>COPYRIGHT</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Win32::ODBC - ODBC Extension for Win32</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>To use this module,
include the following statement at the top of your script:</p>

<pre class="sh_perl">    use Win32::ODBC;</pre>

<p>Next, create a data connection to your DSN:</p>

<pre class="sh_perl">    $Data = new Win32::ODBC(&#34;MyDSN&#34;);</pre>

<p><b>NOTE</b>: <i>MyDSN</i> can be either the <i>DSN</i> as defined in the ODBC Administrator, <i>or</i> it can be an honest-to-God <i>DSN Connect String</i>.</p>

<pre class="sh_perl">    Example: &#34;DSN=My Database;UID=Brown Cow;PWD=Moo;&#34;</pre>

<p>You should check to see if <code>$Data</code> is indeed defined, otherwise there has been an error.</p>

<p>You can now send SQL queries and retrieve info to your heart&#39;s content! See the description of the methods provided by this module below and also the file <em>TEST.PL</em> as referred to in <a href="#INSTALLATION_NOTES" class="podlinkpod"
>&#34;INSTALLATION NOTES&#34;</a> to see how it all works.</p>

<p>Finally, <b>MAKE SURE</b> that you close your connection when you are finished:</p>

<pre class="sh_perl">    $Data-&#62;Close();</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Background"
>Background</a></h2>

<p>This is a hack of Dan DeMaggio&#39;s &#60;dmag@umich.edu&#62; <em>NTXS.C</em> ODBC implementation. I have recoded and restructured most of it including most of the <em>ODBC.PM</em> package, but its very core is still based on Dan&#39;s code (thanks Dan!).</p>

<p>The history of this extension is found in the file <em>HISTORY.TXT</em> that comes with the original archive (see <a href="#INSTALLATION_NOTES" class="podlinkpod"
>&#34;INSTALLATION NOTES&#34;</a> below).</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Benefits"
>Benefits</a></h2>

<p>And what are the benefits of this module?</p>

<ul>
<li>The number of ODBC connections is limited by memory and ODBC itself (have as many as you want!).</li>

<li>The working limit for the size of a field is 10,240 bytes, but you can increase that limit (if needed) to a max of 2,147,483,647 bytes. (You can always recompile to increase the max limit.)</li>

<li>You can open a connection by either specifing a DSN or a connection string!</li>

<li>You can open and close the connections in any order!</li>

<li>Other things that I can not think of right now... :)</li>
</ul>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="CONSTANTS"
>CONSTANTS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This package defines a number of constants. You may refer to each of these constants using the notation <code>ODBC::xxxxx</code>, where <code>xxxxx</code> is the constant.</p>

<p>Example:</p>

<pre class="sh_perl">   print ODBC::SQL_SQL_COLUMN_NAME, &#34;\n&#34;;</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SPECIAL_NOTATION"
>SPECIAL NOTATION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>For the method documentation that follows, an <b>*</b> following the method parameters indicates that that method is new or has been modified for this version.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="CONSTRUCTOR"
>CONSTRUCTOR <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<dl>
<dt><a name='new'></a><a name="new_(_ODBC_OBJECT_|_DSN_[,_(OPTION1,_VALUE1),_(OPTION2,_VALUE2)_...]_)_*"
>new ( ODBC_OBJECT | DSN [, (OPTION1, VALUE1), (OPTION2, VALUE2) ...] ) *</a></dt>

<dd>
<p>Creates a new ODBC connection based on <code>DSN</code>, or, if you specify an already existing ODBC object, then a new ODBC object will be created but using the ODBC Connection specified by <code>ODBC_OBJECT</code>. (The new object will be a new <i>hstmt</i> using the <i>hdbc</i> connection in <code>ODBC_OBJECT</code>.)</p>

<p><code>DSN</code> is <i>Data Source Name</i> or a proper <code>ODBCDriverConnect</code> string.</p>

<p>You can specify SQL Connect Options that are implemented before the actual connection to the DSN takes place. These option/values are the same as specified in <code>GetConnectOption</code>/<code>SetConnectOption</code> (see below) and are defined in the ODBC API specs.</p>

<p>Returns a handle to the database on success, or <i>undef</i> on failure.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="METHODS"
>METHODS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<dl>
<dt><a name='Catalog'></a><a name="Catalog_(_QUALIFIER,_OWNER,_NAME,_TYPE_)"
>Catalog ( QUALIFIER, OWNER, NAME, TYPE )</a></dt>

<dd>
<p>Tells ODBC to create a data set that contains table information about the DSN. Use <code>Fetch</code> and <code>Data</code> or <code>DataHash</code> to retrieve the data. The returned format is:</p>

<pre class="sh_perl">    [Qualifier] [Owner] [Name] [Type]</pre>

<p>Returns <i>true</i> on error.</p>

<dt><a name='ColAttributes'></a><a name="ColAttributes_(_ATTRIBUTE_[,_FIELD_NAMES_]_)"
>ColAttributes ( ATTRIBUTE [, FIELD_NAMES ] )</a></dt>

<dd>
<p>Returns the attribute <code>ATTRIBUTE</code> on each of the fields in the list <code>FIELD_NAMES</code> in the current record set. If <code>FIELD_NAMES</code> is empty, then all fields are assumed. The attributes are returned as an associative array.</p>

<dt><a name='ConfigDSN'></a><a name="ConfigDSN_(_OPTION,_DRIVER,_ATTRIBUTE1_[,_ATTRIBUTE2,_ATTRIBUTE3,_..._]_)"
>ConfigDSN ( OPTION, DRIVER, ATTRIBUTE1 [, ATTRIBUTE2, ATTRIBUTE3, ... ] )</a></dt>

<dd>
<p>Configures a DSN. <code>OPTION</code> takes on one of the following values:</p>

<pre class="sh_perl">    ODBC_ADD_DSN.......Adds a new DSN.
    ODBC_MODIFY_DSN....Modifies an existing DSN.
    ODBC_REMOVE_DSN....Removes an existing DSN.

    ODBC_ADD_SYS_DSN.......Adds a new System DSN.
    ODBC_MODIFY_SYS_DSN....Modifies an existing System DSN.
    ODBC_REMOVE_SYS_DSN....Removes an existing System DSN.</pre>

<p>You must specify the driver <code>DRIVER</code> (which can be retrieved by using <code>DataSources</code> or <code>Drivers</code>).</p>

<p><code>ATTRIBUTE1</code> <b>should</b> be <i>&#34;DSN=xxx&#34;</i> where <i>xxx</i> is the name of the DSN. Other attributes can be any DSN attribute such as:</p>

<pre class="sh_perl">    &#34;UID=Cow&#34;
    &#34;PWD=Moo&#34;
    &#34;Description=My little bitty Data Source Name&#34;</pre>

<p>Returns <i>true</i> on success, <i>false</i> on failure.</p>

<p><b>NOTE 1</b>: If you use <code>ODBC_ADD_DSN</code>, then you must include at least <i>&#34;DSN=xxx&#34;</i> and the location of the database.</p>

<p>Example: For MS Access databases, you must specify the <i>DatabaseQualifier</i>:</p>

<pre class="sh_perl">    &#34;DBQ=c:\\...\\MyDatabase.mdb&#34;</pre>

<p><b>NOTE 2</b>: If you use <code>ODBC_MODIFY_DSN</code>, then you need only specify the <i>&#34;DNS=xxx&#34;</i> attribute. Any other attribute you include will be changed to what you specify.</p>

<p><b>NOTE 3</b>: If you use <code>ODBC_REMOVE_DSN</code>, then you need only specify the <i>&#34;DSN=xxx&#34;</i> attribute.</p>

<dt><a name='Connection'></a><a name="Connection_()"
>Connection ()</a></dt>

<dd>
<p>Returns the connection number associated with the ODBC connection.</p>

<dt><a name='Close'></a><a name="Close_()"
>Close ()</a></dt>

<dd>
<p>Closes the ODBC connection. No return value.</p>

<dt><a name='Data'></a><a name="Data_(_[_FIELD_NAME_]_)"
>Data ( [ FIELD_NAME ] )</a></dt>

<dd>
<p>Returns the contents of column name <code>FIELD_NAME</code> or the current row (if nothing is specified).</p>

<dt><a name='DataHash'></a><a name="DataHash_(_[_FIELD1,_FIELD2,_..._]_)"
>DataHash ( [ FIELD1, FIELD2, ... ] )</a></dt>

<dd>
<p>Returns the contents for <code>FIELD1, FIELD2, ...</code> or the entire row (if nothing is specified) as an associative array consisting of:</p>

<pre class="sh_perl">    {Field Name} =&#62; Field Data</pre>

<dt><a name='DataSources'></a><a name="DataSources_()"
>DataSources ()</a></dt>

<dd>
<p>Returns an associative array of Data Sources and ODBC remarks about them. They are returned in the form of:</p>

<pre class="sh_perl">    $ArrayName{&#39;DSN&#39;}=Driver</pre>

<p>where <i>DSN</i> is the Data Source Name and ODBC Driver used.</p>

<dt><a name='Debug'></a><a name="Debug_(_[_1_|_0_]_)"
>Debug ( [ 1 | 0 ] )</a></dt>

<dd>
<p>Sets the debug option to on or off. If nothing is specified, then nothing is changed.</p>

<p>Returns the debugging value (<i>1</i> or <i>0</i>).</p>

<dt><a name='Drivers'></a><a name="Drivers_()"
>Drivers ()</a></dt>

<dd>
<p>Returns an associative array of ODBC Drivers and their attributes. They are returned in the form of:</p>

<pre class="sh_perl">    $ArrayName{&#39;DRIVER&#39;}=Attrib1;Attrib2;Attrib3;...</pre>

<p>where <i>DRIVER</i> is the ODBC Driver Name and <i>AttribX</i> are the driver-defined attributes.</p>

<dt><a name='DropCursor'></a><a name="DropCursor_(_[_CLOSE_TYPE_]_)"
>DropCursor ( [ CLOSE_TYPE ] )</a></dt>

<dd>
<p>Drops the cursor associated with the ODBC object. This forces the cursor to be deallocated. This overrides <code>SetStmtCloseType</code>, but the ODBC object does not lose the <code>StmtCloseType</code> setting. <code>CLOSE_TYPE</code> can be any valid <code>SmtpCloseType</code> and will perform a close on the stmt using the specified close type.</p>

<p>Returns <i>true</i> on success, <i>false</i> on failure.</p>

<dt><a name='DumpData'></a><a name="DumpData_()"
>DumpData ()</a></dt>

<dd>
<p>Dumps to the screen the fieldnames and all records of the current data set. Used primarily for debugging. No return value.</p>

<dt><a name='Error'></a><a name="Error_()"
>Error ()</a></dt>

<dd>
<p>Returns the last encountered error. The returned value is context dependent:</p>

<p>If called in a <i>scalar</i> context, then a <i>3-element array</i> is returned:</p>

<pre class="sh_perl">    ( ERROR_NUMBER, ERROR_TEXT, CONNECTION_NUMBER )</pre>

<p>If called in a <i>string</i> context, then a <i>string</i> is returned:</p>

<pre class="sh_perl">    &#34;[ERROR_NUMBER] [CONNECTION_NUMBER] [ERROR_TEXT]&#34;</pre>

<p>If debugging is on then two more variables are returned:</p>

<pre class="sh_perl">    ( ..., FUNCTION, LEVEL )</pre>

<p>where <code>FUNCTION</code> is the name of the function in which the error occurred, and <code>LEVEL</code> represents extra information about the error (usually the location of the error).</p>

<dt><a name='FetchRow'></a><a name="FetchRow_(_[_ROW_[,_TYPE_]_]_)"
>FetchRow ( [ ROW [, TYPE ] ] )</a></dt>

<dd>
<p>Retrieves the next record from the keyset. When <code>ROW</code> and/or <code>TYPE</code> are specified, the call is made using <code>SQLExtendedFetch</code> instead of <code>SQLFetch</code>.</p>

<p><b>NOTE 1</b>: If you are unaware of <code>SQLExtendedFetch</code> and its implications, stay with just regular <code>FetchRow</code> with no parameters.</p>

<p><b>NOTE 2</b>: The ODBC API explicitly warns against mixing calls to <code>SQLFetch</code> and <code>SQLExtendedFetch</code>; use one or the other but not both.</p>

<p>If <i>ROW</i> is specified, it moves the keyset <b>RELATIVE</b> <code>ROW</code> number of rows.</p>

<p>If <i>ROW</i> is specified and <code>TYPE</code> is <b>not</b>, then the type used is <b>RELATIVE</b>.</p>

<p>Returns <i>true</i> when another record is available to read, and <i>false</i> when there are no more records.</p>

<dt><a name='FieldNames'></a><a name="FieldNames_()"
>FieldNames ()</a></dt>

<dd>
<p>Returns an array of fieldnames found in the current data set. There is no guarantee on order.</p>

<dt><a name='GetConnections'></a><a name="GetConnections_()"
>GetConnections ()</a></dt>

<dd>
<p>Returns an array of connection numbers showing what connections are currently open.</p>

<dt><a name='GetConnectOption'></a><a name="GetConnectOption_(_OPTION_)"
>GetConnectOption ( OPTION )</a></dt>

<dd>
<p>Returns the value of the specified connect option <code>OPTION</code>. Refer to ODBC documentation for more information on the options and values.</p>

<p>Returns a string or scalar depending upon the option specified.</p>

<dt><a name='GetCursorName'></a><a name="GetCursorName_()"
>GetCursorName ()</a></dt>

<dd>
<p>Returns the name of the current cursor as a string or <i>undef</i>.</p>

<dt><a name='GetData'></a><a name="GetData_()"
>GetData ()</a></dt>

<dd>
<p>Retrieves the current row from the dataset. This is not generally used by users; it is used internally.</p>

<p>Returns an array of field data where the first element is either <i>false</i> (if successful) and <i>true</i> (if <b>not</b> successful).</p>

<dt><a name='getDSN'></a><a name="getDSN_(_[_DSN_]_)"
>getDSN ( [ DSN ] )</a></dt>

<dd>
<p>Returns an associative array indicating the configuration for the specified DSN.</p>

<p>If no DSN is specified then the current connection is used.</p>

<p>The returned associative array consists of:</p>

<pre class="sh_perl">    keys=DSN keyword; values=Keyword value. $Data{$Keyword}=Value</pre>

<dt><a name='GetFunctions'></a><a name="GetFunctions_(_[_FUNCTION1,_FUNCTION2,_..._]_)"
>GetFunctions ( [ FUNCTION1, FUNCTION2, ... ] )</a></dt>

<dd>
<p>Returns an associative array indicating the ability of the ODBC Driver to support the specified functions. If no functions are specified, then a 100 element associative array is returned containing all possible functions and their values.</p>

<p><code>FUNCTION</code> must be in the form of an ODBC API constant like <code>SQL_API_SQLTRANSACT</code>.</p>

<p>The returned array will contain the results like:</p>

<pre class="sh_perl">    $Results{SQL_API_SQLTRANSACT}=Value</pre>

<p>Example:</p>

<pre class="sh_perl">    $Results = $O-&#62;GetFunctions(
                                $O-&#62;SQL_API_SQLTRANSACT,
                                SQL_API_SQLSETCONNECTOPTION
                               );
    $ConnectOption = $Results{SQL_API_SQLSETCONNECTOPTION};
    $Transact = $Results{SQL_API_SQLTRANSACT};</pre>

<dt><a name='GetInfo'></a><a name="GetInfo_(_OPTION_)"
>GetInfo ( OPTION )</a></dt>

<dd>
<p>Returns a string indicating the value of the particular option specified.</p>

<dt><a name='GetMaxBufSize'></a><a name="GetMaxBufSize_()"
>GetMaxBufSize ()</a></dt>

<dd>
<p>Returns the current allocated limit for <i>MaxBufSize</i>. For more info, see <code>SetMaxBufSize</code>.</p>

<dt><a name='GetSQLState'></a><a name="GetSQLState_()_*"
>GetSQLState () *</a></dt>

<dd>
<p>Returns a string indicating the SQL state as reported by ODBC. The SQL state is a code that the ODBC Manager or ODBC Driver returns after the execution of a SQL function. This is helpful for debugging purposes.</p>

<dt><a name='GetStmtCloseType'></a><a name="GetStmtCloseType_(_[_CONNECTION_]_)"
>GetStmtCloseType ( [ CONNECTION ] )</a></dt>

<dd>
<p>Returns a string indicating the type of closure that will be used everytime the <i>hstmt</i> is freed. See <code>SetStmtCloseType</code> for details.</p>

<p>By default, the connection of the current object will be used. If <code>CONNECTION</code> is a valid connection number, then it will be used.</p>

<dt><a name='GetStmtOption'></a><a name="GetStmtOption_(_OPTION_)"
>GetStmtOption ( OPTION )</a></dt>

<dd>
<p>Returns the value of the specified statement option <code>OPTION</code>. Refer to ODBC documentation for more information on the options and values.</p>

<p>Returns a string or scalar depending upon the option specified.</p>

<dt><a name='MoreResults'></a><a name="MoreResults_()"
>MoreResults ()</a></dt>

<dd>
<p>This will report whether there is data yet to be retrieved from the query. This can happen if the query was a multiple select.</p>

<p>Example:</p>

<pre class="sh_perl">    &#34;SELECT * FROM [foo] SELECT * FROM [bar]&#34;</pre>

<p><b>NOTE</b>: Not all drivers support this.</p>

<p>Returns <i>1</i> if there is more data, <i>undef</i> otherwise.</p>

<dt><a name='RowCount'></a><a name="RowCount_(_CONNECTION_)"
>RowCount ( CONNECTION )</a></dt>

<dd>
<p>For <i>UPDATE</i>, <i>INSERT</i> and <i>DELETE</i> statements, the returned value is the number of rows affected by the request or <i>-1</i> if the number of affected rows is not available.</p>

<p><b>NOTE 1</b>: This function is not supported by all ODBC drivers! Some drivers do support this but not for all statements (e.g., it is supported for <i>UPDATE</i>, <i>INSERT</i> and <i>DELETE</i> commands but not for the <i>SELECT</i> command).</p>

<p><b>NOTE 2</b>: Many data sources cannot return the number of rows in a result set before fetching them; for maximum interoperability, applications should not rely on this behavior.</p>

<p>Returns the number of affected rows, or <i>-1</i> if not supported by the driver in the current context.</p>

<dt><a name='Run'></a><a name="Run_(_SQL_)"
>Run ( SQL )</a></dt>

<dd>
<p>Executes the SQL command <b>SQL</b> and dumps to the screen info about it. Used primarily for debugging.</p>

<p>No return value.</p>

<dt><a name='SetConnectOption'></a><a name="SetConnectOption_(_OPTION_)_*"
>SetConnectOption ( OPTION ) *</a></dt>

<dd>
<p>Sets the value of the specified connect option <b>OPTION</b>. Refer to ODBC documentation for more information on the options and values.</p>

<p>Returns <i>true</i> on success, <i>false</i> otherwise.</p>

<dt><a name='SetCursorName'></a><a name="SetCursorName_(_NAME_)_*"
>SetCursorName ( NAME ) *</a></dt>

<dd>
<p>Sets the name of the current cursor.</p>

<p>Returns <i>true</i> on success, <i>false</i> otherwise.</p>

<dt><a name='SetPos'></a><a name="SetPos_(_ROW_[,_OPTION,_LOCK_]_)_*"
>SetPos ( ROW [, OPTION, LOCK ] ) *</a></dt>

<dd>
<p>Moves the cursor to the row <code>ROW</code> within the current keyset (<b>not</b> the current data/result set).</p>

<p>Returns <i>true</i> on success, <i>false</i> otherwise.</p>

<dt><a name='SetMaxBufSize'></a><a name="SetMaxBufSize_(_SIZE_)"
>SetMaxBufSize ( SIZE )</a></dt>

<dd>
<p>This sets the <i>MaxBufSize</i> for a particular connection. This will most likely never be needed but...</p>

<p>The amount of memory that is allocated to retrieve the field data of a record is dynamic and changes when it need to be larger. I found that a memo field in an MS Access database ended up requesting 4 Gig of space. This was a bit much so there is an imposed limit (2,147,483,647 bytes) that can be allocated for data retrieval.</p>

<p>Since it is possible that someone has a database with field data greater than 10,240, you can use this function to increase the limit up to a ceiling of 2,147,483,647 (recompile if you need more).</p>

<p>Returns the max number of bytes.</p>

<dt><a name='SetStmtCloseType'></a><a name="SetStmtCloseType_(_TYPE_[,_CONNECTION_]_)"
>SetStmtCloseType ( TYPE [, CONNECTION ] )</a></dt>

<dd>
<p>Sets a particular <i>hstmt</i> close type for the connection. This is the same as <code>ODBCFreeStmt(hstmt, TYPE)</code>. By default, the connection of the current object will be used. If <code>CONNECTION</code> is a valid connection number, then it will be used.</p>

<p><code>TYPE</code> may be one of:</p>

<pre class="sh_perl">    SQL_CLOSE
    SQL_DROP
    SQL_UNBIND
    SQL_RESET_PARAMS</pre>

<p>Returns a string indicating the newly set type.</p>

<dt><a name='SetStmtOption'></a><a name="SetStmtOption_(_OPTION_)_*"
>SetStmtOption ( OPTION ) *</a></dt>

<dd>
<p>Sets the value of the specified statement option <code>OPTION</code>. Refer to ODBC documentation for more information on the options and values.</p>

<p>Returns <i>true</i> on success, <i>false</i> otherwise.</p>

<dt><a name='ShutDown'></a><a name="ShutDown_()"
>ShutDown ()</a></dt>

<dd>
<p>Closes the ODBC connection and dumps to the screen info about it. Used primarily for debugging.</p>

<p>No return value.</p>

<dt><a name='Sql'></a><a name="Sql_(_SQL_STRING_)"
>Sql ( SQL_STRING )</a></dt>

<dd>
<p>Executes the SQL command <code>SQL_STRING</code> on the current connection.</p>

<p>Returns <i>?</i> on success, or an error number on failure.</p>

<dt><a name='TableList'></a><a name="TableList_(_QUALIFIER,_OWNER,_NAME,_TYPE_)"
>TableList ( QUALIFIER, OWNER, NAME, TYPE )</a></dt>

<dd>
<p>Returns the catalog of tables that are available in the DSN. For an unknown parameter, just specify the empty string <i>&#34;&#34;</i>.</p>

<p>Returns an array of table names.</p>

<dt><a name='Transact'></a><a name="Transact_(_TYPE_)_*"
>Transact ( TYPE ) *</a></dt>

<dd>
<p>Forces the ODBC connection to perform a <i>rollback</i> or <i>commit</i> transaction.</p>

<p><code>TYPE</code> may be one of:</p>

<pre class="sh_perl">    SQL_COMMIT
    SQL_ROLLBACK</pre>

<p><b>NOTE</b>: This only works with ODBC drivers that support transactions. Your driver supports it if <i>true</i> is returned from:</p>

<pre class="sh_perl">    $O-&#62;GetFunctions($O-&#62;SQL_API_SQLTRANSACT)[1]</pre>

<p>(See <code>GetFunctions</code> for more details.)</p>

<p>Returns <i>true</i> on success, <i>false</i> otherwise.</p>

<dt><a name='Version'></a><a name="Version_(_PACKAGES_)"
>Version ( PACKAGES )</a></dt>

<dd>
<p>Returns an array of version numbers for the requested packages (<em>ODBC.pm</em> or <em>ODBC.PLL</em>). If the list <code>PACKAGES</code> is empty, then all version numbers are returned.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="LIMITATIONS"
>LIMITATIONS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>What known problems does this thing have?</p>

<ul>
<li>If the account under which the process runs does not have write permission on the default directory (for the process, not the ODBC DSN), you will probably get a runtime error during a <code>SQLConnection</code>. I don&#39;t think that this is a problem with the code, but more like a problem with ODBC. This happens because some ODBC drivers need to write a temporary file. I noticed this using the MS Jet Engine (Access Driver).</li>

<li>This module has been neither optimized for speed nor optimized for memory consumption.</li>
</ul>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="INSTALLATION_NOTES"
>INSTALLATION NOTES <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>If you wish to use this module with a build of Perl other than ActivePerl, you may wish to fetch the original source distribution for this module at:</p>

<pre class="sh_perl">  <a href="ftp://ftp.roth.net:/pub/ntperl/ODBC/970208/Bin/Win32_ODBC_Build_CORE.zip" class="podlinkurl"
>ftp://ftp.roth.net:/pub/ntperl/ODBC/970208/Bin/Win32_ODBC_Build_CORE.zip</a></pre>

<p>or one of the other archives at that same location. See the included README for hints on installing this module manually, what to do if you get a <i>parse exception</i>, and a pointer to a test script for this module.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="OTHER_DOCUMENTATION"
>OTHER DOCUMENTATION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Find a FAQ for Win32::ODBC at:</p>

<pre class="sh_perl">  <a href="http://www.roth.net/odbc/odbcfaq.htm" class="podlinkurl"
>http://www.roth.net/odbc/odbcfaq.htm</a></pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHOR"
>AUTHOR <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Dave Roth &#60;rothd@roth.net&#62;</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="CREDITS"
>CREDITS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Based on original code by Dan DeMaggio &#60;dmag@umich.edu&#62;</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DISCLAIMER"
>DISCLAIMER <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>I do not guarantee <b>ANYTHING</b> with this package. If you use it you are doing so <b>AT YOUR OWN RISK</b>! I may or may not support this depending on my time schedule.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="HISTORY"
>HISTORY <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Last Modified 1999.09.25.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="COPYRIGHT"
>COPYRIGHT <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Copyright (c) 1996-1998 Dave Roth. All rights reserved.</p>

<p>Courtesy of Roth Consulting: <a href="http://www.roth.net/consult/" class="podlinkurl"
>http://www.roth.net/consult/</a></p>

<p>Use under GNU General Public License. Details can be found at: <a href="http://www.gnu.org/copyleft/gpl.html" class="podlinkurl"
>http://www.gnu.org/copyleft/gpl.html</a></p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78275 Uploads, 24724 Distributions
106002 Modules, 9649 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Sat Apr 28 02:05:10 2012 GMT (0.199043035507202) @cpansearch1 -->
 </body>
</html>
