<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>File::Glob - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","perl",3]);
    _gaq.push(["_setCustomVar",5,"Release","perl-5.14.2",3]);
    _gaq.push(["_setCustomVar",3,"Module","File::Glob",3]);
    _gaq.push(["_setCustomVar",1,"Author","FLORA",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?File::Glob">permalink</a></div>
  <a href="/~flora/">Florian Ragwitz</a> &gt;
  <a href="/~flora/perl-5.14.2/">perl-5.14.2</a> &gt;
  File::Glob
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/fd2bdaaefe41908133793d1ddf38f75d?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/F/FL/FLORA/perl-5.14.2.tar.gz">perl-5.14.2.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=File%3A%3AGlob;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~FLORA/perl-5.14.2/ext/File-Glob/Glob.pm">Annotate this POD
</a></p>
     <p style="text-align:right"><a href="http://www.perl.org/">Website</a></p>

<div style="float:right">

</div>
</div>
  Module Version:  1.13 &nbsp;
<span class="noprint">
  <a href="/src/FLORA/perl-5.14.2/ext/File-Glob/Glob.pm">Source</a> &nbsp;
  Latest&nbsp;Release:&nbsp;<a href="/~abigail/perl/ext/File-Glob/Glob.pm">perl-5.15.9</a>
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#META_CHARACTERS'>META CHARACTERS</a>
    <li class='indexItem indexItem2'><a href='#POSIX_FLAGS'>POSIX FLAGS</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#DIAGNOSTICS'>DIAGNOSTICS</a>
  <li class='indexItem indexItem1'><a href='#NOTES'>NOTES</a>
  <li class='indexItem indexItem1'><a href='#SEE_ALSO'>SEE ALSO</a>
  <li class='indexItem indexItem1'><a href='#AUTHOR'>AUTHOR</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>File::Glob - Perl extension for BSD glob routine</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">  use File::Glob &#39;:glob&#39;;

  @list = bsd_glob(&#39;*.[ch]&#39;);
  $homedir = bsd_glob(&#39;~gnat&#39;, GLOB_TILDE | GLOB_ERR);

  if (GLOB_ERROR) {
    # an error occurred reading $homedir
  }

  ## override the core glob (CORE::glob() does this automatically
  ## by default anyway, since v5.6.0)
  use File::Glob &#39;:globally&#39;;
  my @sources = &#60;*.{c,h,y}&#62;;

  ## override the core glob, forcing case sensitivity
  use File::Glob qw(:globally :case);
  my @sources = &#60;*.{c,h,y}&#62;;

  ## override the core glob forcing case insensitivity
  use File::Glob qw(:globally :nocase);
  my @sources = &#60;*.{c,h,y}&#62;;

  ## glob on all files in home directory
  use File::Glob &#39;:globally&#39;;
  my @sources = &#60;~gnat/*&#62;;</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>The glob angle-bracket operator <code>&#60;&#62;</code> is a pathname generator that implements the rules for file name pattern matching used by Unix-like shells such as the Bourne shell or C shell.</p>

<p>File::Glob::bsd_glob() implements the FreeBSD glob(3) routine, which is a superset of the POSIX glob() (described in IEEE Std 1003.2 &#34;POSIX.2&#34;). bsd_glob() takes a mandatory <code>pattern</code> argument, and an optional <code>flags</code> argument, and returns a list of filenames matching the pattern, with interpretation of the pattern modified by the <code>flags</code> variable.</p>

<p>Since v5.6.0, Perl&#39;s CORE::glob() is implemented in terms of bsd_glob(). Note that they don&#39;t share the same prototype--CORE::glob() only accepts a single argument. Due to historical reasons, CORE::glob() will also split its argument on whitespace, treating it as multiple patterns, whereas bsd_glob() considers them as one pattern.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="META_CHARACTERS"
>META CHARACTERS</a></h2>

<pre class="sh_perl">  \       Quote the next metacharacter
  []      Character class
  {}      Multiple pattern
  *       Match any string of characters
  ?       Match any single character
  ~       User name home directory</pre>

<p>The metanotation <code>a{b,c,d}e</code> is a shorthand for <code>abe ace ade</code>. Left to right order is preserved, with results of matches being sorted separately at a low level to preserve this order. As a special case <code>{</code>, <code>}</code>, and <code>{}</code> are passed undisturbed.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="POSIX_FLAGS"
>POSIX FLAGS</a></h2>

<p>The POSIX defined flags for bsd_glob() are:</p>

<dl>
<dt><a name="GLOB_ERR"
><code>GLOB_ERR</code></a></dt>

<dd>
<p>Force bsd_glob() to return an error when it encounters a directory it cannot open or read. Ordinarily bsd_glob() continues to find matches.</p>

<dt><a name="GLOB_LIMIT"
><code>GLOB_LIMIT</code></a></dt>

<dd>
<p>Make bsd_glob() return an error (GLOB_NOSPACE) when the pattern expands to a size bigger than the system constant <code>ARG_MAX</code> (usually found in limits.h). If your system does not define this constant, bsd_glob() uses <code>sysconf(_SC_ARG_MAX)</code> or <code>_POSIX_ARG_MAX</code> where available (in that order). You can inspect these values using the standard <code>POSIX</code> extension.</p>

<dt><a name="GLOB_MARK"
><code>GLOB_MARK</code></a></dt>

<dd>
<p>Each pathname that is a directory that matches the pattern has a slash appended.</p>

<dt><a name="GLOB_NOCASE"
><code>GLOB_NOCASE</code></a></dt>

<dd>
<p>By default, file names are assumed to be case sensitive; this flag makes bsd_glob() treat case differences as not significant.</p>

<dt><a name="GLOB_NOCHECK"
><code>GLOB_NOCHECK</code></a></dt>

<dd>
<p>If the pattern does not match any pathname, then bsd_glob() returns a list consisting of only the pattern. If <code>GLOB_QUOTE</code> is set, its effect is present in the pattern returned.</p>

<dt><a name="GLOB_NOSORT"
><code>GLOB_NOSORT</code></a></dt>

<dd>
<p>By default, the pathnames are sorted in ascending ASCII order; this flag prevents that sorting (speeding up bsd_glob()).</p>
</dd>
</dl>

<p>The FreeBSD extensions to the POSIX standard are the following flags:</p>

<dl>
<dt><a name="GLOB_BRACE"
><code>GLOB_BRACE</code></a></dt>

<dd>
<p>Pre-process the string to expand <code>{pat,pat,...}</code> strings like csh(1). The pattern &#39;{}&#39; is left unexpanded for historical reasons (and csh(1) does the same thing to ease typing of find(1) patterns).</p>

<dt><a name="GLOB_NOMAGIC"
><code>GLOB_NOMAGIC</code></a></dt>

<dd>
<p>Same as <code>GLOB_NOCHECK</code> but it only returns the pattern if it does not contain any of the special characters &#34;*&#34;, &#34;?&#34; or &#34;[&#34;. <code>NOMAGIC</code> is provided to simplify implementing the historic csh(1) globbing behaviour and should probably not be used anywhere else.</p>

<dt><a name="GLOB_QUOTE"
><code>GLOB_QUOTE</code></a></dt>

<dd>
<p>Use the backslash (&#39;\&#39;) character for quoting: every occurrence of a backslash followed by a character in the pattern is replaced by that character, avoiding any special interpretation of the character. (But see below for exceptions on DOSISH systems).</p>

<dt><a name="GLOB_TILDE"
><code>GLOB_TILDE</code></a></dt>

<dd>
<p>Expand patterns that start with &#39;~&#39; to user name home directories.</p>

<dt><a name="GLOB_CSH"
><code>GLOB_CSH</code></a></dt>

<dd>
<p>For convenience, <code>GLOB_CSH</code> is a synonym for <code>GLOB_BRACE | GLOB_NOMAGIC | GLOB_QUOTE | GLOB_TILDE | GLOB_ALPHASORT</code>.</p>
</dd>
</dl>

<p>The POSIX provided <code>GLOB_APPEND</code>, <code>GLOB_DOOFFS</code>, and the FreeBSD extensions <code>GLOB_ALTDIRFUNC</code>, and <code>GLOB_MAGCHAR</code> flags have not been implemented in the Perl version because they involve more complex interaction with the underlying C structures.</p>

<p>The following flag has been added in the Perl implementation for csh compatibility:</p>

<dl>
<dt><a name="GLOB_ALPHASORT"
><code>GLOB_ALPHASORT</code></a></dt>

<dd>
<p>If <code>GLOB_NOSORT</code> is not in effect, sort filenames is alphabetical order (case does not matter) rather than in ASCII order.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DIAGNOSTICS"
>DIAGNOSTICS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>bsd_glob() returns a list of matching paths, possibly zero length. If an error occurred, &#38;File::Glob::GLOB_ERROR will be non-zero and <code>$!</code> will be set. &#38;File::Glob::GLOB_ERROR is guaranteed to be zero if no error occurred, or one of the following values otherwise:</p>

<dl>
<dt><a name="GLOB_NOSPACE"
><code>GLOB_NOSPACE</code></a></dt>

<dd>
<p>An attempt to allocate memory failed.</p>

<dt><a name="GLOB_ABEND"
><code>GLOB_ABEND</code></a></dt>

<dd>
<p>The glob was stopped because an error was encountered.</p>
</dd>
</dl>

<p>In the case where bsd_glob() has found some matching paths, but is interrupted by an error, it will return a list of filenames <b>and</b> set &#38;File::Glob::ERROR.</p>

<p>Note that bsd_glob() deviates from POSIX and FreeBSD glob(3) behaviour by not considering <code>ENOENT</code> and <code>ENOTDIR</code> as errors - bsd_glob() will continue processing despite those errors, unless the <code>GLOB_ERR</code> flag is set.</p>

<p>Be aware that all filenames returned from File::Glob are tainted.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NOTES"
>NOTES <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<ul>
<li>If you want to use multiple patterns, e.g. <code>bsd_glob(&#34;a* b*&#34;)</code>, you should probably throw them in a set as in <code>bsd_glob(&#34;{a*,b*}&#34;)</code>. This is because the argument to bsd_glob() isn&#39;t subjected to parsing by the C shell. Remember that you can use a backslash to escape things.</li>

<li>On DOSISH systems, backslash is a valid directory separator character. In this case, use of backslash as a quoting character (via GLOB_QUOTE) interferes with the use of backslash as a directory separator. The best (simplest, most portable) solution is to use forward slashes for directory separators, and backslashes for quoting. However, this does not match &#34;normal practice&#34; on these systems. As a concession to user expectation, therefore, backslashes (under GLOB_QUOTE) only quote the glob metacharacters &#39;[&#39;, &#39;]&#39;, &#39;{&#39;, &#39;}&#39;, &#39;-&#39;, &#39;~&#39;, and backslash itself. All other backslashes are passed through unchanged.</li>

<li>Win32 users should use the real slash. If you really want to use backslashes, consider using Sarathy&#39;s File::DosGlob, which comes with the standard Perl distribution.</li>

<li>Mac OS (Classic) users should note a few differences. Since Mac OS is not Unix, when the glob code encounters a tilde glob (e.g. ~user) and the <code>GLOB_TILDE</code> flag is used, it simply returns that pattern without doing any expansion.
<p>Glob on Mac OS is case-insensitive by default (if you don&#39;t use any flags). If you specify any flags at all and still want glob to be case-insensitive, you must include <code>GLOB_NOCASE</code> in the flags.</p>

<p>The path separator is &#39;:&#39; (aka colon), not &#39;/&#39; (aka slash). Mac OS users should be careful about specifying relative pathnames. While a full path always begins with a volume name, a relative pathname should always begin with a &#39;:&#39;. If specifying a volume name only, a trailing &#39;:&#39; is required.</p>

<p>The specification of pathnames in glob patterns adheres to the usual Mac OS conventions: The path separator is a colon &#39;:&#39;, not a slash &#39;/&#39;. A full path always begins with a volume name. A relative pathname on Mac OS must always begin with a &#39;:&#39;, except when specifying a file or directory name in the current working directory, where the leading colon is optional. If specifying a volume name only, a trailing &#39;:&#39; is required. Due to these rules, a glob like &#60;*:&#62; will find all mounted volumes, while a glob like &#60;*&#62; or &#60;:*&#62; will find all files and directories in the current directory.</p>

<p>Note that updirs in the glob pattern are resolved before the matching begins, i.e. a pattern like &#34;*HD:t?p::a*&#34; will be matched as &#34;*HD:a*&#34;. Note also, that a single trailing &#39;:&#39; in the pattern is ignored (unless it&#39;s a volume name pattern like &#34;*HD:&#34;), i.e. a glob like &#60;:*:&#62; will find both directories <i>and</i> files (and not, as one might expect, only directories). You can, however, use the <code>GLOB_MARK</code> flag to distinguish (without a file test) directory names from file names.</p>

<p>If the <code>GLOB_MARK</code> flag is set, all directory paths will have a &#39;:&#39; appended. Since a directory like &#39;lib:&#39; is <i>not</i> a valid <i>relative</i> path on Mac OS, both a leading and a trailing colon will be added, when the directory name in question doesn&#39;t contain any colons (e.g. &#39;lib&#39; becomes &#39;:lib:&#39;).</p>
</li>
</ul>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SEE_ALSO"
>SEE ALSO <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><a href="/~flora/perl-5.14.2/pod/perlfunc.pod#glob" class="podlinkpod"
>&#34;glob&#34; in perlfunc</a>, glob(3)</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHOR"
>AUTHOR <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>The Perl interface was written by Nathan Torkington &#60;gnat@frii.com&#62;, and is released under the artistic license. Further modifications were made by Greg Bacon &#60;gbacon@cs.uah.edu&#62;, Gurusamy Sarathy &#60;gsar@activestate.com&#62;, and Thomas Wegner &#60;wegner_thomas@yahoo.com&#62;. The C glob code has the following copyright:</p>

<pre class="sh_perl">    Copyright (c) 1989, 1993 The Regents of the University of California.
    All rights reserved.

    This code is derived from software contributed to Berkeley by
    Guido van Rossum.

    Redistribution and use in source and binary forms, with or without
    modification, are permitted provided that the following conditions
    are met:

    1. Redistributions of source code must retain the above copyright
       notice, this list of conditions and the following disclaimer.
    2. Redistributions in binary form must reproduce the above copyright
       notice, this list of conditions and the following disclaimer in the
       documentation and/or other materials provided with the distribution.
    3. Neither the name of the University nor the names of its contributors
       may be used to endorse or promote products derived from this software
       without specific prior written permission.

    THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS&#39;&#39; AND
    ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
    ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
    FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
    DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
    OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
    HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
    LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
    OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
    SUCH DAMAGE.</pre>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78272 Uploads, 24723 Distributions
106001 Modules, 9649 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Fri Apr 27 21:26:25 2012 GMT (0.914735078811646) @cpansearch1 -->
 </body>
</html>
