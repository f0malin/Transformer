<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>Crypt::RandPasswd - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","Crypt-RandPasswd",3]);
    _gaq.push(["_setCustomVar",5,"Release","Crypt-RandPasswd-0.02",3]);
    _gaq.push(["_setCustomVar",3,"Module","Crypt::RandPasswd",3]);
    _gaq.push(["_setCustomVar",1,"Author","JDPORTER",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?Crypt::RandPasswd">permalink</a></div>
  <a href="/~jdporter/">John Douglas Porter</a> &gt;
  <a href="/~jdporter/Crypt-RandPasswd-0.02/">Crypt-RandPasswd-0.02</a> &gt;
  Crypt::RandPasswd
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/1db3be9609627313009ee7dfccff212f?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/J/JD/JDPORTER/Crypt-RandPasswd-0.02.tar.gz">Crypt-RandPasswd-0.02.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=Crypt%3A%3ARandPasswd;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~JDPORTER/Crypt-RandPasswd-0.02/lib/Crypt/RandPasswd.pm">Annotate this POD
</a></p>
<div class=box style='width:150px; float: right'>
<h1 class=t5>Related Modules</h1>
<div style="margin:2px">
<a href="/perldoc?Apache%3A%3ASession">Apache::Session</a><br>
<a href="/perldoc?Crypt%3A%3ABlowfish">Crypt::Blowfish</a><br>
<a href="/perldoc?Time%3A%3AHiRes">Time::HiRes</a><br>
<a href="/perldoc?Digest%3A%3AMD5">Digest::MD5</a><br>
<a href="/perldoc?Digest%3A%3AHMAC">Digest::HMAC</a><br>
<a href="/perldoc?Crypt%3A%3ACBC">Crypt::CBC</a><br>
<a href="/perldoc?Crypt%3A%3APasswdMD5">Crypt::PasswdMD5</a><br>
<a href="/perldoc?List%3A%3AUtil">List::Util</a><br>
<a href="/perldoc?String%3A%3ARandom">String::Random</a><br>
<a href="/perldoc?Crypt%3A%3ARandom">Crypt::Random</a><br>
<small>
<a href="http://perlmonks.org/?node=cpan+module+search&pivot=1&module=Crypt%3A%3ARandPasswd">more...</a><br>
By <a href="http://perlmonks.org/">perlmonks.org</a></small>
</div>
</div>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>Open&nbsp;</td><td style="text-align:right"> 1</td></tr>
</table>
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=Crypt-RandPasswd">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  0.02 &nbsp;
<span class="noprint">
  <a href="/src/JDPORTER/Crypt-RandPasswd-0.02/lib/Crypt/RandPasswd.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#Run_as_Script'>Run as Script</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#SEE_ALSO'>SEE ALSO</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <li class='indexItem indexItem1'><a href='#CAVEATS'>CAVEATS</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#Bugs'>Bugs</a>
    <li class='indexItem indexItem2'><a href='#Deviations_From_Standard'>Deviations From Standard</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#Functions'>Functions</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#word'>word</a>
    <li class='indexItem indexItem2'><a href='#letters'>letters</a>
    <li class='indexItem indexItem2'><a href='#chars'>chars</a>
    <li class='indexItem indexItem2'><a href='#random_chars_in_range'>random_chars_in_range</a>
    <li class='indexItem indexItem2'><a href='#rand_int_in_range'>rand_int_in_range</a>
    <li class='indexItem indexItem2'><a href='#random_element'>random_element</a>
    <li class='indexItem indexItem2'><a href='#rng'>rng</a>
    <li class='indexItem indexItem2'><a href='#restrict'>restrict</a>
    <li class='indexItem indexItem2'><a href='#init'>init</a>
    <li class='indexItem indexItem2'><a href='#_random_word'>_random_word</a>
    <li class='indexItem indexItem2'><a href='#_random_unit'>_random_unit</a>
    <li class='indexItem indexItem2'><a href='#_improper_word'>_improper_word</a>
    <li class='indexItem indexItem2'><a href='#_have_initial_y'>_have_initial_y</a>
    <li class='indexItem indexItem2'><a href='#_have_final_split'>_have_final_split</a>
    <li class='indexItem indexItem2'><a href='#get_syllable'>get_syllable</a>
    <li class='indexItem indexItem2'><a href='#alt_get_syllable'>alt_get_syllable</a>
    <li class='indexItem indexItem2'><a href='#_illegal_placement'>_illegal_placement</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#AUTHOR'>AUTHOR</a>
  <li class='indexItem indexItem1'><a href='#COPYRIGHT'>COPYRIGHT</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Crypt::RandPasswd - random password generator based on FIPS-181</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">  use Crypt::RandPasswd;
  ( $word, $hyphenated ) = Crypt::RandPasswd-&#62;word( $minlen, $maxlen );
  $word = Crypt::RandPasswd-&#62;word( $minlen, $maxlen );
  $word = Crypt::RandPasswd-&#62;letters( $minlen, $maxlen );
  $word = Crypt::RandPasswd-&#62;chars( $minlen, $maxlen );

  # override the defaults for these functions:
  *Crypt::RandPasswd::rng = \&#38;my_random_number_generator;
  *Crypt::RandPasswd::restrict = \&#38;my_restriction_filter;</pre>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Run_as_Script"
>Run as Script</a></h2>

<pre class="sh_perl">  perl Crypt/RandPasswd.pm -help</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SEE_ALSO"
>SEE ALSO <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>FIPS 181 - (APG), Automated Password Generator: <a href="http://www.itl.nist.gov/fipspubs/fip181.htm" class="podlinkurl"
>http://www.itl.nist.gov/fipspubs/fip181.htm</a></p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This code is a Perl language implementation of the Automated Password Generator standard, like the program described in &#34;A Random Word Generator For Pronounceable Passwords&#34; (not available on-line). This code is a re-engineering of the program contained in Appendix A of FIPS Publication 181, &#34;Standard for Automated Password Generator&#34;. In accordance with the standard, the results obtained from this program are logically equivalent to those produced by the standard.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="CAVEATS"
>CAVEATS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Bugs"
>Bugs</a></h2>

<p>The function to generate a password can sometimes take an extremely long time.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Deviations_From_Standard"
>Deviations From Standard</a></h2>

<p>This implementation deviates in one critical way from the standard upon which it is based: the random number generator in this implementation does not use DES. Instead, it uses perl&#39;s built-in <code>rand()</code> function, which in turn is (usually) built on the pseudo-random number generator functions of the underlying C library.</p>

<p>However, the random function can be replaced by the user if desired. (See <a href="#rng" class="podlinkpod"
>&#34;rng&#34;</a>.)</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="Functions"
>Functions <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="word"
>word</a></h2>

<pre class="sh_perl">  word = word( minlen, maxlen );
  ( word, hyphenated_form ) = word( minlen, maxlen );</pre>

<p>Generates a random word, as well as its hyphenated form. The length of the returned word will be between minlen and maxlen.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="letters"
>letters</a></h2>

<pre class="sh_perl">  word = letters( minlen, maxlen );</pre>

<p>Generates a string of random letters. The length of the returned word is between minlen and maxlen. Calls <code>random_chars_in_range( &#39;a&#39; =</code> &#39;z&#39; )&#62;.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="chars"
>chars</a></h2>

<pre class="sh_perl">  word = chars( minlen, maxlen );</pre>

<p>Generates a string of random printable characters. The length of the returned word is between minlen and maxlen. Calls <code>random_chars_in_range( &#39;!&#39; =</code> &#39;~&#39; )&#62;.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="random_chars_in_range"
>random_chars_in_range</a></h2>

<pre class="sh_perl">  word = random_chars_in_range( minlen, maxlen, lo_char =&#62; hi_char );</pre>

<p>Generates a string of printable characters. The length of the returned string is between minlen and maxlen. Each character is selected from the range of ASCII characters delimited by (lo_char,hi_char).</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="rand_int_in_range"
>rand_int_in_range</a></h2>

<pre class="sh_perl">  n = rand_int_in_range( min, max );</pre>

<p>Returns an integer between min and max, inclusive. Calls <code>rng</code> like so:</p>

<pre class="sh_perl">  n = min + int( rng( max - min + 1 ) )</pre>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="random_element"
>random_element</a></h2>

<pre class="sh_perl">  e = random_element( \@elts )</pre>

<p>Selects a random element from an array, which is passed by ref.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="rng"
>rng</a></h2>

<pre class="sh_perl">  r = rng( n );</pre>

<p><code>rng</code> is designed to have the same interface as the built-in <code>rand</code> function. The default implementation here is a simple wrapper around <code>rand</code>, which is typically a wrapper for some pseudo-random number function in the underlying C library.</p>

<p>The reason for having this simple wrapper is so the user can easily substitute a different random number generator if desired. Since many rng&#39;s have the same interface as <code>rand</code>, replacing <code>rng()</code> is as simple as</p>

<pre class="sh_perl">    {
        local $^W; # squelch sub redef warning.
        *Crypt::RandPasswd::rng = \&#38;my_rng;
    }</pre>

<p>See <a href="/perldoc?rand" class="podlinkpod"
>rand</a>.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="restrict"
>restrict</a></h2>

<pre class="sh_perl">  word = restrict( word );</pre>

<p>A filter. Returns the arg unchanged if it is allowable; returns undef if not.</p>

<p>The default version of <code>restrict()</code> allows everything. You may install a different form to implement other restrictions, by doing something like this:</p>

<pre class="sh_perl">    {
      local $^W; # squelch sub redef warning.
      *Crypt::RandPasswd::restrict = \&#38;my_filter;
    }</pre>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="init"
>init</a></h2>

<p>This initializes the environment, which by default simply seeds the random number generator.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="_random_word"
>_random_word</a></h2>

<p>This is the routine that returns a random word. It collects random syllables until a predetermined word length is found. If a retry threshold is reached, another word is tried.</p>

<p>returns ( word, hyphenated_word ).</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="_random_unit"
>_random_unit</a></h2>

<p>Selects a gram (aka &#34;unit&#34;). This is the standard random unit generating routine for get_syllable().</p>

<p>This routine attempts to return grams (units) with a distribution approaching that of the distribution of the units in English.</p>

<p>The distribution of the units may be altered in this procedure without affecting the digram table or any other programs using the random_word subroutine, as long as the set of grams (units) is kept consistent throughout this library.</p>

<p><i>NOTE that where this func used to return a numeric index into the &#39;rules&#39; C-array, it now returns a gram.</i></p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="_improper_word"
>_improper_word</a></h2>

<p>Check that the word does not contain illegal combinations that may span syllables. Specifically, these are:</p>

<pre class="sh_perl">  1. An illegal pair of units between syllables.
  2. Three consecutive vowel units.
  3. Three consecutive consonant units.</pre>

<p>The checks are made against units (1 or 2 letters), not against the individual letters, so three consecutive units can have the length of 6 at most.</p>

<p>returns boolean</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="_have_initial_y"
>_have_initial_y</a></h2>

<p>Treating y as a vowel is sometimes a problem. Some words get formed that look irregular. One special group is when y starts a word and is the only vowel in the first syllable. The word ycl is one example. We discard words like these.</p>

<p>return boolean</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="_have_final_split"
>_have_final_split</a></h2>

<p>Besides the problem with the letter y, there is one with a silent e at the end of words, like face or nice. We allow this silent e, but we do not allow it as the only vowel at the end of the word or syllables like ble will be generated.</p>

<p>returns boolean</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="get_syllable"
>get_syllable</a></h2>

<p>Generate next unit to password, making sure that it follows these rules:</p>

<p>1. Each syllable must contain exactly 1 or 2 consecutive vowels, where y is considered a vowel.</p>

<p>2. Syllable end is determined as follows:</p>

<pre class="sh_perl">   a. Vowel is generated and previous unit is a consonant and syllable already has a vowel. 
      In this case, new syllable is started and already contains a vowel.
   b. A pair determined to be a &#34;break&#34; pair is encountered. 
      In this case new syllable is started with second unit of this pair.
   c. End of password is encountered.
   d. &#34;begin&#34; pair is encountered legally.  New syllable is started with this pair.
   e. &#34;end&#34; pair is legally encountered.  New syllable has nothing yet.</pre>

<p>3. Try generating another unit if:</p>

<pre class="sh_perl">   a. third consecutive vowel and not y.
   b. &#34;break&#34; pair generated but no vowel yet in current or previous 2 units are &#34;not_end&#34;.
   c. &#34;begin&#34; pair generated but no vowel in syllable preceding begin pair,
      or both previous 2 pairs are designated &#34;not_end&#34;.
   d. &#34;end&#34; pair generated but no vowel in current syllable or in &#34;end&#34; pair.
   e. &#34;not_begin&#34; pair generated but new syllable must begin (because previous syllable ended as defined in 2 above).
   f. vowel is generated and 2a is satisfied, but no syllable break is possible in previous 3 pairs.
   g. Second and third units of syllable must begin, and first unit is &#34;alternate_vowel&#34;.</pre>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="alt_get_syllable"
>alt_get_syllable</a></h2>

<p>Takes an integer, the maximum number of chars to generate. (or is it minimum?)</p>

<p>returns a list of ( string, units-in-syllable )</p>

<p><i>This is an alternative version of <code>get_syllable()</code>, which can be useful for unit testing the other functions.</i></p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="_illegal_placement"
>_illegal_placement</a></h2>

<p>goes through an individual syllable and checks for illegal combinations of letters that go beyond looking at digrams.</p>

<p>We look at things like 3 consecutive vowels or consonants, or syllables with consonants between vowels (unless one of them is the final silent e).</p>

<p>returns boolean.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHOR"
>AUTHOR <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>JDPORTER@cpan.org (John Porter)</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="COPYRIGHT"
>COPYRIGHT <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This perl module is free software; it may be redistributed and/or modified under the same terms as Perl itself.</p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78163 Uploads, 24704 Distributions
105968 Modules, 9645 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Tue Apr 24 20:11:08 2012 GMT (0.124783992767334) @cpansearch1 -->
 </body>
</html>
