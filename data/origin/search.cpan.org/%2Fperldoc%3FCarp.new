<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>Carp - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","Carp",3]);
    _gaq.push(["_setCustomVar",5,"Release","Carp-1.25",3]);
    _gaq.push(["_setCustomVar",3,"Module","Carp",3]);
    _gaq.push(["_setCustomVar",1,"Author","ZEFRAM",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?Carp">permalink</a></div>
  <a href="/~zefram/">Andrew Main (Zefram)</a> &gt;
  <a href="/~zefram/Carp-1.25/">Carp-1.25</a> &gt;
  Carp
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/aab343bc3a4424dcb7f913920242f051?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/Z/ZE/ZEFRAM/Carp-1.25.tar.gz">Carp-1.25.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=Carp;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~ZEFRAM/Carp-1.25/lib/Carp.pm">Annotate this POD
</a></p>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>New&nbsp;</td><td style="text-align:right"> 1</td></tr>
<tr><td>Open&nbsp;</td><td style="text-align:right"> 4</td></tr>
</table>
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=Carp">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  1.25 &nbsp;
<span class="noprint">
  <a href="/src/ZEFRAM/Carp-1.25/lib/Carp.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#Forcing_a_Stack_Trace'>Forcing a Stack Trace</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#GLOBAL_VARIABLES'>GLOBAL VARIABLES</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#$Carp::MaxEvalLen'>$Carp::MaxEvalLen</a>
    <li class='indexItem indexItem2'><a href='#$Carp::MaxArgLen'>$Carp::MaxArgLen</a>
    <li class='indexItem indexItem2'><a href='#$Carp::MaxArgNums'>$Carp::MaxArgNums</a>
    <li class='indexItem indexItem2'><a href='#$Carp::Verbose'>$Carp::Verbose</a>
    <li class='indexItem indexItem2'><a href='#@CARP_NOT'>@CARP_NOT</a>
    <li class='indexItem indexItem2'><a href='#%Carp::Internal'>%Carp::Internal</a>
    <li class='indexItem indexItem2'><a href='#%Carp::CarpInternal'>%Carp::CarpInternal</a>
    <li class='indexItem indexItem2'><a href='#$Carp::CarpLevel'>$Carp::CarpLevel</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#BUGS'>BUGS</a>
  <li class='indexItem indexItem1'><a href='#SEE_ALSO'>SEE ALSO</a>
  <li class='indexItem indexItem1'><a href='#AUTHOR'>AUTHOR</a>
  <li class='indexItem indexItem1'><a href='#COPYRIGHT'>COPYRIGHT</a>
  <li class='indexItem indexItem1'><a href='#LICENSE'>LICENSE</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Carp - alternative warn and die for modules</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">    use Carp;

    # warn user (from perspective of caller)
    carp &#34;string trimmed to 80 chars&#34;;

    # die of errors (from perspective of caller)
    croak &#34;We&#39;re outta here!&#34;;

    # die of errors with stack backtrace
    confess &#34;not implemented&#34;;

    # cluck not exported by default
    use Carp qw(cluck);
    cluck &#34;This is how we got here!&#34;;</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>The Carp routines are useful in your own modules because they act like die() or warn(), but with a message which is more likely to be useful to a user of your module. In the case of cluck, confess, and longmess that context is a summary of every call in the call-stack. For a shorter message you can use <code>carp</code> or <code>croak</code> which report the error as being from where your module was called. There is no guarantee that that is where the error was, but it is a good educated guess.</p>

<p>You can also alter the way the output and logic of <code>Carp</code> works, by changing some global variables in the <code>Carp</code> namespace. See the section on <code>GLOBAL VARIABLES</code> below.</p>

<p>Here is a more complete description of how <code>carp</code> and <code>croak</code> work. What they do is search the call-stack for a function call stack where they have not been told that there shouldn&#39;t be an error. If every call is marked safe, they give up and give a full stack backtrace instead. In other words they presume that the first likely looking potential suspect is guilty. Their rules for telling whether a call shouldn&#39;t generate errors work as follows:</p>

<ol>
<li>Any call from a package to itself is safe.</li>

<li>Packages claim that there won&#39;t be errors on calls to or from packages explicitly marked as safe by inclusion in <code>@CARP_NOT</code>, or (if that array is empty) <code>@ISA</code>. The ability to override what @ISA says is new in 5.8.</li>

<li>The trust in item 2 is transitive. If A trusts B, and B trusts C, then A trusts C. So if you do not override <code>@ISA</code> with <code>@CARP_NOT</code>, then this trust relationship is identical to, &#34;inherits from&#34;.</li>

<li>Any call from an internal Perl module is safe. (Nothing keeps user modules from marking themselves as internal to Perl, but this practice is discouraged.)</li>

<li>Any call to Perl&#39;s warning system (eg Carp itself) is safe. (This rule is what keeps it from reporting the error at the point where you call <code>carp</code> or <code>croak</code>.)</li>

<li><code>$Carp::CarpLevel</code> can be set to skip a fixed number of additional call levels. Using this is not recommended because it is very difficult to get it to behave correctly.</li>
</ol>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Forcing_a_Stack_Trace"
>Forcing a Stack Trace</a></h2>

<p>As a debugging aid, you can force Carp to treat a croak as a confess and a carp as a cluck across <i>all</i> modules. In other words, force a detailed stack trace to be given. This can be very helpful when trying to understand why, or from where, a warning or error is being generated.</p>

<p>This feature is enabled by &#39;importing&#39; the non-existent symbol &#39;verbose&#39;. You would typically enable it by saying</p>

<pre class="sh_perl">    perl -MCarp=verbose script.pl</pre>

<p>or by including the string <code>-MCarp=verbose</code> in the PERL5OPT environment variable.</p>

<p>Alternately, you can set the global variable <code>$Carp::Verbose</code> to true. See the <code>GLOBAL VARIABLES</code> section below.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="GLOBAL_VARIABLES"
>GLOBAL VARIABLES <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="$Carp::MaxEvalLen"
>$Carp::MaxEvalLen</a></h2>

<p>This variable determines how many characters of a string-eval are to be shown in the output. Use a value of <code>0</code> to show all text.</p>

<p>Defaults to <code>0</code>.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="$Carp::MaxArgLen"
>$Carp::MaxArgLen</a></h2>

<p>This variable determines how many characters of each argument to a function to print. Use a value of <code>0</code> to show the full length of the argument.</p>

<p>Defaults to <code>64</code>.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="$Carp::MaxArgNums"
>$Carp::MaxArgNums</a></h2>

<p>This variable determines how many arguments to each function to show. Use a value of <code>0</code> to show all arguments to a function call.</p>

<p>Defaults to <code>8</code>.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="$Carp::Verbose"
>$Carp::Verbose</a></h2>

<p>This variable makes <code>carp</code> and <code>croak</code> generate stack backtraces just like <code>cluck</code> and <code>confess</code>. This is how <code>use Carp &#39;verbose&#39;</code> is implemented internally.</p>

<p>Defaults to <code>0</code>.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="@CARP_NOT"
>@CARP_NOT</a></h2>

<p>This variable, <i>in your package</i>, says which packages are <i>not</i> to be considered as the location of an error. The <code>carp()</code> and <code>cluck()</code> functions will skip over callers when reporting where an error occurred.</p>

<p>NB: This variable must be in the package&#39;s symbol table, thus:</p>

<pre class="sh_perl">    # These work
    our @CARP_NOT; # file scope
    use vars qw(@CARP_NOT); # package scope
    @My::Package::CARP_NOT = ... ; # explicit package variable

    # These don&#39;t work
    sub xyz { ... @CARP_NOT = ... } # w/o declarations above
    my @CARP_NOT; # even at top-level</pre>

<p>Example of use:</p>

<pre class="sh_perl">    package My::Carping::Package;
    use Carp;
    our @CARP_NOT;
    sub bar     { .... or _error(&#39;Wrong input&#39;) }
    sub _error  {
        # temporary control of where&#39;ness, __PACKAGE__ is implicit
        local @CARP_NOT = qw(My::Friendly::Caller);
        carp(@_)
    }</pre>

<p>This would make <code>Carp</code> report the error as coming from a caller not in <code>My::Carping::Package</code>, nor from <code>My::Friendly::Caller</code>.</p>

<p>Also read the <a href="#DESCRIPTION" class="podlinkpod"
>&#34;DESCRIPTION&#34;</a> section above, about how <code>Carp</code> decides where the error is reported from.</p>

<p>Use <code>@CARP_NOT</code>, instead of <code>$Carp::CarpLevel</code>.</p>

<p>Overrides <code>Carp</code>&#39;s use of <code>@ISA</code>.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="%Carp::Internal"
>%Carp::Internal</a></h2>

<p>This says what packages are internal to Perl. <code>Carp</code> will never report an error as being from a line in a package that is internal to Perl. For example:</p>

<pre class="sh_perl">    $Carp::Internal{ (__PACKAGE__) }++;
    # time passes...
    sub foo { ... or confess(&#34;whatever&#34;) };</pre>

<p>would give a full stack backtrace starting from the first caller outside of __PACKAGE__. (Unless that package was also internal to Perl.)</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="%Carp::CarpInternal"
>%Carp::CarpInternal</a></h2>

<p>This says which packages are internal to Perl&#39;s warning system. For generating a full stack backtrace this is the same as being internal to Perl, the stack backtrace will not start inside packages that are listed in <code>%Carp::CarpInternal</code>. But it is slightly different for the summary message generated by <code>carp</code> or <code>croak</code>. There errors will not be reported on any lines that are calling packages in <code>%Carp::CarpInternal</code>.</p>

<p>For example <code>Carp</code> itself is listed in <code>%Carp::CarpInternal</code>. Therefore the full stack backtrace from <code>confess</code> will not start inside of <code>Carp</code>, and the short message from calling <code>croak</code> is not placed on the line where <code>croak</code> was called.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="$Carp::CarpLevel"
>$Carp::CarpLevel</a></h2>

<p>This variable determines how many additional call frames are to be skipped that would not otherwise be when reporting where an error occurred on a call to one of <code>Carp</code>&#39;s functions. It is fairly easy to count these call frames on calls that generate a full stack backtrace. However it is much harder to do this accounting for calls that generate a short message. Usually people skip too many call frames. If they are lucky they skip enough that <code>Carp</code> goes all of the way through the call stack, realizes that something is wrong, and then generates a full stack backtrace. If they are unlucky then the error is reported from somewhere misleading very high in the call stack.</p>

<p>Therefore it is best to avoid <code>$Carp::CarpLevel</code>. Instead use <code>@CARP_NOT</code>, <code>%Carp::Internal</code> and <code>%Carp::CarpInternal</code>.</p>

<p>Defaults to <code>0</code>.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="BUGS"
>BUGS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>The Carp routines don&#39;t handle exception objects currently. If called with a first argument that is a reference, they simply call die() or warn(), as appropriate.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SEE_ALSO"
>SEE ALSO <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><a href="/perldoc?Carp%3A%3AAlways" class="podlinkpod"
>Carp::Always</a>, <a href="/perldoc?Carp%3A%3AClan" class="podlinkpod"
>Carp::Clan</a></p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHOR"
>AUTHOR <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>The Carp module first appeared in Larry Wall&#39;s perl 5.000 distribution. Since then it has been modified by several of the perl 5 porters. Andrew Main (Zefram) &#60;zefram@fysh.org&#62; divested Carp into an independent distribution.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="COPYRIGHT"
>COPYRIGHT <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Copyright (C) 1994-2012 Larry Wall</p>

<p>Copyright (C) 2011, 2012 Andrew Main (Zefram) &#60;zefram@fysh.org&#62;</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="LICENSE"
>LICENSE <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This module is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78067 Uploads, 24686 Distributions
105893 Modules, 9637 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Sun Apr 22 03:23:41 2012 GMT (0.0546889305114746) @cpansearch1 -->
 </body>
</html>
