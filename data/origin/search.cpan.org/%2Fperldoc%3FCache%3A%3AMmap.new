<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>Cache::Mmap - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","Cache-Mmap",3]);
    _gaq.push(["_setCustomVar",5,"Release","Cache-Mmap-0.11",3]);
    _gaq.push(["_setCustomVar",3,"Module","Cache::Mmap",3]);
    _gaq.push(["_setCustomVar",1,"Author","PMH",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?Cache::Mmap">permalink</a></div>
  <a href="/~pmh/">Peter Haworth</a> &gt;
  <a href="/~pmh/Cache-Mmap-0.11/">Cache-Mmap-0.11</a> &gt;
  Cache::Mmap
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/a2617c5e07600426ce2f65ac3d257709?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/P/PM/PMH/Cache-Mmap-0.11.tar.gz">Cache-Mmap-0.11.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=Cache%3A%3AMmap;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~PMH/Cache-Mmap-0.11/Mmap.pm">Annotate this POD
(2)
</a></p>
<div class=box style='width:150px; float: right'>
<h1 class=t5>Related Modules</h1>
<div style="margin:2px">
<a href="/perldoc?MLDBM%3A%3ASync">MLDBM::Sync</a><br>
<a href="/perldoc?IPC%3A%3AShareable">IPC::Shareable</a><br>
<a href="/perldoc?Cache%3A%3ACache">Cache::Cache</a><br>
<a href="/perldoc?Apache%3A%3ARegistry">Apache::Registry</a><br>
<a href="/perldoc?Apache%3A%3AResource">Apache::Resource</a><br>
<a href="/perldoc?Apache%3A%3ADBI">Apache::DBI</a><br>
<a href="/perldoc?Apache%3A%3AReload">Apache::Reload</a><br>
<a href="/perldoc?File%3A%3ATail">File::Tail</a><br>
<a href="/perldoc?IPC%3A%3ASharedCache">IPC::SharedCache</a><br>
<a href="/perldoc?Data%3A%3ADumper">Data::Dumper</a><br>
<small>
<a href="http://perlmonks.org/?node=cpan+module+search&pivot=1&module=Cache%3A%3AMmap">more...</a><br>
By <a href="http://perlmonks.org/">perlmonks.org</a></small>
</div>
</div>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>Open&nbsp;</td><td style="text-align:right"> 2</td></tr>
</table>
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=Cache-Mmap">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  0.11 &nbsp;
<span class="noprint">
  <a href="/src/PMH/Cache-Mmap-0.11/Mmap.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <li class='indexItem indexItem1'><a href='#CLASS_METHODS'>CLASS METHODS</a>
  <li class='indexItem indexItem1'><a href='#METHODS'>METHODS</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#CACHE_DATA_METHODS'>CACHE DATA METHODS</a>
    <li class='indexItem indexItem2'><a href='#CONFIGURATION_METHODS'>CONFIGURATION METHODS</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#AUTHOR'>AUTHOR</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Cache::Mmap - Shared data cache using memory mapped files</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">  use Cache::Mmap;

  $cache=Cache::Mmap-&#62;new($filename,\%options);

  $val1=$cache-&#62;read($key1);
  $cache-&#62;write($key2,$val2);
  $cache-&#62;delete($key3);</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This module implements a shared data cache, using memory mapped files. If routines are provided which interact with the underlying data, access to the cache is completely transparent, and the module handles all the details of refreshing cache contents, and updating underlying data, if necessary.</p>

<p>Cache entries are assigned to &#34;buckets&#34; within the cache file, depending on the key. Within each bucket, entries are stored approximately in order of last access, so that frequently accessed entries will move to the head of the bucket, thus decreasing access time. Concurrent accesses to the same bucket are prevented by file locking of the relevant section of the cache file.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="CLASS_METHODS"
>CLASS METHODS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<dl>
<dt><a name='new'></a><a name="new($filename,\%options)"
>new($filename,\%options)</a></dt>

<dd>
<p>Creates a new cache object. If the file named by <code>$filename</code> does not already exist, it will be created. If the cache object cannot be created for any reason, an exception will be thrown. Various options may be set in <code>%options</code>, which affect the behaviour of the cache (defaults in parentheses):</p>

<dl>
<dt><a name='permissions'></a><a name="permissions_(0600)"
>permissions (0600)</a></dt>

<dd>
<p>Sets the file permissions for the cache file if it doesn&#39;t already exist.</p>

<dt><a name='buckets'></a><a name="buckets_(13)"
>buckets (13)</a></dt>

<dd>
<p>Sets the number of buckets inside the cache file. A larger number of buckets will give better performance for a cache with many accesses, as there will be less chance of concurrent access to the same bucket.</p>

<dt><a name='bucketsize'></a><a name="bucketsize_(1024)"
>bucketsize (1024)</a></dt>

<dd>
<p>Sets the size of each bucket, in bytes. A larger bucket size will be needed to store large cache entries. If the bucketsize is not large enough to hold a particular entry, it will still be passed between the underlying data and the application in its entirety, but will not be stored in the cache.</p>

<dt><a name='pagesize'></a><a name="pagesize_(1024)"
>pagesize (1024)</a></dt>

<dd>
<p>Sets the alignment of buckets within the file. The file header will be extended to this size, and bucket sizes will be rounded up to the nearest multiple. Choosing a pagesize equal to the virtual memory page size of the host system should improve performance.</p>

<dt><a name='strings'></a><a name="strings_(0)"
>strings (0)</a></dt>

<dd>
<p>If true, cache entries are treated as strings, rather than references. This will help performance for string-only caches, as no time will be taken to serialize cache entries.</p>

<dt><a name='expiry'></a><a name="expiry_(0)"
>expiry (0)</a></dt>

<dd>
<p>If non-zero, sets the length of time, in seconds, which cache entries are considered valid. A new entry will be fetched from the underlying data if an expired cache entry would otherwise have been returned.</p>

<dt><a name='context'></a><a name="context_(undef)"
>context (undef)</a></dt>

<dd>
<p>This value is passed to the read/write/delete routines below, to provide context. This will typically be a database handle, used to fetch data from.</p>

<dt><a name='read'></a><a name="read_(undef)"
>read (undef)</a></dt>

<dd>
<p>Provides a code reference to a routine which will fetch entries from the underlying data. Called as <code>$read-&#62;($key,$context)</code>, this routine should return a list <code>($found,$value)</code>, where <code>$found</code> is true if the entry could be found in the underlying data, and <code>$value</code> is the value to cache.</p>

<p>If the routine only returns a single scalar, that will be taken as the value, and <code>$found</code> will be set to true if the value is defined.</p>

<p>If this routine is not provided, only values already in the cache will ever be returned.</p>

<p>There are currently two special values of <code>$found</code> which cause slightly different behaviour. These are constants which may be imported in the <code>use</code> statement.</p>

<dl>
<dt><a name='Cache'></a><a name="Cache::Mmap::CMM_keep_expired"
><code>Cache::Mmap::CMM_keep_expired</code></a></dt>

<dd>
<p>Use the previously cached value, even if it has expired. This is useful if the underlying data source has become unavailable for some reason. Note that even though the value returned will be ignored in this case, it must be returned to avoid <code>$found</code> being interpreted as a single scalar:</p>

<pre class="sh_perl">  return (Cache::Mmap::CMM_keep_expired, undef);</pre>

<dt><a name='Cache'></a><a name="Cache::Mmap::CMM_keep_expired_refresh"
><code>Cache::Mmap::CMM_keep_expired_refresh</code></a></dt>

<dd>
<p>This causes the same behaviour as <code>CMM_keep_expired</code>, but the cache entry&#39;s expiry time will be reset as if a value had been successfully read from the underlying data.</p>
</dd>
</dl>

<dt><a name='cachenegative'></a><a name="cachenegative_(0)"
>cachenegative (0)</a></dt>

<dd>
<p>If true, even unsuccessful fetches from the underlying data are cached. This can be useful to only search the underlying data once for each required key.</p>

<dt><a name='write'></a><a name="write_(undef)"
>write (undef)</a></dt>

<dd>
<p>Provides a code reference to a routine which will write cache entries into the underlying data. This routine will be called by write(), to synchronise the underlying data with the cache. Called as <code>$write-&#62;($key,$val,$context)</code>. If the routine is not provided, the underlying data will not be synchronised after cache writes.</p>

<dt><a name='writethrough'></a><a name="writethrough_(1)"
>writethrough (1)</a></dt>

<dd>
<p>If true, the <code>write</code> routine above will be called as soon as write() is called. This provides immediate synchronisation of underlying data and cache contents.</p>

<p>If false, the <code>write</code> routine will be called for each cache entry which no longer fits in its bucket after a cache read or write. This provides a write-as-necessary behaviour, which may be more efficient than the writethrough behaviour. However, only data fetched through the cache will reflect these changes.</p>

<dt><a name='delete'></a><a name="delete_(undef)"
>delete (undef)</a></dt>

<dd>
<p>Provides a code reference to a routine which will delete items from the underlying data. This routine will be called by delete(), to synchronise the underlying data with the cache. Called as <code>$delete-&#62;($key,$cval,$context)</code>, where <code>$cval</code> is the value currently stored in the cache. If this routine is not provided, entries deleted from the cache have no effect on the underlying data.</p>
</dd>
</dl>

<p>An alternative to supplying a <code>write</code> routine, is to call delete() after updating the underlying data. Note however, that in the case of databases, this should be done after committing the update, so that a concurrent process doesn&#39;t reload the cache between being the entry being deleted, and the database updates being committed.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="METHODS"
>METHODS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="CACHE_DATA_METHODS"
>CACHE DATA METHODS</a></h2>

<p>These are the everyday methods used to access the data stored by the cache.</p>

<dl>
<dt><a name='read'></a><a name="read($key)"
>read($key)</a></dt>

<dd>
<p>Reads an entry from the cache, or from the underlying data if not cached. Returns the value in scalar context, and <code>($found,$value)</code> in list context, where <code>$found</code> is true if the item was found in either the cache or the underlying data.</p>

<dt><a name='write'></a><a name="write($key,$val)"
>write($key,$val)</a></dt>

<dd>
<p>Writes an entry into the cache, and depending on the configuration, into the underlying data.</p>

<dt><a name='delete'></a><a name="delete($key)"
>delete($key)</a></dt>

<dd>
<p>Deletes an entry from the cache, and depending on <code>new()</code> options, from the underlying data. Returns the value in scalar context, and <code>($found,$value)</code> in list context, where <code>$found</code> is true if the item was found in the cache.</p>

<dt><a name='entries'></a><a name="entries()"
>entries()</a></dt>

<dd>
<dt><a name='entries'></a><a name="entries(0)"
>entries(0)</a></dt>

<dd>
<p>Returns a list of the keys of entries held in the cache. Note that this list may be immediately out of date, due to the shared nature of the cache. Entries may be added or removed by other processes between this list being generated and when it is used.</p>

<dt><a name='entries'></a><a name="entries(1)"
>entries(1)</a></dt>

<dd>
<p>Returns a list of hashrefs representing entries held in the cache. The following keys are present in each hashref:</p>

<pre class="sh_perl">  key    The key used to identify the entry
  time   The time the entry was stored (seconds since the epoch)
  dirty  Whether the entry needs writing to the underlying data</pre>

<p>The same caveat applies to the currency of this information as above.</p>

<dt><a name='entries'></a><a name="entries(2)"
>entries(2)</a></dt>

<dd>
<p>As <code>entries(1)</code>, with the addition of a <code>value</code> element in each hashref, holding the value stored in the cache entry.</p>

<dt><a name='quick_clear'></a><a name="quick_clear()"
>quick_clear()</a></dt>

<dd>
<p>Forcefully delete the cache, with prejudice. Unwritten dirty elements are <b>not</b> written back to the underlying data source; they are simply thrown away.</p>
</dd>
</dl>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="CONFIGURATION_METHODS"
>CONFIGURATION METHODS</a></h2>

<p>These methods are used to examine/update the configuration of a cache. Most of these methods are read-only, and the value returned may be different to that passed to the constructor, since the cache may have been created by an earlier process which specified different parameters.</p>

<dl>
<dt><a name='buckets'></a><a name="buckets()"
>buckets()</a></dt>

<dd>
<p>Returns the number of buckets in the cache file.</p>

<dt><a name='bucketsize'></a><a name="bucketsize()"
>bucketsize()</a></dt>

<dd>
<p>Returns the size of buckets (in bytes) in the cache file.</p>

<dt><a name='cachenegative'></a><a name="cachenegative()"
>cachenegative()</a></dt>

<dd>
<p>Returns true if items not found in the underlying data are cached anyway.</p>

<dt><a name='context'></a><a name="context()"
>context()</a></dt>

<dd>
<p>Returns the context data for reads and writes to the underlying data.</p>

<dt><a name='context'></a><a name="context($context)"
>context($context)</a></dt>

<dd>
<p>Provides new context data for reads and writes to the underlying data.</p>

<dt><a name='expiry'></a><a name="expiry()"
>expiry()</a></dt>

<dd>
<p>Returns the time in seconds cache entries are considered valid for, or zero for indefinite validity.</p>

<dt><a name='pagesize'></a><a name="pagesize()"
>pagesize()</a></dt>

<dd>
<p>Returns the page size (in bytes) of the cache file.</p>

<dt><a name='strings'></a><a name="strings()"
>strings()</a></dt>

<dd>
<p>Returns true if the cache stores strings rather than references.</p>

<dt><a name='writethrough'></a><a name="writethrough()"
>writethrough()</a></dt>

<dd>
<p>Returns true if items written to the cache are immediately written to the underlying data.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHOR"
>AUTHOR <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Copyright (C) Institute of Physics Publishing 2002-2008</p>

<pre class="sh_perl">        Peter Haworth &#60;pmh@edison.ioppublishing.com&#62;</pre>

<p>You may distribute under the terms of the GPL or the Artistic License, as distributed with Perl.</p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78259 Uploads, 24725 Distributions
106040 Modules, 9649 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Fri Apr 27 08:07:55 2012 GMT (0.269428014755249) @cpansearch1 -->
 </body>
</html>
