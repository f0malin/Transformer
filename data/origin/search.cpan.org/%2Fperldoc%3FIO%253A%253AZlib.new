<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>IO::Zlib - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","IO-Zlib",3]);
    _gaq.push(["_setCustomVar",5,"Release","IO-Zlib-1.10",3]);
    _gaq.push(["_setCustomVar",3,"Module","IO::Zlib",3]);
    _gaq.push(["_setCustomVar",1,"Author","TOMHUGHES",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?IO::Zlib">permalink</a></div>
  <a href="/~tomhughes/">Tom Hughes</a> &gt;
  <a href="/~tomhughes/IO-Zlib-1.10/">IO-Zlib-1.10</a> &gt;
  IO::Zlib
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/2aaf55698277c3533d32b484deff40a1?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/T/TO/TOMHUGHES/IO-Zlib-1.10.tar.gz">IO-Zlib-1.10.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=IO%3A%3AZlib;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~TOMHUGHES/IO-Zlib-1.10/Zlib.pm">Annotate this POD
</a></p>
<div class=box style='width:150px; float: right'>
<h1 class=t5>Related Modules</h1>
<div style="margin:2px">
<a href="/perldoc?Archive%3A%3ATar">Archive::Tar</a><br>
<a href="/perldoc?Compress%3A%3AZlib">Compress::Zlib</a><br>
<a href="/perldoc?Archive%3A%3AZip">Archive::Zip</a><br>
<a href="/perldoc?Image%3A%3AMagick">Image::Magick</a><br>
<a href="/perldoc?PerlIO%3A%3Agzip">PerlIO::gzip</a><br>
<a href="/perldoc?IO%3A%3AHandle">IO::Handle</a><br>
<a href="/perldoc?Tie%3A%3AFile">Tie::File</a><br>
<a href="/perldoc?IO%3A%3AFile">IO::File</a><br>
<a href="/perldoc?IO%3A%3AScalar">IO::Scalar</a><br>
<a href="/perldoc?Compress%3A%3ABzip2">Compress::Bzip2</a><br>
<small>
<a href="http://perlmonks.org/?node=cpan+module+search&pivot=1&module=IO%3A%3AZlib">more...</a><br>
By <a href="http://perlmonks.org/">perlmonks.org</a></small>
</div>
</div>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>New&nbsp;</td><td style="text-align:right"> 2</td></tr>
<tr><td>Open&nbsp;</td><td style="text-align:right"> 4</td></tr>
</table>
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=IO-Zlib">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  1.10 &nbsp;
<span class="noprint">
  <a href="/src/TOMHUGHES/IO-Zlib-1.10/Zlib.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <li class='indexItem indexItem1'><a href='#CONSTRUCTOR'>CONSTRUCTOR</a>
  <li class='indexItem indexItem1'><a href='#OBJECT_METHODS'>OBJECT METHODS</a>
  <li class='indexItem indexItem1'><a href='#USING_THE_EXTERNAL_GZIP'>USING THE EXTERNAL GZIP</a>
  <li class='indexItem indexItem1'><a href='#CLASS_METHODS'>CLASS METHODS</a>
  <li class='indexItem indexItem1'><a href='#DIAGNOSTICS'>DIAGNOSTICS</a>
  <li class='indexItem indexItem1'><a href='#SEE_ALSO'>SEE ALSO</a>
  <li class='indexItem indexItem1'><a href='#HISTORY'>HISTORY</a>
  <li class='indexItem indexItem1'><a href='#COPYRIGHT'>COPYRIGHT</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>IO::Zlib - IO:: style interface to <a href="/perldoc?Compress%3A%3AZlib" class="podlinkpod"
>Compress::Zlib</a></p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>With any version of Perl 5 you can use the basic OO interface:</p>

<pre class="sh_perl">    use IO::Zlib;

    $fh = new IO::Zlib;
    if ($fh-&#62;open(&#34;file.gz&#34;, &#34;rb&#34;)) {
        print &#60;$fh&#62;;
        $fh-&#62;close;
    }

    $fh = IO::Zlib-&#62;new(&#34;file.gz&#34;, &#34;wb9&#34;);
    if (defined $fh) {
        print $fh &#34;bar\n&#34;;
        $fh-&#62;close;
    }

    $fh = IO::Zlib-&#62;new(&#34;file.gz&#34;, &#34;rb&#34;);
    if (defined $fh) {
        print &#60;$fh&#62;;
        undef $fh;       # automatically closes the file
    }</pre>

<p>With Perl 5.004 you can also use the TIEHANDLE interface to access compressed files just like ordinary files:</p>

<pre class="sh_perl">    use IO::Zlib;

    tie *FILE, &#39;IO::Zlib&#39;, &#34;file.gz&#34;, &#34;wb&#34;;
    print FILE &#34;line 1\nline2\n&#34;;

    tie *FILE, &#39;IO::Zlib&#39;, &#34;file.gz&#34;, &#34;rb&#34;;
    while (&#60;FILE&#62;) { print &#34;LINE: &#34;, $_ };</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><code>IO::Zlib</code> provides an IO:: style interface to <a href="/perldoc?Compress%3A%3AZlib" class="podlinkpod"
>Compress::Zlib</a> and hence to gzip/zlib compressed files. It provides many of the same methods as the <a href="/perldoc?IO%3A%3AHandle" class="podlinkpod"
>IO::Handle</a> interface.</p>

<p>Starting from IO::Zlib version 1.02, IO::Zlib can also use an external <em>gzip</em> command. The default behaviour is to try to use an external <em>gzip</em> if no <code>Compress::Zlib</code> can be loaded, unless explicitly disabled by</p>

<pre class="sh_perl">    use IO::Zlib qw(:gzip_external 0);</pre>

<p>If explicitly enabled by</p>

<pre class="sh_perl">    use IO::Zlib qw(:gzip_external 1);</pre>

<p>then the external <em>gzip</em> is used <b>instead</b> of <code>Compress::Zlib</code>.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="CONSTRUCTOR"
>CONSTRUCTOR <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<dl>
<dt><a name='new'></a><a name="new_(_[ARGS]_)"
>new ( [ARGS] )</a></dt>

<dd>
<p>Creates an <code>IO::Zlib</code> object. If it receives any parameters, they are passed to the method <code>open</code>; if the open fails, the object is destroyed. Otherwise, it is returned to the caller.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="OBJECT_METHODS"
>OBJECT METHODS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<dl>
<dt><a name='open'></a><a name="open_(_FILENAME,_MODE_)"
>open ( FILENAME, MODE )</a></dt>

<dd>
<p><code>open</code> takes two arguments. The first is the name of the file to open and the second is the open mode. The mode can be anything acceptable to <a href="/perldoc?Compress%3A%3AZlib" class="podlinkpod"
>Compress::Zlib</a> and by extension anything acceptable to <i>zlib</i> (that basically means POSIX fopen() style mode strings plus an optional number to indicate the compression level).</p>

<dt><a name="opened"
>opened</a></dt>

<dd>
<p>Returns true if the object currently refers to a opened file.</p>

<dt><a name="close"
>close</a></dt>

<dd>
<p>Close the file associated with the object and disassociate the file from the handle. Done automatically on destroy.</p>

<dt><a name="getc"
>getc</a></dt>

<dd>
<p>Return the next character from the file, or undef if none remain.</p>

<dt><a name="getline"
>getline</a></dt>

<dd>
<p>Return the next line from the file, or undef on end of string. Can safely be called in an array context. Currently ignores $/ ($INPUT_RECORD_SEPARATOR or $RS when <a href="/perldoc?English" class="podlinkpod"
>English</a> is in use) and treats lines as delimited by &#34;\n&#34;.</p>

<dt><a name="getlines"
>getlines</a></dt>

<dd>
<p>Get all remaining lines from the file. It will croak() if accidentally called in a scalar context.</p>

<dt><a name='print'></a><a name="print_(_ARGS..._)"
>print ( ARGS... )</a></dt>

<dd>
<p>Print ARGS to the file.</p>

<dt><a name='read'></a><a name="read_(_BUF,_NBYTES,_[OFFSET]_)"
>read ( BUF, NBYTES, [OFFSET] )</a></dt>

<dd>
<p>Read some bytes from the file. Returns the number of bytes actually read, 0 on end-of-file, undef on error.</p>

<dt><a name="eof"
>eof</a></dt>

<dd>
<p>Returns true if the handle is currently positioned at end of file?</p>

<dt><a name='seek'></a><a name="seek_(_OFFSET,_WHENCE_)"
>seek ( OFFSET, WHENCE )</a></dt>

<dd>
<p>Seek to a given position in the stream. Not yet supported.</p>

<dt><a name="tell"
>tell</a></dt>

<dd>
<p>Return the current position in the stream, as a numeric offset. Not yet supported.</p>

<dt><a name='setpos'></a><a name="setpos_(_POS_)"
>setpos ( POS )</a></dt>

<dd>
<p>Set the current position, using the opaque value returned by <code>getpos()</code>. Not yet supported.</p>

<dt><a name='getpos'></a><a name="getpos_(_POS_)"
>getpos ( POS )</a></dt>

<dd>
<p>Return the current position in the string, as an opaque object. Not yet supported.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="USING_THE_EXTERNAL_GZIP"
>USING THE EXTERNAL GZIP <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>If the external <em>gzip</em> is used, the following <code>open</code>s are used:</p>

<pre class="sh_perl">    open(FH, &#34;gzip -dc $filename |&#34;)  # for read opens
    open(FH, &#34; | gzip &#62; $filename&#34;)   # for write opens</pre>

<p>You can modify the &#39;commands&#39; for example to hardwire an absolute path by e.g.</p>

<pre class="sh_perl">    use IO::Zlib &#39;:gzip_read_open&#39;  =&#62; &#39;/some/where/gunzip -c %s |&#39;;
    use IO::Zlib &#39;:gzip_write_open&#39; =&#62; &#39;| /some/where/gzip.exe &#62; %s&#39;;</pre>

<p>The <code>%s</code> is expanded to be the filename (<code>sprintf</code> is used, so be careful to escape any other <code>%</code> signs). The &#39;commands&#39; are checked for sanity - they must contain the <code>%s</code>, and the read open must end with the pipe sign, and the write open must begin with the pipe sign.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="CLASS_METHODS"
>CLASS METHODS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<dl>
<dt><a name="has_Compress_Zlib"
>has_Compress_Zlib</a></dt>

<dd>
<p>Returns true if <code>Compress::Zlib</code> is available. Note that this does not mean that <code>Compress::Zlib</code> is being used: see <a href="#gzip_external" class="podlinkpod"
>&#34;gzip_external&#34;</a> and <a href="/perldoc?gzip_used" class="podlinkpod"
>gzip_used</a>.</p>

<dt><a name="gzip_external"
>gzip_external</a></dt>

<dd>
<p>Undef if an external <em>gzip</em> <b>can</b> be used if <code>Compress::Zlib</code> is not available (see <a href="#has_Compress_Zlib" class="podlinkpod"
>&#34;has_Compress_Zlib&#34;</a>), true if an external <em>gzip</em> is explicitly used, false if an external <em>gzip</em> must not be used. See <a href="#gzip_used" class="podlinkpod"
>&#34;gzip_used&#34;</a>.</p>

<dt><a name="gzip_used"
>gzip_used</a></dt>

<dd>
<p>True if an external <em>gzip</em> is being used, false if not.</p>

<dt><a name="gzip_read_open"
>gzip_read_open</a></dt>

<dd>
<p>Return the &#39;command&#39; being used for opening a file for reading using an external <em>gzip</em>.</p>

<dt><a name="gzip_write_open"
>gzip_write_open</a></dt>

<dd>
<p>Return the &#39;command&#39; being used for opening a file for writing using an external <em>gzip</em>.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DIAGNOSTICS"
>DIAGNOSTICS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<dl>
<dt><a name='IO'></a><a name="IO::Zlib::getlines:_must_be_called_in_list_context"
>IO::Zlib::getlines: must be called in list context</a></dt>

<dd>
<p>If you want read lines, you must read in list context.</p>

<dt><a name='IO'></a><a name="IO::Zlib::gzopen_external:_mode_&#39;...&#39;_is_illegal"
>IO::Zlib::gzopen_external: mode &#39;...&#39; is illegal</a></dt>

<dd>
<p>Use only modes &#39;rb&#39; or &#39;wb&#39; or /wb[1-9]/.</p>

<dt><a name='IO'></a><a name="IO::Zlib::import:_&#39;...&#39;_is_illegal"
>IO::Zlib::import: &#39;...&#39; is illegal</a></dt>

<dd>
<p>The known import symbols are the <code>:gzip_external</code>, <code>:gzip_read_open</code>, and <code>:gzip_write_open</code>. Anything else is not recognized.</p>

<dt><a name='IO'></a><a name="IO::Zlib::import:_&#39;:gzip_external&#39;_requires_an_argument"
>IO::Zlib::import: &#39;:gzip_external&#39; requires an argument</a></dt>

<dd>
<p>The <code>:gzip_external</code> requires one boolean argument.</p>

<dt><a name='IO'></a><a name="IO::Zlib::import:_&#39;gzip_read_open&#39;_requires_an_argument"
>IO::Zlib::import: &#39;gzip_read_open&#39; requires an argument</a></dt>

<dd>
<p>The <code>:gzip_external</code> requires one string argument.</p>

<dt><a name='IO'></a><a name="IO::Zlib::import:_&#39;gzip_read&#39;_&#39;...&#39;_is_illegal"
>IO::Zlib::import: &#39;gzip_read&#39; &#39;...&#39; is illegal</a></dt>

<dd>
<p>The <code>:gzip_read_open</code> argument must end with the pipe sign (|) and have the <code>%s</code> for the filename. See <a href="#USING_THE_EXTERNAL_GZIP" class="podlinkpod"
>&#34;USING THE EXTERNAL GZIP&#34;</a>.</p>

<dt><a name='IO'></a><a name="IO::Zlib::import:_&#39;gzip_write_open&#39;_requires_an_argument"
>IO::Zlib::import: &#39;gzip_write_open&#39; requires an argument</a></dt>

<dd>
<p>The <code>:gzip_external</code> requires one string argument.</p>

<dt><a name='IO'></a><a name="IO::Zlib::import:_&#39;gzip_write_open&#39;_&#39;...&#39;_is_illegal"
>IO::Zlib::import: &#39;gzip_write_open&#39; &#39;...&#39; is illegal</a></dt>

<dd>
<p>The <code>:gzip_write_open</code> argument must begin with the pipe sign (|) and have the <code>%s</code> for the filename. An output redirect (&#62;) is also often a good idea, depending on your operating system shell syntax. See <a href="#USING_THE_EXTERNAL_GZIP" class="podlinkpod"
>&#34;USING THE EXTERNAL GZIP&#34;</a>.</p>

<dt><a name='IO'></a><a name="IO::Zlib::import:_no_Compress::Zlib_and_no_external_gzip"
>IO::Zlib::import: no Compress::Zlib and no external gzip</a></dt>

<dd>
<p>Given that we failed to load <code>Compress::Zlib</code> and that the use of an external <em>gzip</em> was disabled, IO::Zlib has not much chance of working.</p>

<dt><a name='IO'></a><a name="IO::Zlib::open:_needs_a_filename"
>IO::Zlib::open: needs a filename</a></dt>

<dd>
<p>No filename, no open.</p>

<dt><a name='IO'></a><a name="IO::Zlib::READ:_NBYTES_must_be_specified"
>IO::Zlib::READ: NBYTES must be specified</a></dt>

<dd>
<p>We must know how much to read.</p>

<dt><a name='IO'></a><a name="IO::Zlib::WRITE:_too_long_LENGTH"
>IO::Zlib::WRITE: too long LENGTH</a></dt>

<dd>
<p>The LENGTH must be less than or equal to the buffer size.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SEE_ALSO"
>SEE ALSO <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><a href="/perldoc?perlfunc" class="podlinkpod"
>perlfunc</a>, <a href="/perldoc?perlop#I/O_Operators" class="podlinkpod"
>&#34;I/O Operators&#34; in perlop</a>, <a href="/perldoc?IO%3A%3AHandle" class="podlinkpod"
>IO::Handle</a>, <a href="/perldoc?Compress%3A%3AZlib" class="podlinkpod"
>Compress::Zlib</a></p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="HISTORY"
>HISTORY <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Created by Tom Hughes &#60;<em>tom@compton.nu</em>&#62;.</p>

<p>Support for external gzip added by Jarkko Hietaniemi &#60;<em>jhi@iki.fi</em>&#62;.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="COPYRIGHT"
>COPYRIGHT <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Copyright (c) 1998-2004 Tom Hughes &#60;<em>tom@compton.nu</em>&#62;. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78069 Uploads, 24686 Distributions
105893 Modules, 9637 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Sun Apr 22 04:52:05 2012 GMT (0.129703044891357) @cpansearch1 -->
 </body>
</html>
