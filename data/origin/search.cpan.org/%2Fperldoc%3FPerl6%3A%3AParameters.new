<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>Perl6::Parameters - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","Perl6-Parameters",3]);
    _gaq.push(["_setCustomVar",5,"Release","Perl6-Parameters-0.03",3]);
    _gaq.push(["_setCustomVar",3,"Module","Perl6::Parameters",3]);
    _gaq.push(["_setCustomVar",1,"Author","BRENTDAX",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?Perl6::Parameters">permalink</a></div>
  <a href="/~brentdax/">Brent Dax</a> &gt;
  <a href="/~brentdax/Perl6-Parameters-0.03/">Perl6-Parameters-0.03</a> &gt;
  Perl6::Parameters
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/a7e99bcfc9c01d1e99d5f16c1f0b571e?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/B/BR/BRENTDAX/Perl6-Parameters-0.03.tar.gz">Perl6-Parameters-0.03.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=Perl6%3A%3AParameters;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~BRENTDAX/Perl6-Parameters-0.03/Parameters.pm">Annotate this POD
(1)
</a></p>
<div class=box style='width:150px; float: right'>
<h1 class=t5>Related Modules</h1>
<div style="margin:2px">
<a href="/perldoc?Filter%3A%3ASimple">Filter::Simple</a><br>
<a href="/perldoc?Perl6%3A%3AClasses">Perl6::Classes</a><br>
<a href="/perldoc?LWP%3A%3ASimple">LWP::Simple</a><br>
<small>
<a href="http://perlmonks.org/?node=cpan+module+search&pivot=1&module=Perl6%3A%3AParameters">more...</a><br>
By <a href="http://perlmonks.org/">perlmonks.org</a></small>
</div>
</div>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>Open&nbsp;</td><td style="text-align:right"> 0</td></tr>
</table>
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=Perl6-Parameters">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  0.03 &nbsp;
<span class="noprint">
  <a href="/src/BRENTDAX/Perl6-Parameters-0.03/Parameters.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DETAILS'>DETAILS</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#Crafting_Parameter_Lists'>Crafting Parameter Lists</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#CAVEATS'>CAVEATS</a>
  <li class='indexItem indexItem1'><a href='#BUGS'>BUGS</a>
  <li class='indexItem indexItem1'><a href='#AUTHOR'>AUTHOR</a>
  <li class='indexItem indexItem1'><a href='#COPYRIGHT'>COPYRIGHT</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Perl6::Parameters &#150; Perl 6-style prototypes with named parameters</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">        use Perl6::Parameters;

        sub mysub($foo, ARRAY $bar, *%rest) {
                ...
        }</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DETAILS"
>DETAILS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Perl6::Parameters is a Perl module which simulates Perl 6&#39;s named parameters. (When I talk about &#34;named parameters&#34; I mean something like the parameters you&#39;re used to from C, Java and many other languages--not pass-a-hash-with-the-parameters-in-it things.)</p>

<p>Like most other programming languages, Perl 6 will support subroutines with pre-declared variables the parameters are put into. (Using this will be optional, however.) This goes far beyond the &#34;line-noise prototypes&#34; available in Perl 5, which only allow you to control context and automatically take references to some parameters--lines like <code>my($first, $second)=(@_)</code> will no longer be necessary.</p>

<p>Although Perl 6 will have this, Perl 5 doesn&#39;t; this module makes it so that Perl 5 does. It uses some other Perl 6-isms too, notably the names for builtin types and the unary-asterisk notation for flattening a list.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Crafting_Parameter_Lists"
>Crafting Parameter Lists</a></h2>

<p>Crafting parameter lists is simple; just declare your subroutine and put the parameters separated by commas or semicolons, in parenthesis. (Using a semicolon signifies that all remaining parameters are optional; this may not be available this way in Perl 6, but I&#39;m assuming it is until I hear otherwise.)</p>

<p>Most parameters are just variable names like <code>$foo</code>; however, more sophisticated behavior is possible. There are three ways to achieve this.</p>

<p>The first way is by specifying a type for the variable. Certain types make the actual parameters turn into references to themselves:</p>

<ul>
<li><code>ARRAY $foo</code>
<p>This turns an array into a reference to itself and stores the reference into <code>$foo</code>.</p>
</li>

<li><code>HASH $foo</code>
<p>This turns a hash into a reference to itself and stores the reference into <code>$foo</code>.</p>
</li>

<li><code>CODE $foo</code>
<p>This turns a subroutine into a reference to itself and stores the reference into <code>$foo</code>.</p>
</li>

<li><code>SCALAR $foo</code>
<p>This turns a scalar into a reference to itself and stores the reference into <code>$foo</code>.</p>
</li>

<li><code>GLOB $foo</code>
<p>This turns a typeglob into a reference to itself and stores the reference into <code>$foo</code>. Typeglobs will be going away in Perl 6; this type exists in this module so that it&#39;s useful for general use in Perl 5.</p>
</li>

<li><code>REF $foo</code>
<p>This turns any parameter into a reference to itself and stores it into <code>$foo</code>.</p>

<p>This only works in Perl 5.8. Otherwise, it&#39;s treated the same as any other unrecognized type name.</p>
</li>

<li><code>AnythingElse $foo</code>
<p>This has no effect in this module; it&#39;s treated as though you&#39;d typed <code>$foo</code> without the <code>AnythingElse</code>.</p>
</li>
</ul>

<p>For example, if a subroutine had the parameters <code>($foo, HASH $bar, CODE $baz)</code> and was called with <code>($scalar, %hash, &#38;mysub)</code> the subroutine would get the contents of <code>$scalar</code>, a reference to <code>%hash</code> and a reference to <code>&#38;mysub</code>.</p>

<p>The second way is by supplying an actual array or hash as a parameter name. This requires an array or hash to be passed in for that parameter; it preserves the length of the array or hash.</p>

<p>The final way is only available for the last parameter: if an array or hash is prefixed with an asterisk, that array or hash will be filled with any additional parameters.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="CAVEATS"
>CAVEATS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<ul>
<li>In Perl 6, parameters will be passed by constant reference; in this module parameters are passed by value.</li>

<li>In Perl 6, putting an <code>is rw</code> at the end of a parameter will make it read-write; trying to use <code>is rw</code> with this module will cause an error.</li>

<li><code>@_</code> and <code>%_</code> may only be used for the last parameter, and then only when prefixed by an asterisk; any other use causes undefined behavior.</li>

<li>In Perl 6 a definition like <code>HASH $foo</code> will take either a literal hash (with a <code>%</code> sign in front of it) or a reference to a hash; this module requires a <code>%</code> sign. (Similar limitations apply for arrays.)</li>
</ul>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="BUGS"
>BUGS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>None known--but if you find any, send them to &#60;bug-Perl6-Parameters@rt.cpan.org&#62; and CC &#60;brentdax@cpan.org&#62;.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHOR"
>AUTHOR <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Brent Dax &#60;brentdax1@earthlink.net&#62;</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="COPYRIGHT"
>COPYRIGHT <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Copyright (C) 2001 Brent Dax.</p>

<p>This module is free software and may be used, redistributed and modified under the same terms as Perl itself.</p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78058 Uploads, 24685 Distributions
105890 Modules, 9637 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Sat Apr 21 22:19:03 2012 GMT (0.0529711246490479) @cpansearch1 -->
 </body>
</html>
