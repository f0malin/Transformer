<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>RADIUS::UserFile - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","RADIUS-UserFile",3]);
    _gaq.push(["_setCustomVar",5,"Release","RADIUS-UserFile-1.01",3]);
    _gaq.push(["_setCustomVar",3,"Module","RADIUS::UserFile",3]);
    _gaq.push(["_setCustomVar",1,"Author","OEVANS",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?RADIUS::UserFile">permalink</a></div>
  <a href="/~oevans/">O'Shaughnessy Evans</a> &gt;
  <a href="/~oevans/RADIUS-UserFile-1.01/">RADIUS-UserFile-1.01</a> &gt;
  RADIUS::UserFile
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/7fce8019ebb295ba7b5137ed28f3448a?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/O/OE/OEVANS/RADIUS-UserFile-1.01.tar.gz">RADIUS-UserFile-1.01.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=RADIUS%3A%3AUserFile;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~OEVANS/RADIUS-UserFile-1.01/UserFile.pm">Annotate this POD
</a></p>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>New&nbsp;</td><td style="text-align:right"> 2</td></tr>
<tr><td>Open&nbsp;</td><td style="text-align:right"> 0</td></tr>
</table>
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=RADIUS-UserFile">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  1.01 &nbsp;
<span class="noprint">
  <a href="/src/OEVANS/RADIUS-UserFile-1.01/UserFile.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#REQUIRES'>REQUIRES</a>
  <li class='indexItem indexItem1'><a href='#EXPORTS'>EXPORTS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#PACKAGE_METHODS'>PACKAGE METHODS</a>
    <li class='indexItem indexItem2'><a href='#OBJECT_METHODS'>OBJECT METHODS</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#AUTHOR'>AUTHOR</a>
  <li class='indexItem indexItem1'><a href='#SEE_ALSO'>SEE ALSO</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>RADIUS::UserFile - Perl extension for manipulating a RADIUS users file.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">  use RADIUS::UserFile;

  my $users = new RADIUS::UserFile 
                  File =&#62; &#39;/etc/raddb/users&#39;,
                  Check_Items =&#62; [ qw(Password Calling-Station-Id) ];

  $users-&#62;load(&#39;/usr/local/etc/radius/users&#39;);
  
  $users-&#62;add(Who        =&#62; &#39;joeuser&#39;,
              Attributes =&#62; { key1 =&#62; &#39;val1&#39;, key2 =&#62; &#39;val2&#39; },
              Comment    =&#62; &#39;Created on &#39;. scalar localtime);
    
  $users-&#62;update(File =&#62; &#39;/etc/raddb/users&#39;,
                 Who =&#62; qw(joeuser janeuser));

  print $users-&#62;format(&#39;joeuser&#39;);</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="REQUIRES"
>REQUIRES <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Perl5.004, Fcntl, File::Copy, Tie::IxHash</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="EXPORTS"
>EXPORTS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Nothing</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This module provides methods for reading information from and modifying a RADIUS users text file.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="PACKAGE_METHODS"
>PACKAGE METHODS</a></h2>

<dl>
<dt><a name='new'></a><a name="new_RADIUS::UserFile"
>new RADIUS::UserFile</a></dt>

<dd>
<dt><a name='new'></a><a name="new_RADIUS::UserFile(File_=&#62;_$USERS_FILE,_Who_=&#62;_$USER,_Check_Items_=&#62;_[_@CHECK_ITEMS_])"
>new RADIUS::UserFile(File =&#62; <i>$USERS_FILE</i>, Who =&#62; <i>$USER</i>, Check_Items =&#62; [ <i>@CHECK_ITEMS</i> ])</a></dt>

<dd>
<dt><a name='new'></a><a name="new_RADIUS::UserFile(File_=&#62;_$USERS_FILE,_Who_=&#62;_[_@USERS_],_Check_Items_=&#62;_[_@CHECK_ITEMS_])"
>new RADIUS::UserFile(File =&#62; <i>$USERS_FILE</i>, Who =&#62; [ <i>@USERS</i> ], Check_Items =&#62; [ <i>@CHECK_ITEMS</i> ])</a></dt>

<dd>
<p>Creates and returns a new <code>RADIUS::UserFile</code> object.</p>

<p><code>File</code> specifies the RADIUS users file to load (e.g. &#34;/etc/raddb/users&#34;). If no file is specified, one isn&#39;t loaded; in this case, the <code>load()</code> method can be used to retrieve any user data. If an error occurred while reading <code>File</code>, 0 is returned instead.</p>

<p><code>Who</code> limits the retrieval of user information to the list of users specified. A single user can be named using a string, or a set of users can be passed as a reference to an array. If Who is left undefined, all users will be loaded.</p>

<p><code>Check_Items</code> is a reference to a list of attributes that should be included in the first line of the record. By default, this list includes: &#34;Password&#34;, &#34;Auth-Type&#34;, &#34;Called-Station-Id&#34;, &#34;Calling-Station-Id&#34;, &#34;Client-Port-DNIS&#34;, and &#34;Expiration&#34;.</p>
</dd>
</dl>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="OBJECT_METHODS"
>OBJECT METHODS</a></h2>

<dl>
<dt><a name='add'></a><a name="-&#62;add(Who_=&#62;_$USER,_Attributes_=&#62;_\%ATTRS,_Comment_=&#62;_$TEXT,_Debug_=&#62;_level)"
>-&#62;add(Who =&#62; <i>$USER</i>, Attributes =&#62; <i>\%ATTRS</i>, Comment =&#62; <i>$TEXT</i>, Debug =&#62; <i>level</i>)</a></dt>

<dd>
<p>Adds information about the named user. This information will henceforth be available through <code>users</code>, <code>attributes</code>, <code>comment</code>, etc. Any comments are automatically prefixed with &#34;# &#34;. <code>Attributes</code> should be specified as a reference to a hash; each value should either be an array ref or a string. On success, 1 is returned. On error, 0 is returned and STDERR gets an appropriate message. The debug level is used by the <code>debug</code> function described below.</p>

<dt><a name='attributes'></a><a name="-&#62;attributes($USER)"
>-&#62;attributes(<i>$USER</i>)</a></dt>

<dd>
<p>Returns a list of defined attributes for the specified user. If the user doesn&#39;t exist, undef is returned.</p>

<dt><a name='comment'></a><a name="-&#62;comment($USER)"
>-&#62;comment(<i>$USER</i>)</a></dt>

<dd>
<p>Returns a string representing the comments that would prefix the given user&#39;s entry in the users file. If the user doesn&#39;t exist, undef is returned.</p>

<dt><a name='debug'></a><a name="-&#62;debug(level,_@messages)"
>-&#62;debug(<i>level</i>, <i>@messages</i>)</a></dt>

<dd>
<p>Prints out the list of strings in <i>@messages</i> if the debug level is &#62;= <i>level</i>.</p>

<dt><a name='dump'></a><a name="-&#62;dump($USER)"
>-&#62;dump(<i>$USER</i>)</a></dt>

<dd>
<p>Prints out the attributes of the named user, in alphabetical order. $self is returned.</p>

<dt><a name='files'></a><a name="-&#62;files"
>-&#62;files</a></dt>

<dd>
<p>Returns a list of files from which we have read user attributes. The list is sorted according to the order in which the files were read. If no files have yet been read successfully, an empty array is returned.</p>

<dt><a name='format'></a><a name="-&#62;format($USER)"
>-&#62;format(<i>$USER</i>)</a></dt>

<dd>
<p>Returns a string containing the attributes of the named user, prefixed by any comments, according to the format required for the RADIUS users file. If the user doesn&#39;t exist, an empty string is returned.</p>

<dt><a name='load'></a><a name="-&#62;load(File_=&#62;_$USERS_FILE,_Who_=&#62;_$USER)"
>-&#62;load(File =&#62; <i>$USERS_FILE</i>, Who =&#62; <i>$USER</i>)</a></dt>

<dd>
<dt><a name='load'></a><a name="-&#62;load(File_=&#62;_$USERS_FILE,_Who_=&#62;_\@USERS)"
>-&#62;load(File =&#62; <i>$USERS_FILE</i>, Who =&#62; <i>\@USERS</i>)</a></dt>

<dd>
<p>Loads the contents of the specified RADIUS users file. The name of the file is stored in a first-in, last-out stack enumerating which &#34;databases&#34; have been loaded (see <code>files()</code>). The <code>RADIUS::UserFile</code> object is returned. The options are the same as described in <code>new()</code>. If a user already exists and further info is read about that user from the specified file, the new information is just added to what is already known. On success, 1 is returned; on failure, 0 is returned and an appropriate message is sent to STDERR.</p>

<dt><a name='read_users'></a><a name="-&#62;read_users($USERS_FILE,_$USER)"
>-&#62;read_users(<i>$USERS_FILE</i>, <i>$USER</i>)</a></dt>

<dd>
<dt><a name='read_users'></a><a name="-&#62;read_users($USERS_FILE,_\@USERS)"
>-&#62;read_users(<i>$USERS_FILE</i>, <i>\@USERS</i>)</a></dt>

<dd>
<p>Reads in the contents of the specified RADIUS users file, and returns a pair of hashes: one indexed by user name, with each element containing a hash of (attribute name =&#62; [ values ]) pairs; and another also indexed by user name, containing the comments that immediately preceded that user&#39;s file entry. The options are the same as in <code>new()</code>. Each comment value is a string. Each user attribute value is a ref to an array of strings. This is mainly designed as a utility function to be used by <code>new()</code> and <code>load()</code>, and doesn&#39;t affect the calling object. On failure, 0 is returned.</p>

<dt><a name='remove'></a><a name="-&#62;remove($USER_...)"
>-&#62;remove(<i>$USER</i> ...)</a></dt>

<dd>
<p>Deletes the specified users from the object. The list of users successfully deleted is returned.</p>

<dt><a name='removed'></a><a name="-&#62;removed()"
>-&#62;removed()</a></dt>

<dd>
<p>Returns a list of users that have been removed from the object.</p>

<dt><a name='update'></a><a name="-&#62;update(File_=&#62;_$USERS_FILE,_Who_=&#62;_\@USERS)"
>-&#62;update(File =&#62; <i>$USERS_FILE</i>, Who =&#62; <i>\@USERS</i>)</a></dt>

<dd>
<p>Updates user attributes in a RADIUS users file. If the file is specified, its contents are updated; otherwise, the last file read is modified. If a list of users is provided, only their entries are updated; otherwise, all known users are. All users to be &#34;updated&#34; are printed using the results of <code>format</code>. Other users are printed as found. It should be noted that some extra newlines can be left in a file with this method: if an empty line follows a given record that has been <code>remove()</code>d, then it will still be there in the file being updated. On success, non-zero is returned. On failure, 0 is returned and STDERR gets an appropriate message.</p>

<dt><a name='user'></a><a name="-&#62;user($USER)"
>-&#62;user(<i>$USER</i>)</a></dt>

<dd>
<p>Returns a ref to a hash representing the attributes of the named user. If the user doesn&#39;t exist, undef is returned.</p>

<dt><a name='usernames'></a><a name="-&#62;usernames"
>-&#62;usernames</a></dt>

<dd>
<p>Returns a ref to an anonymous array of strings representing the users about which we have attributes defined. If no users are defined, a ref to an empty anonymous array is returned.</p>

<dt><a name='users'></a><a name="-&#62;users"
>-&#62;users</a></dt>

<dd>
<p>Returns a ref to a hash of user hashes, where each user hash is a set of (attribute name =&#62; value) pairs. This is the actual data stored in the object, so use with caution.</p>

<dt><a name='values'></a><a name="-&#62;values($USER,_$ATTRIBUTE)"
>-&#62;values(<i>$USER</i>, <i>$ATTRIBUTE</i>)</a></dt>

<dd>
<p>Returns an array of strings representing the values for the named attribute of the given user. If the user or attribute doesn&#39;t exist, undef is returned.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHOR"
>AUTHOR <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Copyright (c) 2001 O&#39;Shaughnessy Evans &#60;oevans@cpan.org&#62;. All rights reserved. This version is distributed under the same terms as Perl itself (i.e. it&#39;s free), so enjoy.</p>

<p>Thanks to Burkhard Weeber, James Golovich, Peter Bannis, and others for contributions and comments that have improved this software.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SEE_ALSO"
>SEE ALSO <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><a href="/perldoc?RADIUS%3A%3APacket" class="podlinkpod"
>RADIUS::Packet</a>, <a href="/perldoc?RADIUS%3A%3ADictionary" class="podlinkpod"
>RADIUS::Dictionary</a>, <a href="/perldoc?Authen%3A%3ARadius" class="podlinkpod"
>Authen::Radius</a>.</p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78078 Uploads, 24688 Distributions
105904 Modules, 9637 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Sun Apr 22 18:06:22 2012 GMT (0.147496938705444) @cpansearch1 -->
 </body>
</html>
