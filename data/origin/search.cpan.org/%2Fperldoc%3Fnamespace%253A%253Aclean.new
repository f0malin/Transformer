<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>namespace::clean - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","namespace-clean",3]);
    _gaq.push(["_setCustomVar",5,"Release","namespace-clean-0.23",3]);
    _gaq.push(["_setCustomVar",3,"Module","namespace::clean",3]);
    _gaq.push(["_setCustomVar",1,"Author","RIBASUSHI",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?namespace::clean">permalink</a></div>
  <a href="/~ribasushi/">Peter Rabbitson</a> &gt;
  <a href="/~ribasushi/namespace-clean-0.23/">namespace-clean-0.23</a> &gt;
  namespace::clean
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/6a096fdb29481fa7326735fada56c5cf?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/R/RI/RIBASUSHI/namespace-clean-0.23.tar.gz">namespace-clean-0.23.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=namespace%3A%3Aclean;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~RIBASUSHI/namespace-clean-0.23/lib/namespace/clean.pm">Annotate this POD
</a></p>
     <p style="text-align:right"><a href="http://search.cpan.org/dist/namespace-clean">Website</a></p>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>Open&nbsp;</td><td style="text-align:right"> 0</td></tr>
</table>
<a href="http://rt.cpan.org/Public/Dist/Display.html?Name=namespace-clean">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  0.23 &nbsp;
<span class="noprint">
  <a href="/src/RIBASUSHI/namespace-clean-0.23/lib/namespace/clean.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#Keeping_packages_clean'>Keeping packages clean</a>
    <li class='indexItem indexItem2'><a href='#Explicitly_removing_functions_when_your_scope_is_compiled'>Explicitly removing functions when your scope is compiled</a>
    <li class='indexItem indexItem2'><a href='#Moose'>Moose</a>
    <li class='indexItem indexItem2'><a href='#Cleaning_other_packages'>Cleaning other packages</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#METHODS'>METHODS</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#clean_subroutines'>clean_subroutines</a>
    <li class='indexItem indexItem2'><a href='#import'>import</a>
    <li class='indexItem indexItem2'><a href='#unimport'>unimport</a>
    <li class='indexItem indexItem2'><a href='#get_class_store'>get_class_store</a>
    <li class='indexItem indexItem2'><a href='#get_functions'>get_functions</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#IMPLEMENTATION_DETAILS'>IMPLEMENTATION DETAILS</a>
  <li class='indexItem indexItem1'><a href='#SEE_ALSO'>SEE ALSO</a>
  <li class='indexItem indexItem1'><a href='#THANKS'>THANKS</a>
  <li class='indexItem indexItem1'><a href='#AUTHORS'>AUTHORS</a>
  <li class='indexItem indexItem1'><a href='#COPYRIGHT_AND_LICENSE'>COPYRIGHT AND LICENSE</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>namespace::clean - Keep imports and functions out of your namespace</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">  package Foo;
  use warnings;
  use strict;

  use Carp qw(croak);   # &#39;croak&#39; will be removed

  sub bar { 23 }        # &#39;bar&#39; will be removed

  # remove all previously defined functions
  use namespace::clean;

  sub baz { bar() }     # &#39;baz&#39; still defined, &#39;bar&#39; still bound

  # begin to collection function names from here again
  no namespace::clean;

  sub quux { baz() }    # &#39;quux&#39; will be removed

  # remove all functions defined after the &#39;no&#39; unimport
  use namespace::clean;

  # Will print: &#39;No&#39;, &#39;No&#39;, &#39;Yes&#39; and &#39;No&#39;
  print +(__PACKAGE__-&#62;can(&#39;croak&#39;) ? &#39;Yes&#39; : &#39;No&#39;), &#34;\n&#34;;
  print +(__PACKAGE__-&#62;can(&#39;bar&#39;)   ? &#39;Yes&#39; : &#39;No&#39;), &#34;\n&#34;;
  print +(__PACKAGE__-&#62;can(&#39;baz&#39;)   ? &#39;Yes&#39; : &#39;No&#39;), &#34;\n&#34;;
  print +(__PACKAGE__-&#62;can(&#39;quux&#39;)  ? &#39;Yes&#39; : &#39;No&#39;), &#34;\n&#34;;

  1;</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Keeping_packages_clean"
>Keeping packages clean</a></h2>

<p>When you define a function, or import one, into a Perl package, it will naturally also be available as a method. This does not per se cause problems, but it can complicate subclassing and, for example, plugin classes that are included via multiple inheritance by loading them as base classes.</p>

<p>The <code>namespace::clean</code> pragma will remove all previously declared or imported symbols at the end of the current package&#39;s compile cycle. Functions called in the package itself will still be bound by their name, but they won&#39;t show up as methods on your class or instances.</p>

<p>By unimporting via <code>no</code> you can tell <code>namespace::clean</code> to start collecting functions for the next <code>use namespace::clean;</code> specification.</p>

<p>You can use the <code>-except</code> flag to tell <code>namespace::clean</code> that you don&#39;t want it to remove a certain function or method. A common use would be a module exporting an <code>import</code> method along with some functions:</p>

<pre class="sh_perl">  use ModuleExportingImport;
  use namespace::clean -except =&#62; [qw( import )];</pre>

<p>If you just want to <code>-except</code> a single sub, you can pass it directly. For more than one value you have to use an array reference.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Explicitly_removing_functions_when_your_scope_is_compiled"
>Explicitly removing functions when your scope is compiled</a></h2>

<p>It is also possible to explicitly tell <code>namespace::clean</code> what packages to remove when the surrounding scope has finished compiling. Here is an example:</p>

<pre class="sh_perl">  package Foo;
  use strict;

  # blessed NOT available

  sub my_class {
      use Scalar::Util qw( blessed );
      use namespace::clean qw( blessed );

      # blessed available
      return blessed shift;
  }

  # blessed NOT available</pre>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Moose"
>Moose</a></h2>

<p>When using <code>namespace::clean</code> together with <a href="/perldoc?Moose" class="podlinkpod"
>Moose</a> you want to keep the installed <code>meta</code> method. So your classes should look like:</p>

<pre class="sh_perl">  package Foo;
  use Moose;
  use namespace::clean -except =&#62; &#39;meta&#39;;
  ...</pre>

<p>Same goes for <a href="/perldoc?Moose%3A%3ARole" class="podlinkpod"
>Moose::Role</a>.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Cleaning_other_packages"
>Cleaning other packages</a></h2>

<p>You can tell <code>namespace::clean</code> that you want to clean up another package instead of the one importing. To do this you have to pass in the <code>-cleanee</code> option like this:</p>

<pre class="sh_perl">  package My::MooseX::namespace::clean;
  use strict;

  use namespace::clean (); # no cleanup, just load

  sub import {
      namespace::clean-&#62;import(
        -cleanee =&#62; scalar(caller),
        -except  =&#62; &#39;meta&#39;,
      );
  }</pre>

<p>If you don&#39;t care about <code>namespace::clean</code>s discover-and-<code>-except</code> logic, and just want to remove subroutines, try <a href="#clean_subroutines" class="podlinkpod"
>&#34;clean_subroutines&#34;</a>.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="METHODS"
>METHODS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="clean_subroutines"
>clean_subroutines</a></h2>

<p>This exposes the actual subroutine-removal logic.</p>

<pre class="sh_perl">  namespace::clean-&#62;clean_subroutines($cleanee, qw( subA subB ));</pre>

<p>will remove <code>subA</code> and <code>subB</code> from <code>$cleanee</code>. Note that this will remove the subroutines <b>immediately</b> and not wait for scope end. If you want to have this effect at a specific time (e.g. <code>namespace::clean</code> acts on scope compile end) it is your responsibility to make sure it runs at that time.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="import"
>import</a></h2>

<p>Makes a snapshot of the current defined functions and installs a <a href="/perldoc?B%3A%3AHooks%3A%3AEndOfScope" class="podlinkpod"
>B::Hooks::EndOfScope</a> hook in the current scope to invoke the cleanups.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="unimport"
>unimport</a></h2>

<p>This method will be called when you do a</p>

<pre class="sh_perl">  no namespace::clean;</pre>

<p>It will start a new section of code that defines functions to clean up.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="get_class_store"
>get_class_store</a></h2>

<p>This returns a reference to a hash in a passed package containing information about function names included and excluded from removal.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="get_functions"
>get_functions</a></h2>

<p>Takes a class as argument and returns all currently defined functions in it as a hash reference with the function name as key and a typeglob reference to the symbol as value.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="IMPLEMENTATION_DETAILS"
>IMPLEMENTATION DETAILS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This module works through the effect that a</p>

<pre class="sh_perl">  delete $SomePackage::{foo};</pre>

<p>will remove the <code>foo</code> symbol from <code>$SomePackage</code> for run time lookups (e.g., method calls) but will leave the entry alive to be called by already resolved names in the package itself. <code>namespace::clean</code> will restore and therefor in effect keep all glob slots that aren&#39;t <code>CODE</code>.</p>

<p>A test file has been added to the perl core to ensure that this behaviour will be stable in future releases.</p>

<p>Just for completeness sake, if you want to remove the symbol completely, use <code>undef</code> instead.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SEE_ALSO"
>SEE ALSO <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><a href="/perldoc?B%3A%3AHooks%3A%3AEndOfScope" class="podlinkpod"
>B::Hooks::EndOfScope</a></p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="THANKS"
>THANKS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Many thanks to Matt S Trout for the inspiration on the whole idea.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHORS"
>AUTHORS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<ul>
<li>Robert &#39;phaylon&#39; Sedlacek &#60;rs@474.at&#62;</li>

<li>Florian Ragwitz &#60;rafl@debian.org&#62;</li>

<li>Jesse Luehrs &#60;doy@tozt.net&#62;</li>

<li>Peter Rabbitson &#60;ribasushi@cpan.org&#62;</li>

<li>Father Chrysostomos &#60;sprout@cpan.org&#62;</li>
</ul>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="COPYRIGHT_AND_LICENSE"
>COPYRIGHT AND LICENSE <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This software is copyright (c) 2011 by <a href="#AUTHORS" class="podlinkpod"
>&#34;AUTHORS&#34;</a></p>

<p>This is free software; you can redistribute it and/or modify it under the same terms as the Perl 5 programming language system itself.</p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78179 Uploads, 24710 Distributions
106004 Modules, 9645 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Wed Apr 25 06:24:47 2012 GMT (0.100666046142578) @cpansearch1 -->
 </body>
</html>
