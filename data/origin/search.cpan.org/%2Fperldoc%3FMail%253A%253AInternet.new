<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>Mail::Internet - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","MailTools",3]);
    _gaq.push(["_setCustomVar",5,"Release","MailTools-2.09",3]);
    _gaq.push(["_setCustomVar",3,"Module","Mail::Internet",3]);
    _gaq.push(["_setCustomVar",1,"Author","MARKOV",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?Mail::Internet">permalink</a></div>
  <a href="/~markov/">Mark Overmeer</a> &gt;
  <a href="/~markov/MailTools-2.09/">MailTools-2.09</a> &gt;
  Mail::Internet
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/18f0494979b7feef52388275080aaa34?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/M/MA/MARKOV/MailTools-2.09.tar.gz">MailTools-2.09.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=Mail%3A%3AInternet;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~MARKOV/MailTools-2.09/lib/Mail/Internet.pod">Annotate this POD
</a></p>
<div class=box style='width:150px; float: right'>
<h1 class=t5>Related Modules</h1>
<div style="margin:2px">
<a href="/perldoc?Net%3A%3ASMTP">Net::SMTP</a><br>
<a href="/perldoc?Mail%3A%3ABox">Mail::Box</a><br>
<a href="/perldoc?Mail%3A%3AHeader">Mail::Header</a><br>
<a href="/perldoc?MIME%3A%3ALite">MIME::Lite</a><br>
<a href="/perldoc?MIME%3A%3AParser">MIME::Parser</a><br>
<a href="/perldoc?MIME%3A%3AEntity">MIME::Entity</a><br>
<a href="/perldoc?Mail%3A%3AMailer">Mail::Mailer</a><br>
<a href="/perldoc?Net%3A%3APOP3">Net::POP3</a><br>
<a href="/perldoc?Config%3A%3AGeneral">Config::General</a><br>
<a href="/perldoc?Mail%3A%3AAddress">Mail::Address</a><br>
<small>
<a href="http://perlmonks.org/?node=cpan+module+search&pivot=1&module=Mail%3A%3AInternet">more...</a><br>
By <a href="http://perlmonks.org/">perlmonks.org</a></small>
</div>
</div>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>Open&nbsp;</td><td style="text-align:right"> 1</td></tr>
</table>
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=MailTools">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  2.09 &nbsp;
<span class="noprint">
  <a href="/src/MARKOV/MailTools-2.09/lib/Mail/Internet.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <li class='indexItem indexItem1'><a href='#METHODS'>METHODS</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#Constructors'>Constructors</a>
    <li class='indexItem indexItem2'><a href='#Accessors'>Accessors</a>
    <li class='indexItem indexItem2'><a href='#Processing_the_message_as_a_whole'>Processing the message as a whole</a>
    <li class='indexItem indexItem2'><a href='#Processing_the_header'>Processing the header</a>
    <li class='indexItem indexItem2'><a href='#Processing_the_body'>Processing the body</a>
    <li class='indexItem indexItem2'><a href='#High-level_functionality'>High-level functionality</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#SEE_ALSO'>SEE ALSO</a>
  <li class='indexItem indexItem1'><a href='#AUTHORS'>AUTHORS</a>
  <li class='indexItem indexItem1'><a href='#LICENSE'>LICENSE</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Mail::Internet - manipulate email messages</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">  use Mail::Internet;
  my $msg = Mail::Internet-&#62;new(\*STDIN);</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This package implements reading, creating, manipulating, and writing email messages. Sometimes, the implementation tries to be too smart, but in the general case it works as expected.</p>

<p>If you start writing a <b>new application</b>, you should use the <a href="/perldoc?Mail%3A%3ABox" class="podlinkpod"
>Mail::Box</a> distribution, which has more features and handles messages much better according to the RFCs. See <a href="http://perl.overmeer.net/mailbox/" class="podlinkurl"
>http://perl.overmeer.net/mailbox/</a>. You may also chose <a href="/perldoc?MIME%3A%3AEntity" class="podlinkpod"
>MIME::Entity</a>, to get at least some multipart support in your application.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="METHODS"
>METHODS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Constructors"
>Constructors</a></h2>

<dl>
<dt><a name='obj'></a><a name="$obj-&#62;dup()"
>$obj-&#62;<b>dup</b>()</a></dt>

<dd>
<p>Duplicate the message as a whole. Both header and body will be deep-copied: a new <a href="/~markov/MailTools-2.09/lib/Mail/Internet.pod" class="podlinkpod"
>Mail::Internet</a> object is returned.</p>

<dt><a name='obj'></a><a name="$obj-&#62;extract(ARRAY-of-LINES)"
>$obj-&#62;<b>extract</b>(ARRAY-of-LINES)</a></dt>

<dd>
<p>Extract header and body from an ARRAY of message lines. Requires an object already created with <a href="/~markov/MailTools-2.09/lib/Mail/Internet.pod#Constructors" class="podlinkpod"
>new()</a>, which contents will get overwritten.</p>

<dt><a name='obj'></a><a name="$obj-&#62;new([ARG],_[OPTIONS])"
>$obj-&#62;<b>new</b>([ARG], [OPTIONS])</a></dt>

<dd>
<dt><a name='Mail'></a><a name="Mail::Internet-&#62;new([ARG],_[OPTIONS])"
>Mail::Internet-&#62;<b>new</b>([ARG], [OPTIONS])</a></dt>

<dd>
<p>ARG is optional and may be either a file descriptor (reference to a GLOB) or a reference to an array. If given the new object will be initialized with headers and body either from the array of read from the file descriptor.</p>

<p>The <a href="/~markov/MailTools-2.09/lib/Mail/Header.pod#Constructors" class="podlinkpod"
>Mail::Header::new()</a> OPTIONS <code>Modify</code>, <code>MailFrom</code> and <code>FoldLength</code> may also be given.</p>

<pre class="sh_perl"> -Option--Default
  Body    []
  Header  undef</pre>

<dl>
<dt><a name='Body'></a><a name="Body_=&#62;_ARRAY-of-LINES"
>Body =&#62; ARRAY-of-LINES</a></dt>

<dd>
<p>The value of this option should be a reference to an array which contains the lines for the body of the message. Each line should be terminated with <code>\n</code> (LF). If Body is given then <code>Mail::Internet</code> will not attempt to read the body from <code>ARG</code> (even if it is specified).</p>

<dt><a name='Header'></a><a name="Header_=&#62;_Mail::Header"
>Header =&#62; Mail::Header</a></dt>

<dd>
<p>The value of this option should be a <a href="/~markov/MailTools-2.09/lib/Mail/Header.pod" class="podlinkpod"
>Mail::Header</a> object. If given then <code>Mail::Internet</code> will not attempt to read a mail header from <code>ARG</code>, if it was specified.</p>
</dd>
</dl>

<dt><a name='obj'></a><a name="$obj-&#62;read(FILEHANDLE)"
>$obj-&#62;<b>read</b>(FILEHANDLE)</a></dt>

<dd>
<p>Read a message from the FILEHANDLE into an already existing message object. Better use <a href="/~markov/MailTools-2.09/lib/Mail/Internet.pod#Constructors" class="podlinkpod"
>new()</a> with the FILEHANDLE as first argument.</p>
</dd>
</dl>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Accessors"
>Accessors</a></h2>

<dl>
<dt><a name='obj'></a><a name="$obj-&#62;body([BODY])"
>$obj-&#62;<b>body</b>([BODY])</a></dt>

<dd>
<p>Returns the body of the message. This is a reference to an array. Each entry in the array represents a single line in the message.</p>

<p>If <i>BODY</i> is given, it can be a reference to an array or an array, then the body will be replaced. If a reference is passed, it is used directly and not copied, so any subsequent changes to the array will change the contents of the body.</p>

<dt><a name='obj'></a><a name="$obj-&#62;head()"
>$obj-&#62;<b>head</b>()</a></dt>

<dd>
<p>Returns the <code>Mail::Header</code> object which holds the headers for the current message</p>
</dd>
</dl>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Processing_the_message_as_a_whole"
>Processing the message as a whole</a></h2>

<dl>
<dt><a name='obj'></a><a name="$obj-&#62;as_mbox_string([ALREADY_ESCAPED])"
>$obj-&#62;<b>as_mbox_string</b>([ALREADY_ESCAPED])</a></dt>

<dd>
<p>Returns the message as a string in mbox format. <code>ALREADY_ESCAPED</code>, if given and true, indicates that <a href="/~markov/MailTools-2.09/lib/Mail/Internet.pod#High-level_functionality" class="podlinkpod"
>escape_from()</a> has already been called on this object.</p>

<dt><a name='obj'></a><a name="$obj-&#62;as_string()"
>$obj-&#62;<b>as_string</b>()</a></dt>

<dd>
<p>Returns the message as a single string.</p>

<dt><a name='obj'></a><a name="$obj-&#62;print([FILEHANDLE])"
>$obj-&#62;<b>print</b>([FILEHANDLE])</a></dt>

<dd>
<p>Print the header, body or whole message to file descriptor <i>FILEHANDLE</i>. <i>$fd</i> should be a reference to a GLOB. If <i>FILEHANDLE</i> is not given the output will be sent to STDOUT.</p>

<p>example:</p>

<pre class="sh_perl">    $mail-&#62;print( \*STDOUT );  # Print message to STDOUT</pre>

<dt><a name='obj'></a><a name="$obj-&#62;print_body([FILEHANDLE])"
>$obj-&#62;<b>print_body</b>([FILEHANDLE])</a></dt>

<dd>
<p>Print only the body to the FILEHANDLE (default STDOUT).</p>

<dt><a name='obj'></a><a name="$obj-&#62;print_header([FILEHANDLE])"
>$obj-&#62;<b>print_header</b>([FILEHANDLE])</a></dt>

<dd>
<p>Print only the header to the FILEHANDLE (default STDOUT).</p>
</dd>
</dl>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Processing_the_header"
>Processing the header</a></h2>

<p>Most of these methods are simply wrappers around methods provided by <a href="/~markov/MailTools-2.09/lib/Mail/Header.pod" class="podlinkpod"
>Mail::Header</a>.</p>

<dl>
<dt><a name='obj'></a><a name="$obj-&#62;add(PAIRS-of-FIELD)"
>$obj-&#62;<b>add</b>(PAIRS-of-FIELD)</a></dt>

<dd>
<p>The PAIRS are field-name and field-content. For each PAIR, <a href="/~markov/MailTools-2.09/lib/Mail/Header.pod#Processing" class="podlinkpod"
>Mail::Header::add()</a> is called. All fields are added after existing fields. The last addition is returned.</p>

<dt><a name='obj'></a><a name="$obj-&#62;combine(TAG,_[WITH])"
>$obj-&#62;<b>combine</b>(TAG, [WITH])</a></dt>

<dd>
<p>See <a href="/~markov/MailTools-2.09/lib/Mail/Header.pod#Processing" class="podlinkpod"
>Mail::Header::combine()</a>.</p>

<dt><a name='obj'></a><a name="$obj-&#62;delete(TAG,_[TAGs])"
>$obj-&#62;<b>delete</b>(TAG, [TAGs])</a></dt>

<dd>
<p>Delete all fields with the name TAG. <a href="/~markov/MailTools-2.09/lib/Mail/Header.pod#Processing" class="podlinkpod"
>Mail::Header::delete()</a> is doing the work.</p>

<dt><a name='obj'></a><a name="$obj-&#62;fold([LENGTH])"
>$obj-&#62;<b>fold</b>([LENGTH])</a></dt>

<dd>
<p>See <a href="/~markov/MailTools-2.09/lib/Mail/Header.pod#Processing" class="podlinkpod"
>Mail::Header::fold()</a>.</p>

<dt><a name='obj'></a><a name="$obj-&#62;fold_length([TAG],_[LENGTH])"
>$obj-&#62;<b>fold_length</b>([TAG], [LENGTH])</a></dt>

<dd>
<p>See <a href="/~markov/MailTools-2.09/lib/Mail/Header.pod#Accessors" class="podlinkpod"
>Mail::Header::fold_length()</a>.</p>

<dt><a name='obj'></a><a name="$obj-&#62;get(TAG,_[TAGs])"
>$obj-&#62;<b>get</b>(TAG, [TAGs])</a></dt>

<dd>
<p>In LIST context, all fields with the name TAG are returned. In SCALAR context, only the first field which matches the earliest TAG is returned. <a href="/~markov/MailTools-2.09/lib/Mail/Header.pod#Processing" class="podlinkpod"
>Mail::Header::get()</a> is called to collect the data.</p>

<dt><a name='obj'></a><a name="$obj-&#62;header([ARRAY-of-LINES])"
>$obj-&#62;<b>header</b>([ARRAY-of-LINES])</a></dt>

<dd>
<p>See <a href="/~markov/MailTools-2.09/lib/Mail/Header.pod#&#34;Fake&#34;_constructors" class="podlinkpod"
>Mail::Header::header()</a>.</p>

<dt><a name='obj'></a><a name="$obj-&#62;replace(PAIRS-of-FIELD)"
>$obj-&#62;<b>replace</b>(PAIRS-of-FIELD)</a></dt>

<dd>
<p>The PAIRS are field-name and field-content. For each PAIR, <a href="/~markov/MailTools-2.09/lib/Mail/Header.pod#Processing" class="podlinkpod"
>Mail::Header::replace()</a> is called with INDEX 0. If a FIELD is already in the header, it will be removed first. Do not specified the same field-name twice.</p>
</dd>
</dl>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Processing_the_body"
>Processing the body</a></h2>

<dl>
<dt><a name='obj'></a><a name="$obj-&#62;remove_sig([NLINES])"
>$obj-&#62;<b>remove_sig</b>([NLINES])</a></dt>

<dd>
<p>Attempts to remove a users signature from the body of a message. It does this by looking for a line equal to <code>&#39;-- &#39;</code> within the last <code>NLINES</code> of the message. If found then that line and all lines after it will be removed. If <code>NLINES</code> is not given a default value of 10 will be used. This would be of most use in auto-reply scripts.</p>

<dt><a name='obj'></a><a name="$obj-&#62;sign(OPTIONS)"
>$obj-&#62;<b>sign</b>(OPTIONS)</a></dt>

<dd>
<p>Add your signature to the body. <a href="/~markov/MailTools-2.09/lib/Mail/Internet.pod#Processing_the_body" class="podlinkpod"
>remove_sig()</a> will strip existing signatures first.</p>

<pre class="sh_perl"> -Option   --Default
  File       undef
  Signature  []</pre>

<dl>
<dt><a name='File'></a><a name="File_=&#62;_FILEHANDLE"
>File =&#62; FILEHANDLE</a></dt>

<dd>
<p>Take from the FILEHANDLE all lines starting from the first <code>--</code>.</p>

<dt><a name='Signature'></a><a name="Signature_=&#62;_STRING|ARRAY-of-LINES"
>Signature =&#62; STRING|ARRAY-of-LINES</a></dt>
</dl>

<dt><a name='obj'></a><a name="$obj-&#62;tidy_body()"
>$obj-&#62;<b>tidy_body</b>()</a></dt>

<dd>
<p>Removes all leading and trailing lines from the body that only contain white spaces.</p>
</dd>
</dl>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="High-level_functionality"
>High-level functionality</a></h2>

<dl>
<dt><a name='obj'></a><a name="$obj-&#62;escape_from()"
>$obj-&#62;<b>escape_from</b>()</a></dt>

<dd>
<p>It can cause problems with some applications if a message contains a line starting with <code>`From &#39;</code>, in particular when attempting to split a folder. This method inserts a leading <code>`</code>&#39;&#62; on anyline that matches the regular expression <code>/^</code>*From/&#62;</p>

<dt><a name='obj'></a><a name="$obj-&#62;nntppost([OPTIONS])"
>$obj-&#62;<b>nntppost</b>([OPTIONS])</a></dt>

<dd>
<p>Post an article via NNTP. Requires Net::NNTP to be installed.</p>

<pre class="sh_perl"> -Option--Default
  Debug   &#60;false&#62;
  Host    &#60;required&#62;
  Port    119</pre>

<dl>
<dt><a name='Debug'></a><a name="Debug_=&#62;_BOOLEAN"
>Debug =&#62; BOOLEAN</a></dt>

<dd>
<p>Debug value to pass to Net::NNTP, see <a href="/perldoc?Net%3A%3ANNTP" class="podlinkpod"
>Net::NNTP</a></p>

<dt><a name='Host'></a><a name="Host_=&#62;_HOSTNAME|Net::NNTP_object"
>Host =&#62; HOSTNAME|Net::NNTP object</a></dt>

<dd>
<p>Name of NNTP server to connect to, or a Net::NNTP object to use.</p>

<dt><a name='Port'></a><a name="Port_=&#62;_INTEGER"
>Port =&#62; INTEGER</a></dt>

<dd>
<p>Port number to connect to on remote host</p>
</dd>
</dl>

<dt><a name='obj'></a><a name="$obj-&#62;reply(OPTIONS)"
>$obj-&#62;<b>reply</b>(OPTIONS)</a></dt>

<dd>
<p>Create a new object with header initialised for a reply to the current object. And the body will be a copy of the current message indented.</p>

<p>The <code>.mailhdr</code> file in your home directory (if exists) will be read first, to provide defaults.</p>

<pre class="sh_perl"> -Option  --Default
  Exclude   []
  Indent    &#39;&#62;&#39;
  Keep      []
  ReplyAll  false</pre>

<dl>
<dt><a name='Exclude'></a><a name="Exclude_=&#62;_ARRAY-of-FIELDS"
>Exclude =&#62; ARRAY-of-FIELDS</a></dt>

<dd>
<p>Remove the listed FIELDS from the produced message.</p>

<dt><a name='Indent'></a><a name="Indent_=&#62;_STRING"
>Indent =&#62; STRING</a></dt>

<dd>
<p>Use as indentation string. The string may contain <code>%%</code> to get a single <code>%</code>, <code>%f</code> to get the first from name, <code>%F</code> is the first character of <code>%f</code>, <code>%l</code> is the last name, <code>%L</code> its first character, <code>%n</code> the whole from string, and <code>%I</code> the first character of each of the names in the from string.</p>

<dt><a name='Keep'></a><a name="Keep_=&#62;_ARRAY-of-FIELDS"
>Keep =&#62; ARRAY-of-FIELDS</a></dt>

<dd>
<p>Copy the listed FIELDS from the original message.</p>

<dt><a name='ReplyAll'></a><a name="ReplyAll_=&#62;_BOOLEAN"
>ReplyAll =&#62; BOOLEAN</a></dt>

<dd>
<p>Automatically include all To and Cc addresses of the original mail, excluding those mentioned in the Bcc list.</p>
</dd>
</dl>

<dt><a name='obj'></a><a name="$obj-&#62;send([TYPE,_[ARGS...]])"
>$obj-&#62;<b>send</b>([TYPE, [ARGS...]])</a></dt>

<dd>
<p>Send a Mail::Internet message using <a href="/~markov/MailTools-2.09/lib/Mail/Mailer.pod" class="podlinkpod"
>Mail::Mailer</a>. TYPE and ARGS are passed on to <a href="/~markov/MailTools-2.09/lib/Mail/Mailer.pod#Constructors" class="podlinkpod"
>Mail::Mailer::new()</a>.</p>

<dt><a name='obj'></a><a name="$obj-&#62;smtpsend([OPTIONS])"
>$obj-&#62;<b>smtpsend</b>([OPTIONS])</a></dt>

<dd>
<p>Send a Mail::Internet message using direct SMTP. to the given ADDRESSES, each can be either a string or a reference to a list of email addresses. If none of <code>To</code>, &#60;Cc&#62; or <code>Bcc</code> are given then the addresses are extracted from the message being sent.</p>

<p>The return value will be a list of email addresses that the message was sent to. If the message was not sent the list will be empty.</p>

<p>Requires Net::SMTP and Net::Domain to be installed.</p>

<pre class="sh_perl"> -Option  --Default
  Bcc       undef
  Cc        undef
  Debug     &#60;false&#62;
  Hello     localhost.localdomain
  Host      $ENV{SMTPHOSTS}
  MailFrom  Mail::Util::mailaddress()
  Port      25
  To        undef</pre>

<dl>
<dt><a name='Bcc'></a><a name="Bcc_=&#62;_ADDRESSES"
>Bcc =&#62; ADDRESSES</a></dt>

<dd>
<dt><a name='Cc'></a><a name="Cc_=&#62;_ADDRESSES"
>Cc =&#62; ADDRESSES</a></dt>

<dd>
<dt><a name='Debug'></a><a name="Debug_=&#62;_BOOLEAN"
>Debug =&#62; BOOLEAN</a></dt>

<dd>
<p>Debug value to pass to Net::SMPT, see &#60;Net::SMTP&#62;</p>

<dt><a name='Hello'></a><a name="Hello_=&#62;_STRING"
>Hello =&#62; STRING</a></dt>

<dd>
<p>Send a HELO (or EHLO) command to the server with the given name.</p>

<dt><a name='Host'></a><a name="Host_=&#62;_HOSTNAME"
>Host =&#62; HOSTNAME</a></dt>

<dd>
<p>Name of the SMTP server to connect to, or a Net::SMTP object to use</p>

<p>If <code>Host</code> is not given then the SMTP host is found by attempting connections first to hosts specified in <code>$ENV{SMTPHOSTS}</code>, a colon separated list, then <code>mailhost</code> and <code>localhost</code>.</p>

<dt><a name='MailFrom'></a><a name="MailFrom_=&#62;_ADDRESS"
>MailFrom =&#62; ADDRESS</a></dt>

<dd>
<p>The e-mail address which is used as sender. By default, <a href="/~markov/MailTools-2.09/lib/Mail/Util.pod#FUNCTIONS" class="podlinkpod"
>Mail::Util::mailaddress()</a> provides the address of the sender.</p>

<dt><a name='Port'></a><a name="Port_=&#62;_INTEGER"
>Port =&#62; INTEGER</a></dt>

<dd>
<p>Port number to connect to on remote host</p>

<dt><a name='To'></a><a name="To_=&#62;_ADDRESSES"
>To =&#62; ADDRESSES</a></dt>
</dl>

<dt><a name='obj'></a><a name="$obj-&#62;unescape_from(())"
>$obj-&#62;<b>unescape_from</b>(())</a></dt>

<dd>
<p>Remove the escaping added by <a href="/~markov/MailTools-2.09/lib/Mail/Internet.pod#High-level_functionality" class="podlinkpod"
>escape_from()</a>.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SEE_ALSO"
>SEE ALSO <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This module is part of the MailTools distribution, <em><a href="http://perl.overmeer.net/mailtools/" class="podlinkurl"
>http://perl.overmeer.net/mailtools/</a></em>.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHORS"
>AUTHORS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>The MailTools bundle was developed by Graham Barr. Later, Mark Overmeer took over maintenance without commitment to further development.</p>

<p>Mail::Cap by Gisle Aas &#60;aas@oslonett.no&#62;. Mail::Field::AddrList by Peter Orbaek &#60;poe@cit.dk&#62;. Mail::Mailer and Mail::Send by Tim Bunce &#60;Tim.Bunce@ig.co.uk&#62;. For other contributors see ChangeLog.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="LICENSE"
>LICENSE <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Copyrights 1995-2000 Graham Barr &#60;gbarr@pobox.com&#62; and 2001-2007 Mark Overmeer &#60;perl@overmeer.net&#62;.</p>

<p>This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself. See <em><a href="http://www.perl.com/perl/misc/Artistic.html" class="podlinkurl"
>http://www.perl.com/perl/misc/Artistic.html</a></em></p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78058 Uploads, 24685 Distributions
105890 Modules, 9637 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Sat Apr 21 22:51:54 2012 GMT (0.105229139328003) @cpansearch1 -->
 </body>
</html>
