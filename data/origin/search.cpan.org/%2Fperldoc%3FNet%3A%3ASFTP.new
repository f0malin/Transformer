<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>Net::SFTP - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","Net-SFTP",3]);
    _gaq.push(["_setCustomVar",5,"Release","Net-SFTP-0.10",3]);
    _gaq.push(["_setCustomVar",3,"Module","Net::SFTP",3]);
    _gaq.push(["_setCustomVar",1,"Author","DBROBINS",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?Net::SFTP">permalink</a></div>
  <a href="/~dbrobins/">David Robins</a> &gt;
  <a href="/~dbrobins/Net-SFTP-0.10/">Net-SFTP-0.10</a> &gt;
  Net::SFTP
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/94574278419fae55bb5148877debfaff?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/D/DB/DBROBINS/Net-SFTP-0.10.tar.gz">Net-SFTP-0.10.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=Net%3A%3ASFTP;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~DBROBINS/Net-SFTP-0.10/lib/Net/SFTP.pm">Annotate this POD
</a></p>
<div class=box style='width:150px; float: right'>
<h1 class=t5>Related Modules</h1>
<div style="margin:2px">
<a href="/perldoc?Net%3A%3ASSH%3A%3APerl">Net::SSH::Perl</a><br>
<a href="/perldoc?Net%3A%3AFTP">Net::FTP</a><br>
<a href="/perldoc?Net%3A%3ASSH2">Net::SSH2</a><br>
<a href="/perldoc?Math%3A%3APari">Math::Pari</a><br>
<a href="/perldoc?Net%3A%3ASCP">Net::SCP</a><br>
<a href="/perldoc?IPC%3A%3AOpen2">IPC::Open2</a><br>
<a href="/perldoc?IPC%3A%3AOpen3">IPC::Open3</a><br>
<a href="/perldoc?Net%3A%3ASSH">Net::SSH</a><br>
<a href="/perldoc?Math%3A%3ABigInt%3A%3AGMP">Math::BigInt::GMP</a><br>
<a href="/perldoc?Crypt%3A%3ARandom">Crypt::Random</a><br>
<small>
<a href="http://perlmonks.org/?node=cpan+module+search&pivot=1&module=Net%3A%3ASFTP">more...</a><br>
By <a href="http://perlmonks.org/">perlmonks.org</a></small>
</div>
</div>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>New&nbsp;</td><td style="text-align:right"> 8</td></tr>
<tr><td>Open&nbsp;</td><td style="text-align:right"> 2</td></tr>
</table>
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=Net-SFTP">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  0.10 &nbsp;
<span class="noprint">
  <a href="/src/DBROBINS/Net-SFTP-0.10/lib/Net/SFTP.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <li class='indexItem indexItem1'><a href='#USAGE'>USAGE</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#Net::SFTP-&#62;new($host,_%args)'>Net::SFTP-&#62;new($host, %args)</a>
    <li class='indexItem indexItem2'><a href='#$sftp-&#62;status'>$sftp-&#62;status</a>
    <li class='indexItem indexItem2'><a href='#$sftp-&#62;get($remote_[,_$local_[,_\&#38;callback_]_])'>$sftp-&#62;get($remote [, $local [, \&#38;callback ] ])</a>
    <li class='indexItem indexItem2'><a href='#$sftp-&#62;put($local,_$remote_[,_\&#38;callback_])'>$sftp-&#62;put($local, $remote [, \&#38;callback ])</a>
    <li class='indexItem indexItem2'><a href='#$sftp-&#62;ls($remote_[,_$subref_])'>$sftp-&#62;ls($remote [, $subref ])</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#COMMAND_METHODS'>COMMAND METHODS</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#$sftp-&#62;do_open($path,_$flags_[,_$attrs_])'>$sftp-&#62;do_open($path, $flags [, $attrs ])</a>
    <li class='indexItem indexItem2'><a href='#$sftp-&#62;do_read($handle,_$offset,_$copy_size)'>$sftp-&#62;do_read($handle, $offset, $copy_size)</a>
    <li class='indexItem indexItem2'><a href='#$sftp-&#62;do_write($handle,_$offset,_$data)'>$sftp-&#62;do_write($handle, $offset, $data)</a>
    <li class='indexItem indexItem2'><a href='#$sftp-&#62;do_close($handle)'>$sftp-&#62;do_close($handle)</a>
    <li class='indexItem indexItem2'><a href='#$sftp-&#62;do_lstat($path)'>$sftp-&#62;do_lstat($path)</a>
    <li class='indexItem indexItem2'><a href='#$sftp-&#62;do_fstat($handle)'>$sftp-&#62;do_fstat($handle)</a>
    <li class='indexItem indexItem2'><a href='#$sftp-&#62;do_stat($path)'>$sftp-&#62;do_stat($path)</a>
    <li class='indexItem indexItem2'><a href='#$sftp-&#62;do_setstat($path,_$attrs)'>$sftp-&#62;do_setstat($path, $attrs)</a>
    <li class='indexItem indexItem2'><a href='#$sftp-&#62;do_fsetstat($handle,_$attrs)'>$sftp-&#62;do_fsetstat($handle, $attrs)</a>
    <li class='indexItem indexItem2'><a href='#$sftp-&#62;do_opendir($path)'>$sftp-&#62;do_opendir($path)</a>
    <li class='indexItem indexItem2'><a href='#$sftp-&#62;do_remove($path)'>$sftp-&#62;do_remove($path)</a>
    <li class='indexItem indexItem2'><a href='#$sftp-&#62;do_mkdir($path,_$attrs)'>$sftp-&#62;do_mkdir($path, $attrs)</a>
    <li class='indexItem indexItem2'><a href='#$sftp-&#62;do_rmdir($path)'>$sftp-&#62;do_rmdir($path)</a>
    <li class='indexItem indexItem2'><a href='#$sftp-&#62;do_realpath($path)'>$sftp-&#62;do_realpath($path)</a>
    <li class='indexItem indexItem2'><a href='#$sftp-&#62;do_rename($old,_$new)'>$sftp-&#62;do_rename($old, $new)</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#SUPPORT'>SUPPORT</a>
  <li class='indexItem indexItem1'><a href='#AUTHOR'>AUTHOR</a>
  <li class='indexItem indexItem1'><a href='#COPYRIGHT'>COPYRIGHT</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Net::SFTP - Secure File Transfer Protocol client</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">    use Net::SFTP;
    my $sftp = Net::SFTP-&#62;new($host);
    $sftp-&#62;get(&#34;foo&#34;, &#34;bar&#34;);
    $sftp-&#62;put(&#34;bar&#34;, &#34;baz&#34;);</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><i>Net::SFTP</i> is a pure-Perl implementation of the Secure File Transfer Protocol (SFTP) - file transfer built on top of the SSH2 protocol. <i>Net::SFTP</i> uses <i>Net::SSH::Perl</i> to build a secure, encrypted tunnel through which files can be transferred and managed. It provides a subset of the commands listed in the SSH File Transfer Protocol IETF draft, which can be found at <i><a href="http://www.openssh.com/txt/draft-ietf-secsh-filexfer-00.txt" class="podlinkurl"
>http://www.openssh.com/txt/draft-ietf-secsh-filexfer-00.txt</a></i>.</p>

<p>SFTP stands for Secure File Transfer Protocol and is a method of transferring files between machines over a secure, encrypted connection (as opposed to regular FTP, which functions over an insecure connection). The security in SFTP comes through its integration with SSH, which provides an encrypted transport layer over which the SFTP commands are executed, and over which files can be transferred. The SFTP protocol defines a client and a server; only the client, not the server, is implemented in <i>Net::SFTP</i>.</p>

<p>Because it is built upon SSH, SFTP inherits all of the built-in functionality provided by <i>Net::SSH::Perl</i>: encrypted communications between client and server, multiple supported authentication methods (eg. password, public key, etc.).</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="USAGE"
>USAGE <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Net::SFTP-&#62;new($host,_%args)"
>Net::SFTP-&#62;new($host, %args)</a></h2>

<p>Opens a new SFTP connection with a remote host <i>$host</i>, and returns a <i>Net::SFTP</i> object representing that open connection.</p>

<p><i>%args</i> can contain:</p>

<ul>
<li>user
<p>The username to use to log in to the remote server. This should be your SSH login, and can be empty, in which case the username is drawn from the user executing the process.</p>

<p>See the <i>login</i> method in <i>Net::SSH::Perl</i> for more details.</p>
</li>

<li>password
<p>The password to use to log in to the remote server. This should be your SSH password, if you use password authentication in SSH; if you use public key authentication, this argument is unused.</p>

<p>See the <i>login</i> method in <i>Net::SSH::Perl</i> for more details.</p>
</li>

<li>debug
<p>If set to a true value, debugging messages will be printed out for both the SSH and SFTP protocols. This automatically turns on the <i>debug</i> parameter in <i>Net::SSH::Perl</i>.</p>

<p>The default is false.</p>
</li>

<li>warn
<p>If given a sub ref, the sub is called with $self and any warning message; if set to false, warnings are supressed; otherwise they are output with &#39;warn&#39; (default).</p>
</li>

<li>ssh_args
<p>Specifies a reference to a list or hash of named arguments that should be given to the constructor of the <i>Net::SSH::Perl</i> object underlying the <i>Net::SFTP</i> connection.</p>

<p>For example, you could use this to set up your authentication identity files, to set a specific cipher for encryption, etc., e.g. <code>ssh_args =&#62; [ cipher =&#62; &#39;arcfour&#39; ]</code>.</p>

<p>See the <i>new</i> method in <i>Net::SSH::Perl</i> for more details.</p>
</li>
</ul>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="$sftp-&#62;status"
>$sftp-&#62;status</a></h2>

<p>Returns the last remote SFTP status value. Only useful after one of the following methods has failed. Returns SSH2_FX_OK if there is no remote error (e.g. local file not found). In list context, returns a list of (status code, status text from <code>fx2txt</code>).</p>

<p>If a low-level protocol error or unexpected local error occurs, we die with an error message.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="$sftp-&#62;get($remote_[,_$local_[,_\&#38;callback_]_])"
>$sftp-&#62;get($remote [, $local [, \&#38;callback ] ])</a></h2>

<p>Downloads a file <i>$remote</i> from the remote host. If <i>$local</i> is specified, it is opened/created, and the contents of the remote file <i>$remote</i> are written to <i>$local</i>. In addition, its filesystem attributes (atime, mtime, permissions, etc.) will be set to those of the remote file.</p>

<p>If <i>get</i> is called in a non-void context, returns the contents of <i>$remote</i> (as well as writing them to <i>$local</i>, if <i>$local</i> is provided. Undef is returned on failure.</p>

<p><i>$local</i> is optional. If not provided, the contents of the remote file <i>$remote</i> will be either discarded, if <i>get</i> is called in void context, or returned from <i>get</i> if called in a non-void context. Presumably, in the former case, you will use the callback function <i>\&#38;callback</i> to &#34;do something&#34; with the contents of <i>$remote</i>.</p>

<p>If <i>\&#38;callback</i> is specified, it should be a reference to a subroutine. The subroutine will be executed at each iteration of the read loop (files are generally read in 8192-byte blocks, although this depends on the server implementation). The callback function will receive as arguments: a <i>Net::SFTP</i> object with an open SFTP connection; the data read from the SFTP server; the offset from the beginning of the file (in bytes); and the total size of the file (in bytes). You can use this mechanism to provide status messages, download progress meters, etc.:</p>

<pre class="sh_perl">    sub callback {
        my($sftp, $data, $offset, $size) = @_;
        print &#34;Read $offset / $size bytes\r&#34;;
    }</pre>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="$sftp-&#62;put($local,_$remote_[,_\&#38;callback_])"
>$sftp-&#62;put($local, $remote [, \&#38;callback ])</a></h2>

<p>Uploads a file <i>$local</i> from the local host to the remote host, and saves it as <i>$remote</i>.</p>

<p>If <i>\&#38;callback</i> is specified, it should be a reference to a subroutine. The subroutine will be executed at each iteration of the write loop, directly after the data has been read from the local file. The callback function will receive as arguments: a <i>Net::SFTP</i> object with an open SFTP connection; the data read from <i>$local</i>, generally in 8192-byte chunks;; the offset from the beginning of the file (in bytes); and the total size of the file (in bytes). You can use this mechanism to provide status messages, upload progress meters, etc.:</p>

<pre class="sh_perl">    sub callback {
        my($sftp, $data, $offset, $size) = @_;
        print &#34;Wrote $offset / $size bytes\r&#34;;
    }</pre>

<p>Returns true on success, undef on error.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="$sftp-&#62;ls($remote_[,_$subref_])"
>$sftp-&#62;ls($remote [, $subref ])</a></h2>

<p>Fetches a directory listing of <i>$remote</i>.</p>

<p>If <i>$subref</i> is specified, for each entry in the directory, <i>$subref</i> will be called and given a reference to a hash with three keys: <i>filename</i>, the name of the entry in the directory listing; <i>longname</i>, an entry in a &#34;long&#34; listing like <code>ls -l</code>; and <i>a</i>, a <i>Net::SFTP::Attributes</i> object, which contains the file attributes of the entry (atime, mtime, permissions, etc.).</p>

<p>If <i>$subref</i> is not specified, returns a list of directory entries, each of which is a reference to a hash as described in the previous paragraph.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="COMMAND_METHODS"
>COMMAND METHODS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><i>Net::SFTP</i> supports all of the commands listed in the SFTP version 3 protocol specification. Each command is available for execution as a separate method, with a few exceptions: <i>SSH_FXP_INIT</i>, <i>SSH_FXP_VERSION</i>, and <i>SSH_FXP_READDIR</i>.</p>

<p>These are the available command methods:</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="$sftp-&#62;do_open($path,_$flags_[,_$attrs_])"
>$sftp-&#62;do_open($path, $flags [, $attrs ])</a></h2>

<p>Sends the <i>SSH_FXP_OPEN</i> command to open a remote file <i>$path</i>, and returns an open handle on success. On failure returns <i>undef</i>. The &#34;open handle&#34; is not a Perl filehandle, nor is it a file descriptor; it is merely a marker used to identify the open file between the client and the server.</p>

<p><i>$flags</i> should be a bitmask of open flags, whose values can be obtained from <i>Net::SFTP::Constants</i>:</p>

<pre class="sh_perl">    use Net::SFTP::Constants qw( :flags );</pre>

<p><i>$attrs</i> should be a <i>Net::SFTP::Attributes</i> object, specifying the initial attributes for the file <i>$path</i>. If you&#39;re opening the file for reading only, <i>$attrs</i> can be left blank, in which case it will be initialized to an empty set of attributes.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="$sftp-&#62;do_read($handle,_$offset,_$copy_size)"
>$sftp-&#62;do_read($handle, $offset, $copy_size)</a></h2>

<p>Sends the <i>SSH_FXP_READ</i> command to read from an open file handle <i>$handle</i>, starting at <i>$offset</i>, and reading at most <i>$copy_size</i> bytes.</p>

<p>Returns a two-element list consisting of the data read from the SFTP server in the first slot, and the status code (if any) in the second. In the case of a successful read, the status code will be <i>undef</i>, and the data will be defined and true. In the case of EOF, the status code will be <i>SSH2_FX_EOF</i>, and the data will be <i>undef</i>. And in the case of an error in the read, a warning will be emitted, the status code will contain the error code, and the data will be <i>undef</i>.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="$sftp-&#62;do_write($handle,_$offset,_$data)"
>$sftp-&#62;do_write($handle, $offset, $data)</a></h2>

<p>Sends the <i>SSH_FXP_WRITE</i> command to write to an open file handle <i>$handle</i>, starting at <i>$offset</i>, and where the data to be written is in <i>$data</i>.</p>

<p>Returns the status code. On a successful write, the status code will be equal to SSH2_FX_OK; in the case of an unsuccessful write, a warning will be emitted, and the status code will contain the error returned from the server.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="$sftp-&#62;do_close($handle)"
>$sftp-&#62;do_close($handle)</a></h2>

<p>Sends the <i>SSH_FXP_CLOSE</i> command to close either an open file or open directory, identified by <i>$handle</i> (the handle returned from either <i>do_open</i> or <i>do_opendir</i>).</p>

<p>Emits a warning if the <i>CLOSE</i> fails.</p>

<p>Returns the status code for the operation. To turn the status code into a text message, take a look at the <code>fx2txt</code> function in <i>Net::SFTP::Util</i>.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="$sftp-&#62;do_lstat($path)"
>$sftp-&#62;do_lstat($path)</a></h2>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="$sftp-&#62;do_fstat($handle)"
>$sftp-&#62;do_fstat($handle)</a></h2>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="$sftp-&#62;do_stat($path)"
>$sftp-&#62;do_stat($path)</a></h2>

<p>These three methods all perform similar functionality: they run a <i>stat</i> on a remote file and return the results in a <i>Net::SFTP::Attributes</i> object on success.</p>

<p>On failure, all three methods return <i>undef</i>, and emit a warning.</p>

<p><i>do_lstat</i> sends a <i>SSH_FXP_LSTAT</i> command to obtain file attributes for a named file <i>$path</i>. <i>do_stat</i> sends a <i>SSH_FXP_STAT</i> command, and differs from <i>do_lstat</i> only in that <i>do_stat</i> follows symbolic links on the server, whereas <i>do_lstat</i> does not follow symbolic links.</p>

<p><i>do_fstat</i> sends a <i>SSH_FXP_FSTAT</i> command to obtain file attributes for an open file handle <i>$handle</i>.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="$sftp-&#62;do_setstat($path,_$attrs)"
>$sftp-&#62;do_setstat($path, $attrs)</a></h2>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="$sftp-&#62;do_fsetstat($handle,_$attrs)"
>$sftp-&#62;do_fsetstat($handle, $attrs)</a></h2>

<p>These two methods both perform similar functionality: they set the file attributes of a remote file. In both cases <i>$attrs</i> should be a <i>Net::SFTP::Attributes</i> object.</p>

<p><i>do_setstat</i> sends a <i>SSH_FXP_SETSTAT</i> command to set file attributes for a remote named file <i>$path</i> to <i>$attrs</i>.</p>

<p><i>do_fsetstat</i> sends a <i>SSH_FXP_FSETSTAT</i> command to set the attributes of an open file handle <i>$handle</i> to <i>$attrs</i>.</p>

<p>Both methods emit a warning if the operation failes, and both return the status code for the operation. To turn the status code into a text message, take a look at the <code>fx2txt</code> function in <i>Net::SFTP::Util</i>.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="$sftp-&#62;do_opendir($path)"
>$sftp-&#62;do_opendir($path)</a></h2>

<p>Sends a <i>SSH_FXP_OPENDIR</i> command to open the remote directory <i>$path</i>, and returns an open handle on success. On failure returns <i>undef</i>.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="$sftp-&#62;do_remove($path)"
>$sftp-&#62;do_remove($path)</a></h2>

<p>Sends a <i>SSH_FXP_REMOVE</i> command to remove the remote file <i>$path</i>.</p>

<p>Emits a warning if the operation fails.</p>

<p>Returns the status code for the operation. To turn the status code into a text message, take a look at the <code>fx2txt</code> function in <i>Net::SFTP::Util</i>.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="$sftp-&#62;do_mkdir($path,_$attrs)"
>$sftp-&#62;do_mkdir($path, $attrs)</a></h2>

<p>Sends a <i>SSH_FXP_MKDIR</i> command to create a remote directory <i>$path</i> whose attributes should be initialized to <i>$attrs</i>, a <i>Net::SFTP::Attributes</i> object.</p>

<p>Emits a warning if the operation fails.</p>

<p>Returns the status code for the operation. To turn the status code into a text message, take a look at the <code>fx2txt</code> function in <i>Net::SFTP::Util</i>.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="$sftp-&#62;do_rmdir($path)"
>$sftp-&#62;do_rmdir($path)</a></h2>

<p>Sends a <i>SSH_FXP_RMDIR</i> command to remove a remote directory <i>$path</i>.</p>

<p>Emits a warning if the operation fails.</p>

<p>Returns the status code for the operation. To turn the status code into a text message, take a look at the <code>fx2txt</code> function in <i>Net::SFTP::Util</i>.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="$sftp-&#62;do_realpath($path)"
>$sftp-&#62;do_realpath($path)</a></h2>

<p>Sends a <i>SSH_FXP_REALPATH</i> command to canonicalise <i>$path</i> to an absolute path. This can be useful for turning paths containing <i>&#39;..&#39;</i> into absolute paths.</p>

<p>Returns the absolute path on success, <i>undef</i> on failure.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="$sftp-&#62;do_rename($old,_$new)"
>$sftp-&#62;do_rename($old, $new)</a></h2>

<p>Sends a <i>SSH_FXP_RENAME</i> command to rename <i>$old</i> to <i>$new</i>.</p>

<p>Emits a warning if the operation fails.</p>

<p>Returns the status code for the operation. To turn the status code into a text message, take a look at the <code>fx2txt</code> function in <i>Net::SFTP::Util</i>.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SUPPORT"
>SUPPORT <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>For samples/tutorials, take a look at the scripts in <em>eg/</em> in the distribution directory.</p>

<p>There is a mailing list for development discussion and usage questions. Posting is limited to subscribers only. You can sign up at <a href="http://lists.sourceforge.net/lists/listinfo/ssh-sftp-perl-users" class="podlinkurl"
>http://lists.sourceforge.net/lists/listinfo/ssh-sftp-perl-users</a></p>

<p>Please report all bugs via rt.cpan.org at <a href="https://rt.cpan.org/NoAuth/ReportBug.html?Queue=net%3A%3Asftp" class="podlinkurl"
>https://rt.cpan.org/NoAuth/ReportBug.html?Queue=net%3A%3Asftp</a></p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHOR"
>AUTHOR <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Current maintainer is David Robins, dbrobins@cpan.org.</p>

<p>Previous maintainer was Dave Rolsky, autarch@urth.org.</p>

<p>Originally written by Benjamin Trott.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="COPYRIGHT"
>COPYRIGHT <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Copyright (c) 2001-2003 Benjamin Trott, Copyright (c) 2003-2004 David Rolsky. Copyright (c) David Robins. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</p>

<p>The full text of the license can be found in the LICENSE file included with this module.</p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78067 Uploads, 24686 Distributions
105893 Modules, 9637 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Sun Apr 22 04:03:57 2012 GMT (0.145726919174194) @cpansearch1 -->
 </body>
</html>
