<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>Digest::SHA2 - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","Digest-SHA2",3]);
    _gaq.push(["_setCustomVar",5,"Release","Digest-SHA2-1.1.1",3]);
    _gaq.push(["_setCustomVar",3,"Module","Digest::SHA2",3]);
    _gaq.push(["_setCustomVar",1,"Author","AVAR",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?Digest::SHA2">permalink</a></div>
  <a href="/~avar/">&AElig;var Arnfj&ouml;r&eth; Bjarmason</a> &gt;
  <a href="/~avar/Digest-SHA2-1.1.1/">Digest-SHA2-1.1.1</a> &gt;
  Digest::SHA2
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/743c0c82dea0632e806ec081959299dc?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/A/AV/AVAR/Digest-SHA2-1.1.1.tar.gz">Digest-SHA2-1.1.1.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=Digest%3A%3ASHA2;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~AVAR/Digest-SHA2-1.1.1/SHA2.pm">Annotate this POD
</a></p>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>Open&nbsp;</td><td style="text-align:right"> 0</td></tr>
</table>
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=Digest-SHA2">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  1.1.1 &nbsp;
<span class="noprint">
  <a href="/src/AVAR/Digest-SHA2-1.1.1/SHA2.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#DEPRECATED'>DEPRECATED</a>
  <li class='indexItem indexItem1'><a href='#ABSTRACT'>ABSTRACT</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#METHODS'>METHODS</a>
  <li class='indexItem indexItem1'><a href='#EXAMPLE_1'>EXAMPLE 1</a>
  <li class='indexItem indexItem1'><a href='#EXAMPLE_2'>EXAMPLE 2</a>
  <li class='indexItem indexItem1'><a href='#MORE_EXAMPLES'>MORE EXAMPLES</a>
  <li class='indexItem indexItem1'><a href='#DIGEST_SPEED'>DIGEST SPEED</a>
  <li class='indexItem indexItem1'><a href='#ACKNOWLEDGEMENT'>ACKNOWLEDGEMENT</a>
  <li class='indexItem indexItem1'><a href='#COPYRIGHT_AND_LICENSE'>COPYRIGHT AND LICENSE</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Digest::SHA2 - A variable-length one-way hash function (deprecated in favor of <a href="/perldoc?Digest%3A%3ASHA" class="podlinkpod"
>Digest::SHA</a>)</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DEPRECATED"
>DEPRECATED <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This module has numerious known bugs,
is not compatable with the <a href="/perldoc?Digest" class="podlinkpod"
>Digest</a> interface and its functionality is a subset of the functionality of <a href="/perldoc?Digest%3A%3ASHA" class="podlinkpod"
>Digest::SHA</a> (which is in perl core as of 5.9.3).</p>

<p>Please use <a href="/perldoc?Digest%3A%3ASHA" class="podlinkpod"
>Digest::SHA</a> instead of this module in new and old code.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="ABSTRACT"
>ABSTRACT <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Digest::SHA2 - A Perl interface for SHA-256,
SHA-384 and SHA-512,
collectively known as SHA-2</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>SHA-2 is the collective name of one-way hash functions developed by the NIST.
SHA-256,
SHA-384,
and SHA-512 pertain to hashes whose outputs are 256 bits,
384 bits and 512 bits,
respectively.</p>

<p>This Perl implementation is meant to be a replacement for the older SHA256 by Rafael R.
Sevilla.
His module has a bug in the SHA-256 implementation.</p>

<p>This new implementation uses the C source of Aaron Gifford.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">    use Digest::SHA2;

    $sha2obj = new Digest::SHA2 [$hashlength];
    $sha2obj-&#62;add(LIST);
    $sha2obj-&#62;addfile(*HANDLE);
    $sha2obj-&#62;reset();

    $sha_clone = $sha2obj-&#62;clone();
    $digest = $sha2obj-&#62;digest();
    $digest = $sha2obj-&#62;hexdigest();
    $digest = $sha2obj-&#62;b64digest();
    $digest = $sha2obj-&#62;base64digest();  # deprecated

    $digest = $sha2obj-&#62;hashsize();
    $digest = $sha2obj-&#62;rounds();</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="METHODS"
>METHODS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>SHA-2 supports the following functions:</p>

<dl>
<dt><a name='new'></a><a name="new_[$hashlength]"
><b>new [$hashlength]</b></a></dt>

<dd>
<p>Creates a SHA-2 object, where <b>$hashlength</b> represents the hash output length; valid values for <b>$hashlength</b> are 256, 384, and 512 only. If <b>$hashlength</b> is omitted, the output defaults to 256 bits.</p>

<p>For example, to specify SHA-512, use</p>

<pre class="sh_perl">        $sha2obj = new Digest::SHA2 512;</pre>

<p>To specify SHA-256, use</p>

<pre class="sh_perl">        $sha2obj = new Digest::SHA2 256;</pre>

<p>or just simply</p>

<pre class="sh_perl">        $sha2obj = new Digest::SHA2;</pre>

<dt><a name='hashsize'></a><a name="hashsize()"
><b>hashsize()</b></a></dt>

<dd>
<p>Returns the digest size (in bits) of the hash output used; valid sizes are 256, 384, and 512 only.</p>

<dt><a name='rounds'></a><a name="rounds()"
><b>rounds()</b></a></dt>

<dd>
<p>Returns the number of rounds (1, in this case) used to generate the hash output; this is included only so that <b>Digest::SHA2</b> is consistent with other one-way hash functions that have variable number of rounds, like <b>Haval</b> and <b>Tiger</b>.</p>

<p>Haval can uses 3, 4, or 5 rounds, with 5 different output lengths: 128, 160, 192, 224, and 256 bits, thereby, having 15 variants. Tiger, on the other hand, outputs 192 bits of digest, using 3 rounds; but for added security, can also use 4 rounds.</p>

<dt><a name='add'></a><a name="add(LIST)"
><b>add(LIST)</b></a></dt>

<dd>
<p>Hashes a string or a list of strings</p>

<p>For example,</p>

<pre class="sh_perl">        $sha2obj-&#62;add($string1);
        $sha2obj-&#62;add($string2, $string3, $string4);</pre>

<dt><a name='addfile'></a><a name="addfile(*HANDLE)"
><b>addfile(*HANDLE)</b></a></dt>

<dd>
<p>Hashes a file whose file handle is <b>HANDLE</b></p>

<dt><a name='reset'></a><a name="reset()"
><b>reset()</b></a></dt>

<dd>
<p>Re-initializes the hash state of the SHA-2 object. Before calculating another digest, <b>reset()</b> refreshes the hash state, and is, therefore, functionally equivalent to the <b>new()</b> method, except that no SHA-2 object is created.</p>

<dt><a name='digest'></a><a name="digest()"
><b>digest()</b></a></dt>

<dd>
<p>Generates the hash output as a binary string</p>

<dt><a name='hexdigest'></a><a name="hexdigest()"
><b>hexdigest()</b></a></dt>

<dd>
<p>Generates a hexadecimal representation of the hash output</p>

<dt><a name='base64digest'></a><a name="base64digest()_(deprecated)"
><b>base64digest() (deprecated)</b></a></dt>

<dd>
<p>This will be removed in future releases; use <b>b64digest()</b> instead.</p>

<dt><a name='b64digest'></a><a name="b64digest()"
><b>b64digest()</b></a></dt>

<dd>
<p>Generates a base64 representation of the hash output</p>

<dt><a name='clone'></a><a name="clone()"
><b>clone()</b></a></dt>

<dd>
<p>Returns a copy of the SHA-2 object; useful when you want to preserve an intermediate value of the digest</p>

<p>For example,</p>

<pre class="sh_perl">        my $clone = $sha2obj-&#62;clone();   # clone SHA-2 object

        my $sig = $sha2obj-&#62;clone-&#62;hexdigest;
        print &#34;partial digest: $sig\n&#34;;</pre>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="EXAMPLE_1"
>EXAMPLE 1 <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">    #!/usr/local/bin/perl

    use diagnostics;
    use strict;
    use warnings;
    use Digest::SHA2;

    my $string1 = &#34;This is a string.&#34;;
    my $string2 = &#34;This is another string.&#34;;
    my $string3 = &#34;This is a string.This is another string.&#34;;

    my $sha2obj = new Digest::SHA2 512;
    print &#34;hash size = &#34;, $sha2obj-&#62;hashsize, &#34; bits\n&#34;;

    $sha2obj-&#62;add($string1);
    my $digest = $sha2obj-&#62;hexdigest();
    print &#34;Hash string1 only\n&#34;;
    print &#34;$digest\n\n&#34;;

    $sha2obj-&#62;reset();
    $sha2obj-&#62;add($string1, $string2);
    my $digest2 = $sha2obj-&#62;hexdigest();
    print &#34;Hash string1 and then hash string2\n&#34;;
    print &#34;$digest2\n\n&#34;;

    $sha2obj-&#62;reset();
    $sha2obj-&#62;add($string1);
    $sha2obj-&#62;add($string2);
    my $digest3 = $sha2obj-&#62;hexdigest();
    print &#34;Hash string1 and then hash string2\n&#34;;
    print &#34;$digest3\n\n&#34;;

    $sha2obj-&#62;reset();
    $sha2obj-&#62;add($string3);
    print &#34;Hash the two concatenated strings\n&#34;;
    my $digest4 = $sha2obj-&#62;hexdigest();
    print &#34;$digest4\n&#34;;</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="EXAMPLE_2"
>EXAMPLE 2 <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">    #!/usr/local/bin/perl

    use diagnostics;
    use strict;
    use warnings;
    use MIME::Base64;
    use Digest::SHA2;

    my $file = &#34;strings&#34;;
    open INFILE, $file or die &#34;$file not found&#34;;

    my $sha2obj = new Digest::SHA2;  # defaults to 256-bit output
    $sha2obj-&#62;addfile(*INFILE);
    my $hex_output = $sha2obj-&#62;hexdigest();
    my $base64_output = $sha2obj-&#62;b64digest();
    close INFILE;
    print &#34;$file\n&#34;;
    print &#34;$hex_output\n&#34;;
    print &#34;$base64_output\n&#34;;</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="MORE_EXAMPLES"
>MORE EXAMPLES <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>See the &#34;examples&#34; and &#34;t&#34; directories for more examples.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DIGEST_SPEED"
>DIGEST SPEED <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Please consult the file, COMPARISON, for comparison of various one-way hash functions with digest lengths of 256, 384, and 512 bits.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="ACKNOWLEDGEMENT"
>ACKNOWLEDGEMENT <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>I used the C source of Aaron Gifford as backend for this Perl implementation.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="COPYRIGHT_AND_LICENSE"
>COPYRIGHT AND LICENSE <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Copyright (C) 2003 Julius C. Duque. Please read contact.html that comes with this distribution for details on how to contact the author.</p>

<p>This library is free software; you can redistribute it and/or modify it under the same terms as the GNU General Public License.</p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78063 Uploads, 24686 Distributions
105893 Modules, 9637 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Sun Apr 22 06:52:32 2012 GMT (0.192564964294434) @cpansearch1 -->
 </body>
</html>
