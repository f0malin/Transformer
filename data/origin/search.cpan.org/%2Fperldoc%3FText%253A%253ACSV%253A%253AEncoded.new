<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>Text::CSV::Encoded - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","Text-CSV-Encoded",3]);
    _gaq.push(["_setCustomVar",5,"Release","Text-CSV-Encoded-0.10",3]);
    _gaq.push(["_setCustomVar",3,"Module","Text::CSV::Encoded",3]);
    _gaq.push(["_setCustomVar",1,"Author","MAKAMAKA",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?Text::CSV::Encoded">permalink</a></div>
  <a href="/~makamaka/">Makamaka Hannyaharamitu</a> &gt;
  <a href="/~makamaka/Text-CSV-Encoded-0.10/">Text-CSV-Encoded-0.10</a> &gt;
  Text::CSV::Encoded
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/36daaac2532981268006980d18ed4795?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/M/MA/MAKAMAKA/Text-CSV-Encoded-0.10.tar.gz">Text-CSV-Encoded-0.10.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=Text%3A%3ACSV%3A%3AEncoded;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~MAKAMAKA/Text-CSV-Encoded-0.10/lib/Text/CSV/Encoded.pm">Annotate this POD
</a></p>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>Open&nbsp;</td><td style="text-align:right"> 0</td></tr>
</table>
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=Text-CSV-Encoded">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  0.10 &nbsp;
<span class="noprint">
  <a href="/src/MAKAMAKA/Text-CSV-Encoded-0.10/lib/Text/CSV/Encoded.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <li class='indexItem indexItem1'><a href='#ENCODINGS'>ENCODINGS</a>
  <li class='indexItem indexItem1'><a href='#METHODS'>METHODS</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#new'>new</a>
    <li class='indexItem indexItem2'><a href='#encoding_in'>encoding_in</a>
    <li class='indexItem indexItem2'><a href='#encoding_out'>encoding_out</a>
    <li class='indexItem indexItem2'><a href='#encoding'>encoding</a>
    <li class='indexItem indexItem2'><a href='#parse/combine/getline/print'>parse/combine/getline/print</a>
    <li class='indexItem indexItem2'><a href='#decode'>decode</a>
    <li class='indexItem indexItem2'><a href='#encode'>encode</a>
    <li class='indexItem indexItem2'><a href='#coder_class'>coder_class</a>
    <li class='indexItem indexItem2'><a href='#coder'>coder</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#CODER_CLASS'>CODER CLASS</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#Use_Encode_module'>Use Encode module</a>
    <li class='indexItem indexItem2'><a href='#Use_Encode::Guess_module'>Use Encode::Guess module</a>
    <li class='indexItem indexItem2'><a href='#Use_XXX_module'>Use XXX module</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#TODO'>TODO</a>
  <li class='indexItem indexItem1'><a href='#SEE_ALSO'>SEE ALSO</a>
  <li class='indexItem indexItem1'><a href='#AUTHOR'>AUTHOR</a>
  <li class='indexItem indexItem1'><a href='#COPYRIGHT_AND_LICENSE'>COPYRIGHT AND LICENSE</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Text::CSV::Encoded - Encoding aware Text::CSV.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">    # Here in Perl 5.8 or later
    $csv = Text::CSV::Encoded-&#62;new ({
        encoding_in  =&#62; &#34;iso-8859-1&#34;, # the encoding comes into   Perl
        encoding_out =&#62; &#34;cp1252&#34;,     # the encoding comes out of Perl
    });

    # parsing CSV is regarded as input
    $csv-&#62;parse( $line );      # $line is a iso-8859-1 encoded string
    @columns = $csv-&#62;fields(); # they are unicode data

    # combining list is regarded as output
    $csv-&#62;combine(@columns);   # they are unicode data
    $line = $csv-&#62;string();    # $line is a cp1252 encoded string

    # if you want for returned @columns to be encoded in $encoding
    #   or want for combining @columns to be assumed in $encoding
    $csv-&#62;encoding( $encoding );

    # change input/output encodings
    $csv-&#62;encoding_in(&#39;shiftjis&#39;)-&#62;encoding_out(&#39;utf8&#39;);
    $csv-&#62;eol(&#34;\n&#34;);

    open (my $in,  &#34;sjis.csv&#34;);
    open (my $out, &#34;output.csv&#34;);

    # change an encoding from shiftjis to utf8

    while( my $columns = $csv-&#62;getline( $in ) ) {
        $csv-&#62;print( $out, $columns );
    }

    close($in);
    close($out);

    # simple shortcuts
    # (regardless of encoding_in/out and encoding)

    $uni_columns = $csv-&#62;decode( &#39;euc-jp&#39;, $line );         # euc-jp =&#62; unicode
    $line        = $csv-&#62;encode( &#39;euc-jp&#39;, $uni_columns );  # unicode =&#62; euc-jp

    # pass check value to coder class
    $csv-&#62;coder-&#62;encode_check_value( Encode::FB_PERLQQ );</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This module inherits <a href="/perldoc?Text%3A%3ACSV" class="podlinkpod"
>Text::CSV</a> and is aware of input/output encodings.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="ENCODINGS"
>ENCODINGS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Acceptable names of encodings (<code>encoding_in</code>, <code>encoding_out</code> and <code>encoding</code>) are depend upon its coder class (see to <a href="#CODER_CLASS" class="podlinkpod"
>&#34;CODER CLASS&#34;</a>). But these names should be based on <a href="/perldoc?Encode" class="podlinkpod"
>Encode</a> supported names. See to <a href="/perldoc?Encode%3A%3ASupported" class="podlinkpod"
>Encode::Supported</a> and <a href="/perldoc?Encode%3A%3AAlias" class="podlinkpod"
>Encode::Alias</a>.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="METHODS"
>METHODS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="new"
>new</a></h2>

<pre class="sh_perl">    $csv = Text::CSV::Encoded-&#62;new();

    Text::CSV::Encoded-&#62;error_diag unless $csv; # report error message</pre>

<p>Creates a new Text::CSV::Encoded object. It can take all options of <a href="/perldoc?Text%3A%3ACSV" class="podlinkpod"
>Text::CSV</a>. Of course, <code>binary</code> option is always on.</p>

<p>If Text::CSV::Encoded fails in constructing, you can get an error message using <code>error_diag</code>. See to <a href="/perldoc?Text%3A%3ACSV#error_diag" class="podlinkpod"
>&#34;error_diag&#34; in Text::CSV</a>.</p>

<p>The following options are supported by this method:</p>

<dl>
<dt><a name="encoding"
>encoding</a></dt>

<dd>
<p>The encoding of list data in below cases.</p>

<pre class="sh_perl">  * list data returned by fields() after successful parse().
  * list data consumed by combine().
  * list reference returned by getline().
  * list reference taken by print().</pre>

<p>See to <a href="#encoding" class="podlinkpod"
>&#34;encoding&#34;</a>.</p>

<dt><a name="encoding_in"
>encoding_in</a></dt>

<dd>
<dt><a name="encoding_io_in"
>encoding_io_in</a></dt>

<dd>
<dt><a name="encoding_to_parse"
>encoding_to_parse</a></dt>

<dd>
<p>The encoding for pre-parsing CSV strings. See to <a href="#encoding_in" class="podlinkpod"
>&#34;encoding_in&#34;</a>.</p>

<p><code>encoding_io_in</code> is an alias to <code>encoding_in</code>. If both <code>encoding_in</code> and <code>encoding_io_in</code> are set at the same time, the <code>encoding_in</code> takes precedence.</p>

<p><code>encoding_to_parse</code> is an alias to <code>encoding_in</code>. If both <code>encoding_in</code> and <code>encoding_to_parse</code> are set at the same time, the <code>encoding_in</code> takes precedence.</p>

<dt><a name="encoding_out"
>encoding_out</a></dt>

<dd>
<dt><a name="encoding_io_out"
>encoding_io_out</a></dt>

<dd>
<dt><a name="encoding_to_combine"
>encoding_to_combine</a></dt>

<dd>
<p>The encoding for combined CSV strings. See to <a href="#encoding_out" class="podlinkpod"
>&#34;encoding_out&#34;</a>.</p>

<p><code>encoding_io_out</code> is an alias to <code>encoding_out</code>. If both <code>encoding_out</code> and <code>encoding_io_out</code> are set at the same time, the <code>encoding_out</code> takes precedence.</p>

<p><code>encoding_to_combine</code> is an alias to <code>encoding_out</code>. If both <code>encoding_out</code> and <code>encoding_io_out</code> are set at the same time, the <code>encoding_out</code> takes precedence.</p>

<dt><a name="coder_class"
>coder_class</a></dt>

<dd>
<p>A name of coder class that really decodes and encodes data.</p>
</dd>
</dl>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="encoding_in"
>encoding_in</a></h2>

<pre class="sh_perl">    $csv = $csv-&#62;encoding_in( $encoding );</pre>

<p>The accessor to an encoding for pre-parsing CSV strings. If no encoding is given, returns current <code>$encoding</code>, otherwise the object itself.</p>

<pre class="sh_perl">    $encoding = $csv-&#62;encoding_in()</pre>

<p>In <code>parse</code> or <code>getline</code>, the <code>$csv</code> will assume CSV data as the given encoding. If <code>encoding_in</code> is not specified or is set with false value (<a href="/perldoc?undef" class="podlinkpod"
>undef</a>), it will assume input CSV strings as Unicode (not UTF-8) when <a href="/~makamaka/Text-CSV-Encoded-0.10/lib/Text/CSV/Encoded/Coder/Encode.pm" class="podlinkpod"
>Text::CSV::Encoded::Coder::Encode</a> is used.</p>

<pre class="sh_perl">    $csv-&#62;encoding_in( undef );
    # assume as Unicode when Text::CSV::Encoded::Coder::Encode is used.</pre>

<p>If you pass a list reference that contains multiple encodings to the method, the working are depend upon the coder class. For example, if you use the coder class with <a href="/~makamaka/Text-CSV-Encoded-0.10/lib/Text/CSV/Encoded/Coder/EncodeGuess.pm" class="podlinkpod"
>Text::CSV::Encoded::Coder::EncodeGuess</a>, it might guess the encoding from the given list.</p>

<pre class="sh_perl">    $csv-&#62;coder_class( &#39;Text::CSV::Encoded::Coder::EncodeGuess&#39; );
    $csv-&#62;encoding_in( [&#39;shiftjis&#39;, &#39;euc-jp&#39;, &#39;iso-20022-jp&#39;] );</pre>

<p>See to <a href="#Coder_Class" class="podlinkpod"
>&#34;Coder Class&#34;</a> and <a href="/~makamaka/Text-CSV-Encoded-0.10/lib/Text/CSV/Encoded/Coder/EncodeGuess.pm" class="podlinkpod"
>Text::CSV::Encoded::Coder::EncodeGuess</a>.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="encoding_out"
>encoding_out</a></h2>

<pre class="sh_perl">    $csv = $csv-&#62;encoding_out( $encoding );</pre>

<p>The accessor to an encoding for converting combined CSV strings. If no encoding is given, returns current <code>$encoding</code>, otherwise the object itself.</p>

<pre class="sh_perl">    $encoding = $csv-&#62;encoding_out();</pre>

<p>In <code>combine</code> or <code>print</code>, the <code>$csv</code> will return a result string encoded in the given encoding. If <code>encoding_out</code> is not specified or is set with false value, it will return a result string as Unicode (not UTF-8).</p>

<pre class="sh_perl">    $csv-&#62;encoding_out( undef );
    # return as Unicode when Text::CSV::Encoded::Coder::Encode is used.</pre>

<p>You must not pass a list reference to <code>encoding_out</code>, unlike <code>encoding_in</code> or <code>encoding</code>.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="encoding"
>encoding</a></h2>

<pre class="sh_perl">    $csv = $csv-&#62;encoding( $encoding );
    $encoding = $csv-&#62;encoding();</pre>

<p>The accessor to an encoding for list data in the below cases.</p>

<pre class="sh_perl">  * list data returned by fields() after successful parse().
  * list data consumed by combine().
  * list reference returned by getline().
  * list reference taken by print().</pre>

<p>In other word, in <code>parse</code> and <code>getline</code>, <code>encoding</code> is an encoding of the returned list. And in <code>combine</code> and <code>print</code>, it is assumed as an encoding for the passing list data.</p>

<p>If <code>encoding</code> is not specified or is set with false value (<code>undef</code>), the field data will be regarded as Unicode (when <a href="/~makamaka/Text-CSV-Encoded-0.10/lib/Text/CSV/Encoded/Coder/Encode.pm" class="podlinkpod"
>Text::CSV::Encoded::Coder::Encode</a> is used).</p>

<pre class="sh_perl">    # ex.) a souce code is encoded in euc-jp, and print to stdout in shiftjis.
    @fields = ( .... );
    $csv-&#62;encoding(&#39;euc-jp&#39;)
        -&#62;encoding_to_combine(&#39;shiftjis&#39;) # same as encoding_out
        -&#62;combine( @fields ); # from euc-jp to shift_jis

    print $csv-&#62;string;

    $csv-&#62;encoding(&#39;shiftjis&#39;)
        -&#62;encoding_to_parse(&#39;shiftjis&#39;) # same as encoding_in
        -&#62;parse( $csv-&#62;string ); # from shift_jis to shift_jis

    print join(&#34;, &#34;, $csv-&#62;fields );</pre>

<p>If you pass a list reference contains multiple encodings to the method, The working are depend upon the coder class. For example, <a href="/perldoc?Text%3A%3ACSV%3A%3AEncoded%3A%3AEncodeGuess" class="podlinkpod"
>Text::CSV::Encoded::EncodeGuess</a> might guess the encoding from the given list.</p>

<pre class="sh_perl">    $csv-&#62;coder_class( &#39;Text::CSV::Encoded::Coder::EncodeGuess&#39; );
    $csv-&#62;encoding( [&#39;ascii&#39;, &#39;ucs2&#39;] )-&#62;combine( @cols );</pre>

<p>See to <a href="#Coder_Class" class="podlinkpod"
>&#34;Coder Class&#34;</a> and <a href="/~makamaka/Text-CSV-Encoded-0.10/lib/Text/CSV/Encoded/Coder/EncodeGuess.pm" class="podlinkpod"
>Text::CSV::Encoded::Coder::EncodeGuess</a>.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="parse/combine/getline/print"
>parse/combine/getline/print</a></h2>

<pre class="sh_perl">    $csv-&#62;parse( $encoded_string );
    @unicode_array = $csv-&#62;fields();

    $csv-&#62;combine( @unicode_array );
    $encoded_string = $csv-&#62;string;

    $unicode_arrayref = $csv-&#62;getline( $io );
    # get arrayref contains unicode strings
    $csv-&#62;print( $io, $unicode_arrayref );
    # print $io with string encoded in $csv-&#62;encoded_in.

    $encoded_arrayref = $csv-&#62;getline( $io =&#62; $encoding )
    # directly encoded in $encoding.</pre>

<p>Here is the relation of <code>encoding_in</code>, <code>encoding_out</code> and <code>encoding</code>.</p>

<pre class="sh_perl">    # CSV string        =&#62;  (getline/parsed)  =&#62;     Perl array
    #           assumed as                  encoded in
    #                encoding_in                encoding


    # Perl array        =&#62;  (print/combined)  =&#62;     CSV string
    #           assumed as                  encoded in
    #               encoding                    encoding_out</pre>

<p>If you want to treat Perl array data as Unicode in Perl5.8 and later, don&#39;t specify <code>encoding</code> (or set <code>undef</code> into <code>encoding</code>).</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="decode"
>decode</a></h2>

<pre class="sh_perl">    $arrayref = $csv-&#62;decode( $encoding, $encoded_string );

    $arrayref = $csv-&#62;decode( $string );</pre>

<p>A short cut method to convert CSV to Perl. Without <code>$encoding</code>, <code>$string</code> is assumed as a Unicode.</p>

<p>The returned value status is depend upon its coder class. With <a href="/~makamaka/Text-CSV-Encoded-0.10/lib/Text/CSV/Encoded/Coder/Encode.pm" class="podlinkpod"
>Text::CSV::Encoded::Coder::Encode</a>, <code>$arrayref</code> contains Unicode strings.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="encode"
>encode</a></h2>

<pre class="sh_perl">    $encoded_string = $csv-&#62;encode( $encoding, $arrayref );

    $string = $csv-&#62;encode( $arrayref );</pre>

<p>A short cut method to convert Perl to CSV. With <a href="/~makamaka/Text-CSV-Encoded-0.10/lib/Text/CSV/Encoded/Coder/Encode.pm" class="podlinkpod"
>Text::CSV::Encoded::Coder::Encode</a>, <code>$arrayref</code> is assumed to contain Unicode strings.</p>

<p>Without <code>$encoding</code>, return as is.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="coder_class"
>coder_class</a></h2>

<pre class="sh_perl">    $csv = $csv-&#62;coder_class( $classname );
    $classname = $csv-&#62;coder_class();</pre>

<p>Returns the coder class name. See to <a href="#CODER_CLASS" class="podlinkpod"
>&#34;CODER CLASS&#34;</a>.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="coder"
>coder</a></h2>

<pre class="sh_perl">    $coder = $csv-&#62;coder();</pre>

<p>Returns a coder object.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="CODER_CLASS"
>CODER CLASS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Text::CSV::Encoded delegates the encoding converting process to another module. Since version 5.8, Perl standardly has <a href="/perldoc?Encode" class="podlinkpod"
>Encode</a> module. So the default coder module <a href="/~makamaka/Text-CSV-Encoded-0.10/lib/Text/CSV/Encoded/Coder/Encode.pm" class="podlinkpod"
>Text::CSV::Encoded::Coder::Encode</a> also uses it. In this case, you don&#39;t have to take care of it.</p>

<p>In older Perl, the default is <a href="/~makamaka/Text-CSV-Encoded-0.10/lib/Text/CSV/Encoded/Coder/Base.pm" class="podlinkpod"
>Text::CSV::Encoded::Coder::Base</a>. It does nothing. So you have to make a coder module using your favorite converting module, for example, <a href="/perldoc?Unicode%3A%3AString" class="podlinkpod"
>Unicode::String</a> or <a href="/perldoc?Jcode" class="podlinkpod"
>Jcode</a> and so on.</p>

<p>Please check <a href="/~makamaka/Text-CSV-Encoded-0.10/lib/Text/CSV/Encoded/Coder/Base.pm" class="podlinkpod"
>Text::CSV::Encoded::Coder::Base</a> and <a href="/~makamaka/Text-CSV-Encoded-0.10/lib/Text/CSV/Encoded/Coder/Encode.pm" class="podlinkpod"
>Text::CSV::Encoded::Coder::Encode</a> to make such a module.</p>

<p>In calling <a href="/~makamaka/Text-CSV-Encoded-0.10/lib/Text/CSV/Encoded.pm" class="podlinkpod"
>Text::CSV::Encoded</a>, you can set another coder module with <code>coder_class</code>;</p>

<pre class="sh_perl">  use Text::CSV::Encoded coder_class =&#62; &#39;YourCoder&#39;;</pre>

<p>This will call <code>YourCoder</code> module in runtime.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Use_Encode_module"
>Use Encode module</a></h2>

<p>Perl 5.8 or later, <a href="/~makamaka/Text-CSV-Encoded-0.10/lib/Text/CSV/Encoded.pm" class="podlinkpod"
>Text::CSV::Encoded</a> use <a href="/~makamaka/Text-CSV-Encoded-0.10/lib/Text/CSV/Encoded/Coder/Encode.pm" class="podlinkpod"
>Text::CSV::Encoded::Coder::Encode</a> as its backend engine. You can set <code>encoding_in</code>, <code>encoding_out</code> and <code>encoding</code> with <a href="/perldoc?Encode" class="podlinkpod"
>Encode</a> supported encodings. See to <a href="/perldoc?Encode%3A%3ASupported" class="podlinkpod"
>Encode::Supported</a> and <a href="/perldoc?Encode%3A%3AAlias" class="podlinkpod"
>Encode::Alias</a>.</p>

<p>Without <code>encoding</code> (or set <code>undef</code>), <code>parse</code>/<code>getline</code>/<code>getline_hr</code> return list data whose entries are <code>Unicode</code> strings. On the contrary, <code>combine</code>/<code>print</code> take data as <code>Unicode</code> string list.</p>

<p>About the extra methods <code>decode</code> and <code>encode</code>. <code>decode</code> returns <code>Unicode</code> string list and <code>encode</code> takes <code>Unicode</code> string list. But If no <code>$encoding</code> is passed to <code>encode</code>, it returns a non-Unicode CSV string for non-Unicode list data.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Use_Encode::Guess_module"
>Use Encode::Guess module</a></h2>

<p>If you don&#39;t know definitely input CSV data encoding (for parse/getline), <a href="/~makamaka/Text-CSV-Encoded-0.10/lib/Text/CSV/Encoded/Coder/EncodeGuess.pm" class="podlinkpod"
>Text::CSV::Encoded::Coder::EncodeGuess</a> may be useful to you. It inherits from <a href="/~makamaka/Text-CSV-Encoded-0.10/lib/Text/CSV/Encoded/Coder/Encode.pm" class="podlinkpod"
>Text::CSV::Encoded::Coder::Encode</a>, so you can treate methods and attributes as same as <a href="/~makamaka/Text-CSV-Encoded-0.10/lib/Text/CSV/Encoded/Coder/Encode.pm" class="podlinkpod"
>Text::CSV::Encoded::Coder::Encode</a>. And it provides a guessing fucntion with <a href="/perldoc?Encode%3A%3AGuess" class="podlinkpod"
>Encode::Guess</a>.</p>

<p>When it is backend coder class, <code>encoding_in</code> and <code>encoding</code> can take a encoding list reference, and then it might guess the encoding from the given list.</p>

<pre class="sh_perl">    $csv-&#62;encoding_in( [&#39;shiftjis&#39;, &#39;euc-jp&#39;] )-&#62;parse( $sjis_or_eucjp_encoded_csv_string );</pre>

<p>It is important to remember the guessing feature is not always successful.</p>

<p>Or, the method can be applied to <code>encoding</code>. For exmaple, you want to convert data from Microsoft Excel to CSV.</p>

<pre class="sh_perl">    use Text::CSV::Encoded  coder_class =&#62; &#39;Text::CSV::Encoded::Coder::EncodeGuess&#39;;
    use Spreadsheet::ParseExcel;

    my $csv = Text::CSV::Encoded-&#62;new( eol =&#62; &#34;\n&#34; );
    $csv-&#62;encoding( [&#39;ucs2&#39;, &#39;ascii&#39;] ); # guessing ucs2 or ascii?
    $csv-&#62;encoding_out(&#39;shiftjis&#39;); # print in shift_jis

    my $excel = Spreadsheet::ParseExcel::Workbook-&#62;Parse( $file );
    my $sheet = $excel-&#62;{Worksheet}-&#62;[0];

    for my $row ( $sheet-&#62;{MinRow} .. $sheet-&#62;{MaxRow} ) {
        my @fields;
        for my $col ( $sheet-&#62;{MinCol} ..  $sheet-&#62;{MaxCol} ) {
            my $cell = $sheet-&#62;{Cells}[$row][$col];
            push @fields, $cell-&#62;{Val};
        }
        $csv-&#62;print( \@fields );
    }</pre>

<p>In this case, guessing for list data. After combining, you may have a need to clear <code>encoding</code>. Again remember that the feature is not always successful.</p>

<p>In addtion, Microsoft Excel data converting is a carefult thing. See to <a href="/perldoc?Text%3A%3ACSV_XS#CAVEATS" class="podlinkpod"
>&#34;CAVEATS&#34; in Text::CSV_XS</a>.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Use_XXX_module"
>Use XXX module</a></h2>

<p>Someone might make a new coder module in older version Perl... There is an example with <a href="/perldoc?Jcode" class="podlinkpod"
>Jcode</a> in <a href="/~makamaka/Text-CSV-Encoded-0.10/lib/Text/CSV/Encoded/Coder/Base.pm" class="podlinkpod"
>Text::CSV::Encoded::Coder::Base</a> document.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="TODO"
>TODO <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<dl>
<dt><a name='More'></a><a name="More_sophisticated_tests_-_Welcome!"
>More sophisticated tests - Welcome!</a></dt>

<dd>
<dt><a name="Speed"
>Speed</a></dt>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SEE_ALSO"
>SEE ALSO <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><a href="/perldoc?Text%3A%3ACSV" class="podlinkpod"
>Text::CSV</a>, <a href="/perldoc?Text%3A%3ACSV_XS" class="podlinkpod"
>Text::CSV_XS</a>, <a href="/perldoc?Encode" class="podlinkpod"
>Encode</a>, <a href="/perldoc?Encode%3A%3AGuess" class="podlinkpod"
>Encode::Guess</a>, <a href="/perldoc?utf8" class="podlinkpod"
>utf8</a>, <a href="/~makamaka/Text-CSV-Encoded-0.10/lib/Text/CSV/Encoded/Coder/Base.pm" class="podlinkpod"
>Text::CSV::Encoded::Coder::Base</a>, <a href="/~makamaka/Text-CSV-Encoded-0.10/lib/Text/CSV/Encoded/Coder/Encode.pm" class="podlinkpod"
>Text::CSV::Encoded::Coder::Encode</a>, <a href="/~makamaka/Text-CSV-Encoded-0.10/lib/Text/CSV/Encoded/Coder/EncodeGuess.pm" class="podlinkpod"
>Text::CSV::Encoded::Coder::EncodeGuess</a></p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHOR"
>AUTHOR <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Makamaka Hannyaharamitu, &#60;makamaka[at]cpan.org&#62;</p>

<p>The basic idea for this module and suggestions were given by H.Merijn Brand. He and Juerd advised me many points about documents and sources.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="COPYRIGHT_AND_LICENSE"
>COPYRIGHT AND LICENSE <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Copyright 2008-2010 by Makamaka Hannyaharamitu</p>

<p>This library is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78172 Uploads, 24707 Distributions
105971 Modules, 9645 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Wed Apr 25 00:34:39 2012 GMT (0.186953067779541) @cpansearch1 -->
 </body>
</html>
