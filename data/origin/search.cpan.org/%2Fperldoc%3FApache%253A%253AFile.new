<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>Apache::File - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","mod_perl",3]);
    _gaq.push(["_setCustomVar",5,"Release","mod_perl-1.31",3]);
    _gaq.push(["_setCustomVar",3,"Module","Apache::File",3]);
    _gaq.push(["_setCustomVar",1,"Author","GOZER",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?Apache::File">permalink</a></div>
  <a href="/~gozer/">Philippe M. Chiasson</a> &gt;
  <a href="/~gozer/mod_perl-1.31/">mod_perl-1.31</a> &gt;
  Apache::File
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/d29171528201c3f11f8b101e3b7e99bc?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/G/GO/GOZER/mod_perl-1.31.tar.gz">mod_perl-1.31.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=Apache%3A%3AFile;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~GOZER/mod_perl-1.31/File/File.pm">Annotate this POD
</a></p>
<div class=box style='width:150px; float: right'>
<h1 class=t5>Related Modules</h1>
<div style="margin:2px">
<a href="/perldoc?Apache%3A%3AFilter">Apache::Filter</a><br>
<a href="/perldoc?CGI%3A%3AApplication">CGI::Application</a><br>
<a href="/perldoc?Apache%3A%3AConstants">Apache::Constants</a><br>
<a href="/perldoc?IO%3A%3AFile">IO::File</a><br>
<a href="/perldoc?Apache%3A%3ADynagzip">Apache::Dynagzip</a><br>
<a href="/perldoc?Apache%3A%3ALog">Apache::Log</a><br>
<a href="/perldoc?Inline%3A%3AC">Inline::C</a><br>
<a href="/perldoc?Apache%3A%3AURI">Apache::URI</a><br>
<a href="/perldoc?CGI%3A%3ACarp">CGI::Carp</a><br>
<a href="/perldoc?Apache%3A%3ARegistry">Apache::Registry</a><br>
<small>
<a href="http://perlmonks.org/?node=cpan+module+search&pivot=1&module=Apache%3A%3AFile">more...</a><br>
By <a href="http://perlmonks.org/">perlmonks.org</a></small>
</div>
</div>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>New&nbsp;</td><td style="text-align:right"> 16</td></tr>
<tr><td>Open&nbsp;</td><td style="text-align:right"> 4</td></tr>
</table>
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=mod_perl">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  1.01 &nbsp;
<span class="noprint">
  <a href="/src/GOZER/mod_perl-1.31/File/File.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <li class='indexItem indexItem1'><a href='#Apache::File_methods'>Apache::File methods</a>
  <li class='indexItem indexItem1'><a href='#Apache_Methods_added_by_Apache::File'>Apache Methods added by Apache::File</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Apache::File - advanced functions for manipulating files at the server side</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">   use Apache::File ();</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Apache::File does two things: it provides an object-oriented interface to filehandles similar to Perl&#39;s standard IO::File class. While the Apache::File module does not provide all the functionality of IO::File, its methods are approximately twice as fast as the equivalent IO::File methods. Secondly, when you use Apache::File, it adds several new methods to the Apache class which provide support for handling files under the HTTP/1.1 protocol.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="Apache::File_methods"
>Apache::File methods <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<dl>
<dt><a name='new'></a><a name="new()"
>new()</a></dt>

<dd>
<p>This method creates a new filehandle, returning the filehandle object on success, undef on failure. If an additional argument is given, it will be passed to the open() method automatically.</p>

<pre class="sh_perl">   use Apache::File ();
   my $fh = Apache::File-&#62;new;

   my $fh = Apache::File-&#62;new($filename) or die &#34;Can&#39;t open $filename $!&#34;;</pre>

<dt><a name='open'></a><a name="open()"
>open()</a></dt>

<dd>
<p>Given an Apache::File object previously created with new(), this method opens a file and associates it with the object. The open() method accepts the same types of arguments as the standard Perl open() function, including support for file modes.</p>

<pre class="sh_perl">   $fh-&#62;open($filename);

   $fh-&#62;open(&#34;&#62;$out_file&#34;);

   $fh-&#62;open(&#34;|$program&#34;);</pre>

<dt><a name='close'></a><a name="close()"
>close()</a></dt>

<dd>
<p>The close() method is equivalent to the Perl builtin close function, returns true upon success, false upon failure.</p>

<pre class="sh_perl">   $fh-&#62;close or die &#34;Can&#39;t close $filename $!&#34;;</pre>

<dt><a name='tmpfile'></a><a name="tmpfile()"
>tmpfile()</a></dt>

<dd>
<p>The tmpfile() method is responsible for opening up a unique temporary file. It is similar to the tmpnam() function in the POSIX module, but doesn&#39;t come with all the memory overhead that loading POSIX does. It will choose a suitable temporary directory (which must be writable by the Web server process). It then generates a series of filenames using the current process ID and the $TMPNAM package global. Once a unique name is found, it is opened for writing, using flags that will cause the file to be created only if it does not already exist. This prevents race conditions in which the function finds what seems to be an unused name, but someone else claims the same name before it can be created.</p>

<p>As an added bonus, tmpfile() calls the register_cleanup() method behind the scenes to make sure the file is unlinked after the transaction is finished.</p>

<p>Called in a list context, tmpfile() returns the temporary file name and a filehandle opened for reading and writing. In a scalar context only the filehandle is returned.</p>

<pre class="sh_perl">   my($tmpnam, $fh) = Apache::File-&#62;tmpfile;

   my $fh = Apache::File-&#62;tmpfile;</pre>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="Apache_Methods_added_by_Apache::File"
>Apache Methods added by Apache::File <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>When a handler pulls in Apache::File, the module adds a number of new methods to the Apache request object. These methods are generally of interest to handlers that wish to serve static files from disk or memory using the features of the HTTP/1.1 protocol that provide increased performance through client-side document caching.</p>

<dl>
<dt><a name='r'></a><a name="$r-&#62;discard_request_body()"
>$r-&#62;discard_request_body()</a></dt>

<dd>
<p>This method tests for the existence of a request body and if present, simply throws away the data. This discarding is especially important when persistent connections are being used, so that the request body will not be attached to the next request. If the request is malformed, an error code will be returned, which the module handler should propagate back to Apache.</p>

<pre class="sh_perl">   if ((my $rc = $r-&#62;discard_request_body) != OK) {
      return $rc;
   }</pre>

<dt><a name='r'></a><a name="$r-&#62;meets_conditions()"
>$r-&#62;meets_conditions()</a></dt>

<dd>
<p>In the interest of HTTP/1.1 compliance, the meets_conditions() method is used to implement ``conditional GET&#39;&#39; rules. These rules include inspection of client headers, including If-Modified-Since, If-Unmodified-Since, If-Match and If-None-Match.</p>

<p>As far as Apache modules are concerned, they need only check the return value of this method before sending a request body. If the return value is anything other than OK, the module should return from the handler with that value. A common return value other than OK is HTTP_NOT_MODIFIED, which is sent when the document is already cached on the client side, and has not changed since it was cached.</p>

<pre class="sh_perl">   if((my $rc = $r-&#62;meets_conditions) != OK) {
      return $rc;
   }
   #else ... go and send the response body ...</pre>

<dt><a name='r'></a><a name="$r-&#62;mtime()"
>$r-&#62;mtime()</a></dt>

<dd>
<p>This method returns the last modified time of the requested file, expressed as seconds since the epoch.</p>

<pre class="sh_perl">   my $date_string = localtime $r-&#62;mtime;</pre>

<p>To change the last modified time use the <code>update_mtime()</code> method.</p>

<dt><a name='r'></a><a name="$r-&#62;set_content_length()"
>$r-&#62;set_content_length()</a></dt>

<dd>
<p>This method sets the outgoing Content-length header based on its argument, which should be expressed in byte units. If no argument is specified, the method will use the size returned by $r-&#62;filename. This method is a bit faster and more concise than setting Content-length in the headers_out table yourself.</p>

<pre class="sh_perl">   $r-&#62;set_content_length;
   $r-&#62;set_content_length(-s $r-&#62;finfo); #same as above
   $r-&#62;set_content_length(-s $filename);</pre>

<dt><a name='r'></a><a name="$r-&#62;set_etag()"
>$r-&#62;set_etag()</a></dt>

<dd>
<p>This method is used to set the outgoing ETag header corresponding to the requested file. ETag is an opaque string that identifies the currrent version of the file and changes whenever the file is modified. This string is tested by the meets_conditions() method if the client provide an If-Match or If-None-Match header.</p>

<pre class="sh_perl">   $r-&#62;set_etag;</pre>

<dt><a name='r'></a><a name="$r-&#62;set_last_modified()"
>$r-&#62;set_last_modified()</a></dt>

<dd>
<p>This method is used to set the outgoing Last-Modified header from the value returned by $r-&#62;mtime. The method checks that the specified time is not in the future. In addition, using set_last_modified() is faster and more concise than setting Last-Modified in the headers_out table yourself.</p>

<p>You may provide an optional time argument, in which case the method will first call the update_mtime() to set the file&#39;s last modification date. It will then set the outgoing Last-Modified header as before.</p>

<pre class="sh_perl">   $r-&#62;update_mtime((stat $r-&#62;finfo)[9]);
   $r-&#62;set_last_modified;
   $r-&#62;set_last_modified((stat $r-&#62;finfo)[9]); #same as the two lines above</pre>

<dt><a name='r'></a><a name="$r-&#62;update_mtime()"
>$r-&#62;update_mtime()</a></dt>

<dd>
<p>Rather than setting the request record mtime field directly, you can use the update_mtime() method to change the value of this field. It will only be updated if the new time is more recent than the current mtime. If no time argument is present, the default is the last modified time of $r-&#62;filename.</p>

<pre class="sh_perl">   $r-&#62;update_mtime;
   $r-&#62;update_mtime((stat $r-&#62;finfo)[9]); #same as above
   $r-&#62;update_mtime(time);</pre>
</dd>
</dl>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78283 Uploads, 24725 Distributions
106015 Modules, 9649 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Sat Apr 28 07:51:20 2012 GMT (0.112510919570923) @cpansearch1 -->
 </body>
</html>
