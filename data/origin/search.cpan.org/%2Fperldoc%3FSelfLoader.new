<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>SelfLoader - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","SelfLoader",3]);
    _gaq.push(["_setCustomVar",5,"Release","SelfLoader-1.20",3]);
    _gaq.push(["_setCustomVar",3,"Module","SelfLoader",3]);
    _gaq.push(["_setCustomVar",1,"Author","SMUELLER",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?SelfLoader">permalink</a></div>
  <a href="/~smueller/">Steffen M&uuml;ller</a> &gt;
  <a href="/~smueller/SelfLoader-1.20/">SelfLoader-1.20</a> &gt;
  SelfLoader
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/ac0c0eab36df58cd3676c1f03f4d5185?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/S/SM/SMUELLER/SelfLoader-1.20.tar.gz">SelfLoader-1.20.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=SelfLoader;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~SMUELLER/SelfLoader-1.20/lib/SelfLoader.pm">Annotate this POD
</a></p>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>Open&nbsp;</td><td style="text-align:right"> 0</td></tr>
</table>
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=SelfLoader">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  1.20 &nbsp;
<span class="noprint">
  <a href="/src/SMUELLER/SelfLoader-1.20/lib/SelfLoader.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#The___DATA___token'>The __DATA__ token</a>
    <li class='indexItem indexItem2'><a href='#SelfLoader_autoloading'>SelfLoader autoloading</a>
    <li class='indexItem indexItem2'><a href='#Autoloading_and_package_lexicals'>Autoloading and package lexicals</a>
    <li class='indexItem indexItem2'><a href='#SelfLoader_and_AutoLoader'>SelfLoader and AutoLoader</a>
    <li class='indexItem indexItem2'><a href='#__DATA__,___END__,_and_the_FOOBAR::DATA_filehandle.'>__DATA__, __END__, and the FOOBAR::DATA filehandle.</a>
    <li class='indexItem indexItem2'><a href='#Classes_and_inherited_methods.'>Classes and inherited methods.</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#Multiple_packages_and_fully_qualified_subroutine_names'>Multiple packages and fully qualified subroutine names</a>
  <li class='indexItem indexItem1'><a href='#AUTHOR'>AUTHOR</a>
  <li class='indexItem indexItem1'><a href='#COPYRIGHT_AND_LICENSE'>COPYRIGHT AND LICENSE</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>SelfLoader - load functions only on demand</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">    package FOOBAR;
    use SelfLoader;

    ... (initializing code)

    __DATA__
    sub {....</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This module tells its users that functions in the FOOBAR package are to be autoloaded from after the <code>__DATA__</code> token. See also <a href="/perldoc?perlsub#Autoloading" class="podlinkpod"
>&#34;Autoloading&#34; in perlsub</a>.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="The___DATA___token"
>The __DATA__ token</a></h2>

<p>The <code>__DATA__</code> token tells the perl compiler that the perl code for compilation is finished. Everything after the <code>__DATA__</code> token is available for reading via the filehandle FOOBAR::DATA, where FOOBAR is the name of the current package when the <code>__DATA__</code> token is reached. This works just the same as <code>__END__</code> does in package &#39;main&#39;, but for other modules data after <code>__END__</code> is not automatically retrievable, whereas data after <code>__DATA__</code> is. The <code>__DATA__</code> token is not recognized in versions of perl prior to 5.001m.</p>

<p>Note that it is possible to have <code>__DATA__</code> tokens in the same package in multiple files, and that the last <code>__DATA__</code> token in a given package that is encountered by the compiler is the one accessible by the filehandle. This also applies to <code>__END__</code> and main, i.e. if the &#39;main&#39; program has an <code>__END__</code>, but a module &#39;require&#39;d (_not_ &#39;use&#39;d) by that program has a &#39;package main;&#39; declaration followed by an &#39;<code>__DATA__</code>&#39;, then the <code>DATA</code> filehandle is set to access the data after the <code>__DATA__</code> in the module, _not_ the data after the <code>__END__</code> token in the &#39;main&#39; program, since the compiler encounters the &#39;require&#39;d file later.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="SelfLoader_autoloading"
>SelfLoader autoloading</a></h2>

<p>The <b>SelfLoader</b> works by the user placing the <code>__DATA__</code> token <i>after</i> perl code which needs to be compiled and run at &#39;require&#39; time, but <i>before</i> subroutine declarations that can be loaded in later - usually because they may never be called.</p>

<p>The <b>SelfLoader</b> will read from the FOOBAR::DATA filehandle to load in the data after <code>__DATA__</code>, and load in any subroutine when it is called. The costs are the one-time parsing of the data after <code>__DATA__</code>, and a load delay for the _first_ call of any autoloaded function. The benefits (hopefully) are a speeded up compilation phase, with no need to load functions which are never used.</p>

<p>The <b>SelfLoader</b> will stop reading from <code>__DATA__</code> if it encounters the <code>__END__</code> token - just as you would expect. If the <code>__END__</code> token is present, and is followed by the token DATA, then the <b>SelfLoader</b> leaves the FOOBAR::DATA filehandle open on the line after that token.</p>

<p>The <b>SelfLoader</b> exports the <code>AUTOLOAD</code> subroutine to the package using the <b>SelfLoader</b>, and this loads the called subroutine when it is first called.</p>

<p>There is no advantage to putting subroutines which will _always_ be called after the <code>__DATA__</code> token.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Autoloading_and_package_lexicals"
>Autoloading and package lexicals</a></h2>

<p>A &#39;my $pack_lexical&#39; statement makes the variable $pack_lexical local _only_ to the file up to the <code>__DATA__</code> token. Subroutines declared elsewhere _cannot_ see these types of variables, just as if you declared subroutines in the package but in another file, they cannot see these variables.</p>

<p>So specifically, autoloaded functions cannot see package lexicals (this applies to both the <b>SelfLoader</b> and the Autoloader). The <code>vars</code> pragma provides an alternative to defining package-level globals that will be visible to autoloaded routines. See the documentation on <b>vars</b> in the pragma section of <a href="/perldoc?perlmod" class="podlinkpod"
>perlmod</a>.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="SelfLoader_and_AutoLoader"
>SelfLoader and AutoLoader</a></h2>

<p>The <b>SelfLoader</b> can replace the AutoLoader - just change &#39;use AutoLoader&#39; to &#39;use SelfLoader&#39; (though note that the <b>SelfLoader</b> exports the AUTOLOAD function - but if you have your own AUTOLOAD and are using the AutoLoader too, you probably know what you&#39;re doing), and the <code>__END__</code> token to <code>__DATA__</code>. You will need perl version 5.001m or later to use this (version 5.001 with all patches up to patch m).</p>

<p>There is no need to inherit from the <b>SelfLoader</b>.</p>

<p>The <b>SelfLoader</b> works similarly to the AutoLoader, but picks up the subs from after the <code>__DATA__</code> instead of in the &#39;lib/auto&#39; directory. There is a maintenance gain in not needing to run AutoSplit on the module at installation, and a runtime gain in not needing to keep opening and closing files to load subs. There is a runtime loss in needing to parse the code after the <code>__DATA__</code>. Details of the <b>AutoLoader</b> and another view of these distinctions can be found in that module&#39;s documentation.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="__DATA__,___END__,_and_the_FOOBAR::DATA_filehandle."
>__DATA__, __END__, and the FOOBAR::DATA filehandle.</a></h2>

<p>This section is only relevant if you want to use the <code>FOOBAR::DATA</code> together with the <b>SelfLoader</b>.</p>

<p>Data after the <code>__DATA__</code> token in a module is read using the FOOBAR::DATA filehandle. <code>__END__</code> can still be used to denote the end of the <code>__DATA__</code> section if followed by the token DATA - this is supported by the <b>SelfLoader</b>. The <code>FOOBAR::DATA</code> filehandle is left open if an <code>__END__</code> followed by a DATA is found, with the filehandle positioned at the start of the line after the <code>__END__</code> token. If no <code>__END__</code> token is present, or an <code>__END__</code> token with no DATA token on the same line, then the filehandle is closed.</p>

<p>The <b>SelfLoader</b> reads from wherever the current position of the <code>FOOBAR::DATA</code> filehandle is, until the EOF or <code>__END__</code>. This means that if you want to use that filehandle (and ONLY if you want to), you should either</p>

<p>1. Put all your subroutine declarations immediately after the <code>__DATA__</code> token and put your own data after those declarations, using the <code>__END__</code> token to mark the end of subroutine declarations. You must also ensure that the <b>SelfLoader</b> reads first by calling &#39;SelfLoader-&#62;load_stubs();&#39;, or by using a function which is selfloaded;</p>

<p>or</p>

<p>2. You should read the <code>FOOBAR::DATA</code> filehandle first, leaving the handle open and positioned at the first line of subroutine declarations.</p>

<p>You could conceivably do both.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Classes_and_inherited_methods."
>Classes and inherited methods.</a></h2>

<p>For modules which are not classes, this section is not relevant. This section is only relevant if you have methods which could be inherited.</p>

<p>A subroutine stub (or forward declaration) looks like</p>

<pre class="sh_perl">  sub stub;</pre>

<p>i.e. it is a subroutine declaration without the body of the subroutine. For modules which are not classes, there is no real need for stubs as far as autoloading is concerned.</p>

<p>For modules which ARE classes, and need to handle inherited methods, stubs are needed to ensure that the method inheritance mechanism works properly. You can load the stubs into the module at &#39;require&#39; time, by adding the statement &#39;SelfLoader-&#62;load_stubs();&#39; to the module to do this.</p>

<p>The alternative is to put the stubs in before the <code>__DATA__</code> token BEFORE releasing the module, and for this purpose the <code>Devel::SelfStubber</code> module is available. However this does require the extra step of ensuring that the stubs are in the module. If this is done I strongly recommend that this is done BEFORE releasing the module - it should NOT be done at install time in general.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="Multiple_packages_and_fully_qualified_subroutine_names"
>Multiple packages and fully qualified subroutine names <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Subroutines in multiple packages within the same file are supported - but you should note that this requires exporting the <code>SelfLoader::AUTOLOAD</code> to every package which requires it. This is done automatically by the <b>SelfLoader</b> when it first loads the subs into the cache, but you should really specify it in the initialization before the <code>__DATA__</code> by putting a &#39;use SelfLoader&#39; statement in each package.</p>

<p>Fully qualified subroutine names are also supported. For example,</p>

<pre class="sh_perl">   __DATA__
   sub foo::bar {23}
   package baz;
   sub dob {32}</pre>

<p>will all be loaded correctly by the <b>SelfLoader</b>, and the <b>SelfLoader</b> will ensure that the packages &#39;foo&#39; and &#39;baz&#39; correctly have the <b>SelfLoader</b> <code>AUTOLOAD</code> method when the data after <code>__DATA__</code> is first parsed.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHOR"
>AUTHOR <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><code>SelfLoader</code> is maintained by the perl5-porters. Please direct any questions to the canonical mailing list. Anything that is applicable to the CPAN release can be sent to its maintainer, though.</p>

<p>Author and Maintainer: The Perl5-Porters &#60;perl5-porters@perl.org&#62;</p>

<p>Maintainer of the CPAN release: Steffen Mueller &#60;smueller@cpan.org&#62;</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="COPYRIGHT_AND_LICENSE"
>COPYRIGHT AND LICENSE <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This package has been part of the perl core since the first release of perl5. It has been released separately to CPAN so older installations can benefit from bug fixes.</p>

<p>This package has the same copyright and license as the perl core:</p>

<pre class="sh_perl">             Copyright (C) 1993, 1994, 1995, 1996, 1997, 1998, 1999,
        2000, 2001, 2002, 2003, 2004, 2005, 2006 by Larry Wall and others
    
                            All rights reserved.
    
    This program is free software; you can redistribute it and/or modify
    it under the terms of either:
    
        a) the GNU General Public License as published by the Free
        Software Foundation; either version 1, or (at your option) any
        later version, or
    
        b) the &#34;Artistic License&#34; which comes with this Kit.
    
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See either
    the GNU General Public License or the Artistic License for more details.
    
    You should have received a copy of the Artistic License with this
    Kit, in the file named &#34;Artistic&#34;.  If not, I&#39;ll be glad to provide one.
    
    You should also have received a copy of the GNU General Public License
    along with this program in the file named &#34;Copying&#34;. If not, write to the 
    Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston,
    MA 02110-1301, USA or visit their web page on the internet at
    <a href="http://www.gnu.org/copyleft/gpl.html" class="podlinkurl"
>http://www.gnu.org/copyleft/gpl.html</a>.
    
    For those of you that choose to use the GNU General Public License,
    my interpretation of the GNU General Public License is that no Perl
    script falls under the terms of the GPL unless you explicitly put
    said script under the terms of the GPL yourself.  Furthermore, any
    object code linked with perl does not automatically fall under the
    terms of the GPL, provided such object code only adds definitions
    of subroutines and variables, and does not otherwise impair the
    resulting interpreter from executing any standard Perl script.  I
    consider linking in C subroutines in this manner to be the moral
    equivalent of defining subroutines in the Perl language itself.  You
    may sell such an object file as proprietary provided that you provide
    or offer to provide the Perl source, as specified by the GNU General
    Public License.  (This is merely an alternate way of specifying input
    to the program.)  You may also sell a binary produced by the dumping of
    a running Perl script that belongs to you, provided that you provide or
    offer to provide the Perl source as specified by the GPL.  (The
    fact that a Perl interpreter and your code are in the same binary file
    is, in this case, a form of mere aggregation.)  This is my interpretation
    of the GPL.  If you still have concerns or difficulties understanding
    my intent, feel free to contact me.  Of course, the Artistic License
    spells all this out for your protection, so you may prefer to use that.</pre>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78071 Uploads, 24685 Distributions
105889 Modules, 9637 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Sat Apr 21 16:46:44 2012 GMT (0.100405931472778) @cpansearch1 -->
 </body>
</html>
