<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>autodie - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","autodie",3]);
    _gaq.push(["_setCustomVar",5,"Release","autodie-2.11",3]);
    _gaq.push(["_setCustomVar",3,"Module","autodie",3]);
    _gaq.push(["_setCustomVar",1,"Author","PJF",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?autodie">permalink</a></div>
  <a href="/~pjf/">Paul Jamieson Fenwick</a> &gt;
  <a href="/~pjf/autodie-2.11/">autodie-2.11</a> &gt;
  autodie
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/c796116002768900a951a1b08a35d513?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/P/PJ/PJF/autodie-2.11.tar.gz">autodie-2.11.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=autodie;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~PJF/autodie-2.11/lib/autodie.pm">Annotate this POD
</a></p>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>New&nbsp;</td><td style="text-align:right"> 11</td></tr>
<tr><td>Open&nbsp;</td><td style="text-align:right"> 10</td></tr>
</table>
<a href="http://rt.cpan.org/NoAuth/Bugs.html?Dist=autodie">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  2.11 &nbsp;
<span class="noprint">
  <a href="/src/PJF/autodie-2.11/lib/autodie.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <li class='indexItem indexItem1'><a href='#EXCEPTIONS'>EXCEPTIONS</a>
  <li class='indexItem indexItem1'><a href='#CATEGORIES'>CATEGORIES</a>
  <li class='indexItem indexItem1'><a href='#FUNCTION_SPECIFIC_NOTES'>FUNCTION SPECIFIC NOTES</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#flock'>flock</a>
    <li class='indexItem indexItem2'><a href='#system/exec'>system/exec</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#GOTCHAS'>GOTCHAS</a>
  <li class='indexItem indexItem1'><a href='#DIAGNOSTICS'>DIAGNOSTICS</a>
  <li class='indexItem indexItem1'><a href='#BUGS'>BUGS</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#autodie_and_string_eval'>autodie and string eval</a>
    <li class='indexItem indexItem2'><a href='#REPORTING_BUGS'>REPORTING BUGS</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#FEEDBACK'>FEEDBACK</a>
  <li class='indexItem indexItem1'><a href='#AUTHOR'>AUTHOR</a>
  <li class='indexItem indexItem1'><a href='#LICENSE'>LICENSE</a>
  <li class='indexItem indexItem1'><a href='#SEE_ALSO'>SEE ALSO</a>
  <li class='indexItem indexItem1'><a href='#ACKNOWLEDGEMENTS'>ACKNOWLEDGEMENTS</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>autodie - Replace functions with ones that succeed or die with lexical scope</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">    use autodie;            # Recommended: implies &#39;use autodie qw(:default)&#39;

    use autodie qw(:all);   # Recommended more: defaults and system/exec.

    use autodie qw(open close);   # open/close succeed or die

    open(my $fh, &#34;&#60;&#34;, $filename); # No need to check!

    {
        no autodie qw(open);          # open failures won&#39;t die
        open(my $fh, &#34;&#60;&#34;, $filename); # Could fail silently!
        no autodie;                   # disable all autodies
    }</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">        bIlujDI&#39; yIchegh()Qo&#39;; yIHegh()!

        It is better to die() than to return() in failure.

                -- Klingon programming proverb.</pre>

<p>The <code>autodie</code> pragma provides a convenient way to replace functions that normally return false on failure with equivalents that throw an exception on failure.</p>

<p>The <code>autodie</code> pragma has <i>lexical scope</i>, meaning that functions and subroutines altered with <code>autodie</code> will only change their behaviour until the end of the enclosing block, file, or <code>eval</code>.</p>

<p>If <code>system</code> is specified as an argument to <code>autodie</code>, then it uses <a href="/perldoc?IPC%3A%3ASystem%3A%3ASimple" class="podlinkpod"
>IPC::System::Simple</a> to do the heavy lifting. See the description of that module for more information.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="EXCEPTIONS"
>EXCEPTIONS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Exceptions produced by the <code>autodie</code> pragma are members of the <a href="/~pjf/autodie-2.11/lib/autodie/exception.pm" class="podlinkpod"
>autodie::exception</a> class. The preferred way to work with these exceptions under Perl 5.10 is as follows:</p>

<pre class="sh_perl">    use feature qw(switch);

    eval {
        use autodie;

        open(my $fh, &#39;&#60;&#39;, $some_file);

        my @records = &#60;$fh&#62;;

        # Do things with @records...

        close($fh);

    };

    given ($@) {
        when (undef)   { say &#34;No error&#34;;                    }
        when (&#39;open&#39;)  { say &#34;Error from open&#34;;             }
        when (&#39;:io&#39;)   { say &#34;Non-open, IO error.&#34;;         }
        when (&#39;:all&#39;)  { say &#34;All other autodie errors.&#34;    }
        default        { say &#34;Not an autodie error at all.&#34; }
    }</pre>

<p>Under Perl 5.8, the <code>given/when</code> structure is not available, so the following structure may be used:</p>

<pre class="sh_perl">    eval {
        use autodie;

        open(my $fh, &#39;&#60;&#39;, $some_file);

        my @records = &#60;$fh&#62;;

        # Do things with @records...

        close($fh);
    };

    if ($@ and $@-&#62;isa(&#39;autodie::exception&#39;)) {
        if ($@-&#62;matches(&#39;open&#39;)) { print &#34;Error from open\n&#34;;   }
        if ($@-&#62;matches(&#39;:io&#39; )) { print &#34;Non-open, IO error.&#34;; }
    } elsif ($@) {
        # A non-autodie exception.
    }</pre>

<p>See <a href="/~pjf/autodie-2.11/lib/autodie/exception.pm" class="podlinkpod"
>autodie::exception</a> for further information on interrogating exceptions.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="CATEGORIES"
>CATEGORIES <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Autodie uses a simple set of categories to group together similar built-ins. Requesting a category type (starting with a colon) will enable autodie for all built-ins beneath that category. For example, requesting <code>:file</code> will enable autodie for <code>close</code>, <code>fcntl</code>, <code>fileno</code>, <code>open</code> and <code>sysopen</code>.</p>

<p>The categories are currently:</p>

<pre class="sh_perl">    :all
        :default
            :io
                read
                seek
                sysread
                sysseek
                syswrite
                :dbm
                    dbmclose
                    dbmopen
                :file
                    binmode
                    close
                    fcntl
                    fileno
                    flock
                    ioctl
                    open
                    sysopen
                    truncate
                :filesys
                    chdir
                    closedir
                    opendir
                    link
                    mkdir
                    readlink
                    rename
                    rmdir
                    symlink
                    unlink
                :ipc
                    pipe
                    :msg
                        msgctl
                        msgget
                        msgrcv
                        msgsnd
                    :semaphore
                        semctl
                        semget
                        semop
                    :shm
                        shmctl
                        shmget
                        shmread
                :socket
                    accept
                    bind
                    connect
                    getsockopt
                    listen
                    recv
                    send
                    setsockopt
                    shutdown
                    socketpair
            :threads
                fork
        :system
            system
            exec</pre>

<p>Note that while the above category system is presently a strict hierarchy, this should not be assumed.</p>

<p>A plain <code>use autodie</code> implies <code>use autodie qw(:default)</code>. Note that <code>system</code> and <code>exec</code> are not enabled by default. <code>system</code> requires the optional <a href="/perldoc?IPC%3A%3ASystem%3A%3ASimple" class="podlinkpod"
>IPC::System::Simple</a> module to be installed, and enabling <code>system</code> or <code>exec</code> will invalidate their exotic forms. See <a href="#BUGS" class="podlinkpod"
>&#34;BUGS&#34;</a> below for more details.</p>

<p>The syntax:</p>

<pre class="sh_perl">    use autodie qw(:1.994);</pre>

<p>allows the <code>:default</code> list from a particular version to be used. This provides the convenience of using the default methods, but the surety that no behavorial changes will occur if the <code>autodie</code> module is upgraded.</p>

<p><code>autodie</code> can be enabled for all of Perl&#39;s built-ins, including <code>system</code> and <code>exec</code> with:</p>

<pre class="sh_perl">    use autodie qw(:all);</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="FUNCTION_SPECIFIC_NOTES"
>FUNCTION SPECIFIC NOTES <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="flock"
>flock</a></h2>

<p>It is not considered an error for <code>flock</code> to return false if it fails due to an <code>EWOULDBLOCK</code> (or equivalent) condition. This means one can still use the common convention of testing the return value of <code>flock</code> when called with the <code>LOCK_NB</code> option:</p>

<pre class="sh_perl">    use autodie;

    if ( flock($fh, LOCK_EX | LOCK_NB) ) {
        # We have a lock
    }</pre>

<p>Autodying <code>flock</code> will generate an exception if <code>flock</code> returns false with any other error.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="system/exec"
>system/exec</a></h2>

<p>The <code>system</code> built-in is considered to have failed in the following circumstances:</p>

<ul>
<li>The command does not start.</li>

<li>The command is killed by a signal.</li>

<li>The command returns a non-zero exit value (but see below).</li>
</ul>

<p>On success, the autodying form of <code>system</code> returns the <i>exit value</i> rather than the contents of <code>$?</code>.</p>

<p>Additional allowable exit values can be supplied as an optional first argument to autodying <code>system</code>:</p>

<pre class="sh_perl">    system( [ 0, 1, 2 ], $cmd, @args);  # 0,1,2 are good exit values</pre>

<p><code>autodie</code> uses the <a href="/perldoc?IPC%3A%3ASystem%3A%3ASimple" class="podlinkpod"
>IPC::System::Simple</a> module to change <code>system</code>. See its documentation for further information.</p>

<p>Applying <code>autodie</code> to <code>system</code> or <code>exec</code> causes the exotic forms <code>system { $cmd } @args </code> or <code>exec { $cmd } @args</code> to be considered a syntax error until the end of the lexical scope. If you really need to use the exotic form, you can call <code>CORE::system</code> or <code>CORE::exec</code> instead, or use <code>no autodie qw(system exec)</code> before calling the exotic form.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="GOTCHAS"
>GOTCHAS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Functions called in list context are assumed to have failed if they return an empty list, or a list consisting only of a single undef element.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DIAGNOSTICS"
>DIAGNOSTICS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<dl>
<dt><a name='void'></a><a name=":void_cannot_be_used_with_lexical_scope"
>:void cannot be used with lexical scope</a></dt>

<dd>
<p>The <code>:void</code> option is supported in <a href="/~pjf/autodie-2.11/lib/Fatal.pm" class="podlinkpod"
>Fatal</a>, but not <code>autodie</code>. To workaround this, <code>autodie</code> may be explicitly disabled until the end of the current block with <code>no autodie</code>. To disable autodie for only a single function (eg, open) use <code>no autodie qw(open)</code>.</p>

<p><code>autodie</code> performs no checking of called context to determine whether to throw an exception; the explicitness of error handling with <code>autodie</code> is a deliberate feature.</p>

<dt><a name='No'></a><a name="No_user_hints_defined_for_%s"
>No user hints defined for %s</a></dt>

<dd>
<p>You&#39;ve insisted on hints for user-subroutines, either by pre-pending a <code>!</code> to the subroutine name itself, or earlier in the list of arguments to <code>autodie</code>. However the subroutine in question does not have any hints available.</p>
</dd>
</dl>

<p>See also <a href="/~pjf/autodie-2.11/lib/Fatal.pm#DIAGNOSTICS" class="podlinkpod"
>&#34;DIAGNOSTICS&#34; in Fatal</a>.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="BUGS"
>BUGS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>&#34;Used only once&#34; warnings can be generated when <code>autodie</code> or <code>Fatal</code> is used with package filehandles (eg, <code>FILE</code>). Scalar filehandles are strongly recommended instead.</p>

<p>When using <code>autodie</code> or <code>Fatal</code> with user subroutines, the declaration of those subroutines must appear before the first use of <code>Fatal</code> or <code>autodie</code>, or have been exported from a module. Attempting to use <code>Fatal</code> or <code>autodie</code> on other user subroutines will result in a compile-time error.</p>

<p>Due to a bug in Perl, <code>autodie</code> may &#34;lose&#34; any format which has the same name as an autodying built-in or function.</p>

<p><code>autodie</code> may not work correctly if used inside a file with a name that looks like a string eval, such as <em>eval (3)</em>.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="autodie_and_string_eval"
>autodie and string eval</a></h2>

<p>Due to the current implementation of <code>autodie</code>, unexpected results may be seen when used near or with the string version of eval. <i>None of these bugs exist when using block eval</i>.</p>

<p>Under Perl 5.8 only, <code>autodie</code> <i>does not</i> propagate into string <code>eval</code> statements, although it can be explicitly enabled inside a string <code>eval</code>.</p>

<p>Under Perl 5.10 only, using a string eval when <code>autodie</code> is in effect can cause the autodie behaviour to leak into the surrounding scope. This can be worked around by using a <code>no autodie</code> at the end of the scope to explicitly remove autodie&#39;s effects, or by avoiding the use of string eval.</p>

<p><i>None of these bugs exist when using block eval</i>. The use of <code>autodie</code> with block eval is considered good practice.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="REPORTING_BUGS"
>REPORTING BUGS</a></h2>

<p>Please report bugs via the CPAN Request Tracker at <a href="http://rt.cpan.org/NoAuth/Bugs.html?Dist=autodie" class="podlinkurl"
>http://rt.cpan.org/NoAuth/Bugs.html?Dist=autodie</a>.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="FEEDBACK"
>FEEDBACK <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>If you find this module useful, please consider rating it on the CPAN Ratings service at <a href="http://cpanratings.perl.org/rate?distribution=autodie" class="podlinkurl"
>http://cpanratings.perl.org/rate?distribution=autodie</a> .</p>

<p>The module author loves to hear how <code>autodie</code> has made your life better (or worse). Feedback can be sent to &#60;pjf@perltraining.com.au&#62;.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHOR"
>AUTHOR <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Copyright 2008-2009, Paul Fenwick &#60;pjf@perltraining.com.au&#62;</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="LICENSE"
>LICENSE <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This module is free software. You may distribute it under the same terms as Perl itself.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SEE_ALSO"
>SEE ALSO <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><a href="/~pjf/autodie-2.11/lib/Fatal.pm" class="podlinkpod"
>Fatal</a>, <a href="/~pjf/autodie-2.11/lib/autodie/exception.pm" class="podlinkpod"
>autodie::exception</a>, <a href="/~pjf/autodie-2.11/lib/autodie/hints.pm" class="podlinkpod"
>autodie::hints</a>, <a href="/perldoc?IPC%3A%3ASystem%3A%3ASimple" class="podlinkpod"
>IPC::System::Simple</a></p>

<p><i>Perl tips, autodie</i> at <a href="http://perltraining.com.au/tips/2008-08-20.html" class="podlinkurl"
>http://perltraining.com.au/tips/2008-08-20.html</a></p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="ACKNOWLEDGEMENTS"
>ACKNOWLEDGEMENTS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Mark Reed and Roland Giersig -- Klingon translators.</p>

<p>See the <em>AUTHORS</em> file for full credits. The latest version of this file can be found at <a href="http://github.com/pfenwick/autodie/tree/master/AUTHORS" class="podlinkurl"
>http://github.com/pfenwick/autodie/tree/master/AUTHORS</a> .</p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78067 Uploads, 24685 Distributions
105889 Modules, 9637 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Sat Apr 21 16:06:49 2012 GMT (0.15503716468811) @cpansearch1 -->
 </body>
</html>
