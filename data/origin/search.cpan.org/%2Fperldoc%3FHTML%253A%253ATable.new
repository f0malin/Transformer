<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>HTML::Table - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","HTML-Table",3]);
    _gaq.push(["_setCustomVar",5,"Release","HTML-Table-2.08a",3]);
    _gaq.push(["_setCustomVar",3,"Module","HTML::Table",3]);
    _gaq.push(["_setCustomVar",1,"Author","AJPEACOCK",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?HTML::Table">permalink</a></div>
  <a href="/~ajpeacock/">Anthony Peacock</a> &gt;
  <a href="/~ajpeacock/HTML-Table-2.08a/">HTML-Table-2.08a</a> &gt;
  HTML::Table
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/3c766680bbc25b68ceec8b1e82cadd1f?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/A/AJ/AJPEACOCK/HTML-Table-2.08a.tar.gz">HTML-Table-2.08a.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=HTML%3A%3ATable;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~AJPEACOCK/HTML-Table-2.08a/lib/HTML/Table.pm">Annotate this POD
</a></p>
<div class=box style='width:150px; float: right'>
<h1 class=t5>Related Modules</h1>
<div style="margin:2px">
<a href="/perldoc?HTML%3A%3ATemplate">HTML::Template</a><br>
<a href="/perldoc?DBIx%3A%3ASimple">DBIx::Simple</a><br>
<a href="/perldoc?DBIx%3A%3AXHTML_Table">DBIx::XHTML_Table</a><br>
<a href="/perldoc?Data%3A%3ADumper">Data::Dumper</a><br>
<a href="/perldoc?CGI%3A%3ACarp">CGI::Carp</a><br>
<a href="/perldoc?File%3A%3AFind">File::Find</a><br>
<a href="/perldoc?DBIx%3A%3AAbstract">DBIx::Abstract</a><br>
<a href="/perldoc?Win32%3A%3AOLE">Win32::OLE</a><br>
<a href="/perldoc?HTML%3A%3AParser">HTML::Parser</a><br>
<a href="/perldoc?Text%3A%3ATable">Text::Table</a><br>
<small>
<a href="http://perlmonks.org/?node=cpan+module+search&pivot=1&module=HTML%3A%3ATable">more...</a><br>
By <a href="http://perlmonks.org/">perlmonks.org</a></small>
</div>
</div>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>New&nbsp;</td><td style="text-align:right"> 3</td></tr>
<tr><td>Open&nbsp;</td><td style="text-align:right"> 4</td></tr>
</table>
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=HTML-Table">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  2.08a &nbsp;
<span class="noprint">
  <a href="/src/AJPEACOCK/HTML-Table-2.08a/lib/HTML/Table.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#REQUIRES'>REQUIRES</a>
  <li class='indexItem indexItem1'><a href='#EXPORTS'>EXPORTS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <li class='indexItem indexItem1'><a href='#METHODS'>METHODS</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#Sections'>Sections</a>
    <li class='indexItem indexItem2'><a href='#Creation'>Creation</a>
    <li class='indexItem indexItem2'><a href='#Table_Level_Methods'>Table Level Methods</a>
    <li class='indexItem indexItem2'><a href='#Section_Level_Methods'>Section Level Methods</a>
    <li class='indexItem indexItem2'><a href='#Cell_Level_Methods'>Cell Level Methods</a>
    <li class='indexItem indexItem2'><a href='#Column_Level_Methods'>Column Level Methods</a>
    <li class='indexItem indexItem2'><a href='#Row_Level_Methods'>Row Level Methods</a>
    <li class='indexItem indexItem2'><a href='#Output_Methods'>Output Methods</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#CLASS_VARIABLES'>CLASS VARIABLES</a>
  <li class='indexItem indexItem1'><a href='#HISTORY'>HISTORY</a>
  <li class='indexItem indexItem1'><a href='#AUTHOR'>AUTHOR</a>
  <li class='indexItem indexItem1'><a href='#CONTRIBUTIONS'>CONTRIBUTIONS</a>
  <li class='indexItem indexItem1'><a href='#COPYRIGHT'>COPYRIGHT</a>
  <li class='indexItem indexItem1'><a href='#SEE_ALSO'>SEE ALSO</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>HTML::Table - produces HTML tables</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">  use HTML::Table;

  $table1 = new HTML::Table($rows, $cols);
    or
  $table1 = new HTML::Table(-rows=&#62;26,
                            -cols=&#62;2,
                            -align=&#62;&#39;center&#39;,
                            -rules=&#62;&#39;rows&#39;,
                            -border=&#62;0,
                            -bgcolor=&#62;&#39;blue&#39;,
                            -width=&#62;&#39;50%&#39;,
                            -spacing=&#62;0,
                            -padding=&#62;0,
                            -style=&#62;&#39;color: blue&#39;,
                            -class=&#62;&#39;myclass&#39;,
                            -evenrowclass=&#62;&#39;even&#39;,
                            -oddrowclass=&#62;&#39;odd&#39;,
                            -head=&#62; [&#39;head1&#39;, &#39;head2&#39;],
                            -data=&#62; [ [&#39;1:1&#39;, &#39;1:2&#39;], [&#39;2:1&#39;, &#39;2:2&#39;] ] );
   or
  $table1 = new HTML::Table( [ [&#39;1:1&#39;, &#39;1:2&#39;], [&#39;2:1&#39;, &#39;2:2&#39;] ] );

  $table1-&#62;setCell($cellrow, $cellcol, &#39;This is Cell 1&#39;);
  $table1-&#62;setCellBGColor(&#39;blue&#39;);
  $table1-&#62;setCellColSpan(1, 1, 2);
  $table1-&#62;setRowHead(1);
  $table1-&#62;setColHead(1);

  $table1-&#62;print;

  $table2 = new HTML::Table;
  $table2-&#62;addRow(@cell_values);
  $table2-&#62;addCol(@cell_values2);

  $table1-&#62;setCell(1,1, &#34;$table2-&#62;getTable&#34;);
  $table1-&#62;print;</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="REQUIRES"
>REQUIRES <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Perl5.002</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="EXPORTS"
>EXPORTS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Nothing</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>HTML::Table is used to generate HTML tables for CGI scripts. By using the methods provided fairly complex tables can be created, manipulated, then printed from Perl scripts. The module also greatly simplifies creating tables within tables from Perl. It is possible to create an entire table using the methods provided and never use an HTML tag.</p>

<p>HTML::Table also allows for creating dynamically sized tables via its addRow and addCol methods. These methods automatically resize the table if passed more cell values than will fit in the current table grid.</p>

<p>Methods are provided for nearly all valid table, row, and cell tags specified for HTML 3.0.</p>

<p>A Japanese translation of the documentation is available at:</p>

<pre class="sh_perl">        <a href="http://member.nifty.ne.jp/hippo2000/perltips/html/table.htm" class="podlinkurl"
>http://member.nifty.ne.jp/hippo2000/perltips/html/table.htm</a></pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="METHODS"
>METHODS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">  [] indicate optional parameters. default value will
     be used if no value is specified
     
  row_num indicates that a row number is required.  
        Rows are numbered from 1.  To refer to the last row use the value -1.

  col_num indicates that a col number is required.  
        Cols are numbered from 1.  To refer to the last col use the value -1.</pre>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Sections"
>Sections</a></h2>

<blockquote>
<p>From version 2.07 onwards HTML::Table supports table sections (THEAD, TFOOT &#38; TBODY).</p>

<p>Each section can have its own attributes (id, class, etc) set, and will contain 1 or more rows. Section numbering starts at 0, only tbody is allowed to have more than one section.</p>

<p>Methods for manipultaing sections and their data are available and have the general form:</p>

<pre class="sh_perl">  setSectionCell ( section, section_num, row_num, col_num, data );
  
  For example, the following adds a row to the first body section:
  
  addSectionRow ( &#39;tbody&#39;, 0, &#34;Cell 1&#34;, &#34;Cell 2&#34;, &#34;Cell 3&#34; );</pre>

<p>For backwards compatibility, methods with Section in their name will default to manipulating the first body section.</p>

<pre class="sh_perl">  For example, the following sets the class for the first row in the 
  first body section:
  
  setRowClass ( 1, &#39;row_class&#39; );
  
  Which is semantically equivalent to:
  
  setSectionRowClass ( &#39;tbody&#39;, 0, 1, &#39;row_class&#39; );</pre>
</blockquote>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Creation"
>Creation</a></h2>

<dl>
<dt><a name='new'></a><a name="new_HTML::Table([num_rows,_num_cols])"
>new HTML::Table([num_rows, num_cols])</a></dt>

<dd>
<p>Creates a new HTML table object. If rows and columns are specified, the table will be initialized to that size. Row and Column numbers start at 1,1. 0,0 is considered an empty table.</p>

<dt><a 
>new HTML::Table([-rows=&#62;num_rows, -cols=&#62;num_cols, -border=&#62;border_width, -align=&#62;table_alignment, -style=&#62;table_style, -class=&#62;table_class, -evenrowclass=&#62;&#39;even&#39;, -oddrowclass=&#62;&#39;odd&#39;, -bgcolor=&#62;back_colour, -width=&#62;table_width, -spacing=&#62;cell_spacing, -padding=&#62;cell_padding])</a></dt>

<dd>
<p>Creates a new HTML table object. If rows and columns are specified, the table will be initialized to that size. Row and Column numbers start at 1,1. 0,0 is considered an empty table.</p>

<p>If evenrowclass or oddrowclass is specified, these classes will be applied to even and odd rows, respectively, unless those rows have a specific class applied to it.</p>
</dd>
</dl>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Table_Level_Methods"
>Table Level Methods</a></h2>

<dl>
<dt><a name='setBorder'></a><a name="setBorder([pixels])"
>setBorder([pixels])</a></dt>

<dd>
<p>Sets the table Border Width</p>

<dt><a name='setWidth'></a><a name="setWidth([pixels|percentofscreen])"
>setWidth([pixels|percentofscreen])</a></dt>

<dd>
<p>Sets the table width</p>

<pre class="sh_perl">        $table-&#62;setWidth(500);
  or
        $table-&#62;setWidth(&#39;100%&#39;);</pre>

<dt><a name='setCellSpacing'></a><a name="setCellSpacing([pixels])"
>setCellSpacing([pixels])</a></dt>

<dd>
<dt><a name='setCellPadding'></a><a name="setCellPadding([pixels])"
>setCellPadding([pixels])</a></dt>

<dd>
<dt><a name='setCaption'></a><a name="setCaption(&#34;CaptionText&#34;_[,_top|bottom])"
>setCaption(&#34;CaptionText&#34; [, top|bottom])</a></dt>

<dd>
<dt><a name='setBGColor'></a><a name="setBGColor([colorname|colortriplet])"
>setBGColor([colorname|colortriplet])</a></dt>

<dd>
<dt><a name='autoGrow'></a><a name="autoGrow([1|true|on|anything|0|false|off|no|disable])"
>autoGrow([1|true|on|anything|0|false|off|no|disable])</a></dt>

<dd>
<p>Switches on (default) or off automatic growing of the table if row or column values passed to setCell exceed current table size.</p>

<dt><a name='setAlign'></a><a name="setAlign_(_[_left_,_center_,_right_]_)"
>setAlign ( [ left , center , right ] )</a></dt>

<dd>
<dt><a name='setRules'></a><a name="setRules_(_[_rows_,_cols_,_all,_both_,_groups_]_)"
>setRules ( [ rows , cols , all, both , groups ] )</a></dt>

<dd>
<dt><a name='setStyle'></a><a name="setStyle_(_&#39;css_style&#39;_)"
>setStyle ( &#39;css style&#39; )</a></dt>

<dd>
<p>Sets the table style attribute.</p>

<dt><a name='setClass'></a><a name="setClass_(_&#39;css_class&#39;_)"
>setClass ( &#39;css class&#39; )</a></dt>

<dd>
<p>Sets the table class attribute.</p>

<dt><a name='setEvenRowClass'></a><a name="setEvenRowClass_(_&#39;css_class&#39;_)"
>setEvenRowClass ( &#39;css class&#39; )</a></dt>

<dd>
<p>Sets the class attribute of even rows in the table.</p>

<dt><a name='setOddRowClass'></a><a name="setOddRowClass_(_&#39;css_class&#39;_)"
>setOddRowClass ( &#39;css class&#39; )</a></dt>

<dd>
<p>Sets the class attribute of odd rows in the table.</p>

<dt><a name='setAttr'></a><a name="setAttr_(_&#39;user_attribute&#39;_)"
>setAttr ( &#39;user attribute&#39; )</a></dt>

<dd>
<p>Sets a user defined attribute for the table. Useful for when HTML::Table hasn&#39;t implemented a particular attribute yet</p>

<dt><a name='sort'></a><a name="sort_(_[sort_col_num,_sort_type,_sort_order,_num_rows_to_skip]_)"
>sort ( [sort_col_num, sort_type, sort_order, num_rows_to_skip] )</a></dt>

<dd>
<pre class="sh_perl">        or 
  sort( -sort_col =&#62; sort_col_num, 
        -sort_type =&#62; sort_type,
        -sort_order =&#62; sort_order,
        -skip_rows =&#62; num_rows_to_skip,
        -strip_html =&#62; strip_html,
        -strip_non_numeric =&#62; strip_non_numeric,
        -presort_func =&#62; \&#38;filter_func )

    sort_type in { ALPHA | NUMERIC }, 
    sort_order in { ASC | DESC },
    strip_html in { 0 | 1 }, defaults to 1,
    strip_non_numeric in { 0 | 1 }, defaults to 1

  Sort all rows on a given column (optionally skipping table header rows
  by specifiying num_rows_to_skip).

  By default sorting ignores HTML Tags and &#38;nbsp, setting the strip_html parameter to 0 
  disables this behaviour.

  By default numeric Sorting ignores non numeric chararacters, setting the strip_non_numeric
  parameter to 0 disables this behaviour.

  You can provide your own pre-sort function, useful for pre-processing the cell contents 
  before sorting for example dates.</pre>

<dt><a name="getTableRows"
>getTableRows</a></dt>

<dd>
<p>Returns the number of rows in the table.</p>

<dt><a name="getTableCols"
>getTableCols</a></dt>

<dd>
<p>Returns the number of columns in the table.</p>

<dt><a name="getStyle"
>getStyle</a></dt>

<dd>
<p>Returns the table&#39;s style attribute.</p>
</dd>
</dl>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Section_Level_Methods"
>Section Level Methods</a></h2>

<dl>
<dt><a name='setSectionId'></a><a name="setSectionId_(_[tbody|thead|tfoot],_section_num,_&#39;id&#39;_)"
>setSectionId ( [tbody|thead|tfoot], section_num, &#39;id&#39; )</a></dt>

<dd>
<p>Sets the id attribute for the section.</p>

<dt><a name='setSectionClass'></a><a name="setSectionClass_(_[tbody|thead|tfoot],_section_num,_&#39;class&#39;_)"
>setSectionClass ( [tbody|thead|tfoot], section_num, &#39;class&#39; )</a></dt>

<dd>
<p>Sets the class attribute for the section.</p>

<dt><a name='setSectionStyle'></a><a name="setSectionStyle_(_[tbody|thead|tfoot],_section_num,_&#39;style&#39;_)"
>setSectionStyle ( [tbody|thead|tfoot], section_num, &#39;style&#39; )</a></dt>

<dd>
<p>Sets the style attribute for the section.</p>

<dt><a name='setSectionAlign'></a><a name="setSectionAlign_(_[tbody|thead|tfoot],_section_num,_[center|right|left]_)"
>setSectionAlign ( [tbody|thead|tfoot], section_num, [center|right|left] )</a></dt>

<dd>
<p>Sets the horizontal alignment for the section.</p>

<dt><a name='setSectionValign'></a><a name="setSectionValign_(_[tbody|thead|tfoot],_section_num,_[center|top|bottom|middle|baseline]_)"
>setSectionValign ( [tbody|thead|tfoot], section_num, [center|top|bottom|middle|baseline] )</a></dt>

<dd>
<p>Sets the vertical alignment for the section.</p>

<dt><a name='setSectionAttr'></a><a name="setSectionAttr_(_[tbody|thead|tfoot],_section_num,_&#39;user_attribute&#39;_)"
>setSectionAttr ( [tbody|thead|tfoot], section_num, &#39;user attribute&#39; )</a></dt>

<dd>
<p>Sets a user defined attribute for the cell. Useful for when HTML::Table hasn&#39;t implemented a particular attribute yet</p>
</dd>
</dl>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Cell_Level_Methods"
>Cell Level Methods</a></h2>

<dl>
<dt><a name='setCell'></a><a name="setCell(row_num,_col_num,_&#34;content&#34;)"
>setCell(row_num, col_num, &#34;content&#34;)</a></dt>

<dd>
<p>Sets the content of a table cell. This could be any string, even another table object via the getTable method. If the row and/or column numbers are outside the existing table boundaries extra rows and/or columns are created automatically.</p>

<dt><a name='setSectionCell'></a><a name="setSectionCell([tbody|thead|tfoot],_section_num,_row_num,_col_num,_&#34;content&#34;)"
>setSectionCell([tbody|thead|tfoot], section_num, row_num, col_num, &#34;content&#34;)</a></dt>

<dd>
<p>Same as setCell, but able to specify which section to act on.</p>

<dt><a name='setCellAlign'></a><a name="setCellAlign(row_num,_col_num,_[center|right|left])"
>setCellAlign(row_num, col_num, [center|right|left])</a></dt>

<dd>
<p>Sets the horizontal alignment for the cell.</p>

<dt><a name='setSectionCellAlign'></a><a name="setSectionCellAlign([tbody|thead|tfoot],_section_num,_row_num,_col_num,_[center|right|left])"
>setSectionCellAlign([tbody|thead|tfoot], section_num, row_num, col_num, [center|right|left])</a></dt>

<dd>
<p>Same as setCellAlign, but able to specify which section to act on.</p>

<dt><a name='setCellVAlign'></a><a name="setCellVAlign(row_num,_col_num,_[center|top|bottom|middle|baseline])"
>setCellVAlign(row_num, col_num, [center|top|bottom|middle|baseline])</a></dt>

<dd>
<p>Sets the vertical alignment for the cell.</p>

<dt><a name='setSectionCellVAlign'></a><a name="setSectionCellVAlign([tbody|thead|tfoot],_section_num,_row_num,_col_num,_[center|top|bottom|middle|baseline])"
>setSectionCellVAlign([tbody|thead|tfoot], section_num, row_num, col_num, [center|top|bottom|middle|baseline])</a></dt>

<dd>
<p>Same as setCellVAlign, but able to specify which section to act on.</p>

<dt><a name='setCellWidth'></a><a name="setCellWidth(row_num,_col_num,_[pixels|percentoftable])"
>setCellWidth(row_num, col_num, [pixels|percentoftable])</a></dt>

<dd>
<p>Sets the width of the cell.</p>

<dt><a name='setSectionCellWidth'></a><a name="setSectionCellWidth([tbody|thead|tfoot],_section_num,_row_num,_col_num,_[pixels|percentoftable])"
>setSectionCellWidth([tbody|thead|tfoot], section_num, row_num, col_num, [pixels|percentoftable])</a></dt>

<dd>
<p>Same as setCellWidth, but able to specify which section to act on.</p>

<dt><a name='setCellHeight'></a><a name="setCellHeight(row_num,_col_num,_[pixels])"
>setCellHeight(row_num, col_num, [pixels])</a></dt>

<dd>
<p>Sets the height of the cell.</p>

<dt><a name='setSectionCellHeight'></a><a name="setSectionCellHeight([tbody|thead|tfoot],_section_num,_row_num,_col_num,_[pixels])"
>setSectionCellHeight([tbody|thead|tfoot], section_num, row_num, col_num, [pixels])</a></dt>

<dd>
<p>Same as setCellHeight, but able to specify which section to act on.</p>

<dt><a name='setCellHead'></a><a name="setCellHead(row_num,_col_num,_[0|1])"
>setCellHead(row_num, col_num, [0|1])</a></dt>

<dd>
<p>Sets cell to be of type head (Ie &#60;th&#62;&#60;/th&#62;)</p>

<dt><a name='setSectionCellHead'></a><a name="setSectionCellHead([tbody|thead|tfoot],_section_num,_row_num,_col_num,_[0|1])"
>setSectionCellHead([tbody|thead|tfoot], section_num, row_num, col_num, [0|1])</a></dt>

<dd>
<p>Same as setCellHead, but able to specify which section to act on.</p>

<dt><a name='setCellNoWrap'></a><a name="setCellNoWrap(row_num,_col_num,_[0|1])"
>setCellNoWrap(row_num, col_num, [0|1])</a></dt>

<dd>
<p>Sets the NoWrap attribute of the cell.</p>

<dt><a name='setSectionCellNoWrap'></a><a name="setSectionCellNoWrap([tbody|thead|tfoot],_section_num,_row_num,_col_num,_[0|1])"
>setSectionCellNoWrap([tbody|thead|tfoot], section_num, row_num, col_num, [0|1])</a></dt>

<dd>
<p>Same as setCellNoWrap, but able to specify which section to act on.</p>

<dt><a name='setCellBGColor'></a><a name="setCellBGColor(row_num,_col_num,_[colorname|colortriplet])"
>setCellBGColor(row_num, col_num, [colorname|colortriplet])</a></dt>

<dd>
<p>Sets the background colour for the cell.</p>

<dt><a name='setSectionCellBGColor'></a><a name="setSectionCellBGColor([tbody|thead|tfoot],_section_num,_row_num,_col_num,_[colorname|colortriplet])"
>setSectionCellBGColor([tbody|thead|tfoot], section_num, row_num, col_num, [colorname|colortriplet])</a></dt>

<dd>
<p>Same as setCellBGColor, but able to specify which section to act on.</p>

<dt><a name='setCellRowSpan'></a><a name="setCellRowSpan(row_num,_col_num,_num_cells)"
>setCellRowSpan(row_num, col_num, num_cells)</a></dt>

<dd>
<p>Causes the cell to overlap a number of cells below it. If the overlap number is greater than number of cells below the cell, a false value will be returned.</p>

<dt><a name='setSectionCellRowSpan'></a><a name="setSectionCellRowSpan([tbody|thead|tfoot],_section_num,_row_num,_col_num,_num_cells)"
>setSectionCellRowSpan([tbody|thead|tfoot], section_num, row_num, col_num, num_cells)</a></dt>

<dd>
<p>Same as setCellRowSpan, but able to specify which section to act on.</p>

<dt><a name='setCellColSpan'></a><a name="setCellColSpan(row_num,_col_num,_num_cells)"
>setCellColSpan(row_num, col_num, num_cells)</a></dt>

<dd>
<p>Causes the cell to overlap a number of cells to the right. If the overlap number is greater than number of cells to the right of the cell, a false value will be returned.</p>

<dt><a name='setSectionCellColSpan'></a><a name="setSectionCellColSpan([tbody|thead|tfoot],_section_num,_row_num,_col_num,_num_cells)"
>setSectionCellColSpan([tbody|thead|tfoot], section_num, row_num, col_num, num_cells)</a></dt>

<dd>
<p>Same as setCellColSpan, but able to specify which section to act on.</p>

<dt><a name='setCellSpan'></a><a name="setCellSpan(row_num,_col_num,_num_rows,_num_cols)"
>setCellSpan(row_num, col_num, num_rows, num_cols)</a></dt>

<dd>
<p>Joins the block of cells with the starting cell specified. The joined area will be num_cols wide and num_rows deep.</p>

<dt><a name='setSectionCellSpan'></a><a name="setSectionCellSpan([tbody|thead|tfoot],_section_num,_row_num,_col_num,_num_rows,_num_cols)"
>setSectionCellSpan([tbody|thead|tfoot], section_num, row_num, col_num, num_rows, num_cols)</a></dt>

<dd>
<p>Same as setCellSpan, but able to specify which section to act on.</p>

<dt><a name='setCellFormat'></a><a name="setCellFormat(row_num,_col_num,_start_string,_end_string)"
>setCellFormat(row_num, col_num, start_string, end_string)</a></dt>

<dd>
<p>Start_string should be a string of valid HTML, which is output before the cell contents, end_string is valid HTML that is output after the cell contents. This enables formatting to be applied to the cell contents.</p>

<pre class="sh_perl">        $table-&#62;setCellFormat(1, 2, &#39;&#60;b&#62;&#39;, &#39;&#60;/b&#62;&#39;);</pre>

<dt><a name='setSectionCellFormat'></a><a name="setSectionCellFormat([tbody|thead|tfoot],_section_num,_row_num,_col_num,_start_string,_end_string)"
>setSectionCellFormat([tbody|thead|tfoot], section_num, row_num, col_num, start_string, end_string)</a></dt>

<dd>
<p>Same as setCellFormat, but able to specify which section to act on.</p>

<dt><a name='setCellStyle'></a><a name="setCellStyle_(row_num,_col_num,_&#39;css_style&#39;)"
>setCellStyle (row_num, col_num, &#39;css style&#39;)</a></dt>

<dd>
<p>Sets the cell style attribute.</p>

<dt><a name='setSectionCellStyle'></a><a name="setSectionCellStyle([tbody|thead|tfoot],_section_num,_row_num,_col_num,_&#39;css_style&#39;)"
>setSectionCellStyle([tbody|thead|tfoot], section_num, row_num, col_num, &#39;css style&#39;)</a></dt>

<dd>
<p>Same as setCellStyle, but able to specify which section to act on.</p>

<dt><a name='setCellClass'></a><a name="setCellClass_(row_num,_col_num,_&#39;css_class&#39;)"
>setCellClass (row_num, col_num, &#39;css class&#39;)</a></dt>

<dd>
<p>Sets the cell class attribute.</p>

<dt><a name='setSectionCellClass'></a><a name="setSectionCellClass([tbody|thead|tfoot],_section_num,_row_num,_col_num,_&#39;css_class&#39;)"
>setSectionCellClass([tbody|thead|tfoot], section_num, row_num, col_num, &#39;css class&#39;)</a></dt>

<dd>
<p>Same as setCellClass, but able to specify which section to act on.</p>

<dt><a name='setCellAttr'></a><a name="setCellAttr_(row_num,_col_num,_&#39;user_attribute&#39;)"
>setCellAttr (row_num, col_num, &#39;user attribute&#39;)</a></dt>

<dd>
<p>Sets a user defined attribute for the cell. Useful for when HTML::Table hasn&#39;t implemented a particular attribute yet</p>

<dt><a name='setSectionCellAttr'></a><a name="setSectionCellAttr([tbody|thead|tfoot],_section_num,_row_num,_col_num,_&#39;css_class&#39;)"
>setSectionCellAttr([tbody|thead|tfoot], section_num, row_num, col_num, &#39;css class&#39;)</a></dt>

<dd>
<p>Same as setCellAttr, but able to specify which section to act on.</p>

<dt><a name='setLastCell'></a><a name="setLastCell*"
>setLastCell*</a></dt>

<dd>
<p>All of the setCell methods have a corresponding setLastCell method which does not accept the row_num and col_num parameters, but automatically applies to the last row and last col of the table.</p>

<p>NB. Only works on the setCell* methods, not on the setSectionCell* methods.</p>

<dt><a name='getCell'></a><a name="getCell(row_num,_col_num)"
>getCell(row_num, col_num)</a></dt>

<dd>
<p>Returns the contents of the specified cell as a string.</p>

<dt><a name='getSectionCell'></a><a name="getSectionCell([tbody|thead|tfoot],_section_num,_row_num,_col_num)"
>getSectionCell([tbody|thead|tfoot], section_num, row_num, col_num)</a></dt>

<dd>
<p>Same as getCell, but able to specify which section to act on.</p>

<dt><a name='getCellStyle'></a><a name="getCellStyle(row_num,_col_num)"
>getCellStyle(row_num, col_num)</a></dt>

<dd>
<p>Returns cell&#39;s style attribute.</p>

<dt><a name='getSectionCellStyle'></a><a name="getSectionCellStyle([tbody|thead|tfoot],_section_num,_row_num,_col_num)"
>getSectionCellStyle([tbody|thead|tfoot], section_num, row_num, col_num)</a></dt>

<dd>
<p>Same as getCellStyle, but able to specify which section to act on.</p>
</dd>
</dl>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Column_Level_Methods"
>Column Level Methods</a></h2>

<dl>
<dt><a name='addCol'></a><a name="addCol(&#34;cell_1_content&#34;_[,_&#34;cell_2_content&#34;,_...])"
>addCol(&#34;cell 1 content&#34; [, &#34;cell 2 content&#34;, ...])</a></dt>

<dd>
<p>Adds a column to the right end of the table. Assumes if you pass more values than there are rows that you want to increase the number of rows.</p>

<dt><a name='addSectionCol'></a><a name="addSectionCol([tbody|thead|tfoot],_section_num,_&#34;cell_1_content&#34;_[,_&#34;cell_2_content&#34;,_...])"
>addSectionCol([tbody|thead|tfoot], section_num, &#34;cell 1 content&#34; [, &#34;cell 2 content&#34;, ...])</a></dt>

<dd>
<p>Same as addCol, but able to specify which section to act on.</p>

<dt><a name='setColAlign'></a><a name="setColAlign(col_num,_[center|right|left])"
>setColAlign(col_num, [center|right|left])</a></dt>

<dd>
<p>Applies setCellAlign over the entire column.</p>

<dt><a name='setSectionColAlign'></a><a name="setSectionColAlign([tbody|thead|tfoot],_section_num,_col_num,_[center|right|left])"
>setSectionColAlign([tbody|thead|tfoot], section_num, col_num, [center|right|left])</a></dt>

<dd>
<p>Same as setColAlign, but able to specify which section to act on.</p>

<dt><a name='setColVAlign'></a><a name="setColVAlign(col_num,_[center|top|bottom|middle|baseline])"
>setColVAlign(col_num, [center|top|bottom|middle|baseline])</a></dt>

<dd>
<p>Applies setCellVAlign over the entire column.</p>

<dt><a name='setSectionColVAlign'></a><a name="setSectionColVAlign([tbody|thead|tfoot],_section_num,_col_num,_[center|top|bottom|middle|baseline])"
>setSectionColVAlign([tbody|thead|tfoot], section_num, col_num, [center|top|bottom|middle|baseline])</a></dt>

<dd>
<p>Same as setColVAlign, but able to specify which section to act on.</p>

<dt><a name='setColWidth'></a><a name="setColWidth(col_num,_[pixels|percentoftable])"
>setColWidth(col_num, [pixels|percentoftable])</a></dt>

<dd>
<p>Applies setCellWidth over the entire column.</p>

<dt><a name='setSectionColWidth'></a><a name="setSectionColWidth([tbody|thead|tfoot],_section_num,_col_num,_[pixels|percentoftable])"
>setSectionColWidth([tbody|thead|tfoot], section_num, col_num, [pixels|percentoftable])</a></dt>

<dd>
<p>Same as setColWidth, but able to specify which section to act on.</p>

<dt><a name='setColHeight'></a><a name="setColHeight(col_num,_[pixels])"
>setColHeight(col_num, [pixels])</a></dt>

<dd>
<p>Applies setCellHeight over the entire column.</p>

<dt><a name='setSectionColHeight'></a><a name="setSectionColHeight([tbody|thead|tfoot],_section_num,_col_num,_[pixels])"
>setSectionColHeight([tbody|thead|tfoot], section_num, col_num, [pixels])</a></dt>

<dd>
<p>Same as setColHeight, but able to specify which section to act on.</p>

<dt><a name='setColHead'></a><a name="setColHead(col_num,_[0|1])"
>setColHead(col_num, [0|1])</a></dt>

<dd>
<p>Applies setCellHead over the entire column.</p>

<dt><a name='setSectionColHead'></a><a name="setSectionColHead([tbody|thead|tfoot],_section_num,_col_num,_[0|1])"
>setSectionColHead([tbody|thead|tfoot], section_num, col_num, [0|1])</a></dt>

<dd>
<p>Same as setColHead, but able to specify which section to act on.</p>

<dt><a name='setColNoWrap'></a><a name="setColNoWrap(col_num,_[0|1])"
>setColNoWrap(col_num, [0|1])</a></dt>

<dd>
<p>Applies setCellNoWrap over the entire column.</p>

<dt><a name='setSectionColNoWrap'></a><a name="setSectionColNoWrap([tbody|thead|tfoot],_section_num,_col_num,_[0|1])"
>setSectionColNoWrap([tbody|thead|tfoot], section_num, col_num, [0|1])</a></dt>

<dd>
<p>Same as setColNoWrap, but able to specify which section to act on.</p>

<dt><a name='setColBGColor'></a><a name="setColBGColor(row_num,_[colorname|colortriplet])"
>setColBGColor(row_num, [colorname|colortriplet])</a></dt>

<dd>
<p>Applies setCellBGColor over the entire column.</p>

<dt><a name='setSectionColBGColor'></a><a name="setSectionColBGColor([tbody|thead|tfoot],_section_num,_col_num,_[colorname|colortriplet])"
>setSectionColBGColor([tbody|thead|tfoot], section_num, col_num, [colorname|colortriplet])</a></dt>

<dd>
<p>Same as setColBGColor, but able to specify which section to act on.</p>

<dt><a name='setColFormat'></a><a name="setColFormat(col_num,_start_string,_end_sting)"
>setColFormat(col_num, start_string, end_sting)</a></dt>

<dd>
<p>Applies setCellFormat over the entire column.</p>

<dt><a name='setSectionColFormat'></a><a name="setSectionColFormat([tbody|thead|tfoot],_section_num,_col_num,_start_string,_end_sting)"
>setSectionColFormat([tbody|thead|tfoot], section_num, col_num, start_string, end_sting)</a></dt>

<dd>
<p>Same as setColFormat, but able to specify which section to act on.</p>

<dt><a name='setColStyle'></a><a name="setColStyle_(col_num,_&#39;css_style&#39;)"
>setColStyle (col_num, &#39;css style&#39;)</a></dt>

<dd>
<p>Applies setCellStyle over the entire column.</p>

<dt><a name='setSectionColStyle'></a><a name="setSectionColStyle([tbody|thead|tfoot],_section_num,_col_num,_&#39;css_style&#39;)"
>setSectionColStyle([tbody|thead|tfoot], section_num, col_num, &#39;css style&#39;)</a></dt>

<dd>
<p>Same as setColStyle, but able to specify which section to act on.</p>

<dt><a name='setColClass'></a><a name="setColClass_(col_num,_&#39;css_class&#39;)"
>setColClass (col_num, &#39;css class&#39;)</a></dt>

<dd>
<p>Applies setCellClass over the entire column.</p>

<dt><a name='setSectionColClass'></a><a name="setSectionColClass([tbody|thead|tfoot],_section_num,_col_num,_&#39;css_class&#39;)"
>setSectionColClass([tbody|thead|tfoot], section_num, col_num, &#39;css class&#39;)</a></dt>

<dd>
<p>Same as setColClass, but able to specify which section to act on.</p>

<dt><a name='setColAttr'></a><a name="setColAttr_(col_num,_&#39;user_attribute&#39;)"
>setColAttr (col_num, &#39;user attribute&#39;)</a></dt>

<dd>
<p>Applies setCellAttr over the entire column.</p>

<dt><a name='setSectionColAttr'></a><a name="setSectionColAttr([tbody|thead|tfoot],_section_num,_col_num,_&#39;user_attribute&#39;)"
>setSectionColAttr([tbody|thead|tfoot], section_num, col_num, &#39;user attribute&#39;)</a></dt>

<dd>
<p>Same as setColAttr, but able to specify which section to act on.</p>

<dt><a name='setLastCol'></a><a name="setLastCol*"
>setLastCol*</a></dt>

<dd>
<p>All of the setCol methods have a corresponding setLastCol method which does not accept the col_num parameter, but automatically applies to the last col of the table.</p>

<p>NB. Only works on the setCol* methods, not on the setSectionCol* methods.</p>

<dt><a name='getColStyle'></a><a name="getColStyle(col_num)"
>getColStyle(col_num)</a></dt>

<dd>
<p>Returns column&#39;s style attribute. Only really useful after setting a column&#39;s style via setColStyle().</p>

<dt><a name='getSectionColStyle'></a><a name="getSectionColStyle([tbody|thead|tfoot],_section_num,_col_num)"
>getSectionColStyle([tbody|thead|tfoot], section_num, col_num)</a></dt>

<dd>
<p>Same as getColStyle, but able to specify which section to act on.</p>
</dd>
</dl>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Row_Level_Methods"
>Row Level Methods</a></h2>

<dl>
<dt><a name='addRow'></a><a name="addRow(&#34;cell_1_content&#34;_[,_&#34;cell_2_content&#34;,_...])"
>addRow(&#34;cell 1 content&#34; [, &#34;cell 2 content&#34;, ...])</a></dt>

<dd>
<p>Adds a row to the bottom of the first body section of the table.</p>

<p>Adds a row to the bottom of the table. Assumes if you pass more values than there are columns that you want to increase the number of columns.</p>

<dt><a name='addSectionRow'></a><a name="addSectionRow([tbody|thead|tfoot],_section_num,_&#34;cell_1_content&#34;_[,_&#34;cell_2_content&#34;,_...])"
>addSectionRow([tbody|thead|tfoot], section_num, &#34;cell 1 content&#34; [, &#34;cell 2 content&#34;, ...])</a></dt>

<dd>
<p>Same as addRow, but able to specify which section to act on.</p>

<dt><a name='delRow'></a><a name="delRow(row_num)"
>delRow(row_num)</a></dt>

<dd>
<p>Deletes a row from the first body section of the table. If -1 is passed as row_num, the last row in the section will be deleted.</p>

<dt><a name='delSectionRow'></a><a name="delSectionRow([tbody|thead|tfoot],_section_num,_row_num)"
>delSectionRow([tbody|thead|tfoot], section_num, row_num)</a></dt>

<dd>
<p>Same as delRow, but able to specify which section to act on.</p>

<dt><a name='setRowAlign'></a><a name="setRowAlign(row_num,_[center|right|left])"
>setRowAlign(row_num, [center|right|left])</a></dt>

<dd>
<p>Sets the Align attribute of the row.</p>

<dt><a name='setSectionRowAlign'></a><a name="setSectionRowAlign([tbody|thead|tfoot],_section_num,_row_num,_[center|right|left])"
>setSectionRowAlign([tbody|thead|tfoot], section_num, row_num, [center|right|left])</a></dt>

<dd>
<p>Same as setRowAlign, but able to specify which section to act on.</p>

<dt><a name='setRowVAlign'></a><a name="setRowVAlign(row_num,_[center|top|bottom|middle|baseline])"
>setRowVAlign(row_num, [center|top|bottom|middle|baseline])</a></dt>

<dd>
<p>Sets the VAlign attribute of the row.</p>

<dt><a name='setSectionRowVAlign'></a><a name="setSectionRowVAlign([tbody|thead|tfoot],_section_num,_row_num,_[center|top|bottom|middle|baseline])"
>setSectionRowVAlign([tbody|thead|tfoot], section_num, row_num, [center|top|bottom|middle|baseline])</a></dt>

<dd>
<p>Same as setRowVAlign, but able to specify which section to act on.</p>

<dt><a name='setRowNoWrap'></a><a name="setRowNoWrap(col_num,_[0|1])"
>setRowNoWrap(col_num, [0|1])</a></dt>

<dd>
<p>Sets the NoWrap attribute of the row.</p>

<dt><a name='setSectionRowNoWrap'></a><a name="setSectionRowNoWrap([tbody|thead|tfoot],_section_num,_row_num,_[0|1])"
>setSectionRowNoWrap([tbody|thead|tfoot], section_num, row_num, [0|1])</a></dt>

<dd>
<p>Same as setRowNoWrap, but able to specify which section to act on.</p>

<dt><a name='setRowBGColor'></a><a name="setRowBGColor(row_num,_[colorname|colortriplet])"
>setRowBGColor(row_num, [colorname|colortriplet])</a></dt>

<dd>
<p>Sets the BGColor attribute of the row.</p>

<dt><a name='setSectionRowBGColor'></a><a name="setSectionRowBGColor([tbody|thead|tfoot],_section_num,_row_num,_[colorname|colortriplet])"
>setSectionRowBGColor([tbody|thead|tfoot], section_num, row_num, [colorname|colortriplet])</a></dt>

<dd>
<p>Same as setRowBGColor, but able to specify which section to act on.</p>

<dt><a name='setRowStyle'></a><a name="setRowStyle_(row_num,_&#39;css_style&#39;)"
>setRowStyle (row_num, &#39;css style&#39;)</a></dt>

<dd>
<p>Sets the Style attribute of the row.</p>

<dt><a name='setSectionRowStyle'></a><a name="setSectionRowStyle([tbody|thead|tfoot],_section_num,_row_num,_&#39;css_style&#39;)"
>setSectionRowStyle([tbody|thead|tfoot], section_num, row_num, &#39;css style&#39;)</a></dt>

<dd>
<p>Same as setRowStyle, but able to specify which section to act on.</p>

<dt><a name='setRowClass'></a><a name="setRowClass_(row_num,_&#39;css_class&#39;)"
>setRowClass (row_num, &#39;css class&#39;)</a></dt>

<dd>
<p>Sets the Class attribute of the row.</p>

<dt><a name='setSectionRowClass'></a><a name="setSectionRowClass([tbody|thead|tfoot],_section_num,_row_num,_&#39;css_class&#39;)"
>setSectionRowClass([tbody|thead|tfoot], section_num, row_num, &#39;css class&#39;)</a></dt>

<dd>
<p>Same as setRowClass, but able to specify which section to act on.</p>

<dt><a name='setRowAttr'></a><a name="setRowAttr_(row_num,_&#39;user_attribute&#39;)"
>setRowAttr (row_num, &#39;user attribute&#39;)</a></dt>

<dd>
<p>Sets the Attr attribute of the row.</p>

<dt><a name='setSectionRowAttr'></a><a name="setSectionRowAttr([tbody|thead|tfoot],_section_num,_row_num,_&#39;user_attribute&#39;)"
>setSectionRowAttr([tbody|thead|tfoot], section_num, row_num, &#39;user attribute&#39;)</a></dt>

<dd>
<p>Same as setRowAttr, but able to specify which section to act on.</p>

<dt><a name='setRCellsWidth'></a><a name="setRCellsWidth(row_num,_[pixels|percentoftable])"
>setRCellsWidth(row_num, [pixels|percentoftable])</a></dt>

<dd>
<dt><a name='setRowWidth'></a><a name="setRowWidth(row_num,_[pixels|percentoftable])_**_Deprecated_**"
>setRowWidth(row_num, [pixels|percentoftable]) ** Deprecated **</a></dt>

<dd>
<p>Applies setCellWidth over the entire row.</p>

<dt><a name='setSectionRCellsWidth'></a><a name="setSectionRCellsWidth([tbody|thead|tfoot],_section_num,_row_num,_[pixels|percentoftable])"
>setSectionRCellsWidth([tbody|thead|tfoot], section_num, row_num, [pixels|percentoftable])</a></dt>

<dd>
<dt><a name='setSectionRowWidth'></a><a name="setSectionRowWidth([tbody|thead|tfoot],_section_num,_row_num,_[pixels|percentoftable])_**_Deprecated_**"
>setSectionRowWidth([tbody|thead|tfoot], section_num, row_num, [pixels|percentoftable]) ** Deprecated **</a></dt>

<dd>
<p>Same as setRowWidth, but able to specify which section to act on.</p>

<dt><a name='setRCellsHeight'></a><a name="setRCellsHeight(row_num,_[pixels])"
>setRCellsHeight(row_num, [pixels])</a></dt>

<dd>
<dt><a name='setRowHeight'></a><a name="setRowHeight(row_num,_[pixels])_**_Deprecated_**"
>setRowHeight(row_num, [pixels]) ** Deprecated **</a></dt>

<dd>
<p>Applies setCellHeight over the entire row.</p>

<dt><a name='setSectionRCellsHeight'></a><a name="setSectionRCellsHeight([tbody|thead|tfoot],_section_num,_row_num,_[pixels])"
>setSectionRCellsHeight([tbody|thead|tfoot], section_num, row_num, [pixels])</a></dt>

<dd>
<dt><a name='setSectionRowHeight'></a><a name="setSectionRowHeight([tbody|thead|tfoot],_section_num,_row_num,_[pixels])_**_Deprecated_**"
>setSectionRowHeight([tbody|thead|tfoot], section_num, row_num, [pixels]) ** Deprecated **</a></dt>

<dd>
<p>Same as setRowHeight, but able to specify which section to act on.</p>

<dt><a name='setRCellsHead'></a><a name="setRCellsHead(row_num,_[0|1])"
>setRCellsHead(row_num, [0|1])</a></dt>

<dd>
<dt><a name='setRowHead'></a><a name="setRowHead(row_num,_[0|1])_**_Deprecated_**"
>setRowHead(row_num, [0|1]) ** Deprecated **</a></dt>

<dd>
<p>Applies setCellHead over the entire row.</p>

<dt><a name='setSectionRCellsHead'></a><a name="setSectionRCellsHead([tbody|thead|tfoot],_section_num,_row_num,_[0|1])"
>setSectionRCellsHead([tbody|thead|tfoot], section_num, row_num, [0|1])</a></dt>

<dd>
<dt><a name='setSectionRowHead'></a><a name="setSectionRowHead([tbody|thead|tfoot],_section_num,_row_num,_[0|1])_**_Deprecated_**"
>setSectionRowHead([tbody|thead|tfoot], section_num, row_num, [0|1]) ** Deprecated **</a></dt>

<dd>
<p>Same as setRowHead, but able to specify which section to act on.</p>

<dt><a name='setRCellsFormat'></a><a name="setRCellsFormat(row_num,_start_string,_end_string)"
>setRCellsFormat(row_num, start_string, end_string)</a></dt>

<dd>
<dt><a name='setRowFormat'></a><a name="setRowFormat(row_num,_start_string,_end_string)_**_Deprecated_**"
>setRowFormat(row_num, start_string, end_string) ** Deprecated **</a></dt>

<dd>
<p>Applies setCellFormat over the entire row.</p>

<dt><a name='setSectionRCellsFormat'></a><a name="setSectionRCellsFormat([tbody|thead|tfoot],_section_num,_row_num,_start_string,_end_string)"
>setSectionRCellsFormat([tbody|thead|tfoot], section_num, row_num, start_string, end_string)</a></dt>

<dd>
<dt><a name='setSectionRowFormat'></a><a name="setSectionRowFormat([tbody|thead|tfoot],_section_num,_row_num,_start_string,_end_string)_**_Deprecated_**"
>setSectionRowFormat([tbody|thead|tfoot], section_num, row_num, start_string, end_string) ** Deprecated **</a></dt>

<dd>
<p>Same as setRowFormat, but able to specify which section to act on.</p>

<dt><a name='setLastRow'></a><a name="setLastRow*"
>setLastRow*</a></dt>

<dd>
<p>All of the setRow methods have a corresponding setLastRow method which does not accept the row_num parameter, but automatically applies to the last row of the table.</p>

<p>NB. Only works on the setRow* methods, not on the setSectionRow* methods.</p>

<dt><a name='getRowStyle'></a><a name="getRowStyle(row_num)"
>getRowStyle(row_num)</a></dt>

<dd>
<p>Returns row&#39;s style attribute.</p>

<dt><a name='getSectionRowStyle'></a><a name="getSectionRowStyle([tbody|thead|tfoot],_section_num,_row_num)"
>getSectionRowStyle([tbody|thead|tfoot], section_num, row_num)</a></dt>

<dd>
<p>Same as getRowStyle, but able to specify which section to act on.</p>
</dd>
</dl>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Output_Methods"
>Output Methods</a></h2>

<dl>
<dt><a name="getTable"
>getTable</a></dt>

<dd>
<p>Returns a string containing the HTML representation of the table.</p>

<p>The same effect can also be achieved by using the object reference in a string scalar context.</p>

<p>For example...</p>

<pre class="sh_perl">        This code snippet:

                $table = new HTML::Table(2, 2);
                print &#39;&#60;p&#62;Start&#60;/p&#62;&#39;;
                print $table-&#62;getTable;
                print &#39;&#60;p&#62;End&#60;/p&#62;&#39;;

        would produce the same output as:

                $table = new HTML::Table(2, 2);
                print &#34;&#60;p&#62;Start&#60;/p&#62;$table&#60;p&#62;End&#60;/p&#62;&#34;;</pre>

<dt><a name="print"
>print</a></dt>

<dd>
<p>Prints HTML representation of the table to STDOUT</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="CLASS_VARIABLES"
>CLASS VARIABLES <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="HISTORY"
>HISTORY <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This module was originally created in 1997 by Stacy Lacy and whose last version was uploaded to CPAN in 1998. The module was adopted in July 2000 by Anthony Peacock in order to distribute a revised version. This adoption took place without the explicit consent of Stacy Lacy as it proved impossible to contact them at the time. Explicit consent for the adoption has since been received.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHOR"
>AUTHOR <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Anthony Peacock, a.peacock@chime.ucl.ac.uk Stacy Lacy (Original author)</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="CONTRIBUTIONS"
>CONTRIBUTIONS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Douglas Riordan &#60;doug.riordan@gmail.com&#62; For get methods for Style attributes.</p>

<p>Jay Flaherty, fty@mediapulse.com For ROW, COL &#38; CELL HEAD methods. Modified the new method to allow hash of values.</p>

<p>John Stumbles, john@uk.stumbles.org For autogrow behaviour of setCell, and allowing alignment specifications to be case insensitive</p>

<p>Arno Teunisse, Arno.Teunisse@Simac.nl For the methods adding rules, styles and table alignment attributes.</p>

<p>Ville Skytt&#228;, ville.skytta@iki.fi For general fixes</p>

<p>Paul Vernaza, vernaza@stwing.upenn.edu For the setLast... methods</p>

<p>David Link, dvlink@yahoo.com For the sort method</p>

<p>Tommi Maekitalo, t.maekitalo@epgmbh.de For adding the &#39;head&#39; parameter to the new method and for adding the initialisation from an array ref to the new method.</p>

<p>Chris Weyl, cweyl@alumni.drew.edu For adding the even/odd row class support.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="COPYRIGHT"
>COPYRIGHT <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Copyright (c) 2000-2007 Anthony Peacock, CHIME. Copyright (c) 1997 Stacy Lacy</p>

<p>This library is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SEE_ALSO"
>SEE ALSO <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>perl(1), CGI(3)</p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78276 Uploads, 24724 Distributions
106002 Modules, 9649 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Sat Apr 28 02:50:07 2012 GMT (0.102723121643066) @cpansearch1 -->
 </body>
</html>
