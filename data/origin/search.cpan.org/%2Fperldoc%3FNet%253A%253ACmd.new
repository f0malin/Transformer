<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>Net::Cmd - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","libnet",3]);
    _gaq.push(["_setCustomVar",5,"Release","libnet-1.22",3]);
    _gaq.push(["_setCustomVar",3,"Module","Net::Cmd",3]);
    _gaq.push(["_setCustomVar",1,"Author","GBARR",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?Net::Cmd">permalink</a></div>
  <a href="/~gbarr/">Graham Barr</a> &gt;
  <a href="/~gbarr/libnet-1.22/">libnet-1.22</a> &gt;
  Net::Cmd
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/91e0a99c0201988cad4e53833c8aa2b5?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/G/GB/GBARR/libnet-1.22.tar.gz">libnet-1.22.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=Net%3A%3ACmd;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~GBARR/libnet-1.22/Net/Cmd.pm">Annotate this POD
</a></p>
<div class=box style='width:150px; float: right'>
<h1 class=t5>Related Modules</h1>
<div style="margin:2px">
<a href="/perldoc?Net%3A%3AFTP">Net::FTP</a><br>
<a href="/perldoc?Net%3A%3ASMTP">Net::SMTP</a><br>
<a href="/perldoc?MIME%3A%3ALite">MIME::Lite</a><br>
<a href="/perldoc?Authen%3A%3ASASL">Authen::SASL</a><br>
<a href="/perldoc?IO%3A%3ASocket">IO::Socket</a><br>
<a href="/perldoc?CGI%3A%3ACarp">CGI::Carp</a><br>
<a href="/perldoc?Net%3A%3ATelnet">Net::Telnet</a><br>
<a href="/perldoc?MIME%3A%3ABase64">MIME::Base64</a><br>
<a href="/perldoc?Net%3A%3APOP3">Net::POP3</a><br>
<a href="/perldoc?IO%3A%3AHandle">IO::Handle</a><br>
<small>
<a href="http://perlmonks.org/?node=cpan+module+search&pivot=1&module=Net%3A%3ACmd">more...</a><br>
By <a href="http://perlmonks.org/">perlmonks.org</a></small>
</div>
</div>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>New&nbsp;</td><td style="text-align:right"> 27</td></tr>
<tr><td>Open&nbsp;</td><td style="text-align:right"> 18</td></tr>
<tr><td>Stalled&nbsp;</td><td style="text-align:right"> 1</td></tr>
</table>
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=libnet">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  2.29 &nbsp;
<span class="noprint">
  <a href="/src/GBARR/libnet-1.22/Net/Cmd.pm">Source</a> &nbsp;
  Latest&nbsp;Release:&nbsp;<a href="/~gbarr/libnet/Net/Cmd.pm">libnet-1.22_01</a>
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <li class='indexItem indexItem1'><a href='#USER_METHODS'>USER METHODS</a>
  <li class='indexItem indexItem1'><a href='#CLASS_METHODS'>CLASS METHODS</a>
  <li class='indexItem indexItem1'><a href='#EXPORTS'>EXPORTS</a>
  <li class='indexItem indexItem1'><a href='#AUTHOR'>AUTHOR</a>
  <li class='indexItem indexItem1'><a href='#COPYRIGHT'>COPYRIGHT</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Net::Cmd - Network Command class (as used by FTP,
SMTP etc)</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">    use Net::Cmd;

    @ISA = qw(Net::Cmd);</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><code>Net::Cmd</code> is a collection of methods that can be inherited by a sub class of <code>IO::Handle</code>. These methods implement the functionality required for a command based protocol, for example FTP and SMTP.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="USER_METHODS"
>USER METHODS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>These methods provide a user interface to the <code>Net::Cmd</code> object.</p>

<dl>
<dt><a name='debug'></a><a name="debug_(_VALUE_)"
>debug ( VALUE )</a></dt>

<dd>
<p>Set the level of debug information for this object. If <code>VALUE</code> is not given then the current state is returned. Otherwise the state is changed to <code>VALUE</code> and the previous state returned.</p>

<p>Different packages may implement different levels of debug but a non-zero value results in copies of all commands and responses also being sent to STDERR.</p>

<p>If <code>VALUE</code> is <code>undef</code> then the debug level will be set to the default debug level for the class.</p>

<p>This method can also be called as a <i>static</i> method to set/get the default debug level for a given class.</p>

<dt><a name='message'></a><a name="message_()"
>message ()</a></dt>

<dd>
<p>Returns the text message returned from the last command</p>

<dt><a name='code'></a><a name="code_()"
>code ()</a></dt>

<dd>
<p>Returns the 3-digit code from the last command. If a command is pending then the value 0 is returned</p>

<dt><a name='ok'></a><a name="ok_()"
>ok ()</a></dt>

<dd>
<p>Returns non-zero if the last code value was greater than zero and less than 400. This holds true for most command servers. Servers where this does not hold may override this method.</p>

<dt><a name='status'></a><a name="status_()"
>status ()</a></dt>

<dd>
<p>Returns the most significant digit of the current status code. If a command is pending then <code>CMD_PENDING</code> is returned.</p>

<dt><a name='datasend'></a><a name="datasend_(_DATA_)"
>datasend ( DATA )</a></dt>

<dd>
<p>Send data to the remote server, converting LF to CRLF. Any line starting with a &#39;.&#39; will be prefixed with another &#39;.&#39;. <code>DATA</code> may be an array or a reference to an array.</p>

<dt><a name='dataend'></a><a name="dataend_()"
>dataend ()</a></dt>

<dd>
<p>End the sending of data to the remote server. This is done by ensuring that the data already sent ends with CRLF then sending &#39;.CRLF&#39; to end the transmission. Once this data has been sent <code>dataend</code> calls <code>response</code> and returns true if <code>response</code> returns CMD_OK.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="CLASS_METHODS"
>CLASS METHODS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>These methods are not intended to be called by the user, but used or over-ridden by a sub-class of <code>Net::Cmd</code></p>

<dl>
<dt><a name='debug_print'></a><a name="debug_print_(_DIR,_TEXT_)"
>debug_print ( DIR, TEXT )</a></dt>

<dd>
<p>Print debugging information. <code>DIR</code> denotes the direction <i>true</i> being data being sent to the server. Calls <code>debug_text</code> before printing to STDERR.</p>

<dt><a name='debug_text'></a><a name="debug_text_(_TEXT_)"
>debug_text ( TEXT )</a></dt>

<dd>
<p>This method is called to print debugging information. TEXT is the text being sent. The method should return the text to be printed</p>

<p>This is primarily meant for the use of modules such as FTP where passwords are sent, but we do not want to display them in the debugging information.</p>

<dt><a name='command'></a><a name="command_(_CMD_[,_ARGS,_..._])"
>command ( CMD [, ARGS, ... ])</a></dt>

<dd>
<p>Send a command to the command server. All arguments a first joined with a space character and CRLF is appended, this string is then sent to the command server.</p>

<p>Returns undef upon failure</p>

<dt><a name='unsupported'></a><a name="unsupported_()"
>unsupported ()</a></dt>

<dd>
<p>Sets the status code to 580 and the response text to &#39;Unsupported command&#39;. Returns zero.</p>

<dt><a name='response'></a><a name="response_()"
>response ()</a></dt>

<dd>
<p>Obtain a response from the server. Upon success the most significant digit of the status code is returned. Upon failure, timeout etc., <i>undef</i> is returned.</p>

<dt><a name='parse_response'></a><a name="parse_response_(_TEXT_)"
>parse_response ( TEXT )</a></dt>

<dd>
<p>This method is called by <code>response</code> as a method with one argument. It should return an array of 2 values, the 3-digit status code and a flag which is true when this is part of a multi-line response and this line is not the list.</p>

<dt><a name='getline'></a><a name="getline_()"
>getline ()</a></dt>

<dd>
<p>Retrieve one line, delimited by CRLF, from the remote server. Returns <i>undef</i> upon failure.</p>

<p><b>NOTE</b>: If you do use this method for any reason, please remember to add some <code>debug_print</code> calls into your method.</p>

<dt><a name='ungetline'></a><a name="ungetline_(_TEXT_)"
>ungetline ( TEXT )</a></dt>

<dd>
<p>Unget a line of text from the server.</p>

<dt><a name='rawdatasend'></a><a name="rawdatasend_(_DATA_)"
>rawdatasend ( DATA )</a></dt>

<dd>
<p>Send data to the remote server without performing any conversions. <code>DATA</code> is a scalar.</p>

<dt><a name='read_until_dot'></a><a name="read_until_dot_()"
>read_until_dot ()</a></dt>

<dd>
<p>Read data from the remote server until a line consisting of a single &#39;.&#39;. Any lines starting with &#39;..&#39; will have one of the &#39;.&#39;s removed.</p>

<p>Returns a reference to a list containing the lines, or <i>undef</i> upon failure.</p>

<dt><a name='tied_fh'></a><a name="tied_fh_()"
>tied_fh ()</a></dt>

<dd>
<p>Returns a filehandle tied to the Net::Cmd object. After issuing a command, you may read from this filehandle using read() or &#60;&#62;. The filehandle will return EOF when the final dot is encountered. Similarly, you may write to the filehandle in order to send data to the server after issuing a command that expects data to be written.</p>

<p>See the Net::POP3 and Net::SMTP modules for examples of this.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="EXPORTS"
>EXPORTS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><code>Net::Cmd</code> exports six subroutines, five of these, <code>CMD_INFO</code>, <code>CMD_OK</code>, <code>CMD_MORE</code>, <code>CMD_REJECT</code> and <code>CMD_ERROR</code>, correspond to possible results of <code>response</code> and <code>status</code>. The sixth is <code>CMD_PENDING</code>.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHOR"
>AUTHOR <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Graham Barr &#60;gbarr@pobox.com&#62;</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="COPYRIGHT"
>COPYRIGHT <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Copyright (c) 1995-2006 Graham Barr. All rights reserved. This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78260 Uploads, 24722 Distributions
105996 Modules, 9649 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Fri Apr 27 13:57:03 2012 GMT (0.121547937393188) @cpansearch1 -->
 </body>
</html>
