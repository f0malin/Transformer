<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>Devel::Timer - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","Devel-Timer",3]);
    _gaq.push(["_setCustomVar",5,"Release","Devel-Timer-0.04",3]);
    _gaq.push(["_setCustomVar",3,"Module","Devel::Timer",3]);
    _gaq.push(["_setCustomVar",1,"Author","SZABGAB",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?Devel::Timer">permalink</a></div>
  <a href="/~szabgab/">&#x5D2;&#x5D0;&#x5D1;&#x5D5;&#x5E8; &#x5E1;&#x5D1;&#x5D5; - G&aacute;bor Szab&oacute;</a> &gt;
  <a href="/~szabgab/Devel-Timer-0.04/">Devel-Timer-0.04</a> &gt;
  Devel::Timer
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/4e0a6fe2acda5df6095514e7d6329e91?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/S/SZ/SZABGAB/Devel-Timer-0.04.tar.gz">Devel-Timer-0.04.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=Devel%3A%3ATimer;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~SZABGAB/Devel-Timer-0.04/lib/Devel/Timer.pm">Annotate this POD
</a></p>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>Open&nbsp;</td><td style="text-align:right"> 1</td></tr>
</table>
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=Devel-Timer">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  0.04 &nbsp;
<span class="noprint">
  <a href="/src/SZABGAB/Devel-Timer-0.04/lib/Devel/Timer.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <li class='indexItem indexItem1'><a href='#METHODS'>METHODS</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#new'>new</a>
    <li class='indexItem indexItem2'><a href='#initialize'>initialize</a>
    <li class='indexItem indexItem2'><a href='#mark(NAME)'>mark(NAME)</a>
    <li class='indexItem indexItem2'><a href='#print'>print</a>
    <li class='indexItem indexItem2'><a href='#report'>report</a>
    <li class='indexItem indexItem2'><a href='#get_stats'>get_stats</a>
    <li class='indexItem indexItem2'><a href='#shutdown'>shutdown</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#SUBCLASSING'>SUBCLASSING</a>
  <li class='indexItem indexItem1'><a href='#TO_DO'>TO DO</a>
  <li class='indexItem indexItem1'><a href='#SEE_ALSO'>SEE ALSO</a>
  <li class='indexItem indexItem1'><a href='#COPYRIGHT'>COPYRIGHT</a>
  <li class='indexItem indexItem1'><a href='#AUTHOR'>AUTHOR</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Devel::Timer - Track and report execution time for parts of code</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">  use Devel::Timer;

  my $t = Devel::Timer-&#62;new();

  $t-&#62;mark(&#34;first db query&#34;);

  ## do some work

  $t-&#62;mark(&#34;second db query&#34;);

  ## do some more work

  $t-&#62;mark(&#34;end of second db query&#34;);

  $t-&#62;report();</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Devel::Timer allows developers to accurately time how long a specific piece of code takes to execute. This can be helpful in locating the slowest parts of an existing application.</p>

<p>First, the Devel::Timer module is used and instantiated.</p>

<pre class="sh_perl">  use Devel::Timer;

  my $t = Devel::Timer-&#62;new();</pre>

<p>Second, markers are placed before and after pieces of code that need to be timed. For this example, we are profiling the methods get_user_score() and get_average_user_score().</p>

<pre class="sh_perl">  $t-&#62;mark(&#34;first db query&#34;);
  &#38;get_user_score($user);

  $t-&#62;mark(&#34;second db query&#34;);
  &#38;get_average_user_score();</pre>

<p>Finally, at the end of the code that you want to profile, and end marker is place, and a report is generated on stderr.</p>

<pre class="sh_perl">  $t-&#62;mark(&#34;END&#34;);
  $t-&#62;report();</pre>

<p>Sample report:</p>

<pre class="sh_perl">  Devel::Timer Report -- Total time: 0.3464 secs
  Interval  Time    Percent
  ----------------------------------------------
  02 -&#62; 03  0.3001  86.63%  second db query -&#62; END
  01 -&#62; 02  0.0461  13.30%  first db query -&#62; second db query
  00 -&#62; 01  0.0002   0.07%  INIT -&#62; first db query</pre>

<p>The report is output using the method Devel::Timer::print() which currently just prints to stderr. If you want to send the output to a custom location you can override the print() method. The initialize() and shutdown() methods can also overridden if you want to open and close log files or database connections.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="METHODS"
>METHODS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="new"
>new</a></h2>

<p>Create a new instance. No parameters are processed.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="initialize"
>initialize</a></h2>

<p>Empty method. Can be implemented in the subclass.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="mark(NAME)"
>mark(NAME)</a></h2>

<p>Set a timestamp with a NAME.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="print"
>print</a></h2>

<p>Prints to STDERR. Can be overridden in the subclass.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="report"
>report</a></h2>

<p>Prints the report to STDOUT. By default report() looks like this:</p>

<pre class="sh_perl">  $t-&#62;report;

  Devel::Timer Report -- Total time: 7.0028 secs
  Interval  Time    Percent
  ----------------------------------------------
  05 -&#62; 06  3.0006  42.85%  something begin -&#62; something end
  03 -&#62; 04  2.0007  28.57%  something begin -&#62; something end
  06 -&#62; 07  1.0009  14.29%  something end -&#62; END
  01 -&#62; 02  1.0004  14.29%  something begin -&#62; something end
  00 -&#62; 01  0.0000   0.00%  INIT -&#62; something begin
  04 -&#62; 05  0.0000   0.00%  something end -&#62; something begin
  02 -&#62; 03  0.0000   0.00%  something end -&#62; something begin</pre>

<p>Which is great for small or non-iterative programs, but if there&#39;s hundreds of loops of &#34;something begin -&#62; something end&#34; the report gets very painful very quickly. :)</p>

<p>In that scenario you might find <b>collapse</b> useful:</p>

<pre class="sh_perl">  $t-&#62;report(collapse =&#62; 1);

  Devel::Timer Report -- Total time: 7.0028 secs
  Count     Time    Percent
  ----------------------------------------------
         3  6.0018  85.71%  something begin -&#62; something end
         1  1.0009  14.29%  something end -&#62; END
         2  0.0001   0.00%  something end -&#62; something begin
         1  0.0000   0.00%  INIT -&#62; something begin</pre>

<p>The stats for all combinations of labels are added together.</p>

<p>We also accept a <b>sort_by</b> parameter. By default the report is sorted by total time spent descending (like the default report()), but you can sort by count descending instead if you want:</p>

<pre class="sh_perl">  $t-&#62;report(collapse =&#62; 1, sort_by =&#62; &#39;count&#39;);

  Devel::Timer Report -- Total time: 7.0028 secs
  Count     Time    Percent
  ----------------------------------------------
         3  6.0018  85.71%  something begin -&#62; something end
         2  0.0001   0.00%  something end -&#62; something begin
         1  0.0000   0.00%  INIT -&#62; something begin
         1  1.0009  14.29%  something end -&#62; END</pre>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="get_stats"
>get_stats</a></h2>

<p>Returns the accumulated statistics for a specific a combination of mark()&#39;s that have occurred while your program ran. These values are the exact same statistics that report() prints. get_stats() simply returns them to you so you can do something creative with them.</p>

<p>For example, to get the cumulative stats for every time your program has specifically moved from mark(&#34;X&#34;) to mark(&#34;Y&#34;), you can run this:</p>

<pre class="sh_perl">  my ($time, $percent, $count) = $t-&#62;get_stats(&#34;X&#34;, &#34;Y&#34;);</pre>

<p>$time is the total number of seconds elapsed between &#34;X&#34; and &#34;Y&#34;.</p>

<p>$percent is the percentage of total program run time that you have spent between &#34;X&#34; and &#34;Y&#34;.</p>

<p>$count is the number of times your program has moved from &#34;X&#34; to &#34;Y&#34;.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="shutdown"
>shutdown</a></h2>

<p>Empty method. Can be implemented in subclass.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SUBCLASSING"
>SUBCLASSING <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>e.g.</p>

<p>package MyTimer;</p>

<p>use strict; use Devel::Timer; use vars qw(@ISA);</p>

<p>@ISA = (&#34;Devel::Timer&#34;);</p>

<p>sub initialize { my $log = &#34;/tmp/timer.log&#34;; open(LOG, &#34;&#62;&#62;$log&#34;) or die(&#34;Unable to open [$log] for writing.&#34;); }</p>

<p>sub print { my($self, $msg) = @_; print LOG $msg . &#34;\n&#34;; }</p>

<p>sub shutdown { close LOG; }</p>

<p>You would then use the new module MyTimer exactly as you would use Devel::Timer.</p>

<pre class="sh_perl">  use MyTimer;
  my $t = MyTimer-&#62;new();
  $t-&#62;mark(&#34;about to do x&#34;);
  $t-&#62;mark(&#34;about to do y&#34;);
  $t-&#62;mark(&#34;done y&#34;);
  $t-&#62;report();</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="TO_DO"
>TO DO <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Devel::Timer does not currently do any reporting or statistics of any kind based on nested trees of mark() calls. So if your program runs these mark() calls:</p>

<pre class="sh_perl">  A 
    B, C
    B, C
  D
  E</pre>

<p>Devel::Timer never tells you anything about how much time you spent moving from A to D. Depth aware reporting might be an interesting project to tackle.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SEE_ALSO"
>SEE ALSO <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><a href="/perldoc?Time%3A%3AHiRes" class="podlinkpod"
>Time::HiRes</a></p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="COPYRIGHT"
>COPYRIGHT <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Jason Moore</p>

<p>This is free software. It is licensed under the same terms as Perl itself.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHOR"
>AUTHOR <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">  Author:      Jason Moore - jmoore@sober.com (no longer valid)
  Maintainer:  Gabor Szabo - gabor@pti.co.il
  Contributor: Jay Hannah  - jay@jays.net</pre>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78156 Uploads, 24704 Distributions
105967 Modules, 9645 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Tue Apr 24 18:55:26 2012 GMT (0.0908491611480713) @cpansearch1 -->
 </body>
</html>
