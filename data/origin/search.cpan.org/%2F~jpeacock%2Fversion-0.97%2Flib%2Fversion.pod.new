<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>version - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","version",3]);
    _gaq.push(["_setCustomVar",5,"Release","version-0.97",3]);
    _gaq.push(["_setCustomVar",3,"Module","version",3]);
    _gaq.push(["_setCustomVar",1,"Author","JPEACOCK",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?version">permalink</a></div>
  <a href="/~jpeacock/">John Peacock</a> &gt;
  <a href="/~jpeacock/version-0.97/">version-0.97</a> &gt;
  version
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/5021fd57bcdfd8a5dbca24465a7a96a3?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/J/JP/JPEACOCK/version-0.97.tar.gz">version-0.97.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=version;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~JPEACOCK/version-0.97/lib/version.pod">Annotate this POD
(5)
</a></p>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>Open&nbsp;</td><td style="text-align:right"> 0</td></tr>
</table>
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=version">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  0.97 &nbsp;
<span class="noprint">
  <a href="/src/JPEACOCK/version-0.97/lib/version.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <li class='indexItem indexItem1'><a href='#TYPES_OF_VERSION_OBJECTS'>TYPES OF VERSION OBJECTS</a>
  <li class='indexItem indexItem1'><a href='#DECLARING_VERSIONS'>DECLARING VERSIONS</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#How_to_convert_a_module_from_decimal_to_dotted-decimal'>How to convert a module from decimal to dotted-decimal</a>
    <li class='indexItem indexItem2'><a href='#How_to_declare()_a_dotted-decimal_version'>How to declare() a dotted-decimal version</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#PARSING_AND_COMPARING_VERSIONS'>PARSING AND COMPARING VERSIONS</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#How_to_parse()_a_version'>How to parse() a version</a>
    <li class='indexItem indexItem2'><a href='#How_to_check_for_a_legal_version_string'>How to check for a legal version string</a>
    <li class='indexItem indexItem2'><a href='#How_to_compare_version_objects'>How to compare version objects</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#OBJECT_METHODS'>OBJECT METHODS</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#is_alpha()'>is_alpha()</a>
    <li class='indexItem indexItem2'><a href='#is_qv()'>is_qv()</a>
    <li class='indexItem indexItem2'><a href='#normal()'>normal()</a>
    <li class='indexItem indexItem2'><a href='#numify()'>numify()</a>
    <li class='indexItem indexItem2'><a href='#stringify()'>stringify()</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#EXPORTED_FUNCTIONS'>EXPORTED FUNCTIONS</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#qv()'>qv()</a>
    <li class='indexItem indexItem2'><a href='#is_lax()'>is_lax()</a>
    <li class='indexItem indexItem2'><a href='#is_strict()'>is_strict()</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#AUTHOR'>AUTHOR</a>
  <li class='indexItem indexItem1'><a href='#SEE_ALSO'>SEE ALSO</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>version - Perl extension for Version Objects</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">  # Parsing version strings (decimal or dotted-decimal)

  use version 0.77; # get latest bug-fixes and API
  $ver = version-&#62;parse($string)

  # Declaring a dotted-decimal $VERSION (keep on one line!)

  use version; our $VERSION = version-&#62;declare(&#34;v1.2.3&#34;); # formal
  use version; our $VERSION = qv(&#34;v1.2.3&#34;);               # shorthand
  use version; our $VERSION = qv(&#34;v1.2_3&#34;);               # alpha

  # Declaring an old-style decimal $VERSION (use quotes!)

  our $VERSION = &#34;1.0203&#34;;                                     # recommended
  use version; our $VERSION = version-&#62;parse(&#34;1.0203&#34;);   # formal
  use version; our $VERSION = version-&#62;parse(&#34;1.02_03&#34;);  # alpha

  # Comparing mixed version styles (decimals, dotted-decimals, objects)

  if ( version-&#62;parse($v1) == version-&#62;parse($v2) ) {
    # do stuff
  }

  # Sorting mixed version styles

  @ordered = sort { version-&#62;parse($a) &#60;=&#62; version-&#62;parse($b) } @list;</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Version objects were added to Perl in 5.10. This module implements version objects for older version of Perl and provides the version object API for all versions of Perl. All previous releases before 0.74 are deprecated and should not be used due to incompatible API changes. Version 0.77 introduces the new &#39;parse&#39; and &#39;declare&#39; methods to standardize usage. You are strongly urged to set 0.77 as a minimum in your code, e.g.</p>

<pre class="sh_perl">  use version 0.77; # even for Perl v.5.10.0</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="TYPES_OF_VERSION_OBJECTS"
>TYPES OF VERSION OBJECTS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>There are two different types of version objects, corresponding to the two different styles of versions in use:</p>

<dl>
<dt><a name='Decimal'></a><a name="Decimal_Versions"
>Decimal Versions</a></dt>

<dd>
<p>The classic floating-point number $VERSION. The advantage to this style is that you don&#39;t need to do anything special, just type a number into your source file. Quoting is recommended, as it ensures that trailing zeroes (&#34;1.50&#34;) are preserved in any warnings or other output.</p>

<dt><a name='Dotted'></a><a name="Dotted_Decimal_Versions"
>Dotted Decimal Versions</a></dt>

<dd>
<p>The more modern form of version assignment, with 3 (or potentially more) integers separated by decimal points (e.g. v1.2.3). This is the form that Perl itself has used since 5.6.0 was released. The leading &#39;v&#39; is now strongly recommended for clarity, and will throw a warning in a future release if omitted. A leading &#39;v&#39; character is required to pass the <a href="#is_strict()" class="podlinkpod"
>&#34;is_strict()&#34;</a> test.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DECLARING_VERSIONS"
>DECLARING VERSIONS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>If you have a module that uses a decimal $VERSION (floating point), and you do not intend to ever change that, this module is not for you. There is nothing that version.pm gains you over a simple $VERSION assignment:</p>

<pre class="sh_perl">  our $VERSION = &#34;1.02&#34;;</pre>

<p>Since Perl v5.10.0 includes the version.pm comparison logic anyways, you don&#39;t need to do anything at all.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="How_to_convert_a_module_from_decimal_to_dotted-decimal"
>How to convert a module from decimal to dotted-decimal</a></h2>

<p>If you have used a decimal $VERSION in the past and wish to switch to a dotted-decimal $VERSION, then you need to make a one-time conversion to the new format.</p>

<p><b>Important Note</b>: you must ensure that your new $VERSION is numerically greater than your current decimal $VERSION; this is not always obvious. First, convert your old decimal version (e.g. 1.02) to a normalized dotted-decimal form:</p>

<pre class="sh_perl">  $ perl -Mversion -e &#39;print version-&#62;parse(&#34;1.02&#34;)-&#62;normal&#39;
  v1.20.0</pre>

<p>Then increment any of the dotted-decimal components (v1.20.1 or v1.21.0).</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="How_to_declare()_a_dotted-decimal_version"
>How to <code>declare()</code> a dotted-decimal version</a></h2>

<pre class="sh_perl">  use version; our $VERSION = version-&#62;declare(&#34;v1.2.3&#34;);</pre>

<p>The <code>declare()</code> method always creates dotted-decimal version objects. When used in a module, you <b>must</b> put it on the same line as &#34;use version&#34; to ensure that $VERSION is read correctly by PAUSE and installer tools. You should also add &#39;version&#39; to the &#39;configure_requires&#39; section of your module metadata file. See instructions in <a href="/perldoc?ExtUtils%3A%3AMakeMaker" class="podlinkpod"
>ExtUtils::MakeMaker</a> or <a href="/perldoc?Module%3A%3ABuild" class="podlinkpod"
>Module::Build</a> for details.</p>

<p><b>Important Note</b>: Even if you pass in what looks like a decimal number (&#34;1.2&#34;), a dotted-decimal will be created (&#34;v1.200.0&#34;). To avoid confusion or unintentional errors on older Perls, follow these guidelines:</p>

<ul>
<li>Always use a dotted-decimal with (at least) three components</li>

<li>Always use a leading-v</li>

<li>Always quote the version</li>
</ul>

<p>If you really insist on using version.pm with an ordinary decimal version, use <code>parse()</code> instead of declare. See the <a href="#PARSING_AND_COMPARING_VERSIONS" class="podlinkpod"
>&#34;PARSING AND COMPARING VERSIONS&#34;</a> for details.</p>

<p>See also <a href="/~jpeacock/version-0.97/lib/version/Internals.pod" class="podlinkpod"
>version::Internals</a> for more on version number conversion, quoting, calculated version numbers and declaring developer or &#34;alpha&#34; version numbers.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="PARSING_AND_COMPARING_VERSIONS"
>PARSING AND COMPARING VERSIONS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>If you need to compare version numbers, but can&#39;t be sure whether they are expressed as numbers, strings, v-strings or version objects, then you should use version.pm to parse them all into objects for comparison.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="How_to_parse()_a_version"
>How to <code>parse()</code> a version</a></h2>

<p>The <code>parse()</code> method takes in anything that might be a version and returns a corresponding version object, doing any necessary conversion along the way.</p>

<ul>
<li>Dotted-decimal: bare v-strings (v1.2.3) and strings with more than one decimal point and a leading &#39;v&#39; (&#34;v1.2.3&#34;); NOTE you can technically use a v-string or strings with a leading-v and only one decimal point (v1.2 or &#34;v1.2&#34;), but you will confuse both yourself and others.</li>

<li>Decimal: regular decimal numbers (literal or in a string)</li>
</ul>

<p>Some examples:</p>

<pre class="sh_perl">  $variable   version-&#62;parse($variable)
  ---------   -------------------------
  1.23        v1.230.0
  &#34;1.23&#34;      v1.230.0
  v1.23       v1.23.0
  &#34;v1.23&#34;     v1.23.0
  &#34;1.2.3&#34;     v1.2.3
  &#34;v1.2.3&#34;    v1.2.3</pre>

<p>See <a href="/~jpeacock/version-0.97/lib/version/Internals.pod" class="podlinkpod"
>version::Internals</a> for more on version number conversion.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="How_to_check_for_a_legal_version_string"
>How to check for a legal version string</a></h2>

<p>If you do not want to actually create a full blown version object, but would still like to verify that a given string meets the criteria to be parsed as a version, there are two helper functions that can be employed directly:</p>

<dl>
<dt><a name='is_lax'></a><a name="is_lax()"
><code>is_lax()</code></a></dt>

<dd>
<p>The lax criteria corresponds to what is currently allowed by the version parser. All of the following formats are acceptable for dotted-decimal formats strings:</p>

<pre class="sh_perl">    v1.2
    1.2345.6
    v1.23_4
    1.2345
    1.2345_01</pre>

<dt><a name='is_strict'></a><a name="is_strict()"
><code>is_strict()</code></a></dt>

<dd>
<p>If you want to limit yourself to a much more narrow definition of what a version string constitutes, <code>is_strict()</code> is limited to version strings like the following list:</p>

<pre class="sh_perl">    v1.234.5
    2.3456</pre>
</dd>
</dl>

<p>See <a href="/~jpeacock/version-0.97/lib/version/Internals.pod" class="podlinkpod"
>version::Internals</a> for details of the regular expressions that define the legal version string forms, as well as how to use those regular expressions in your own code if <code>is_lax()</code> and <code>is_strict()</code> are not sufficient for your needs.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="How_to_compare_version_objects"
>How to compare version objects</a></h2>

<p>Version objects overload the <code>cmp</code> and <code>&#60;=&#62;</code> operators. Perl automatically generates all of the other comparison operators based on those two so all the normal logical comparisons will work.</p>

<pre class="sh_perl">  if ( version-&#62;parse($v1) == version-&#62;parse($v2) ) {
    # do stuff
  }</pre>

<p>If a version object is compared against a non-version object, the non-object term will be converted to a version object using <code>parse()</code>. This may give surprising results:</p>

<pre class="sh_perl">  $v1 = version-&#62;parse(&#34;v0.95.0&#34;);
  $bool = $v1 &#60; 0.96; # FALSE since 0.96 is v0.960.0</pre>

<p>Always comparing to a version object will help avoid surprises:</p>

<pre class="sh_perl">  $bool = $v1 &#60; version-&#62;parse(&#34;v0.96.0&#34;); # TRUE</pre>

<p>Note that &#34;alpha&#34; version objects (where the version string contains a trailing underscore segment) compare as less than the equivalent version without an underscore:</p>

<pre class="sh_perl">  $bool = version-&#62;parse(&#34;1.23_45&#34;) &#60; version-&#62;parse(&#34;1.2345&#34;); # TRUE</pre>

<p>See <a href="/~jpeacock/version-0.97/lib/version/Internals.pod" class="podlinkpod"
>version::Internals</a> for more details on &#34;alpha&#34; versions.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="OBJECT_METHODS"
>OBJECT METHODS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="is_alpha()"
>is_alpha()</a></h2>

<p>True if and only if the version object was created with a underscore, e.g.</p>

<pre class="sh_perl">  version-&#62;parse(&#39;1.002_03&#39;)-&#62;is_alpha;  # TRUE
  version-&#62;declare(&#39;1.2.3_4&#39;)-&#62;is_alpha; # TRUE</pre>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="is_qv()"
>is_qv()</a></h2>

<p>True only if the version object is a dotted-decimal version, e.g.</p>

<pre class="sh_perl">  version-&#62;parse(&#39;v1.2.0&#39;)-&#62;is_qv;        # TRUE
  version-&#62;declare(&#39;v1.2&#39;)-&#62;is_qv;       # TRUE
  qv(&#39;1.2&#39;)-&#62;is_qv;                      # TRUE
  version-&#62;parse(&#39;1.2&#39;)-&#62;is_qv;          # FALSE</pre>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="normal()"
>normal()</a></h2>

<p>Returns a string with a standard &#39;normalized&#39; dotted-decimal form with a leading-v and at least 3 components.</p>

<pre class="sh_perl"> version-&#62;declare(&#39;v1.2&#39;)-&#62;normal;  # v1.2.0
 version-&#62;parse(&#39;1.2&#39;)-&#62;normal;     # v1.200.0</pre>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="numify()"
>numify()</a></h2>

<p>Returns a value representing the object in a pure decimal form without trailing zeroes.</p>

<pre class="sh_perl"> version-&#62;declare(&#39;v1.2&#39;)-&#62;numify;  # 1.002
 version-&#62;parse(&#39;1.2&#39;)-&#62;numify;     # 1.2</pre>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="stringify()"
>stringify()</a></h2>

<p>Returns a string that is as close to the original representation as possible. If the original representation was a numeric literal, it will be returned the way perl would normally represent it in a string. This method is used whenever a version object is interpolated into a string.</p>

<pre class="sh_perl"> version-&#62;declare(&#39;v1.2&#39;)-&#62;stringify;    # v1.2
 version-&#62;parse(&#39;1.200&#39;)-&#62;stringify;     # 1.200
 version-&#62;parse(1.02_30)-&#62;stringify;     # 1.023</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="EXPORTED_FUNCTIONS"
>EXPORTED FUNCTIONS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="qv()"
>qv()</a></h2>

<p>This function is no longer recommended for use, but is maintained for compatibility with existing code. If you do not want to have it exported to your namespace, use this form:</p>

<pre class="sh_perl">  use version 0.77 ();</pre>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="is_lax()"
>is_lax()</a></h2>

<p>(Not exported by default)</p>

<p>This function takes a scalar argument and returns a boolean value indicating whether the argument meets the &#34;lax&#34; rules for a version number. Leading and trailing spaces are not allowed.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="is_strict()"
>is_strict()</a></h2>

<p>(Not exported by default)</p>

<p>This function takes a scalar argument and returns a boolean value indicating whether the argument meets the &#34;strict&#34; rules for a version number. Leading and trailing spaces are not allowed.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHOR"
>AUTHOR <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>John Peacock &#60;jpeacock@cpan.org&#62;</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SEE_ALSO"
>SEE ALSO <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><a href="/~jpeacock/version-0.97/lib/version/Internals.pod" class="podlinkpod"
>version::Internals</a>.</p>

<p><a href="/perldoc?perl" class="podlinkpod"
>perl</a>.</p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78152 Uploads, 24702 Distributions
105959 Modules, 9642 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Tue Apr 24 14:15:57 2012 GMT (0.0754659175872803) @cpansearch1 -->
 </body>
</html>
