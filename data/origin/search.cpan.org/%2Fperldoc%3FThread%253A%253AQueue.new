<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>Thread::Queue - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","Thread-Queue",3]);
    _gaq.push(["_setCustomVar",5,"Release","Thread-Queue-2.12",3]);
    _gaq.push(["_setCustomVar",3,"Module","Thread::Queue",3]);
    _gaq.push(["_setCustomVar",1,"Author","JDHEDDEN",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?Thread::Queue">permalink</a></div>
  <a href="/~jdhedden/">Jerry D. Hedden</a> &gt;
  <a href="/~jdhedden/Thread-Queue-2.12/">Thread-Queue-2.12</a> &gt;
  Thread::Queue
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/519cfaec05219fb43b17e223a117b812?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/J/JD/JDHEDDEN/Thread-Queue-2.12.tar.gz">Thread-Queue-2.12.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=Thread%3A%3AQueue;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~JDHEDDEN/Thread-Queue-2.12/lib/Thread/Queue.pm">Annotate this POD
</a></p>
<div class=box style='width:150px; float: right'>
<h1 class=t5>Related Modules</h1>
<div style="margin:2px">
<a href="/perldoc?IO%3A%3ASocket">IO::Socket</a><br>
<a href="/perldoc?Thread%3A%3APool">Thread::Pool</a><br>
<a href="/perldoc?Net%3A%3APing">Net::Ping</a><br>
<a href="/perldoc?IO%3A%3ASelect">IO::Select</a><br>
<a href="/perldoc?Time%3A%3AHiRes">Time::HiRes</a><br>
<a href="/perldoc?Win32%3A%3AProcess">Win32::Process</a><br>
<a href="/perldoc?Win32%3A%3AConsole">Win32::Console</a><br>
<a href="/perldoc?LWP%3A%3AUserAgent">LWP::UserAgent</a><br>
<a href="/perldoc?Data%3A%3ADumper">Data::Dumper</a><br>
<a href="/perldoc?Net%3A%3ASNMP">Net::SNMP</a><br>
<small>
<a href="http://perlmonks.org/?node=cpan+module+search&pivot=1&module=Thread%3A%3AQueue">more...</a><br>
By <a href="http://perlmonks.org/">perlmonks.org</a></small>
</div>
</div>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>Open&nbsp;</td><td style="text-align:right"> 0</td></tr>
</table>
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=Thread-Queue">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  2.12 &nbsp;
<span class="noprint">
  <a href="/src/JDHEDDEN/Thread-Queue-2.12/lib/Thread/Queue.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#VERSION'>VERSION</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <li class='indexItem indexItem1'><a href='#QUEUE_CREATION'>QUEUE CREATION</a>
  <li class='indexItem indexItem1'><a href='#BASIC_METHODS'>BASIC METHODS</a>
  <li class='indexItem indexItem1'><a href='#ADVANCED_METHODS'>ADVANCED METHODS</a>
  <li class='indexItem indexItem1'><a href='#NOTES'>NOTES</a>
  <li class='indexItem indexItem1'><a href='#LIMITATIONS'>LIMITATIONS</a>
  <li class='indexItem indexItem1'><a href='#SEE_ALSO'>SEE ALSO</a>
  <li class='indexItem indexItem1'><a href='#MAINTAINER'>MAINTAINER</a>
  <li class='indexItem indexItem1'><a href='#LICENSE'>LICENSE</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Thread::Queue - Thread-safe queues</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="VERSION"
>VERSION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This document describes Thread::Queue version 2.12</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">    use strict;
    use warnings;

    use threads;
    use Thread::Queue;

    my $q = Thread::Queue-&#62;new();    # A new empty queue

    # Worker thread
    my $thr = threads-&#62;create(sub {
                                while (my $item = $q-&#62;dequeue()) {
                                    # Do work on $item
                                }
                             })-&#62;detach();

    # Send work to the thread
    $q-&#62;enqueue($item1, ...);


    # Count of items in the queue
    my $left = $q-&#62;pending();

    # Non-blocking dequeue
    if (defined(my $item = $q-&#62;dequeue_nb())) {
        # Work on $item
    }

    # Get the second item in the queue without dequeuing anything
    my $item = $q-&#62;peek(1);

    # Insert two items into the queue just behind the head
    $q-&#62;insert(1, $item1, $item2);

    # Extract the last two items on the queue
    my ($item1, $item2) = $q-&#62;extract(-2, 2);</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This module provides thread-safe FIFO queues that can be accessed safely by any number of threads.</p>

<p>Any data types supported by <a href="/perldoc?threads%3A%3Ashared" class="podlinkpod"
>threads::shared</a> can be passed via queues:</p>

<dl>
<dt><a name='Ordinary'></a><a name="Ordinary_scalars"
>Ordinary scalars</a></dt>

<dd>
<dt><a name='Array'></a><a name="Array_refs"
>Array refs</a></dt>

<dd>
<dt><a name='Hash'></a><a name="Hash_refs"
>Hash refs</a></dt>

<dd>
<dt><a name='Scalar'></a><a name="Scalar_refs"
>Scalar refs</a></dt>

<dd>
<dt><a name='Objects'></a><a name="Objects_based_on_the_above"
>Objects based on the above</a></dt>
</dl>

<p>Ordinary scalars are added to queues as they are.</p>

<p>If not already thread-shared, the other complex data types will be cloned (recursively, if needed, and including any <code>bless</code>ings and read-only settings) into thread-shared structures before being placed onto a queue.</p>

<p>For example, the following would cause <a href="/~jdhedden/Thread-Queue-2.12/lib/Thread/Queue.pm" class="podlinkpod"
>Thread::Queue</a> to create a empty, shared array reference via <code>&#38;shared([])</code>, copy the elements &#39;foo&#39;, &#39;bar&#39; and &#39;baz&#39; from <code>@ary</code> into it, and then place that shared reference onto the queue:</p>

<pre class="sh_perl">    my @ary = qw/foo bar baz/;
    $q-&#62;enqueue(\@ary);</pre>

<p>However, for the following, the items are already shared, so their references are added directly to the queue, and no cloning takes place:</p>

<pre class="sh_perl">    my @ary :shared = qw/foo bar baz/;
    $q-&#62;enqueue(\@ary);

    my $obj = &#38;shared({});
    $$obj{&#39;foo&#39;} = &#39;bar&#39;;
    $$obj{&#39;qux&#39;} = 99;
    bless($obj, &#39;My::Class&#39;);
    $q-&#62;enqueue($obj);</pre>

<p>See <a href="#LIMITATIONS" class="podlinkpod"
>&#34;LIMITATIONS&#34;</a> for caveats related to passing objects via queues.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="QUEUE_CREATION"
>QUEUE CREATION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<dl>
<dt><a name='new'></a><a name="-&#62;new()"
>-&#62;new()</a></dt>

<dd>
<p>Creates a new empty queue.</p>

<dt><a name='new'></a><a name="-&#62;new(LIST)"
>-&#62;new(LIST)</a></dt>

<dd>
<p>Creates a new queue pre-populated with the provided list of items.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="BASIC_METHODS"
>BASIC METHODS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>The following methods deal with queues on a FIFO basis.</p>

<dl>
<dt><a name='enqueue'></a><a name="-&#62;enqueue(LIST)"
>-&#62;enqueue(LIST)</a></dt>

<dd>
<p>Adds a list of items onto the end of the queue.</p>

<dt><a name='dequeue'></a><a name="-&#62;dequeue()"
>-&#62;dequeue()</a></dt>

<dd>
<dt><a name='dequeue'></a><a name="-&#62;dequeue(COUNT)"
>-&#62;dequeue(COUNT)</a></dt>

<dd>
<p>Removes the requested number of items (default is 1) from the head of the queue, and returns them. If the queue contains fewer than the requested number of items, then the thread will be blocked until the requisite number of items are available (i.e., until other threads &#60;enqueue&#62; more items).</p>

<dt><a name='dequeue_nb'></a><a name="-&#62;dequeue_nb()"
>-&#62;dequeue_nb()</a></dt>

<dd>
<dt><a name='dequeue_nb'></a><a name="-&#62;dequeue_nb(COUNT)"
>-&#62;dequeue_nb(COUNT)</a></dt>

<dd>
<p>Removes the requested number of items (default is 1) from the head of the queue, and returns them. If the queue contains fewer than the requested number of items, then it immediately (i.e., non-blocking) returns whatever items there are on the queue. If the queue is empty, then <code>undef</code> is returned.</p>

<dt><a name='pending'></a><a name="-&#62;pending()"
>-&#62;pending()</a></dt>

<dd>
<p>Returns the number of items still in the queue.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="ADVANCED_METHODS"
>ADVANCED METHODS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>The following methods can be used to manipulate items anywhere in a queue.</p>

<p>To prevent the contents of a queue from being modified by another thread while it is being examined and/or changed, <a href="/perldoc?threads%3A%3Ashared#lock_VARIABLE" class="podlinkpod"
>lock</a> the queue inside a local block:</p>

<pre class="sh_perl">    {
        lock($q);   # Keep other threads from changing the queue&#39;s contents
        my $item = $q-&#62;peek();
        if ($item ...) {
            ...
        }
    }
    # Queue is now unlocked</pre>

<dl>
<dt><a name='peek'></a><a name="-&#62;peek()"
>-&#62;peek()</a></dt>

<dd>
<dt><a name='peek'></a><a name="-&#62;peek(INDEX)"
>-&#62;peek(INDEX)</a></dt>

<dd>
<p>Returns an item from the queue without dequeuing anything. Defaults to the the head of queue (at index position 0) if no index is specified. Negative index values are supported as with <a href="/perldoc?perldata#Subscripts" class="podlinkpod"
>arrays</a> (i.e., -1 is the end of the queue, -2 is next to last, and so on).</p>

<p>If no items exists at the specified index (i.e., the queue is empty, or the index is beyond the number of items on the queue), then <code>undef</code> is returned.</p>

<p>Remember, the returned item is not removed from the queue, so manipulating a <code>peek</code>ed at reference affects the item on the queue.</p>

<dt><a name='insert'></a><a name="-&#62;insert(INDEX,_LIST)"
>-&#62;insert(INDEX, LIST)</a></dt>

<dd>
<p>Adds the list of items to the queue at the specified index position (0 is the head of the list). Any existing items at and beyond that position are pushed back past the newly added items:</p>

<pre class="sh_perl">    $q-&#62;enqueue(1, 2, 3, 4);
    $q-&#62;insert(1, qw/foo bar/);
    # Queue now contains:  1, foo, bar, 2, 3, 4</pre>

<p>Specifying an index position greater than the number of items in the queue just adds the list to the end.</p>

<p>Negative index positions are supported:</p>

<pre class="sh_perl">    $q-&#62;enqueue(1, 2, 3, 4);
    $q-&#62;insert(-2, qw/foo bar/);
    # Queue now contains:  1, 2, foo, bar, 3, 4</pre>

<p>Specifying a negative index position greater than the number of items in the queue adds the list to the head of the queue.</p>

<dt><a name='extract'></a><a name="-&#62;extract()"
>-&#62;extract()</a></dt>

<dd>
<dt><a name='extract'></a><a name="-&#62;extract(INDEX)"
>-&#62;extract(INDEX)</a></dt>

<dd>
<dt><a name='extract'></a><a name="-&#62;extract(INDEX,_COUNT)"
>-&#62;extract(INDEX, COUNT)</a></dt>

<dd>
<p>Removes and returns the specified number of items (defaults to 1) from the specified index position in the queue (0 is the head of the queue). When called with no arguments, <code>extract</code> operates the same as <code>dequeue_nb</code>.</p>

<p>This method is non-blocking, and will return only as many items as are available to fulfill the request:</p>

<pre class="sh_perl">    $q-&#62;enqueue(1, 2, 3, 4);
    my $item  = $q-&#62;extract(2)     # Returns 3
                                   # Queue now contains:  1, 2, 4
    my @items = $q-&#62;extract(1, 3)  # Returns (2, 4)
                                   # Queue now contains:  1</pre>

<p>Specifying an index position greater than the number of items in the queue results in <code>undef</code> or an empty list being returned.</p>

<pre class="sh_perl">    $q-&#62;enqueue(&#39;foo&#39;);
    my $nada = $q-&#62;extract(3)      # Returns undef
    my @nada = $q-&#62;extract(1, 3)   # Returns ()</pre>

<p>Negative index positions are supported. Specifying a negative index position greater than the number of items in the queue may return items from the head of the queue (similar to <code>dequeue_nb</code>) if the count overlaps the head of the queue from the specified position (i.e. if queue size + index + count is greater than zero):</p>

<pre class="sh_perl">    $q-&#62;enqueue(qw/foo bar baz/);
    my @nada = $q-&#62;extract(-6, 2);   # Returns ()         - (3+(-6)+2) &#60;= 0
    my @some = $q-&#62;extract(-6, 4);   # Returns (foo)      - (3+(-6)+4) &#62; 0
                                     # Queue now contains:  bar, baz
    my @rest = $q-&#62;extract(-3, 4);   # Returns (bar, baz) - (2+(-3)+4) &#62; 0</pre>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NOTES"
>NOTES <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Queues created by <a href="/~jdhedden/Thread-Queue-2.12/lib/Thread/Queue.pm" class="podlinkpod"
>Thread::Queue</a> can be used in both threaded and non-threaded applications.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="LIMITATIONS"
>LIMITATIONS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Passing objects on queues may not work if the objects&#39; classes do not support sharing. See <a href="/perldoc?threads%3A%3Ashared#BUGS_AND_LIMITATIONS" class="podlinkpod"
>&#34;BUGS AND LIMITATIONS&#34; in threads::shared</a> for more.</p>

<p>Passing array/hash refs that contain objects may not work for Perl prior to 5.10.0.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SEE_ALSO"
>SEE ALSO <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><a href="/~jdhedden/Thread-Queue-2.12/lib/Thread/Queue.pm" class="podlinkpod"
>Thread::Queue</a> Discussion Forum on CPAN: <a href="http://www.cpanforum.com/dist/Thread-Queue" class="podlinkurl"
>http://www.cpanforum.com/dist/Thread-Queue</a></p>

<p><a href="/perldoc?threads" class="podlinkpod"
>threads</a>, <a href="/perldoc?threads%3A%3Ashared" class="podlinkpod"
>threads::shared</a></p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="MAINTAINER"
>MAINTAINER <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Jerry D. Hedden, &#60;jdhedden&#160;AT&#160;cpan&#160;DOT&#160;org&#62;</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="LICENSE"
>LICENSE <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78067 Uploads, 24685 Distributions
105889 Modules, 9637 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Sat Apr 21 15:19:14 2012 GMT (0.105043172836304) @cpansearch1 -->
 </body>
</html>
