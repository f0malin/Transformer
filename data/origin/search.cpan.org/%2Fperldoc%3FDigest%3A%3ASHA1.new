<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>Digest::SHA1 - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","Digest-SHA1",3]);
    _gaq.push(["_setCustomVar",5,"Release","Digest-SHA1-2.13",3]);
    _gaq.push(["_setCustomVar",3,"Module","Digest::SHA1",3]);
    _gaq.push(["_setCustomVar",1,"Author","GAAS",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?Digest::SHA1">permalink</a></div>
  <a href="/~gaas/">Gisle Aas</a> &gt;
  <a href="/~gaas/Digest-SHA1-2.13/">Digest-SHA1-2.13</a> &gt;
  Digest::SHA1
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/80ccd89a65d9faf08c2fb6be2991ba57?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/G/GA/GAAS/Digest-SHA1-2.13.tar.gz">Digest-SHA1-2.13.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=Digest%3A%3ASHA1;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~GAAS/Digest-SHA1-2.13/SHA1.pm">Annotate this POD
</a></p>
<div class=box style='width:150px; float: right'>
<h1 class=t5>Related Modules</h1>
<div style="margin:2px">
<a href="/perldoc?Digest%3A%3AMD5">Digest::MD5</a><br>
<a href="/perldoc?Bloom%3A%3AFilter">Bloom::Filter</a><br>
<a href="/perldoc?Crypt%3A%3ACBC">Crypt::CBC</a><br>
<a href="/perldoc?Crypt%3A%3ABlowfish">Crypt::Blowfish</a><br>
<a href="/perldoc?LWP%3A%3AUserAgent">LWP::UserAgent</a><br>
<a href="/perldoc?WWW%3A%3AMechanize">WWW::Mechanize</a><br>
<a href="/perldoc?XML%3A%3AParser">XML::Parser</a><br>
<a href="/perldoc?Crypt%3A%3APasswdMD5">Crypt::PasswdMD5</a><br>
<a href="/perldoc?MIME%3A%3ABase64">MIME::Base64</a><br>
<a href="/perldoc?File%3A%3ACompare">File::Compare</a><br>
<small>
<a href="http://perlmonks.org/?node=cpan+module+search&pivot=1&module=Digest%3A%3ASHA1">more...</a><br>
By <a href="http://perlmonks.org/">perlmonks.org</a></small>
</div>
</div>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>New&nbsp;</td><td style="text-align:right"> 1</td></tr>
<tr><td>Open&nbsp;</td><td style="text-align:right"> 1</td></tr>
</table>
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=Digest-SHA1">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  2.13 &nbsp;
<span class="noprint">
  <a href="/src/GAAS/Digest-SHA1-2.13/SHA1.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <li class='indexItem indexItem1'><a href='#FUNCTIONS'>FUNCTIONS</a>
  <li class='indexItem indexItem1'><a href='#METHODS'>METHODS</a>
  <li class='indexItem indexItem1'><a href='#SEE_ALSO'>SEE ALSO</a>
  <li class='indexItem indexItem1'><a href='#COPYRIGHT'>COPYRIGHT</a>
  <li class='indexItem indexItem1'><a href='#AUTHORS'>AUTHORS</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Digest::SHA1 - Perl interface to the SHA-1 algorithm</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl"> # Functional style
 use Digest::SHA1  qw(sha1 sha1_hex sha1_base64);

 $digest = sha1($data);
 $digest = sha1_hex($data);
 $digest = sha1_base64($data);
 $digest = sha1_transform($data);


 # OO style
 use Digest::SHA1;

 $sha1 = Digest::SHA1-&#62;new;

 $sha1-&#62;add($data);
 $sha1-&#62;addfile(*FILE);

 $sha1_copy = $sha1-&#62;clone;

 $digest = $sha1-&#62;digest;
 $digest = $sha1-&#62;hexdigest;
 $digest = $sha1-&#62;b64digest;
 $digest = $sha1-&#62;transform;</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>The <code>Digest::SHA1</code> module allows you to use the NIST SHA-1 message digest algorithm from within Perl programs. The algorithm takes as input a message of arbitrary length and produces as output a 160-bit &#34;fingerprint&#34; or &#34;message digest&#34; of the input.</p>

<p>In 2005, security flaws were identified in SHA-1, namely that a possible mathematical weakness might exist, indicating that a stronger hash function would be desirable. The <a href="/perldoc?Digest%3A%3ASHA" class="podlinkpod"
>Digest::SHA</a> module implements the stronger algorithms in the SHA family.</p>

<p>The <code>Digest::SHA1</code> module provide a procedural interface for simple use, as well as an object oriented interface that can handle messages of arbitrary length and which can read files directly.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="FUNCTIONS"
>FUNCTIONS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>The following functions can be exported from the <code>Digest::SHA1</code> module. No functions are exported by default.</p>

<dl>
<dt><a name='sha1'></a><a name="sha1($data,...)"
>sha1($data,...)</a></dt>

<dd>
<p>This function will concatenate all arguments, calculate the SHA-1 digest of this &#34;message&#34;, and return it in binary form. The returned string will be 20 bytes long.</p>

<p>The result of sha1(&#34;a&#34;, &#34;b&#34;, &#34;c&#34;) will be exactly the same as the result of sha1(&#34;abc&#34;).</p>

<dt><a name='sha1_hex'></a><a name="sha1_hex($data,...)"
>sha1_hex($data,...)</a></dt>

<dd>
<p>Same as sha1(), but will return the digest in hexadecimal form. The length of the returned string will be 40 and it will only contain characters from this set: &#39;0&#39;..&#39;9&#39; and &#39;a&#39;..&#39;f&#39;.</p>

<dt><a name='sha1_base64'></a><a name="sha1_base64($data,...)"
>sha1_base64($data,...)</a></dt>

<dd>
<p>Same as sha1(), but will return the digest as a base64 encoded string. The length of the returned string will be 27 and it will only contain characters from this set: &#39;A&#39;..&#39;Z&#39;, &#39;a&#39;..&#39;z&#39;, &#39;0&#39;..&#39;9&#39;, &#39;+&#39; and &#39;/&#39;.</p>

<p>Note that the base64 encoded string returned is not padded to be a multiple of 4 bytes long. If you want interoperability with other base64 encoded sha1 digests you might want to append the redundant string &#34;=&#34; to the result.</p>

<dt><a name='sha1_transform'></a><a name="sha1_transform($data)"
>sha1_transform($data)</a></dt>

<dd>
<p>Implements the basic SHA1 transform on a 64 byte block. The $data argument and the returned $digest are in binary form. This algorithm is used in NIST FIPS 186-2</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="METHODS"
>METHODS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>The object oriented interface to <code>Digest::SHA1</code> is described in this section. After a <code>Digest::SHA1</code> object has been created, you will add data to it and finally ask for the digest in a suitable format. A single object can be used to calculate multiple digests.</p>

<p>The following methods are provided:</p>

<dl>
<dt><a name='sha1'></a><a name="$sha1_=_Digest::SHA1-&#62;new"
>$sha1 = Digest::SHA1-&#62;new</a></dt>

<dd>
<p>The constructor returns a new <code>Digest::SHA1</code> object which encapsulate the state of the SHA-1 message-digest algorithm.</p>

<p>If called as an instance method (i.e. $sha1-&#62;new) it will just reset the state the object to the state of a newly created object. No new object is created in this case.</p>

<dt><a name='sha1'></a><a name="$sha1-&#62;reset"
>$sha1-&#62;reset</a></dt>

<dd>
<p>This is just an alias for $sha1-&#62;new.</p>

<dt><a name='sha1'></a><a name="$sha1-&#62;clone"
>$sha1-&#62;clone</a></dt>

<dd>
<p>This a copy of the $sha1 object. It is useful when you do not want to destroy the digests state, but need an intermediate value of the digest, e.g. when calculating digests iteratively on a continuous data stream. Example:</p>

<pre class="sh_perl">    my $sha1 = Digest::SHA1-&#62;new;
    while (&#60;&#62;) {
        $sha1-&#62;add($_);
        print &#34;Line $.: &#34;, $sha1-&#62;clone-&#62;hexdigest, &#34;\n&#34;;
    }</pre>

<dt><a name='sha1'></a><a name="$sha1-&#62;add($data,...)"
>$sha1-&#62;add($data,...)</a></dt>

<dd>
<p>The $data provided as argument are appended to the message we calculate the digest for. The return value is the $sha1 object itself.</p>

<p>All these lines will have the same effect on the state of the $sha1 object:</p>

<pre class="sh_perl">    $sha1-&#62;add(&#34;a&#34;); $sha1-&#62;add(&#34;b&#34;); $sha1-&#62;add(&#34;c&#34;);
    $sha1-&#62;add(&#34;a&#34;)-&#62;add(&#34;b&#34;)-&#62;add(&#34;c&#34;);
    $sha1-&#62;add(&#34;a&#34;, &#34;b&#34;, &#34;c&#34;);
    $sha1-&#62;add(&#34;abc&#34;);</pre>

<dt><a name='sha1'></a><a name="$sha1-&#62;addfile($io_handle)"
>$sha1-&#62;addfile($io_handle)</a></dt>

<dd>
<p>The $io_handle will be read until EOF and its content appended to the message we calculate the digest for. The return value is the $sha1 object itself.</p>

<p>The addfile() method will croak() if it fails reading data for some reason. If it croaks it is unpredictable what the state of the $sha1 object will be in. The addfile() method might have been able to read the file partially before it failed. It is probably wise to discard or reset the $sha1 object if this occurs.</p>

<p>In most cases you want to make sure that the $io_handle is in <code>binmode</code> before you pass it as argument to the addfile() method.</p>

<dt><a name='sha1'></a><a name="$sha1-&#62;add_bits($data,_$nbits)"
>$sha1-&#62;add_bits($data, $nbits)</a></dt>

<dd>
<dt><a name='sha1'></a><a name="$sha1-&#62;add_bits($bitstring)"
>$sha1-&#62;add_bits($bitstring)</a></dt>

<dd>
<p>This implementation of SHA-1 only supports byte oriented input so you might only add bits as multiples of 8. If you need bit level support please consider using the <code>Digest::SHA</code> module instead. The add_bits() method is provided here for compatibility with other digest implementations. See <a href="/perldoc?Digest" class="podlinkpod"
>Digest</a> for description of the arguments that add_bits() take.</p>

<dt><a name='sha1'></a><a name="$sha1-&#62;digest"
>$sha1-&#62;digest</a></dt>

<dd>
<p>Return the binary digest for the message. The returned string will be 20 bytes long.</p>

<p>Note that the <code>digest</code> operation is effectively a destructive, read-once operation. Once it has been performed, the <code>Digest::SHA1</code> object is automatically <code>reset</code> and can be used to calculate another digest value. Call $sha1-&#62;clone-&#62;digest if you want to calculate the digest without reseting the digest state.</p>

<dt><a name='sha1'></a><a name="$sha1-&#62;hexdigest"
>$sha1-&#62;hexdigest</a></dt>

<dd>
<p>Same as $sha1-&#62;digest, but will return the digest in hexadecimal form. The length of the returned string will be 40 and it will only contain characters from this set: &#39;0&#39;..&#39;9&#39; and &#39;a&#39;..&#39;f&#39;.</p>

<dt><a name='sha1'></a><a name="$sha1-&#62;b64digest"
>$sha1-&#62;b64digest</a></dt>

<dd>
<p>Same as $sha1-&#62;digest, but will return the digest as a base64 encoded string. The length of the returned string will be 27 and it will only contain characters from this set: &#39;A&#39;..&#39;Z&#39;, &#39;a&#39;..&#39;z&#39;, &#39;0&#39;..&#39;9&#39;, &#39;+&#39; and &#39;/&#39;.</p>

<p>The base64 encoded string returned is not padded to be a multiple of 4 bytes long. If you want interoperability with other base64 encoded SHA-1 digests you might want to append the string &#34;=&#34; to the result.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SEE_ALSO"
>SEE ALSO <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><a href="/perldoc?Digest" class="podlinkpod"
>Digest</a>, <a href="/perldoc?Digest%3A%3AHMAC_SHA1" class="podlinkpod"
>Digest::HMAC_SHA1</a>, <a href="/perldoc?Digest%3A%3ASHA" class="podlinkpod"
>Digest::SHA</a>, <a href="/perldoc?Digest%3A%3AMD5" class="podlinkpod"
>Digest::MD5</a></p>

<p><a href="http://www.itl.nist.gov/fipspubs/fip180-1.htm" class="podlinkurl"
>http://www.itl.nist.gov/fipspubs/fip180-1.htm</a></p>

<p><a href="http://en.wikipedia.org/wiki/SHA_hash_functions" class="podlinkurl"
>http://en.wikipedia.org/wiki/SHA_hash_functions</a></p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="COPYRIGHT"
>COPYRIGHT <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This library is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</p>

<pre class="sh_perl"> Copyright 1999-2004 Gisle Aas.
 Copyright 1997 Uwe Hollerbach.</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHORS"
>AUTHORS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Peter C. Gutmann, Uwe Hollerbach &#60;uh@alumni.caltech.edu&#62;, Gisle Aas &#60;gisle@aas.no&#62;</p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78066 Uploads, 24685 Distributions
105889 Modules, 9637 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Sat Apr 21 12:25:17 2012 GMT (0.0848929882049561) @cpansearch1 -->
 </body>
</html>
