<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>News::Newsrc - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","News-Newsrc",3]);
    _gaq.push(["_setCustomVar",5,"Release","News-Newsrc-1.09",3]);
    _gaq.push(["_setCustomVar",3,"Module","News::Newsrc",3]);
    _gaq.push(["_setCustomVar",1,"Author","SWMCD",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?News::Newsrc">permalink</a></div>
  <a href="/~swmcd/">Steven McDougall</a> &gt;
  <a href="/~swmcd/News-Newsrc-1.09/">News-Newsrc-1.09</a> &gt;
  News::Newsrc
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/ed61327470f4c13b4ad519ada797985c?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/S/SW/SWMCD/News-Newsrc-1.09.tar.gz">News-Newsrc-1.09.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=News%3A%3ANewsrc;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~SWMCD/News-Newsrc-1.09/Newsrc.pm">Annotate this POD
</a></p>
<div class=box style='width:150px; float: right'>
<h1 class=t5>Related Modules</h1>
<div style="margin:2px">
<a href="/perldoc?News%3A%3ANNTPClient">News::NNTPClient</a><br>
<a href="/perldoc?MIME%3A%3AParser">MIME::Parser</a><br>
<a href="/perldoc?Set%3A%3AIntSpan">Set::IntSpan</a><br>
<small>
<a href="http://perlmonks.org/?node=cpan+module+search&pivot=1&module=News%3A%3ANewsrc">more...</a><br>
By <a href="http://perlmonks.org/">perlmonks.org</a></small>
</div>
</div>

<div style="float:right">
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=News-Newsrc">View/Report Bugs</a><br/>

</div>
</div>
  Module Version:  1.09 &nbsp;
<span class="noprint">
  <a href="/src/SWMCD/News-Newsrc-1.09/Newsrc.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#REQUIRES'>REQUIRES</a>
  <li class='indexItem indexItem1'><a href='#EXPORTS'>EXPORTS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <li class='indexItem indexItem1'><a href='#NEWSRC_FILES'>NEWSRC FILES</a>
  <li class='indexItem indexItem1'><a href='#NEWSGROUP_ORDER'>NEWSGROUP ORDER</a>
  <li class='indexItem indexItem1'><a href='#METHODS'>METHODS</a>
  <li class='indexItem indexItem1'><a href='#DIAGNOSTICS'>DIAGNOSTICS</a>
  <li class='indexItem indexItem1'><a href='#NOTES'>NOTES</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#Error_Handling'>Error Handling</a>
    <li class='indexItem indexItem2'><a href='#import_rc/export_rc'>import_rc/export_rc</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#ACKNOWLEDGMENTS'>ACKNOWLEDGMENTS</a>
  <li class='indexItem indexItem1'><a href='#AUTHOR'>AUTHOR</a>
  <li class='indexItem indexItem1'><a href='#SEE_ALSO'>SEE ALSO</a>
  <li class='indexItem indexItem1'><a href='#COPYRIGHT'>COPYRIGHT</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>News::Newsrc - manage newsrc files</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">  use News::Newsrc;

  $newsrc   = new News::Newsrc;
  $newsrc   = new News::Newsrc $file;
  $newsrc   = new News::Newsrc $file, create =&#62; 1;

  $ok       = $newsrc-&#62;load;
  $ok       = $newsrc-&#62;load             ( $file);
              $newsrc-&#62;import_rc        ( @lines);
              $newsrc-&#62;import_rc        (\@lines);

              $newsrc-&#62;save;
              $newsrc-&#62;save_as          ($file);
  @lines    = $newsrc-&#62;export_rc;

  $ok       = $newsrc-&#62; add_group       ($group,             %options);
  $ok       = $newsrc-&#62;move_group       ($group,             %options);
  $ok       = $newsrc-&#62; del_group       ($group);

              $newsrc-&#62;  subscribe      ($group,             %options);
              $newsrc-&#62;unsubscribe      ($group,             %options);

              $newsrc-&#62;mark             ($group,  $article , %options);
              $newsrc-&#62;mark_list        ($group, \@articles, %options);
              $newsrc-&#62;mark_range       ($group, $from, $to, %options);

              $newsrc-&#62;unmark           ($group,  $article , %options);
              $newsrc-&#62;unmark_list      ($group, \@articles, %options);
              $newsrc-&#62;unmark_range     ($group, $from, $to, %options);

       ... if $newsrc-&#62;exists           ($group);
       ... if $newsrc-&#62;subscribed       ($group);
       ... if $newsrc-&#62;marked           ($group, $article);

  $n        = $newsrc-&#62;  num_groups;
  @groups   = $newsrc-&#62;      groups;
  @groups   = $newsrc-&#62;  sub_groups;
  @groups   = $newsrc-&#62;unsub_groups;

  @articles = $newsrc-&#62;  marked_articles($group,             %options);
  @articles = $newsrc-&#62;unmarked_articles($group, $from, $to, %options);

  $articles = $newsrc-&#62;get_articles     ($group,             %options);
  $ok       = $newsrc-&#62;set_articles     ($group, $articles,  %options);</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="REQUIRES"
>REQUIRES <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Perl 5.6.0, Set::IntSpan 1.07</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="EXPORTS"
>EXPORTS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Nothing</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><code>News::Newsrc</code> manages newsrc files, of the style</p>

<pre class="sh_perl">    alt.foo: 1-21,28,31-34
    alt.bar! 3,5,9-2900,2902</pre>

<p>Methods are provided for</p>

<ul>
<li>reading and writing newsrc files</li>

<li>adding and removing newsgroups</li>

<li>changing the order of newsgroups</li>

<li>subscribing and unsubscribing from newsgroups</li>

<li>testing whether groups exist and are subscribed</li>

<li>marking and unmarking articles</li>

<li>testing whether articles are marked</li>

<li>returning lists of newsgroups</li>

<li>returning lists of articles</li>
</ul>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NEWSRC_FILES"
>NEWSRC FILES <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>A newsrc file is an ASCII file that lists newsgroups and article numbers. Each line of a newsrc file describes a single newsgroup. Each line is divided into three fields: a <i>group</i>, a <i>subscription mark</i> and an <i>article list</i>.</p>

<p>Lines containing only whitespace are ignored. Whitespace within a line is ignored.</p>

<dl>
<dt><a name="Group"
>Group</a></dt>

<dd>
<p>The <i>group</i> is the name of the newsgroup. A group name may not contain colons (:) or exclamation points (!).</p>

<p>Group names must be unique within a newsrc file. The group name is required.</p>

<dt><a name='Subscription'></a><a name="Subscription_mark"
>Subscription mark</a></dt>

<dd>
<p>The <i>subscription mark</i> is either a colon (:), for subscribed groups, or an exclamation point (!), for unsubscribed groups. The subscription mark is required.</p>

<dt><a name='Article'></a><a name="Article_list"
>Article list</a></dt>

<dd>
<p>The <i>article list</i> is a comma-separated list of positive integers. The integers must be listed in increasing order. Runs of consecutive integers may be abbreviated a-b, where a is the first integer in the run and b is the last. The article list may be empty.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NEWSGROUP_ORDER"
>NEWSGROUP ORDER <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><code>News::Newsrc</code> preserves the order of newsgroups in a newsrc file: if a file is loaded and then saved, the newsgroup order will be unchanged.</p>

<p>Methods that add or move newsgroups affect the newsgroup order. By default, these methods put newsgroups at the end of the newsrc file. Other locations may be specified by passing an <i>%options</i> hash with a <code>where</code> key to the method. Recognized locations are:</p>

<dl>
<dt><a name='where'></a><a name="where_=&#62;_&#39;first&#39;"
><code>where</code> =&#62; <code>&#39;first&#39;</code></a></dt>

<dd>
<p>Put the newsgroup first.</p>

<dt><a name='where'></a><a name="where_=&#62;_&#39;last&#39;"
><code>where</code> =&#62; <code>&#39;last&#39;</code></a></dt>

<dd>
<p>Put the newsgroup last.</p>

<dt><a name='where'></a><a name="where_=&#62;_&#39;alpha&#39;"
><code>where</code> =&#62; <code>&#39;alpha&#39;</code></a></dt>

<dd>
<p>Put the newsgroup in alphabetical order.</p>

<p>If the other newsgroups are not sorted alphabetically, put the group at an arbitrary location.</p>

<dt><a name='where'></a><a name="where_=&#62;_[_before_=&#62;_$group_]"
><code>where</code> =&#62; [ <code>before</code> =&#62; <i>$group</i> ]</a></dt>

<dd>
<p>Put the group immediately before <i>$group</i>.</p>

<p>If <i>$group</i> does not exist, put the group last.</p>

<dt><a name='where'></a><a name="where_=&#62;_[_after_=&#62;_$group_]"
><code>where</code> =&#62; [ <code>after</code> =&#62; <i>$group</i> ]</a></dt>

<dd>
<p>Put the group immediately after <i>$group</i>.</p>

<p>If <i>$group</i> does not exist, put the group last.</p>

<dt><a name='where'></a><a name="where_=&#62;_[_number_=&#62;_$n_]"
><code>where</code> =&#62; [ <code>number</code> =&#62; <i>$n</i> ]</a></dt>

<dd>
<p>Put the group at position <i>$n</i> in the group list. Indices are zero-based. Negative indices count backwards from the end of the list.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="METHODS"
>METHODS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<dl>
<dt><a name='newsrc'></a><a name="$newsrc_=_new_News::Newsrc"
><i>$newsrc</i> = <code>new</code> <code>News::Newsrc</code></a></dt>

<dd>
<dt><a name='newsrc'></a><a name="$newsrc_=_new_News::Newsrc_$file,_%options"
><i>$newsrc</i> = <code>new</code> <code>News::Newsrc</code> <i>$file</i>, <i>%options</i></a></dt>

<dd>
<p>Creates and returns a <code>News::Newsrc</code> object.</p>

<p>If <i>$file</i> is specified, <code>new</code> loads the newsgroups in <i>$file</i> into the object. Subsequent calls to <code>save</code> will write to <i>$file</i>.</p>

<p>If <i>$file</i> exists and the load fails, <code>new</code> <code>die</code>s.</p>

<p>If <i>$file</i> doesn&#39;t exist and the <code>create =&#62; 1</code> option is supplied in <i>%options</i>, then <code>new</code> doesn&#39;t load any newsgroups.</p>

<p>If <i>$file</i> doesn&#39;t exist and the <code>create =&#62; 1</code> option is not supplied in <i>%options</i>, then <code>new</code> dies.</p>

<dt><a name='ok'></a><a name="$ok_=_$newsrc-&#62;load"
><i>$ok</i> = <i>$newsrc</i>-&#62;<code>load</code></a></dt>

<dd>
<dt><a name='ok'></a><a name="$ok_=_$newsrc-&#62;load($file)"
><i>$ok</i> = <i>$newsrc</i>-&#62;<code>load</code>(<i>$file</i>)</a></dt>

<dd>
<p>Loads the newsgroups in <i>$file</i> into <i>$newsrc</i>. If <i>$file</i> is omitted, reads <em>$ENV{HOME}/.newsrc</em>. Any existing data in <i>$newsrc</i> is discarded. Returns true on success.</p>

<p>If <i>$file</i> can&#39;t be opened, <code>load</code> discards existing data from <i>$newsrc</i> and returns null.</p>

<p>If <i>$file</i> contains invalid lines, <code>load</code> will <code>die</code>. When this happens, the state of <i>$newsrc</i> is undefined.</p>

<dt><a name='newsrc'></a><a name="$newsrc-&#62;import_rc(@lines)"
><i>$newsrc</i>-&#62;<code>import_rc</code>(<i>@lines</i>)</a></dt>

<dd>
<dt><a name='newsrc'></a><a name="$newsrc-&#62;import_rc([@lines])"
><i>$newsrc</i>-&#62;<code>import_rc</code>([<i>@lines</i>])</a></dt>

<dd>
<p>Imports the newsgroups in <i>@lines</i> into <i>$newsrc</i>. Any existing data in <i>$newsrc</i> is discarded.</p>

<p>Each line in <i>@lines</i> describes a single newsgroup, and must have the format described in <a href="#NEWSRC_FILES" class="podlinkpod"
>&#34;NEWSRC FILES&#34;</a>. If <i>@lines</i> contains invalid lines, <code>import_rc</code> will <code>die</code>. When this happens, the state of <i>$newsrc</i> is undefined.</p>

<p><code>import_rc</code> accepts either an array or an array reference.</p>

<dt><a name='newsrc'></a><a name="$newsrc-&#62;save"
><i>$newsrc</i>-&#62;<code>save</code></a></dt>

<dd>
<p>Writes the contents of <i>$newsrc</i> back to the file from which it was <code>load</code>ed. If <code>load</code> has not been called, writes to <em>$ENV{HOME}/.newsrc</em>. In either case, if the destination <i>file</i> exists, it is renamed to <i>file</i><code>.bak</code>.</p>

<p><code>save</code> will <code>die</code> if there is an error writing the file.</p>

<dt><a name='newsrc'></a><a name="$newsrc-&#62;save_as($file)"
><i>$newsrc</i>-&#62;<code>save_as</code>(<i>$file</i>)</a></dt>

<dd>
<p>Writes the contents of <i>$newsrc</i> to <i>$file</i>. If <i>$file</i> exists, it is renamed to <i>$file</i><code>.bak</code>. Subsequent calls to <code>save</code> will write to <i>$file</i>.</p>

<p><code>save_as</code> will <code>die</code> if there is an error writing the file.</p>

<dt><a name='lines'></a><a name="@lines_=_$newsrc-&#62;export_rc"
><i>@lines</i> = <i>$newsrc</i>-&#62;<code>export_rc</code></a></dt>

<dd>
<p>Returns the contents of <i>$newsrc</i> as a list of lines. Each line describes a single newsgroup, and has the format described in <a href="#NEWSRC_FILES" class="podlinkpod"
>&#34;NEWSRC FILES&#34;</a>.</p>

<p>In scalar context, returns an array reference.</p>

<dt><a name='ok'></a><a name="$ok_=_$newsrc-&#62;add_group($group,_%options)"
><i>$ok</i> = <i>$newsrc</i>-&#62;<code>add_group</code>(<i>$group</i>, <i>%options</i>)</a></dt>

<dd>
<p>Adds <i>$group</i> to the list of newsgroups in <i>$newsrc</i>. <i>$group</i> is initially subscribed. The article list for <i>$group</i> is initially empty.</p>

<p>By default, <i>$group</i> is added to the end of the list of newsgroups. Other locations may be specified in <i>%options</i>; see <a href="#NEWSGROUP_ORDER" class="podlinkpod"
>&#34;NEWSGROUP ORDER&#34;</a> for details.</p>

<p>By default, <code>add_group</code> does nothing if <i>$group</i> already exists. If the <code>replace</code> =&#62; <code>1</code> option is provided, then <code>add_group</code> will delete <i>$group</i> if it exists, and then add it.</p>

<p><code>add_group</code> returns true iff <i>$group</i> was added.</p>

<dt><a name='ok'></a><a name="$ok_=_$newsrc-&#62;move_group($group,_%options)"
><i>$ok</i> = <i>$newsrc</i>-&#62;<code>move_group</code>(<i>$group</i>, <i>%options</i>)</a></dt>

<dd>
<p>Changes the position of <i>$group</i> in <i>$newsrc</i> according to <i>%options</i>. See <a href="#NEWSGROUP_ORDER" class="podlinkpod"
>&#34;NEWSGROUP ORDER&#34;</a> for details.</p>

<p>If <i>$group</i> does not exist, <code>move_group</code> does nothing and returns false. Otherwise, it returns true.</p>

<dt><a name='ok'></a><a name="$ok_=_$newsrc-&#62;del_group($group)"
><i>$ok</i> = <i>$newsrc</i>-&#62;<code>del_group</code>(<i>$group</i>)</a></dt>

<dd>
<p>If <i>$group</i> exists in <i>$newsrc</i>, <code>del_group</code> removes it and returns true. The article list for <i>$group</i> is lost.</p>

<p>If <i>$group</i> does not exist in <i>$newsrc</i>, <code>del_group</code> does nothing and returns false.</p>

<dt><a name='newsrc'></a><a name="$newsrc-&#62;subscribe($group,_%options)"
><i>$newsrc</i>-&#62;<code>subscribe</code>(<i>$group</i>, <i>%options</i>)</a></dt>

<dd>
<p>Subscribes to <i>$group</i>.</p>

<p><i>$group</i> will be created if it does not exist. Its location may be specified in <i>%options</i>; see <a href="#NEWSGROUP_ORDER" class="podlinkpod"
>&#34;NEWSGROUP ORDER&#34;</a> for details.</p>

<dt><a name='newsrc'></a><a name="$newsrc-&#62;unsubscribe($group,_%options)"
><i>$newsrc</i>-&#62;<code>unsubscribe</code>(<i>$group</i>, <i>%options</i>)</a></dt>

<dd>
<p>Unsubscribes from <i>$group</i>.</p>

<p><i>$group</i> will be created if it does not exist. Its location may be specified in <i>%options</i>; see <a href="#NEWSGROUP_ORDER" class="podlinkpod"
>&#34;NEWSGROUP ORDER&#34;</a> for details.</p>

<dt><a name='newsrc'></a><a name="$newsrc-&#62;mark($group,_$article,_%options)"
><i>$newsrc</i>-&#62;<code>mark</code>(<i>$group</i>, <i>$article</i>, <i>%options</i>)</a></dt>

<dd>
<p>Adds <i>$article</i> to the article list for <i>$group</i>.</p>

<p><i>$group</i> will be created if it does not exist. Its location may be specified in <i>%options</i>; see <a href="#NEWSGROUP_ORDER" class="podlinkpod"
>&#34;NEWSGROUP ORDER&#34;</a> for details.</p>

<dt><a name='newsrc'></a><a name="$newsrc-&#62;mark_list($group,_\@articles,_%options)"
><i>$newsrc</i>-&#62;<code>mark_list</code>(<i>$group</i>, <i>\@articles</i>, <i>%options</i>)</a></dt>

<dd>
<p>Adds <i>@articles</i> to the article list for <i>$group</i>.</p>

<p><i>$group</i> will be created if it does not exist. Its location may be specified in <i>%options</i>; see <a href="#NEWSGROUP_ORDER" class="podlinkpod"
>&#34;NEWSGROUP ORDER&#34;</a> for details.</p>

<dt><a name='newsrc'></a><a name="$newsrc-&#62;mark_range($group,_$from,_$to,_%options)"
><i>$newsrc</i>-&#62;<code>mark_range</code>(<i>$group</i>, <i>$from</i>, <i>$to</i>, <i>%options</i>)</a></dt>

<dd>
<p>Adds all the articles from <i>$from</i> to <i>$to</i>, inclusive, to the article list for <i>$group</i>.</p>

<p><i>$group</i> will be created if it does not exist. Its location may be specified in <i>%options</i>; see <a href="#NEWSGROUP_ORDER" class="podlinkpod"
>&#34;NEWSGROUP ORDER&#34;</a> for details.</p>

<dt><a name='newsrc'></a><a name="$newsrc-&#62;unmark($group,_$article,_%options)"
><i>$newsrc</i>-&#62;<code>unmark</code>(<i>$group</i>, <i>$article</i>, <i>%options</i>)</a></dt>

<dd>
<p>Removes <i>$article</i> from the article list for <i>$group</i>.</p>

<p><i>$group</i> will be created if it does not exist. Its location may be specified in <i>%options</i>; see <a href="#NEWSGROUP_ORDER" class="podlinkpod"
>&#34;NEWSGROUP ORDER&#34;</a> for details.</p>

<dt><a name='newsrc'></a><a name="$newsrc-&#62;unmark_list($group,_\@articles,_%options)"
><i>$newsrc</i>-&#62;<code>unmark_list</code>(<i>$group</i>, <i>\@articles</i>, <i>%options</i>)</a></dt>

<dd>
<p>Removes <i>@articles</i> from the article list for <i>$group</i>.</p>

<p><i>$group</i> will be created if it does not exist. Its location may be specified in <i>%options</i>; see <a href="#NEWSGROUP_ORDER" class="podlinkpod"
>&#34;NEWSGROUP ORDER&#34;</a> for details.</p>

<dt><a name='newsrc'></a><a name="$newsrc-&#62;unmark_range($group,_$from,_$to,_%options)"
><i>$newsrc</i>-&#62;<code>unmark_range</code>(<i>$group</i>, <i>$from</i>, <i>$to</i>, <i>%options</i>)</a></dt>

<dd>
<p>Removes all the articles from <i>$from</i> to <i>$to</i>, inclusive, from the article list for <i>$group</i>.</p>

<p><i>$group</i> will be created if it does not exist. Its location may be specified in <i>%options</i>; see <a href="#NEWSGROUP_ORDER" class="podlinkpod"
>&#34;NEWSGROUP ORDER&#34;</a> for details.</p>

<dt><a name='newsrc'></a><a name="$newsrc-&#62;exists($group)"
><i>$newsrc</i>-&#62;<code>exists</code>(<i>$group</i>)</a></dt>

<dd>
<p>Returns true iff <i>$group</i> exists in <i>$newsrc</i>.</p>

<dt><a name='newsrc'></a><a name="$newsrc-&#62;subscribed($group)"
><i>$newsrc</i>-&#62;<code>subscribed</code>(<i>$group</i>)</a></dt>

<dd>
<p>Returns true iff <i>$group</i> exists and is subscribed.</p>

<dt><a name='newsrc'></a><a name="$newsrc-&#62;marked($group,_$article)"
><i>$newsrc</i>-&#62;<code>marked</code>(<i>$group</i>, <i>$article</i>)</a></dt>

<dd>
<p>Returns true iff <i>$group</i> exists and its article list contains <i>$article</i>.</p>

<dt><a name='n'></a><a name="$n_=_$newsrc-&#62;num_groups"
><i>$n</i> = <i>$newsrc</i>-&#62;<code>num_groups</code></a></dt>

<dd>
<p>Returns the number of groups in <i>$newsrc</i>.</p>

<dt><a name='groups'></a><a name="@groups_=_$newsrc-&#62;groups"
><i>@groups</i> = <i>$newsrc</i>-&#62;<code>groups</code></a></dt>

<dd>
<p>Returns the list of groups in <i>$newsrc</i>, in newsrc order. In scalar context, returns an array reference.</p>

<dt><a name='groups'></a><a name="@groups_=_$newsrc-&#62;sub_groups"
><i>@groups</i> = <i>$newsrc</i>-&#62;<code>sub_groups</code></a></dt>

<dd>
<p>Returns the list of subscribed groups in <i>$newsrc</i>, in newsrc order. In scalar context, returns an array reference.</p>

<dt><a name='groups'></a><a name="@groups_=_$newsrc-&#62;unsub_groups"
><i>@groups</i> = <i>$newsrc</i>-&#62;<code>unsub_groups</code></a></dt>

<dd>
<p>Returns the list of unsubscribed groups in <i>$newsrc</i>, in newsrc order. In scalar context, returns an array reference.</p>

<dt><a name='articles'></a><a name="@articles_=_$newsrc-&#62;marked_articles($group)"
><i>@articles</i> = <i>$newsrc</i>-&#62;<code>marked_articles</code>(<i>$group</i>)</a></dt>

<dd>
<p>Returns the list of articles in the article list for <i>$group</i>. In scalar context, returns an array reference.</p>

<p><i>$group</i> will be created if it does not exist. Its location may be specified in <i>%options</i>; see <a href="#NEWSGROUP_ORDER" class="podlinkpod"
>&#34;NEWSGROUP ORDER&#34;</a> for details.</p>

<dt><a name='articles'></a><a name="@articles_=_$newsrc-&#62;unmarked_articles($group,_$from,_$to,_%options)"
><i>@articles</i> = <i>$newsrc</i>-&#62;<code>unmarked_articles</code>(<i>$group</i>, <i>$from</i>, <i>$to</i>, <i>%options</i>)</a></dt>

<dd>
<p>Returns the list of articles from <i>$from</i> to <i>$to</i>, inclusive, that do <b>not</b> appear in the article list for <i>$group</i>. In scalar context, returns an array reference.</p>

<p><i>$group</i> will be created if it does not exist. Its location may be specified in <i>%options</i>; see <a href="#NEWSGROUP_ORDER" class="podlinkpod"
>&#34;NEWSGROUP ORDER&#34;</a> for details.</p>

<dt><a name='articles'></a><a name="$articles_=_$newsrc-&#62;get_articles($group,_%options)"
><i>$articles</i> = <i>$newsrc</i>-&#62;<code>get_articles</code>(<i>$group</i>, <i>%options</i>)</a></dt>

<dd>
<p>Returns the article list for <i>$group</i> as a string, in the format described in <a href="#NEWSRC_FILES" class="podlinkpod"
>&#34;NEWSRC FILES&#34;</a>.</p>

<p><i>$group</i> will be created if it does not exist. Its location may be specified in <i>%options</i>; see <a href="#NEWSGROUP_ORDER" class="podlinkpod"
>&#34;NEWSGROUP ORDER&#34;</a> for details.</p>

<p>If you plan to do any nontrivial processing on the article list, consider converting it to a <code>Set::IntSpan</code> object:</p>

<pre class="sh_perl">  $articles = Set::IntSpan-&#62;new($newsrc-&#62;get_articles(&#39;alt.foo&#39;))</pre>

<dt><a name='ok'></a><a name="$ok_=_$newsrc-&#62;set_articles($group,_$articles,_%options)"
><i>$ok</i> = <i>$newsrc</i>-&#62;<code>set_articles</code>(<i>$group</i>, <i>$articles</i>, <i>%options</i>)</a></dt>

<dd>
<p>Sets the article list for $group. Any existing article list is lost.</p>

<p><i>$articles</i> is a string, as described in <a href="#NEWSRC_FILES" class="podlinkpod"
>&#34;NEWSRC FILES&#34;</a>.</p>

<p><i>$group</i> will be created if it does not exist. Its location may be specified in <i>%options</i>; see <a href="#NEWSGROUP_ORDER" class="podlinkpod"
>&#34;NEWSGROUP ORDER&#34;</a> for details.</p>

<p>If <i>$articles</i> does not have the format described in <a href="#NEWSRC_FILES" class="podlinkpod"
>&#34;NEWSRC FILES&#34;</a>, <code>set_articles</code> does nothing and returns false. Otherwise, it returns true.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DIAGNOSTICS"
>DIAGNOSTICS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<dl>
<dt><a name='Bad'></a><a name="Bad_newsrc_line"
>Bad newsrc line</a></dt>

<dd>
<p>A line in the newsrc file does not have the format described in <a href="#NEWSRC_FILES" class="podlinkpod"
>&#34;NEWSRC FILES&#34;</a>.</p>

<dt><a name='Bad'></a><a name="Bad_article_list"
>Bad article list</a></dt>

<dd>
<p>The article list for a newsgroup does not have the format described in <a href="#NEWSRC_FILES" class="podlinkpod"
>&#34;NEWSRC FILES&#34;</a>.</p>

<dt><a name='News'></a><a name="News::Newsrc::save_as:_Can&#39;t_rename_$file,_$file.bak:_$!"
>News::Newsrc::save_as: Can&#39;t rename $file, $file.bak: $!</a></dt>

<dd>
<dt><a name='News'></a><a name="News::Newsrc::save_as:_Can&#39;t_open_$file:_$!"
>News::Newsrc::save_as: Can&#39;t open $file: $!</a></dt>

<dd>
<dt><a name='News'></a><a name="News::Newsrc::format:_Can&#39;t_write_$file:_$!"
>News::Newsrc::format: Can&#39;t write $file: $!</a></dt>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NOTES"
>NOTES <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Error_Handling"
>Error Handling</a></h2>

<p>&#34;Don&#39;t test for errors that you can&#39;t handle.&#34;</p>

<p><code>load</code> returns null if it can&#39;t open the newsrc file, and dies if the newsrc file contains invalid data. This isn&#39;t as schizophrenic as it seems.</p>

<p>There are several ways a program could handle an open failure on the newsrc file. It could prompt the user to reenter the file name. It could assume that the user doesn&#39;t have a newsrc file yet. If it doesn&#39;t want to handle the error, it could go ahead and die.</p>

<p>On the other hand, it is very difficult for a program to do anything sensible if the newsrc file opens successfully and then turns out to contain invalid data. Was there a disk error? Is the file corrupt? Did the user accidentally specify his kill file instead of his newsrc file? And what are you going to do about it?</p>

<p>Rather than try to handle an error like this, it&#39;s probably better to die and let the user sort things out. By the same rational, <code>save</code> and <code>save_as</code> die on failure.</p>

<p>Programs that must retain control can use eval{...} to protect calls that may die. For example, Perl/Tk runs all callbacks inside an eval{...}. If a callback dies, Perl/Tk regains control and displays $@ in a dialog box. The user can then decide whether to continue or quit from the program.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="import_rc/export_rc"
><code>import_rc</code>/<code>export_rc</code></a></h2>

<p>I was going to call these methods <code>import</code> and <code>export</code>, but <code>import</code> turns out not to be a good name for a method, because <code>use</code> also calls <code>import</code>, and expects different semantics.</p>

<p>I added the <code>_rc</code> suffix to <code>import</code> to avoid this conflict. It&#39;s reasonably short and somewhat mnemonic (the module manages news<i>rc</i> files). I added the same suffix to <code>export</code> for symmetry.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="ACKNOWLEDGMENTS"
>ACKNOWLEDGMENTS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<ul>
<li>Neil Bowers &#60;neilb@cre.canon.co.uk&#62;</li>

<li>Matthew Darwin &#60;matthew@davin.ottawa.on.ca&#62;</li>

<li>Philip Hallstrom &#60;philip.hallstrom@cendantsoft.com&#62;</li>

<li>M. Hedlund &#60;hedlund@best.com&#62;</li>

<li>Bruce J. Keeler &#60;bruce@gridpoint.com&#62;</li>

<li>Chris Leach &#60;Chris.Leach@epa.ericsson.se&#62;</li>

<li>Abhijit Menon-Sen &#60;ams@wiw.org&#62;</li>

<li>J.B. Nicholson-Owens &#60;jbn@pop-a-wheelie.midwest.net&#62;</li>

<li>Lars Balker Rasmussen &#60;gnort@daimi.aau.dk&#62;</li>

<li>Mike Stok &#60;mike@stok.co.uk&#62;</li>

<li>Bennett Todd &#60;bet@onyx.interactive.net&#62;</li>

<li>Larry W. Virden &#60;lvirden@cas.org&#62;</li>

<li>Chris Szurgot &#60;szurgot@itribe.net&#62;</li>
</ul>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHOR"
>AUTHOR <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Steven McDougall, swmcd@world.std.com</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SEE_ALSO"
>SEE ALSO <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>perl(1), <a href="/perldoc?Set%3A%3AIntSpan" class="podlinkpod"
>Set::IntSpan</a></p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="COPYRIGHT"
>COPYRIGHT <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Copyright 1996-2007 by Steven McDougall. This module is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78283 Uploads, 24725 Distributions
106015 Modules, 9649 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Sat Apr 28 07:57:47 2012 GMT (0.294944047927856) @cpansearch1 -->
 </body>
</html>
