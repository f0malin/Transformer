<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>AutoRole - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","AutoRole",3]);
    _gaq.push(["_setCustomVar",5,"Release","AutoRole-0.04",3]);
    _gaq.push(["_setCustomVar",3,"Module","AutoRole",3]);
    _gaq.push(["_setCustomVar",1,"Author","RHANDOM",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?AutoRole">permalink</a></div>
  <a href="/~rhandom/">Paul Seamons</a> &gt;
  <a href="/~rhandom/AutoRole-0.04/">AutoRole-0.04</a> &gt;
  AutoRole
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/155a7fc84d55b819ca4a55f6423fcad9?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/R/RH/RHANDOM/AutoRole-0.04.tar.gz">AutoRole-0.04.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=AutoRole;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~RHANDOM/AutoRole-0.04/lib/AutoRole.pm">Annotate this POD
</a></p>

<div style="float:right">
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=AutoRole">View/Report Bugs</a><br/>

</div>
</div>
  Module Version:  0.04 &nbsp;
<span class="noprint">
  <a href="/src/RHANDOM/AutoRole-0.04/lib/AutoRole.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <li class='indexItem indexItem1'><a href='#PARAMETERS'>PARAMETERS</a>
  <li class='indexItem indexItem1'><a href='#DIAGNOTICS'>DIAGNOTICS</a>
  <li class='indexItem indexItem1'><a href='#AUTHOR'>AUTHOR</a>
  <li class='indexItem indexItem1'><a href='#LICENSE'>LICENSE</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>AutoRole - Compiletime OR runtime mixin of traits/roles/mixins/your-word-here.</p>

<p>$Id: AutoRole.pm,v 1.8 2011-10-06 16:55:06 paul Exp $</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">  use AutoRole Bam =&#62; [qw(bar baz bim)];

  use AutoRole
    class   =&#62; &#39;Bam&#39;,
    how     =&#62; &#39;autorequire&#39;,
    methods =&#62; [qw(bar baz bim)];

  use AutoRole
    class   =&#62; &#39;Bam&#39;,
    how     =&#62; &#39;compile&#39;,
    methods =&#62; {
       bar =&#62; 1,
       baz =&#62; 1,
       bim =&#62; &#39;bim_by_some_other_name&#39;,
    };

  use AutoRole
    class   =&#62; &#39;Bam&#39;,
    how     =&#62; $ENV{&#39;MOD_PERL&#39;} &#38;&#38; &#39;compile&#39;, # will default to autorequire if not mod_perl
    method  =&#62; &#39;flimflam&#39;,

  use AutoRole
    class   =&#62; &#39;Bam&#39;,
    how     =&#62; &#39;autoload&#39;, # better if you are using many many mixin methods
    methods =&#62; [qw(bar baz bim biz boon bong brim)];

  use AutoRole Bam =&#62; [qw(bar baz bim)];
  use AutoRole Bam =&#62; autorequire =&#62; [qw(bar baz bim)]; # same thing
  use AutoRole Bam =&#62; compile     =&#62; [qw(bar baz bim)];

  use AutoRole Bam =&#62; methods =&#62; &#39;*&#39;;      # load ALL methods from Bam - at compile time
  use AutoRole Bam =&#62; &#39;*&#39;;                 # same thing
  use AutoRole &#39;Bam&#39;;                      # same thing
  use AutoRole Bam =&#62; {&#39;*&#39; =&#62; qr{^bam_}};  # load All methods from Bam that begin with bam_
  use AutoRole Bam =&#62; qr{^bam_};           # same thing

  use AutoRole Bam =&#62; qr{^(?!bam_)};       # load ALL methods not beginning with bam_</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>AutoRole is similar to many of the CPAN variants that handle things refered to as Traits, Roles, and Mixins. All of these are fairly similar to each other (in Perl land) though there are subtle nuances. If you use the type <code>how</code> of compile - there is little difference in using AutoRole vs. the CPAN counterparts.</p>

<p>If you use autorequire or autoload however, you save loading the modules until it is necessary to do so. This allows for the creation of &#34;heavy&#34; interfaces with very light frontends. AutoRole allows for only loading extra modules if that role&#39;s interface is used.</p>

<p>One more win with roles/mixins/traits is that you can keep your inheritance tree sane (rather than inheriting from a role class).</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="PARAMETERS"
>PARAMETERS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>In many cases the class, how, and method keywords are not needed and the intent can be determined based on the types of parameters. However, you can always pass the parameter names to be specific.</p>

<dl>
<dt><a name="class"
><code>class</code></a></dt>

<dd>
<p>This represents the class you would like to load the roles from.</p>

<dt><a name="how"
><code>how</code></a></dt>

<dd>
<p>Can be one of compile, autorequire, or autoload. Default is autorequire if methods are passed, default is compile if no methods are passed or if &#39;*&#39; or qr{} are used for methods.</p>

<p>Option <code>compile</code> will load the module and mix the specified subs/methods in as needed at compile time.</p>

<p>Option <code>autorequire</code> does not load the module at compile time, instead it loads a stub subroutine that will require the module, re-install the real subroutine in place of the stub, and then goto that subroutine (to keep the call stack like it should be).</p>

<p>Option <code>autoload</code> tries to do as little work as possible by only installing an AUTOLOAD subroutine that will load the role methods when called. This is a good option over autorequire if you have a large number of role methods (it gives more of a runtime hit rather than a compiletime hit).</p>

<dt><a name='methods'></a><a name="methods_or_method"
><code>methods</code> or <code>method</code></a></dt>

<dd>
<p>Takes an arrayref or hashref of names or a single method name to load. If a hashref is passed, the value may be a different name to alias it to, or an arrayref of names to alias to.</p>

<pre class="sh_perl">    method =&#62; &#39;foo&#39;

    methods =&#62; &#39;foo&#39;

    methods =&#62; [&#39;foo&#39;],

    methods =&#62; {foo =&#62; 1},

    methods =&#62; {foo =&#62; &#39;foo&#39;}

    methods =&#62; {foo =&#62; &#39;bar&#39;}           # installs a method called bar rather than foo
    methods =&#62; {foo =&#62; [&#39;bar&#39;, &#39;baz&#39;]}  # installs both bar and baz as rather than foo</pre>

<p>You can use the special method name of <code>*</code> to load all of the methods from the sub. The downside to this is it will automatically change to compile time behavior (because it needs to lookup the list of available methods).</p>

<pre class="sh_perl">    method =&#62; &#39;*&#39;

    method =&#62; {&#39;*&#39; =&#62; 1},</pre>

<p>If the methods are specified with a hashref, the value of a <code>*</code> entry may be a regex that will be used to match method names. Note however that this retrieval is only one class deep - so if your role inherits from a base role you will need to load it separately.</p>

<pre class="sh_perl">    method =&#62; {&#39;*&#39; =&#62; qr{^debug}} # loads all methods beginning with debug

    methods =&#62; {foo =&#62; 1,
                &#39;*&#39; =&#62; qr{^bar},  # loads foo and any other method beginning with bar
               }</pre>

<p>If you use <code>*</code> and other aliases at the same time, the other aliases win.</p>

<p>Since it is a common thing to do - you may also pass simply a qr{} and it will work like {&#39;*&#39; =&#62; qr{}}.</p>

<pre class="sh_perl">    methods =&#62; qr{^debug}     # load all methods beginning with debug

    methods =&#62; qr{^(?!debug)} # load all methods not beginning with debug</pre>

<p>If the how option is <code>compile</code> and no method or methods are passed, it will default to &#39;*&#39;. However if no methods are passed on autorequire or autoload, it will die.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DIAGNOTICS"
>DIAGNOTICS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<dl>
<dt><a name='Missing'></a><a name="Missing_class_name"
><code>Missing class name</code></a></dt>

<dd>
<p>Occurs when the <code>class</code> paramter name is used but no class name follows.</p>

<dt><a name='Missing'></a><a name="Missing_how_type"
><code>Missing how type</code></a></dt>

<dd>
<p>Occurs when the <code>how</code> type is used but no type follows.</p>

<dt><a name='How'></a><a name="How_type_$how_is_invalid"
><code>How type $how is invalid</code></a></dt>

<dd>
<p>Type can only be compile or autorequire.</p>

<dt><a name='Method'></a><a name="Method_name_conflict_-_${pkg}::$dest_already_exists"
><code>Method name conflict - ${pkg}::$dest already exists</code></a></dt>

<dd>
<p>Occurs if you try and use a method name from a role that is already defined as a method in your class. You can work around this by using the alias feature of the <code>method</code> parameter.</p>

<dt><a name='Missing'></a><a name="Missing_list_of_methods_to_load"
><code>Missing list of methods to load</code></a></dt>

<dd>
<p>Occurs if you fail to pass a list of methods during autorequire or autoload. Note that if you don&#39;t pass a list under how type <code>compile</code> it will default to &#39;*&#39;.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHOR"
>AUTHOR <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Paul Seamons</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="LICENSE"
>LICENSE <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This module may be distributed under the same terms as Perl itself.</p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78234 Uploads, 24724 Distributions
106030 Modules, 9649 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Fri Apr 27 00:35:37 2012 GMT (0.22023606300354) @cpansearch1 -->
 </body>
</html>
