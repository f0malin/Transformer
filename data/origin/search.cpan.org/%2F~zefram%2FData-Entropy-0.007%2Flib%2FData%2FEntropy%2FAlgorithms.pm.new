<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>Data::Entropy::Algorithms - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","Data-Entropy",3]);
    _gaq.push(["_setCustomVar",5,"Release","Data-Entropy-0.007",3]);
    _gaq.push(["_setCustomVar",3,"Module","Data::Entropy::Algorithms",3]);
    _gaq.push(["_setCustomVar",1,"Author","ZEFRAM",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?Data::Entropy::Algorithms">permalink</a></div>
  <a href="/~zefram/">Andrew Main (Zefram)</a> &gt;
  <a href="/~zefram/Data-Entropy-0.007/">Data-Entropy-0.007</a> &gt;
  Data::Entropy::Algorithms
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/aab343bc3a4424dcb7f913920242f051?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/Z/ZE/ZEFRAM/Data-Entropy-0.007.tar.gz">Data-Entropy-0.007.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=Data%3A%3AEntropy%3A%3AAlgorithms;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~ZEFRAM/Data-Entropy-0.007/lib/Data/Entropy/Algorithms.pm">Annotate this POD
</a></p>

<div style="float:right">
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=Data-Entropy">View/Report Bugs</a><br/>

</div>
</div>
  Module Version:  0.007 &nbsp;
<span class="noprint">
  <a href="/src/ZEFRAM/Data-Entropy-0.007/lib/Data/Entropy/Algorithms.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <li class='indexItem indexItem1'><a href='#FUNCTIONS'>FUNCTIONS</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#Fundamental_entropy_extraction'>Fundamental entropy extraction</a>
    <li class='indexItem indexItem2'><a href='#Numbers'>Numbers</a>
    <li class='indexItem indexItem2'><a href='#Combinatorics'>Combinatorics</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#SEE_ALSO'>SEE ALSO</a>
  <li class='indexItem indexItem1'><a href='#AUTHOR'>AUTHOR</a>
  <li class='indexItem indexItem1'><a href='#COPYRIGHT'>COPYRIGHT</a>
  <li class='indexItem indexItem1'><a href='#LICENSE'>LICENSE</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Data::Entropy::Algorithms - basic entropy-using algorithms</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">        use Data::Entropy::Algorithms
                qw(rand_bits rand_int rand_prob);

        $str = rand_bits(17);
        $i = rand_int(12345);
        $i = rand_int(Math::BigInt-&#62;new(&#34;1000000000000&#34;));
        $j = rand_prob(1, 2, 3);
        $j = rand_prob([ 1, 2, 3 ]);

        use Data::Entropy::Algorithms qw(rand_fix rand rand_flt);

        $x = rand_fix(48);
        $x = rand(7);
        $x = rand_flt(0.0, 7.0);

        use Data::Entropy::Algorithms
                qw(pick pick_r choose choose_r shuffle shuffle_r);

        $item = pick($item0, $item1, $item2);
        $item = pick_r(\@items);
        @chosen = choose(3, $item0, $item1, $item2, $item3, $item4);
        $chosen = choose_r(3, \@items);
        @shuffled = shuffle($item0, $item1, $item2, $item3, $item4);
        $shuffled = shuffle_r(\@items);</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This module contains a collection of fundamental algorithms that use entropy. They all use the entropy source mechanism described in <a href="/~zefram/Data-Entropy-0.007/lib/Data/Entropy.pm" class="podlinkpod"
>Data::Entropy</a>.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="FUNCTIONS"
>FUNCTIONS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>All of these functions use entropy. The entropy source is not an explicit input in any case. All functions use the current entropy source maintained by the <code>Data::Entropy</code> module. To select an entropy source use the <code>with_entropy_source</code> function in that module, or alternatively do nothing to use the default source.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Fundamental_entropy_extraction"
>Fundamental entropy extraction</a></h2>

<dl>
<dt><a name='rand_bits'></a><a name="rand_bits(NBITS)"
>rand_bits(NBITS)</a></dt>

<dd>
<p>Returns NBITS bits of entropy, as a string of octets. If NBITS is not a multiple of eight then the last octet in the string has its most significant bits set to zero.</p>

<dt><a name='rand_int'></a><a name="rand_int(LIMIT)"
>rand_int(LIMIT)</a></dt>

<dd>
<p>LIMIT must be a positive integer. Returns a uniformly-distributed random integer in the range [0, LIMIT). LIMIT may be either a native integer, a <code>Math::BigInt</code> object, or an integer-valued <code>Math::BigRat</code> object; the returned number is of the same type.</p>

<dt><a name='rand_prob'></a><a name="rand_prob(PROB_...)"
>rand_prob(PROB ...)</a></dt>

<dd>
<dt><a name='rand_prob'></a><a name="rand_prob(PROBS)"
>rand_prob(PROBS)</a></dt>

<dd>
<p>Returns a random integer selected with non-uniform probability. The relative probabilities are supplied as a list of non-negative integers (multiple PROB arguments) or a reference to an array of integers (the PROBS argument). The relative probabilities may be native integers, <code>Math::BigInt</code> objects, or integer-valued <code>Math::BigRat</code> objects; they must all be of the same type. At least one probability value must be positive.</p>

<p>The first relative probability value (the first PROB or the first element of PROBS) is the relative probability of returning 0. The absolute probability of returning 0 is this value divided by the total of all the relative probability values. Similarly the second value controls the probability of returning 1, and so on.</p>
</dd>
</dl>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Numbers"
>Numbers</a></h2>

<dl>
<dt><a name='rand_fix'></a><a name="rand_fix(NBITS)"
>rand_fix(NBITS)</a></dt>

<dd>
<p>Returns a uniformly-distributed random NBITS-bit fixed-point fraction in the range [0, 1). That is, the result is a randomly-chosen multiple of 2^-NBITS, the multiplier being a random integer in the range [0, 2^NBITS). The value is returned in the form of a native floating point number, so NBITS can be at most one greater than the number of bits of significand in the floating point format.</p>

<p>With NBITS = 48 the range of output values is the same as that of the Unix <code>drand48</code> function.</p>

<dt><a name='rand'></a><a name="rand([LIMIT])"
>rand([LIMIT])</a></dt>

<dd>
<p>Generates a random fixed-point fraction by <code>rand_fix</code> and then multiplies it by LIMIT, returning the result. LIMIT defaults to 1, and if it is 0 then that is also treated as 1. The length of the fixed-point fraction is 48 bits, unless that can&#39;t be represented in the native floating point type, in which case the longest possible fraction will be generated instead.</p>

<p>This is a drop-in replacement for <code>CORE::rand</code>: it produces exactly the same range of output values, but using the current entropy source instead of a sucky PRNG with linear relationships between successive outputs. (<code>CORE::rand</code> does the type of calculation described, but using the PRNG <code>drand48</code> to generate the fixed-point fraction.) The details of behaviour may change in the future if the behaviour of <code>CORE::rand</code> changes, to maintain the match.</p>

<p>Where the source of a module can&#39;t be readily modified, it can be made to use this <code>rand</code> by an incantation such as</p>

<pre class="sh_perl">        *Foreign::Module::rand = \&#38;Data::Entropy::Algorithms::rand;</pre>

<p>This must be done before the module is loaded, most likely in a <code>BEGIN</code> block. It is also possible to override <code>CORE::rand</code> for all modules, by performing this similarly early:</p>

<pre class="sh_perl">        *CORE::GLOBAL::rand = \&#38;Data::Entropy::Algorithms::rand;</pre>

<p>This function should not be used in any new code, because the kind of output supplied by <code>rand</code> is hardly ever the right thing to use. The <code>int(rand($n))</code> idiom to generate a random integer has non-uniform probabilities of generating each possible value, except when <code>$n</code> is a power of two. For floating point numbers, <code>rand</code> can&#39;t generate most representable numbers in its output range, and the output is biased towards zero. In new code use <code>rand_int</code> to generate integers and <code>rand_flt</code> to generate floating point numbers.</p>

<dt><a name='rand_flt'></a><a name="rand_flt(MIN,_MAX)"
>rand_flt(MIN, MAX)</a></dt>

<dd>
<p>Selects a uniformly-distributed real number (with infinite precision) in the range [MIN, MAX] and then rounds this number to the nearest representable floating point value, which it returns. (Actually it is only <i>as if</i> the function worked this way: in fact it never generates the number with infinite precision. It selects between the representable floating point values with the probabilities implied by this process.)</p>

<p>This can return absolutely any floating point value in the range [MIN, MAX]; both MIN and MAX themselves are possible return values. All bits of the floating point type are filled randomly, so the range of values that can be returned depends on the details of the floating point format. (See <a href="/perldoc?Data%3A%3AFloat" class="podlinkpod"
>Data::Float</a> for low-level floating point utilities.)</p>

<p>The function <code>die</code>s if MIN and MAX are not both finite. If MIN is greater than MAX then their roles are swapped: the order of the limit parameters actually doesn&#39;t matter. If the limits are identical then that value is always returned. As a special case, if the limits are positive zero and negative zero then a zero will be returned with a randomly-chosen sign.</p>
</dd>
</dl>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Combinatorics"
>Combinatorics</a></h2>

<dl>
<dt><a name='pick'></a><a name="pick(ITEM_...)"
>pick(ITEM ...)</a></dt>

<dd>
<p>Randomly selects and returns one of the ITEMs. Each ITEM has equal probability of being selected.</p>

<dt><a name='pick_r'></a><a name="pick_r(ITEMS)"
>pick_r(ITEMS)</a></dt>

<dd>
<p>ITEMS must be a reference to an array. Randomly selects and returns one of the elements of the array. Each element has equal probability of being selected.</p>

<p>This is the same operation as that performed by <code>pick</code>, but using references to avoid expensive copying of arrays.</p>

<dt><a name='choose'></a><a name="choose(NCHOOSE,_ITEM_...)"
>choose(NCHOOSE, ITEM ...)</a></dt>

<dd>
<p>Randomly selects NCHOOSE of the ITEMs. Each ITEM has equal probability of being selected. The chosen items are returned in a list in the same order in which they appeared in the argument list.</p>

<dt><a name='choose_r'></a><a name="choose_r(NCHOOSE,_ITEMS)"
>choose_r(NCHOOSE, ITEMS)</a></dt>

<dd>
<p>ITEMS must be a reference to an array. Randomly selects NCHOOSE of the elements in the array. Each element has equal probability of being selected. Returns a reference to an array containing the chosen items in the same order in which they appeared in the input array.</p>

<p>This is the same operation as that performed by <code>choose</code>, but using references to avoid expensive copying of arrays.</p>

<dt><a name='shuffle'></a><a name="shuffle(ITEM_...)"
>shuffle(ITEM ...)</a></dt>

<dd>
<p>Reorders the ITEMs randomly, and returns them in a list in random order. Each possible order has equal probability.</p>

<dt><a name='shuffle_r'></a><a name="shuffle_r(ITEMS)"
>shuffle_r(ITEMS)</a></dt>

<dd>
<p>ITEMS must be a reference to an array. Reorders the elements of the array randomly. Each possible order has equal probability. Returns a reference to an array containing the elements in random order.</p>

<p>This is the same operation as that performed by <code>shuffle</code>, but using references to avoid expensive copying of arrays.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SEE_ALSO"
>SEE ALSO <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><a href="/~zefram/Data-Entropy-0.007/lib/Data/Entropy.pm" class="podlinkpod"
>Data::Entropy</a>, <a href="/~zefram/Data-Entropy-0.007/lib/Data/Entropy/Source.pm" class="podlinkpod"
>Data::Entropy::Source</a></p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHOR"
>AUTHOR <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Andrew Main (Zefram) &#60;zefram@fysh.org&#62;</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="COPYRIGHT"
>COPYRIGHT <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Copyright (C) 2006, 2007, 2009, 2011 Andrew Main (Zefram) &#60;zefram@fysh.org&#62;</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="LICENSE"
>LICENSE <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This module is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78184 Uploads, 24708 Distributions
105990 Modules, 9645 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Wed Apr 25 05:43:52 2012 GMT (0.155218124389648) @cpansearch1 -->
 </body>
</html>
