<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>Benchmark::Timer - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","Benchmark-Timer",3]);
    _gaq.push(["_setCustomVar",5,"Release","Benchmark-Timer-0.7102",3]);
    _gaq.push(["_setCustomVar",3,"Module","Benchmark::Timer",3]);
    _gaq.push(["_setCustomVar",1,"Author","DCOPPIT",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?Benchmark::Timer">permalink</a></div>
  <a href="/~dcoppit/">David Coppit</a> &gt;
  <a href="/~dcoppit/Benchmark-Timer-0.7102/">Benchmark-Timer-0.7102</a> &gt;
  Benchmark::Timer
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/302e9cd0e752fbce9adeba52a0cfa0ff?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/D/DC/DCOPPIT/Benchmark-Timer-0.7102.tar.gz">Benchmark-Timer-0.7102.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=Benchmark%3A%3ATimer;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~DCOPPIT/Benchmark-Timer-0.7102/lib/Benchmark/Timer.pm">Annotate this POD
</a></p>
<div class=box style='width:150px; float: right'>
<h1 class=t5>Related Modules</h1>
<div style="margin:2px">
<a href="/perldoc?List%3A%3AUtil">List::Util</a><br>
<a href="/perldoc?Data%3A%3ADumper">Data::Dumper</a><br>
<a href="/perldoc?Time%3A%3AHiRes">Time::HiRes</a><br>
<a href="/perldoc?Tie%3A%3AFile">Tie::File</a><br>
<a href="/perldoc?Bloom%3A%3AFilter">Bloom::Filter</a><br>
<a href="/perldoc?LWP%3A%3AUserAgent">LWP::UserAgent</a><br>
<a href="/perldoc?Inline%3A%3AC">Inline::C</a><br>
<a href="/perldoc?Math%3A%3APari">Math::Pari</a><br>
<a href="/perldoc?Math%3A%3ABigInt">Math::BigInt</a><br>
<a href="/perldoc?HTML%3A%3ATemplate">HTML::Template</a><br>
<small>
<a href="http://perlmonks.org/?node=cpan+module+search&pivot=1&module=Benchmark%3A%3ATimer">more...</a><br>
By <a href="http://perlmonks.org/">perlmonks.org</a></small>
</div>
</div>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>New&nbsp;</td><td style="text-align:right"> 1</td></tr>
<tr><td>Open&nbsp;</td><td style="text-align:right"> 0</td></tr>
</table>
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=Benchmark-Timer">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  0.7102 &nbsp;
<span class="noprint">
  <a href="/src/DCOPPIT/Benchmark-Timer-0.7102/lib/Benchmark/Timer.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <li class='indexItem indexItem1'><a href='#METHODS'>METHODS</a>
  <li class='indexItem indexItem1'><a href='#BUGS'>BUGS</a>
  <li class='indexItem indexItem1'><a href='#LICENSE'>LICENSE</a>
  <li class='indexItem indexItem1'><a href='#AUTHOR'>AUTHOR</a>
  <li class='indexItem indexItem1'><a href='#SEE_ALSO'>SEE ALSO</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Benchmark::Timer - Benchmarking with statistical confidence</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">  # Non-statistical usage
  use Benchmark::Timer;
  $t = Benchmark::Timer-&#62;new(skip =&#62; 1);

  for(1 .. 1000) {
      $t-&#62;start(&#39;tag&#39;);
      &#38;long_running_operation();
      $t-&#62;stop(&#39;tag&#39;);
  }
  print $t-&#62;report;

  # --------------------------------------------------------------------

  # Statistical usage
  use Benchmark::Timer;
  $t = Benchmark::Timer-&#62;new(skip =&#62; 1, confidence =&#62; 97.5, error =&#62; 2);

  while($t-&#62;need_more_samples(&#39;tag&#39;)) {
      $t-&#62;start(&#39;tag&#39;);
      &#38;long_running_operation();
      $t-&#62;stop(&#39;tag&#39;);
  }
  print $t-&#62;report;</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>The Benchmark::Timer class allows you to time portions of code conveniently, as well as benchmark code by allowing timings of repeated trials. It is perfect for when you need more precise information about the running time of portions of your code than the Benchmark module will give you, but don&#39;t want to go all out and profile your code.</p>

<p>The methodology is simple; create a Benchmark::Timer object, and wrap portions of code that you want to benchmark with <code>start()</code> and <code>stop()</code> method calls. You can supply a tag to those methods if you plan to time multiple portions of code. If you provide error and confidence values, you can also use <code>need_more_samples()</code> to determine, statistically, whether you need to collect more data.</p>

<p>After you have run your code, you can obtain information about the running time by calling the <code>results()</code> method, or get a descriptive benchmark report by calling <code>report()</code>. If you run your code over multiple trials, the average time is reported. This is wonderful for benchmarking time-critical portions of code in a rigorous way. You can also optionally choose to skip any number of initial trials to cut down on initial case irregularities.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="METHODS"
>METHODS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>In all of the following methods, <code>$tag</code> refers to the user-supplied name of the code being timed. Unless otherwise specified, $tag defaults to the tag of the last call to <code>start()</code>, or &#34;_default&#34; if <code>start()</code> was not previously called with a tag.</p>

<dl>
<dt><a name='t'></a><a name="$t_=_Benchmark::Timer-&#62;new(_[options]_);"
>$t = Benchmark::Timer-&#62;new( [options] );</a></dt>

<dd>
<p>Constructor for the Benchmark::Timer object; returns a reference to a timer object. Takes the following named arguments:</p>

<dl>
<dt><a name="skip"
>skip</a></dt>

<dd>
<p>The number of trials (if any) to skip before recording timing information.</p>

<dt><a name="minimum"
>minimum</a></dt>

<dd>
<p>The minimum number of trials to run.</p>

<dt><a name="error"
>error</a></dt>

<dd>
<p>A percentage between 0 and 100 which indicates how much error you are willing to tolerate in the average time measured by the benchmark. For example, a value of 1 means that you want the reported average time to be within 1% of the real average time. <code>need_more_samples()</code> will use this value to determine when it is okay to stop collecting data.</p>

<p>If you specify an error you must also specify a confidence.</p>

<dt><a name="confidence"
>confidence</a></dt>

<dd>
<p>A percentage between 0 and 100 which indicates how confident you want to be in the error measured by the benchmark. For example, a value of 97.5 means that you want to be 97.5% confident that the real average time is within the error margin you have specified. <code>need_more_samples()</code> will use this value to compute the estimated error for the collected data, so that it can determine when it is okay to stop.</p>

<p>If you specify a confidence you must also specify an error.</p>
</dd>
</dl>

<dt><a name='t'></a><a name="$t-&#62;reset;"
>$t-&#62;reset;</a></dt>

<dd>
<p>Reset the timer object to the pristine state it started in. Erase all memory of tags and any previously accumulated timings. Returns a reference to the timer object. It takes the same arguments the constructor takes.</p>

<dt><a name='t'></a><a name="$t-&#62;start($tag);"
>$t-&#62;start($tag);</a></dt>

<dd>
<p>Record the current time so that when <code>stop()</code> is called, we can calculate an elapsed time.</p>

<dt><a name='t'></a><a name="$t-&#62;stop($tag);"
>$t-&#62;stop($tag);</a></dt>

<dd>
<p>Record timing information. If $tag is supplied, it must correspond to one given to a previously called <code>start()</code> call. It returns the elapsed time in milliseconds. <code>stop()</code> croaks if the timer gets out of sync (e.g. the number of <code>start()</code>s does not match the number of <code>stop()</code>s.)</p>

<dt><a name='t'></a><a name="$t-&#62;need_more_samples($tag);"
>$t-&#62;need_more_samples($tag);</a></dt>

<dd>
<p>Compute the estimated error in the average of the data collected thus far, and return true if that error exceeds the user-specified error. If a $tag is supplied, it must correspond to one given to a previously called <code>start()</code> call.</p>

<p>This routine assumes that the data are normally distributed.</p>

<dt><a name='t'></a><a name="$t-&#62;report($tag);"
>$t-&#62;report($tag);</a></dt>

<dd>
<p>Returns a string containing a simple report on the collected timings for $tag. This report contains the number of trials run, the total time taken, and, if more than one trial was run, the average time needed to run one trial and error information. <code>report()</code> will complain (via a warning) if a tag is still active.</p>

<dt><a name='t'></a><a name="$t-&#62;reports;"
>$t-&#62;reports;</a></dt>

<dd>
<p>In a scalar context, returns a string containing a simple report on the collected timings for all tags. The report is a concatenation of the individual tag reports, in the original tag order. In an list context, returns a hash keyed by tag and containing reports for each tag. The return value is actually an array, so that the original tag order is preserved if you assign to an array instead of a hash. <code>reports()</code> will complain (via a warning) if a tag is still active.</p>

<dt><a name='t'></a><a name="$t-&#62;result($tag);"
>$t-&#62;result($tag);</a></dt>

<dd>
<p>Return the time it took for $tag to elapse, or the mean time it took for $tag to elapse once, if $tag was used to time code more than once. <code>result()</code> will complain (via a warning) if a tag is still active.</p>

<dt><a name='t'></a><a name="$t-&#62;results;"
>$t-&#62;results;</a></dt>

<dd>
<p>Returns the timing data as a hash keyed on tags where each value is the time it took to run that code, or the average time it took, if that code ran more than once. In scalar context it returns a reference to that hash. The return value is actually an array, so that the original tag order is preserved if you assign to an array instead of a hash.</p>

<dt><a name='t'></a><a name="$t-&#62;data($tag),_$t-&#62;data;"
>$t-&#62;data($tag), $t-&#62;data;</a></dt>

<dd>
<p>These methods are useful if you want to recover the full internal timing data to roll your own reports.</p>

<p>If called with a $tag, returns the raw timing data for that $tag as an array (or a reference to an array if called in scalar context). This is useful for feeding to something like the Statistics::Descriptive package.</p>

<p>If called with no arguments, returns the raw timing data as a hash keyed on tags, where the values of the hash are lists of timings for that code. In scalar context, it returns a reference to that hash. As with <code>results()</code>, the data is internally represented as an array so you can recover the original tag order by assigning to an array instead of a hash.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="BUGS"
>BUGS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Benchmarking is an inherently futile activity, fraught with uncertainty not dissimilar to that experienced in quantum mechanics. But things are a little better if you apply statistics.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="LICENSE"
>LICENSE <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This code is distributed under the GNU General Public License (GPL). See the file LICENSE in the distribution, <a href="http://www.opensource.org/gpl-license.html" class="podlinkurl"
>http://www.opensource.org/gpl-license.html</a>, and <a href="http://www.opensource.org/" class="podlinkurl"
>http://www.opensource.org/</a>.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHOR"
>AUTHOR <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>The original code (written before April 20, 2001) was written by Andrew Ho &#60;andrew@zeuscat.com&#62;, and is copyright (c) 2000-2001 Andrew Ho. Versions up to 0.5 are distributed under the same terms as Perl.</p>

<p>Maintenance of this module is now being done by David Coppit &#60;david@coppit.org&#62;.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SEE_ALSO"
>SEE ALSO <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><a href="/perldoc?Benchmark" class="podlinkpod"
>Benchmark</a>, <a href="/perldoc?Time%3A%3AHiRes" class="podlinkpod"
>Time::HiRes</a>, <a href="/perldoc?Time%3A%3AStopwatch" class="podlinkpod"
>Time::Stopwatch</a>, <a href="/perldoc?Statistics%3A%3ADescriptive" class="podlinkpod"
>Statistics::Descriptive</a></p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78067 Uploads, 24685 Distributions
105889 Modules, 9637 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Sat Apr 21 16:06:41 2012 GMT (0.212840795516968) @cpansearch1 -->
 </body>
</html>
