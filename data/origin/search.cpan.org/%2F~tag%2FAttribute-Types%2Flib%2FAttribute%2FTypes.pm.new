<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>Attribute::Types - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","Attribute-Types",3]);
    _gaq.push(["_setCustomVar",5,"Release","Attribute-Types-0.11",3]);
    _gaq.push(["_setCustomVar",3,"Module","Attribute::Types",3]);
    _gaq.push(["_setCustomVar",1,"Author","TAG",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?Attribute::Types">permalink</a></div>
  <a href="/~tag/">Scott McCoy</a> &gt;
  <a href="/~tag/Attribute-Types/">Attribute-Types</a> &gt;
  Attribute::Types
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/1c75b60f8e67e03767ee01960a62d5b4?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/T/TA/TAG/Attribute-Types-0.11.tar.gz">Attribute-Types-0.11.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=Attribute%3A%3ATypes;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~TAG/Attribute-Types-0.11/lib/Attribute/Types.pm">Annotate this POD
</a></p>
<div class=box style='width:150px; float: right'>
<h1 class=t5>Related Modules</h1>
<div style="margin:2px">
<a href="/perldoc?Filter%3A%3ASimple">Filter::Simple</a><br>
<a href="/perldoc?Tie%3A%3AFile">Tie::File</a><br>
<a href="/perldoc?Text%3A%3ATemplate">Text::Template</a><br>
<a href="/perldoc?Data%3A%3ADumper">Data::Dumper</a><br>
<a href="/perldoc?List%3A%3AUtil">List::Util</a><br>
<a href="/perldoc?File%3A%3APath">File::Path</a><br>
<a href="/perldoc?Getopt%3A%3AAttribute">Getopt::Attribute</a><br>
<small>
<a href="http://perlmonks.org/?node=cpan+module+search&pivot=1&module=Attribute%3A%3ATypes">more...</a><br>
By <a href="http://perlmonks.org/">perlmonks.org</a></small>
</div>
</div>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>New&nbsp;</td><td style="text-align:right"> 1</td></tr>
<tr><td>Open&nbsp;</td><td style="text-align:right"> 1</td></tr>
</table>
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=Attribute-Types">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  0.11 &nbsp;
<span class="noprint">
  <a href="/src/TAG/Attribute-Types-0.11/lib/Attribute/Types.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#VERSION'>VERSION</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <li class='indexItem indexItem1'><a href='#CAVEAT'>CAVEAT</a>
  <li class='indexItem indexItem1'><a href='#DIAGNOSTICS'>DIAGNOSTICS</a>
  <li class='indexItem indexItem1'><a href='#BLAME'>BLAME</a>
  <li class='indexItem indexItem1'><a href='#AUTHOR'>AUTHOR</a>
  <li class='indexItem indexItem1'><a href='#BUGS_AND_IRRITATIONS'>BUGS AND IRRITATIONS</a>
  <li class='indexItem indexItem1'><a href='#COPYRIGHT'>COPYRIGHT</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Attribute::Types - Attributes that confer type on variables</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="VERSION"
>VERSION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This document describes version 0.10 of Attribute::Types,
released May 10,
2001.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">    use Attribute::Types;

    my $count   : INTEGER;           # Can only store an integer
    my $date    : INTEGER(1..31);    # Can only store an int between 1..31
    my $value   : NUMBER;            # Can only store a number
    my $score   : NUMBER(0.1..9.9);  # Can only store a num between 0.1..9.9
    my @rain    : NUMBER;            # Elements can only store numbers
    my %vars    : SCALAR;            # Entries can only store scalar refs
    my %handler : CODE;              # Entries can only store sub refs
    my $arr     : ARRAY;             # Can only store array ref
    my @hashes  : HASH;              # Elements can only store hash refs
    my $glob    : GLOB;              # Can only store a typeglob ref
    my $pattern : REGEX;             # Can only store a qr&#39;d regex
    my $ref2    : REF;               # Can only store a meta-reference

    my $obj : Type(My::Class);       # Can only store objects of (or
                                     # derived from) the specified class

    my $x : Type(/good|bad|ugly/);   # Can only store strings matching
                                     # the specified regex

    sub odd { no warnings; $_[0]%2 }

    my $guarded : Type(&#38;odd);        # Can only store values for which
                                     # odd($value) returns true

    $date = 23;                      # okay
    $date = 32;                      # KABOOM!

    $rain[1] = 121.7;                # okay
    $rain[1] = &#34;lots&#34;;               # KABOOM!

    $x = &#39;very good&#39;;                # okay
    $x = &#39;excellent&#39;;                # KABOOM!

    package My::Class::Der;
    use base &#39;My::Class&#39;;

    $obj = My::Class-&#62;new();         # okay
    $obj = My::Class::Der-&#62;new();    # okay
    $obj = Other::Class-&#62;new();      # KABOOM!

    $guarded = 1;                    # okay
    $guarded = 2;                    # KABOOM!</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>The Attribute::Types module provides 10 universally accessible attributes that can be used to create variables that accept assignments of only specific types of data.</p>

<p>The attributes are:</p>

<dl>
<dt><a name="INTEGER"
><code>INTEGER</code></a></dt>

<dd>
<p>Indicates that the associated scalar, or the elements of the associated array, or the entries of the associated hash can only contain integer values (those values that are internally represented as actual numbers (or may be converted to actual numbers without generating a warning), and for which <code>int($value)==$value)</code>.</p>

<p>The attribute may also be specified with a range of integer values, indicating a further restriction on the values the associated variable can store. For example:</p>

<pre class="sh_perl">    my $x1 : INTEGER(1..100);   # Any int between 1 and 100
    my $x2 : INTEGER(-10..10);  # Any ine between -10 and 10
    my $x3 : INTEGER(0..);      # Any positive int
    my $x4 : INTEGER(..99);     # Any int &#60; 100 (including negatives)</pre>

<dt><a name="NUMBER"
><code>NUMBER</code></a></dt>

<dd>
<p>Indicates that the associated scalar, or the elements of the associated array, or the entries of the associated hash can only contain values that are internally represented by (or silently convertible to) valid Perl numbers.</p>

<p>The attribute may also be specified with a range of numerical values, indicating a further restriction on the values the associated variable can store. For example:</p>

<pre class="sh_perl">    my $x1 : NUMBER(1.0..100.0);    # Any number between 1 and 100
    my $x2 : NUMBER(-10..10);       # Any number between -10 and 10
    my $x3 : NUMBER(0..);           # Any positive number
    my $x4 : NUMBER(..99.9);        # Any number &#60; 99.9 (incl. negatives)</pre>

<dt><a name="SCALAR"
><code>SCALAR</code></a></dt>

<dd>
<p>Indicates that the associated scalar, or the elements of the associated array, or the entries of the associated hash can only contain references to scalars (i.e. only values for which <code>ref($value) eq &#39;SCALAR&#39;</code>).</p>

<dt><a name="ARRAY"
><code>ARRAY</code></a></dt>

<dd>
<p>Indicates that the associated variable can only contain references to arrays (i.e. only values for which <code>ref($value) eq &#39;ARRAY&#39;</code>).</p>

<dt><a name="HASH"
><code>HASH</code></a></dt>

<dd>
<p>Indicates that the associated variable can only contain references to hashes (i.e. only values for which <code>ref($value) eq &#39;HASH&#39;</code>).</p>

<dt><a name="CODE"
><code>CODE</code></a></dt>

<dd>
<p>Indicates that the associated variable can only contain references to subroutines (i.e. only values for which <code>ref($value) eq &#39;CODE&#39;</code>).</p>

<dt><a name="GLOB"
><code>GLOB</code></a></dt>

<dd>
<p>Indicates that the associated variable can only contain references to typeglobs (i.e. only values for which <code>ref($value) eq &#39;GLOB&#39;</code>).</p>

<dt><a name="REF"
><code>REF</code></a></dt>

<dd>
<p>Indicates that the associated variable can only contain references to other references (i.e. only values for which <code>ref($value) eq &#39;REF&#39;</code>).</p>

<dt><a name="REGEX"
><code>REGEX</code></a></dt>

<dd>
<p>Indicates that the associated variable can only contain references to precompiled regular expressions (i.e. only values for which <code>ref($value) eq &#39;Regexp&#39;</code>).</p>

<dt><a name="Type"
><code>Type</code></a></dt>

<dd>
<p>Used to specify class-wise or generic storage constraints on a variable. There are three permitted syntaxes:</p>

<dl>
<dt><a name='Type'></a><a name="Type(Class::Name)"
><code>Type(Class::Name)</code></a></dt>

<dd>
<p>Indicates that the associated variable can only contain references to objects belonging to the specified class, or to one of its derived classes.</p>

<dt><a name='Type'></a><a name="Type(/pattern/)"
><code>Type(/pattern/)</code></a></dt>

<dd>
<p>Indicates that the associated variable can only contain values that successfully match the specified pattern.</p>

<dt><a name='Type'></a><a name="Type(&#38;subname)"
><code>Type(&#38;subname)</code></a></dt>

<dd>
<p>Indicates that the associated variable can only contain values for which the specified subroutine returns true when passed the value as its first argument.</p>

<p>Note that anonymous subroutines cannot be used in this context (they are run-time phenomena and types have to be set up at compile-time).</p>
</dd>
</dl>
</dd>
</dl>

<p>If the module is imported with a list of attribute names:</p>

<pre class="sh_perl">        use Attribute::Types qw(INTEGER HASH);</pre>

<p>then only those attributes can be used to specify types.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="CAVEAT"
>CAVEAT <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>The type checking set up by this module is <i>run-time</i> type-checking. That is, the validity of an assignment is only checked when the assignment operation is actually performed, not when it is compiled.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DIAGNOSTICS"
>DIAGNOSTICS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<dl>
<dt><a name='Cannot'></a><a name="Cannot_assign_value_to_type_variable"
><code>Cannot assign <i>value</i> to <i>type</i> variable</code></a></dt>

<dd>
<p>The value being assigned is not consistent with the declared type of the variable.</p>

<dt><a name='Can'></a><a name="Can&#39;t_specify_type_attribute_for_CODE"
><code>Can&#39;t specify type attribute for CODE</code></a></dt>

<dd>
<p>Subroutines cannot be typed using the Attribute::Types attributes.</p>

<dt><a name='Invalid'></a><a name="Invalid_type_specifier:_Type(garbage)"
><code>Invalid type specifier: Type(<i>garbage</i>)</code></a></dt>

<dd>
<p>The <code>Type(...)</code> attribute can only be specified with a class name, a pattern (in /.../), or a subroutine name.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="BLAME"
>BLAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This is all Nat Torkington&#39;s idea.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHOR"
>AUTHOR <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Damian Conway (damian@conway.org)</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="BUGS_AND_IRRITATIONS"
>BUGS AND IRRITATIONS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>There are undoubtedly serious bugs lurking somewhere in this code :-) Bug reports and other feedback are most welcome.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="COPYRIGHT"
>COPYRIGHT <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">        Copyright (c) 2001, Damian Conway. All Rights Reserved.
      This module is free software. It may be used, redistributed
         and/or modified under the same terms as Perl itself.</pre>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78131 Uploads, 24700 Distributions
105950 Modules, 9642 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Tue Apr 24 08:50:38 2012 GMT (0.0871551036834717) @cpansearch1 -->
 </body>
</html>
