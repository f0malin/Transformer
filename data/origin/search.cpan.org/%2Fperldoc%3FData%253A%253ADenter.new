<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>Data::Denter - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","Data-Denter",3]);
    _gaq.push(["_setCustomVar",5,"Release","Data-Denter-0.15",3]);
    _gaq.push(["_setCustomVar",3,"Module","Data::Denter",3]);
    _gaq.push(["_setCustomVar",1,"Author","INGY",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?Data::Denter">permalink</a></div>
  <a href="/~ingy/">Ingy d&ouml;t Net</a> &gt;
  <a href="/~ingy/Data-Denter-0.15/">Data-Denter-0.15</a> &gt;
  Data::Denter
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/5c3afdcbdfe9c2aeed790b9b15d4bcef?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/I/IN/INGY/Data-Denter-0.15.tar.gz">Data-Denter-0.15.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=Data%3A%3ADenter;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~INGY/Data-Denter-0.15/Denter.pod">Annotate this POD
</a></p>
<div class=box style='width:150px; float: right'>
<h1 class=t5>Related Modules</h1>
<div style="margin:2px">
<a href="/perldoc?Data%3A%3ADumper">Data::Dumper</a><br>
<a href="/perldoc?XML%3A%3ASimple">XML::Simple</a><br>
<a href="/perldoc?XML%3A%3AParser">XML::Parser</a><br>
<a href="/perldoc?Config%3A%3AIniFiles">Config::IniFiles</a><br>
<a href="/perldoc?XML%3A%3ATwig">XML::Twig</a><br>
<a href="/perldoc?Digest%3A%3AMD5">Digest::MD5</a><br>
<a href="/perldoc?HTML%3A%3ATemplate">HTML::Template</a><br>
<a href="/perldoc?Inline%3A%3AFiles">Inline::Files</a><br>
<a href="/perldoc?Date%3A%3ACalc">Date::Calc</a><br>
<a href="/perldoc?File%3A%3ASpec">File::Spec</a><br>
<small>
<a href="http://perlmonks.org/?node=cpan+module+search&pivot=1&module=Data%3A%3ADenter">more...</a><br>
By <a href="http://perlmonks.org/">perlmonks.org</a></small>
</div>
</div>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>New&nbsp;</td><td style="text-align:right"> 1</td></tr>
<tr><td>Open&nbsp;</td><td style="text-align:right"> 0</td></tr>
</table>
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=Data-Denter">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  0.15 &nbsp;
<span class="noprint">
  <a href="/src/INGY/Data-Denter-0.15/Denter.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#NOTE_NOTE_NOTE'>NOTE NOTE NOTE</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS_OUTPUT'>SYNOPSIS OUTPUT</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <li class='indexItem indexItem1'><a href='#UNDERSTANDING_THE_DENTER_FORMAT'>UNDERSTANDING THE DENTER FORMAT</a>
  <li class='indexItem indexItem1'><a href='#FUNCTIONS'>FUNCTIONS</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#Indent'>Indent</a>
    <li class='indexItem indexItem2'><a href='#Undent'>Undent</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#OPTIONS'>OPTIONS</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#Sort'>Sort</a>
    <li class='indexItem indexItem2'><a href='#MaxLines'>MaxLines</a>
    <li class='indexItem indexItem2'><a href='#HashMode'>HashMode</a>
    <li class='indexItem indexItem2'><a href='#Comma'>Comma</a>
    <li class='indexItem indexItem2'><a href='#Width'>Width</a>
    <li class='indexItem indexItem2'><a href='#TabWidth'>TabWidth</a>
    <li class='indexItem indexItem2'><a href='#Level'>Level</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#OO-Style'>OO-Style</a>
  <li class='indexItem indexItem1'><a href='#KNOWN_BUGS_&#38;_LIMITATIONS'>KNOWN BUGS &#38; LIMITATIONS</a>
  <li class='indexItem indexItem1'><a href='#AUTHOR'>AUTHOR</a>
  <li class='indexItem indexItem1'><a href='#COPYRIGHT'>COPYRIGHT</a>
  <li class='indexItem indexItem1'><a href='#SEE_ALSO'>SEE ALSO</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Data::Denter - An (deprecated) alternative to Data::Dumper and Storable.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NOTE_NOTE_NOTE"
>NOTE NOTE NOTE <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">    use YAML; # Instead!!!</pre>

<p><code>Data::Denter</code> was a good idea for many reasons. In May 2001, the module got noticed by a couple of brilliant people who were working on a project called YAML (YAML Ain&#39;t Markup Language). They asked me to join them, and I did. Since then we have been working almost daily on this new serialization language. For much more information, see <a href="http://www.yaml.org" class="podlinkurl"
>http://www.yaml.org</a>.</p>

<p>YAML has all the nice qualities that <code>Data::Denter</code> does. You should find that YAML actually improves upon <code>Data::Denter</code> in both readability and completeness. YAML&#39;s number one design goal is human readability.</p>

<p>Another large benefit of YAML is that it is a programming language independent serialization language. Implementations currently exist for Perl, Python, Ruby and Java. In addition, YAML is unicode based, has extensible typing and allows stream based processing.</p>

<p><code>Data::Denter</code> has served its purpose and is now being fully deprecated in favor of <code>YAML.pm</code>. I have made <code>YAML.pm</code> a module prerequisite for <code>Data::Denter</code>, so if you used the CPAN shell to install <code>Data::Denter</code>, you may actually already have <code>YAML.pm</code> installed. If you really don&#39;t want YAML on your system, <code>Data::Denter</code> will run fine without it.</p>

<p>This final release of <code>Data::Denter</code> contains all of the patches that have been sent to me. If you really need this module patched further, I will be happy to do so. But seriously consider switching to YAML.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">    use Data::Denter;
    use Data::Dumper;
    
    my $hh = bless {Easter =&#62; &#34;Bunny&#34;, 
                    Christmas =&#62; [&#34;Santa&#34;, &#34;Grinch&#34;],
                   }, &#34;Holiday::Hackers&#34;;
    
    print &#34;*** Data::Denter #1 ***\n&#34;;
    print Denter $hh;
    print &#34;*** Data::Dumper #1 ***\n&#34;;
    print Dumper $hh;
    
    my $dented = Indent([ qw(one two three), {one=&#62;1}, [2], \3 ], 
                        {&#34;I\nLove\n&#34; =&#62; undef});
    process($dented);
    
    sub process {
        my $dented = shift;
        my @data = Undent $dented;
        print &#34;\n*** Data::Denter #2 ***\n&#34;;
        print $dented;
        print &#34;*** Data::Dumper #2 ***\n&#34;;
        print Dumper @data;
    }</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS_OUTPUT"
>SYNOPSIS OUTPUT <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">    *** Data::Denter #1 ***
    %Holiday::Hackers
        Christmas =&#62; @
            Santa
            Grinch
        Easter =&#62; Bunny
    *** Data::Dumper #1 ***
    $VAR1 = bless( {
                     &#39;Easter&#39; =&#62; &#39;Bunny&#39;,
                     &#39;Christmas&#39; =&#62; [
                                      &#39;Santa&#39;,
                                      &#39;Grinch&#39;
                                    ]
                   }, &#39;Holiday::Hackers&#39; );
    
    *** Data::Denter #2 ***
    @
        one
        two
        three
        %
            one =&#62; 1
        @
            2
        $
            3
    %
        &#60;&#60;EOK =&#62; ?
    I
    Love
    EOK
    *** Data::Dumper #2 ***
    $VAR1 = [
              &#39;one&#39;,
              &#39;two&#39;,
              &#39;three&#39;,
              {
                &#39;one&#39; =&#62; &#39;1&#39;
              },
              [
                &#39;2&#39;
              ],
              \&#39;3&#39;
            ];
    $VAR2 = {
              &#39;I
    Love
    &#39; =&#62; undef
            };</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>The main problem with Data::Dumper (one of my all-time favorite modules) is that you have to use <code>eval()</code> to deserialize the data you&#39;ve dumped. This is great if you can trust the data you&#39;re evaling, but horrible if you can&#39;t. A good alternative is Storable.pm. It can safely thaw your frozen data. But if you want to read/edit the frozen data, you&#39;re out of luck, because Storable uses a binary format. Even Data::Dumper&#39;s output can be a little cumbersome for larger data objects.</p>

<p>Enter Data::Denter.</p>

<p>Data::Denter is yet another Perl data serializer/deserializer. It formats nested data structures in an indented fashion. It is optimized for human readability/editability, safe deserialization, and (eventually) speed.</p>

<p>NOTE: It may be optimized for Python programmers too, but please don&#39;t hold that against me ;)</p>

<p>It exports 2 functions: <code>Indent()</code> and <code>Undent()</code> for serialization and deserialization respectively. It also exports <code>Denter()</code> which is an alias to <code>Indent()</code>. (People who use Data::Dumper will appreciate this). You can even import <code>Dumper()</code> (another <code>Indent</code> alias) for easily toggling between Data::Dumper and Data::Denter style formatting.</p>

<p>Data::Denter handles all of the commonly serializable Perl data types, including: scalars, hash refs, array refs, scalar refs, ref refs, undef, and blessed references. Other references will simply be formatted in their string forms. It can even properly handle circular and duplicate references.</p>

<p>Data::Denter has 3 different forms of quoting string values depending on their complexity: no quotes, double quotes, and here-doc quoting. It also has a special symbol for undefined values.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="UNDERSTANDING_THE_DENTER_FORMAT"
>UNDERSTANDING THE DENTER FORMAT <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Data::Denter uses it&#39;s own markup syntax, which is designed to be minimal, yet complete. It borrows familiar symbols from Perl, and structured indenting from Python. The following symbols are used:</p>

<pre class="sh_perl">    %         - a hash reference
    @         - an array reference
    $         - a scalar reference
    \         - a reference of another reference
    ?         - undef
    &#34;         - used to quote string values that begin with other 
                markup characters, but do not contain newlines
    &#60;&#60;EOV     - quote values with embedded newlines using
                a here-doc syntax
    &#60;&#60;EOV-    - same as above, but chomp final newline
    &#60;&#60;EOK     - quote hash keys with embedded newlines
    =&#62;        - used to separate key value pairs
    (REF#)    - Indicates the first instance of a duplicate reference
    (*REF#-#) - Indicates the dereference of a duplicate reference</pre>

<p>Any of the data type references ( %, @, $ ) may be followed by a classname if they were blessed. For instance:</p>

<pre class="sh_perl">    print Indent( $h = bless { Name =&#62; &#39;Ingy&#39;, Rank =&#62; &#39;JAPH&#39; }, &#34;Hacker&#34; );</pre>

<p>would produce:</p>

<pre class="sh_perl">    %Hacker
        Name =&#62; Ingy
        Rank =&#62; JAPH</pre>

<p>If the data contains duplicate references, only the first one is dumped. The rest use a reference marker. Continuing on with the above code:</p>

<pre class="sh_perl">     $h-&#62;{me} = $h;
     $h-&#62;{myself} = \\$h;
     $h-&#62;{I} = [ $h-&#62;{me}, $h-&#62;{myself} ];
     print Indent $h;</pre>

<p>would produce:</p>

<pre class="sh_perl">    %Hacker(REF00001)
        I =&#62; @
            %Hacker(*REF00001-1)
            \(REF00002)\%Hacker(*REF00001-2)
        Name =&#62; Ingy
        Rank =&#62; JAPH
        me =&#62; %Hacker(*REF00001-3)
        myself =&#62; \(*REF00002-1)</pre>

<p>This is how Data::Denter can serialize and deserialize data with circular references.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="FUNCTIONS"
>FUNCTIONS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Indent"
>Indent</a></h2>

<pre class="sh_perl">    $string = Indent(list of scalars or typeglob/scalar pairs);</pre>

<p>This function will serialize a list of scalars. A typeglob like &#39;*myhash&#39; may be specified before any scalar to give the scalar a name.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Undent"
>Undent</a></h2>

<pre class="sh_perl">    @list = Undent(serialized-data-string);</pre>

<p>This function will deserialize an Indented data string into a list of Perl scalars that are equivalent to the original pre-Indented objects.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="OPTIONS"
>OPTIONS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Sort"
>Sort</a></h2>

<p>$Data::Denter::Sort tells Data::Denter whether or not to display hash keys in a sorted order. Values are 0 and 1. Default is 1. (That&#39;s right. The default is to sort the hash keys.)</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="MaxLines"
>MaxLines</a></h2>

<p>$Data::Denter::MaxLines is an option for limiting the number of lines to be displayed in a string value represented with the Here-Doc syntax. Default is &#39;0&#39;, which means &#34;show all lines&#34;.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="HashMode"
>HashMode</a></h2>

<p>$Data::Denter::HashMode turns &#34;Hash Mode&#34; on and off. Default is &#39;0&#39;. This mode requires a bit of explanation:</p>

<p>&#34;Hash Mode&#34; is useful when you want to use Data::Denter for a config file where you have named options. It assumes that the list of arguments that you pass to the <code>Indent()</code> function is a set of key/value pairs. This produces the same output that you would get if you specified the data as typeglob/value pairs in non-HashMode. NOTE: The keys are restricted to only containing word (\w) characters.</p>

<p>For example if you wanted to set up a config file with 3 options, you might choose a format like this:</p>

<pre class="sh_perl">    option1 =&#62; value1
    option2 =&#62; value2
    option3 =&#62; @
        sub-value-a
        sub-value-b</pre>

<p>To read this into Perl you could say:</p>

<pre class="sh_perl">    use Data::Dumper;
    use Data::Denter;
    $Data::Denter::HashMode = 1;
    open CONFIG, &#39;config&#39; or die $!;
    my %config = Undent join &#39;&#39;, &#60;CONFIG&#62;;
    print Dumper \%config;</pre>

<p>This produces:</p>

<pre class="sh_perl">    $VAR1 = {
              &#39;option1&#39; =&#62; &#39;value1&#39;,
              &#39;option2&#39; =&#62; &#39;value2&#39;,
              &#39;option3&#39; =&#62; [
                             &#39;sub-value-a&#39;,
                             &#39;sub-value-b&#39;
                           ]
            };</pre>

<p>Now you can use %config for your configuration information. To write the configuration back to disk, simply do this:</p>

<pre class="sh_perl">    open CONFIG, &#34;&#62; config&#34; or die $!;
    print CONFIG Indent(%config);</pre>

<p>As a counter-example, with $Data::Denter::HashMode set to &#39;0&#39;, the above program would produce:</p>

<pre class="sh_perl">    $VAR1 = {
              &#39;*main::option1&#39; =&#62; &#39;value1&#39;,
              &#39;*main::option2&#39; =&#62; &#39;value2&#39;,
              &#39;*main::option3&#39; =&#62; [
                                    &#39;sub-value-a&#39;,
                                    &#39;sub-value-b&#39;
                                  ]
            };</pre>

<p>Which is not what you want.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Comma"
>Comma</a></h2>

<p>$Data::Denter::Comma is a string used to separate hash keys and values. Default is &#39; =&#62; &#39;.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Width"
>Width</a></h2>

<p>$Data::Denter::Width is the indentation width. Default is 4.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="TabWidth"
>TabWidth</a></h2>

<p>$Data::Denter::TabWidth is the number of spaces represented by leading tabs that may have been introduced by editing a serialized file. Default is 8.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Level"
>Level</a></h2>

<p>Experimental. Starting indent level. Default is 0.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="OO-Style"
>OO-Style <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">    print Data::Denter-&#62;new(width =&#62; 2)-&#62;indent($foo, $bar);</pre>

<p>All methods and options use lowercase with the OO style syntax, as opposed to TitleCase with the functional interface.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="KNOWN_BUGS_&#38;_LIMITATIONS"
>KNOWN BUGS &#38; LIMITATIONS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<ol>
<li>Data::Denter handles a lot of strange data. One thing it does not yet handle are refs blessed with strings containing characters that are not allowed in package names. People who do this are strange.</li>

<li>Written in pure (unoptimized) Perl, so probably not so fast yet. But since the Indented format can be parsed in one pass, with no lookaheads, a C implementation would be extremely fast.</li>
</ol>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHOR"
>AUTHOR <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Brian Ingerson &#60;INGY@cpan.org&#62;</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="COPYRIGHT"
>COPYRIGHT <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Copyright (c) 2001, 2002, Brian Ingerson. All rights reserved.</p>

<p>This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</p>

<p>See <a href="http://www.perl.com/perl/misc/Artistic.html" class="podlinkurl"
>http://www.perl.com/perl/misc/Artistic.html</a></p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SEE_ALSO"
>SEE ALSO <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><a href="/perldoc?YAML" class="podlinkpod"
>YAML</a></p>

<p><a href="/perldoc?Data%3A%3ADumper" class="podlinkpod"
>Data::Dumper</a></p>

<p><a href="/perldoc?Storable" class="podlinkpod"
>Storable</a></p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78283 Uploads, 24725 Distributions
106015 Modules, 9649 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Sat Apr 28 06:42:34 2012 GMT (0.0774409770965576) @cpansearch1 -->
 </body>
</html>
