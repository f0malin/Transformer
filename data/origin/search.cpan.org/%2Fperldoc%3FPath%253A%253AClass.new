<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>Path::Class - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","Path-Class",3]);
    _gaq.push(["_setCustomVar",5,"Release","Path-Class-0.25",3]);
    _gaq.push(["_setCustomVar",3,"Module","Path::Class",3]);
    _gaq.push(["_setCustomVar",1,"Author","KWILLIAMS",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?Path::Class">permalink</a></div>
  <a href="/~kwilliams/">Ken Williams</a> &gt;
  <a href="/~kwilliams/Path-Class-0.25/">Path-Class-0.25</a> &gt;
  Path::Class
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/88e4267539d19a65f372ce2075c05d71?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/K/KW/KWILLIAMS/Path-Class-0.25.tar.gz">Path-Class-0.25.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=Path%3A%3AClass;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~KWILLIAMS/Path-Class-0.25/lib/Path/Class.pm">Annotate this POD
</a></p>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>New&nbsp;</td><td style="text-align:right"> 15</td></tr>
<tr><td>Open&nbsp;</td><td style="text-align:right"> 13</td></tr>
</table>
<a href="http://rt.cpan.org/Public/Dist/Display.html?Name=Path-Class">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  0.25 &nbsp;
<span class="noprint">
  <a href="/src/KWILLIAMS/Path-Class-0.25/lib/Path/Class.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#VERSION'>VERSION</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#EXPORT'>EXPORT</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#Notes_on_Cross-Platform_Compatibility'>Notes on Cross-Platform Compatibility</a>
  <li class='indexItem indexItem1'><a href='#AUTHOR'>AUTHOR</a>
  <li class='indexItem indexItem1'><a href='#COPYRIGHT'>COPYRIGHT</a>
  <li class='indexItem indexItem1'><a href='#SEE_ALSO'>SEE ALSO</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Path::Class - Cross-platform path specification manipulation</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="VERSION"
>VERSION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>version 0.25</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">  use Path::Class;
  
  my $dir  = dir(&#39;foo&#39;, &#39;bar&#39;);       # Path::Class::Dir object
  my $file = file(&#39;bob&#39;, &#39;file.txt&#39;); # Path::Class::File object
  
  # Stringifies to &#39;foo/bar&#39; on Unix, &#39;foo\bar&#39; on Windows, etc.
  print &#34;dir: $dir\n&#34;;
  
  # Stringifies to &#39;bob/file.txt&#39; on Unix, &#39;bob\file.txt&#39; on Windows
  print &#34;file: $file\n&#34;;
  
  my $subdir  = $dir-&#62;subdir(&#39;baz&#39;);  # foo/bar/baz
  my $parent  = $subdir-&#62;parent;      # foo/bar
  my $parent2 = $parent-&#62;parent;      # foo
  
  my $dir2 = $file-&#62;dir;              # bob

  # Work with foreign paths
  use Path::Class qw(foreign_file foreign_dir);
  my $file = foreign_file(&#39;Mac&#39;, &#39;:foo:file.txt&#39;);
  print $file-&#62;dir;                   # :foo:
  print $file-&#62;as_foreign(&#39;Win32&#39;);   # foo\file.txt
  
  # Interact with the underlying filesystem:
  
  # $dir_handle is an IO::Dir object
  my $dir_handle = $dir-&#62;open or die &#34;Can&#39;t read $dir: $!&#34;;
  
  # $file_handle is an IO::File object
  my $file_handle = $file-&#62;open($mode) or die &#34;Can&#39;t read $file: $!&#34;;</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><code>Path::Class</code> is a module for manipulation of file and directory specifications (strings describing their locations, like <code>&#39;/home/ken/foo.txt&#39;</code> or <code>&#39;C:\Windows\Foo.txt&#39;</code>) in a cross-platform manner. It supports pretty much every platform Perl runs on, including Unix, Windows, Mac, VMS, Epoc, Cygwin, OS/2, and NetWare.</p>

<p>The well-known module <code>File::Spec</code> also provides this service, but it&#39;s sort of awkward to use well, so people sometimes avoid it, or use it in a way that won&#39;t actually work properly on platforms significantly different than the ones they&#39;ve tested their code on.</p>

<p>In fact, <code>Path::Class</code> uses <code>File::Spec</code> internally, wrapping all the unsightly details so you can concentrate on your application code. Whereas <code>File::Spec</code> provides functions for some common path manipulations, <code>Path::Class</code> provides an object-oriented model of the world of path specifications and their underlying semantics. <code>File::Spec</code> doesn&#39;t create any objects, and its classes represent the different ways in which paths must be manipulated on various platforms (not a very intuitive concept). <code>Path::Class</code> creates objects representing files and directories, and provides methods that relate them to each other. For instance, the following <code>File::Spec</code> code:</p>

<pre class="sh_perl"> my $absolute = File::Spec-&#62;file_name_is_absolute(
                  File::Spec-&#62;catfile( @dirs, $file )
                );</pre>

<p>can be written using <code>Path::Class</code> as</p>

<pre class="sh_perl"> my $absolute = Path::Class::File-&#62;new( @dirs, $file )-&#62;is_absolute;</pre>

<p>or even as</p>

<pre class="sh_perl"> my $absolute = file( @dirs, $file )-&#62;is_absolute;</pre>

<p>Similar readability improvements should happen all over the place when using <code>Path::Class</code>.</p>

<p>Using <code>Path::Class</code> can help solve real problems in your code too - for instance, how many people actually take the &#34;volume&#34; (like <code>C:</code> on Windows) into account when writing <code>File::Spec</code>-using code? I thought not. But if you use <code>Path::Class</code>, your file and directory objects will know what volumes they refer to and do the right thing.</p>

<p>The guts of the <code>Path::Class</code> code live in the <code>Path::Class::File</code> and <code>Path::Class::Dir</code> modules, so please see those modules&#39; documentation for more details about how to use them.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="EXPORT"
>EXPORT</a></h2>

<p>The following functions are exported by default.</p>

<dl>
<dt><a name="file"
>file</a></dt>

<dd>
<p>A synonym for <code>Path::Class::File-&#62;new</code>.</p>

<dt><a name="dir"
>dir</a></dt>

<dd>
<p>A synonym for <code>Path::Class::Dir-&#62;new</code>.</p>
</dd>
</dl>

<p>If you would like to prevent their export, you may explicitly pass an empty list to perl&#39;s <code>use</code>, i.e. <code>use Path::Class ()</code>.</p>

<p>The following are exported only on demand.</p>

<dl>
<dt><a name="foreign_file"
>foreign_file</a></dt>

<dd>
<p>A synonym for <code>Path::Class::File-&#62;new_foreign</code>.</p>

<dt><a name="foreign_dir"
>foreign_dir</a></dt>

<dd>
<p>A synonym for <code>Path::Class::Dir-&#62;new_foreign</code>.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="Notes_on_Cross-Platform_Compatibility"
>Notes on Cross-Platform Compatibility <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Although it is much easier to write cross-platform-friendly code with this module than with <code>File::Spec</code>, there are still some issues to be aware of.</p>

<ul>
<li>On some platforms, notably VMS and some older versions of DOS (I think), all filenames must have an extension. Thus if you create a file called <em>foo/bar</em> and then ask for a list of files in the directory <em>foo</em>, you may find a file called <em>bar.</em> instead of the <em>bar</em> you were expecting. Thus it might be a good idea to use an extension in the first place.</li>
</ul>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHOR"
>AUTHOR <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Ken Williams, KWILLIAMS@cpan.org</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="COPYRIGHT"
>COPYRIGHT <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Copyright (c) Ken Williams. All rights reserved.</p>

<p>This library is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SEE_ALSO"
>SEE ALSO <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><a href="/~kwilliams/Path-Class-0.25/lib/Path/Class/Dir.pm" class="podlinkpod"
>Path::Class::Dir</a>, <a href="/~kwilliams/Path-Class-0.25/lib/Path/Class/File.pm" class="podlinkpod"
>Path::Class::File</a>, <a href="/perldoc?File%3A%3ASpec" class="podlinkpod"
>File::Spec</a></p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78275 Uploads, 24724 Distributions
106002 Modules, 9649 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Sat Apr 28 01:58:42 2012 GMT (0.129288911819458) @cpansearch1 -->
 </body>
</html>
