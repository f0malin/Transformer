<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>Net::SMS - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","Net-SMS",3]);
    _gaq.push(["_setCustomVar",5,"Release","Net-SMS-2.64",3]);
    _gaq.push(["_setCustomVar",3,"Module","Net::SMS",3]);
    _gaq.push(["_setCustomVar",1,"Author","ROOTLEVEL",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?Net::SMS">permalink</a></div>
  <a href="/~rootlevel/">Simplewire</a> &gt;
  <a href="/~rootlevel/Net-SMS-2.64/">Net-SMS-2.64</a> &gt;
  Net::SMS
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/33dfff07f49463fa61e13ec2f04171a8?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/R/RO/ROOTLEVEL/Net-SMS-2.64.tar.gz">Net-SMS-2.64.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=Net%3A%3ASMS;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~ROOTLEVEL/Net-SMS-2.64/lib/Net/SMS.pm">Annotate this POD
</a></p>
<div class=box style='width:150px; float: right'>
<h1 class=t5>Related Modules</h1>
<div style="margin:2px">
<a href="/perldoc?WWW%3A%3ASMS">WWW::SMS</a><br>
<a href="/perldoc?Net%3A%3ASMS%3A%3AGenie">Net::SMS::Genie</a><br>
<a href="/perldoc?LWP%3A%3ASimple">LWP::Simple</a><br>
<a href="/perldoc?LWP%3A%3AUserAgent">LWP::UserAgent</a><br>
<a href="/perldoc?WWW%3A%3ASearch">WWW::Search</a><br>
<a href="/perldoc?HTTP%3A%3ACookies">HTTP::Cookies</a><br>
<a href="/perldoc?Net%3A%3ASMS%3A%3AWeb">Net::SMS::Web</a><br>
<a href="/perldoc?GSM%3A%3ASMS">GSM::SMS</a><br>
<a href="/perldoc?Device%3A%3AGsm">Device::Gsm</a><br>
<a href="/perldoc?WWW%3A%3AMechanize">WWW::Mechanize</a><br>
<small>
<a href="http://perlmonks.org/?node=cpan+module+search&pivot=1&module=Net%3A%3ASMS">more...</a><br>
By <a href="http://perlmonks.org/">perlmonks.org</a></small>
</div>
</div>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>New&nbsp;</td><td style="text-align:right"> 2</td></tr>
<tr><td>Open&nbsp;</td><td style="text-align:right"> 0</td></tr>
</table>
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=Net-SMS">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  2.64 &nbsp;
<span class="noprint">
  <a href="/src/ROOTLEVEL/Net-SMS-2.64/lib/Net/SMS.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#INSTALLATION'>INSTALLATION</a>
  <li class='indexItem indexItem1'><a href='#EXAMPLES'>EXAMPLES</a>
  <li class='indexItem indexItem1'><a href='#QUICK_START'>QUICK START</a>
  <li class='indexItem indexItem1'><a href='#Receiving_SMS'>Receiving SMS</a>
  <li class='indexItem indexItem1'><a href='#EMS_(Enhanced_Message_Service)'>EMS (Enhanced Message Service)</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#Pictures'>Pictures</a>
    <li class='indexItem indexItem2'><a href='#Animations'>Animations</a>
    <ul   class='indexList indexList3'>
      <li class='indexItem indexItem3'><a href='#Animation_Description'>Animation Description</a>
    </ul>
    <li class='indexItem indexItem2'><a href='#Sounds'>Sounds</a>
    <ul   class='indexList indexList3'>
      <li class='indexItem indexItem3'><a href='#Predefined'>Predefined</a>
      <li class='indexItem indexItem3'><a href='#User_Defined'>User Defined</a>
      <ul   class='indexList indexList4'>
        <li class='indexItem indexItem4'><a href='#Header'>Header</a>
        <li class='indexItem indexItem4'><a href='#Footer'>Footer</a>
        <li class='indexItem indexItem4'><a href='#Melody'>Melody</a>
      </ul>
    </ul>
    <li class='indexItem indexItem2'><a href='#Concatenation'>Concatenation</a>
    <li class='indexItem indexItem2'><a href='#User_Prompt_Indicator'>User Prompt Indicator</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#UNICODE'>UNICODE</a>
  <li class='indexItem indexItem1'><a href='#SEE_ALSO'>SEE ALSO</a>
  <li class='indexItem indexItem1'><a href='#AUTHOR'>AUTHOR</a>
  <li class='indexItem indexItem1'><a href='#COPYRIGHT'>COPYRIGHT</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Net::SMS - Sends wireless messages to any carrier including text messages and SMS (Short Message Service).</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>The Perl SMS SDK provides easy,
high-level control of the Simplewire wireless text-messaging platform.
The Perl SMS SDK was designed to be as developer-friendly as possible by hiding the intricacies of the XML format required to communicate with the Simplewire WMP (Wireless Message Protocol) servers.
The Perl SMS SDK makes it possible to send an SMS message off with as little as two lines of code.</p>

<p>This software is commercially supported.
Go to www.simplewire.com for more information.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="INSTALLATION"
>INSTALLATION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>For very detailed instructions,
please refer to the .PDF manual that has been included in the /docs directory of the Net-SMS-X.XX.tar.gz download.
Once you unzip and untar this file,
inside the /docs directory will be very detailed installation instructions.</p>

<p>If you are advanced in Perl,
then you may just follow the instructions below.
Place the release file in the root directory.
In the root directory,
execute the following commands,
where &#34;X.XX&#34; represents the specific version being used.</p>

<p>[root]# tar -zxvf Net-SMS-X.XX.tar.gz</p>

<p>[root]# cd Net-SMS-X.XX</p>

<p>[Net-SMS-X.XX]# perl Makefile.PL</p>

<p>[Net-SMS-X.XX]# make</p>

<p>[Net-SMS-X.XX]# make install</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="EXAMPLES"
>EXAMPLES <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>See the /examples folder that is contained within the Net-SMS-X.XX.tar.gz download file.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="QUICK_START"
>QUICK START <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p># Import Module use Net::SMS;</p>

<p># Create Object my $sms = Net::SMS-&#62;new();</p>

<p># Subscriber Settings $sms-&#62;subscriberID(&#34;123-456-789-12345&#34;); $sms-&#62;subscriberPassword(&#34;Password Goes Here&#34;);</p>

<p># Message Settings $sms-&#62;msgPin(&#34;+1 100 510 1234&#34;); $sms-&#62;msgFrom(&#34;Demo&#34;); $sms-&#62;msgCallback(&#34;+1 100 555 1212&#34;); $sms-&#62;msgText(&#34;Hello World From Simplewire!&#34;);</p>

<p>print &#34;Sending message to Simplewire...\n&#34;;</p>

<p># Send Message $sms-&#62;msgSend();</p>

<p># Check For Errors if ($sms-&#62;success) { print &#34;Message was sent!\n&#34;; } else { print &#34;Message was not sent!\n&#34;; print &#34;Error Code: &#34; .
$sms-&#62;errorCode() .
&#34;\n&#34;; print &#34;Error Description: &#34; .
$sms-&#62;errorDesc() .
&#34;\n&#34;; print &#34;Error Resolution: &#34; .
$sms-&#62;errorResolution() .
&#34;\n&#34;; }</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="Receiving_SMS"
>Receiving SMS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Please see <a href="http://www.simplewire.com/services/mo/" class="podlinkurl"
>http://www.simplewire.com/services/mo/</a> for more information on receiving SMS.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="EMS_(Enhanced_Message_Service)"
>EMS (Enhanced Message Service) <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Quick start for EMS:</p>

<pre class="sh_perl">    $sms-&#62;optContentType(&#34;ems&#34;);
    $sms-&#62;emsAddPredefinedSound(1);
    $sms-&#62;emsAddPredefinedAnimation(1);
    $sms-&#62;emsAddSmallPicture(&#34;example.gif&#34;);
    $sms-&#62;emsAddText(&#34;This is an EMS from Simplewire!&#34;);</pre>

<p>Simplewire supports sending EMS messages via its network. The Enhanced Messaging Service (EMS) uses standard SMS and allows the user to add fun visual and audible content to their message. For example, simple animations, pictures, melodies, sounds and even formatting of the text itself, everything mixed together seamlessly into one message.</p>

<p>To activate EMS add the following line to your code:</p>

<pre class="sh_perl">    $sms-&#62;optContentType(&#34;ems&#34;);</pre>

<p>This is a summary of the EMS functions built-in to this SDK:</p>

<pre class="sh_perl">    emsAddText()
    emsAddPredefinedSound()
    emsAddPredefinedAnimation()
    emsAddUserDefinedSound()
    emsAddSmallPicture()
    emsAddSmallPictureHex()
    emsAddLargePicture()
    emsAddLargePictureHex()
    emsAddUserPromptIndicator()</pre>

<p>SMS, and therefore EMS, are not actually sent from handset across the mobile network to handset as it appears to users, but instead messages are sent from handsets, or from Simplewire&#39;s network, to a Short Message Service Center (SMSC) resident on the Operator&#146;s network, and then on to the receiving handset.</p>

<p>EMS has a &#145;Store and Forward&#146; model &#150; i.e. messages are forwarded to the receiving handset as soon as it is reachable, and a user does not have to access a network-based inbox to receive messages. Indeed EMS&#146;s can be received whilst a handset is making a voice call, browsing the Internet, etc. Further, delivery reporting is also supported to enable a user to check that a message has been successfully delivered.</p>

<p>Therefore, EMS has many advantages as a messaging platform for the mobile world, where convenience and ease of use are key.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Pictures"
>Pictures</a></h2>

<pre class="sh_perl">    # 16x16 image, black and white
    $sms-&#62;emsAddSmallPicture(&#34;example.gif&#34;);

    # 32x32 image, black and white
    $sms-&#62;emsAddLargePicture(&#34;large.gif&#34;);</pre>

<p>Pictures are contained within a single SM (Short Message, or &#145;segment&#146; if describing an SM that is part of a concatenated message). It is possible to include either small (16*16 pixels) or large (32*32 pixels). Larger pictures may be sent by joining small pictures together using the emsAddUserPromptIndicator() function. Please see below for UPI description.</p>

<p>EMS Release 4 supports black and white pictures. All pictures are user defined &#150; i.e. although they are either stored on the handset during manufacture, downloaded, or stored from other messages, they are called user-defined as the picture itself is sent over the air (see various &#145;predefined&#146; media detailed below).</p>

<p>Simplewire&#39;s network will convert color GIF images into black and white automatically using a method that takes any color above 50% brightness and turning it to white, and anything below 50% brightness to black. So #999999 is converted to white, while #336699 is converted to black. Of course this example is representing colors using the standard web pallette, but you get the idea.</p>

<p>For exact image recreation, use Photoshop or another editing program to convert your image to black and white.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Animations"
>Animations</a></h2>

<pre class="sh_perl">    # I am laughing
    $sms-&#62;emsAddPredefinedAnimation(7);</pre>

<p>There are a number of predefined animations. These animations are not sent over the air interface, only the identification of them. Basically the originating terminal sends an instruction to the receiving terminal to play, say, pre-defined animation number 9.</p>

<p>As soon as the position of the animation in the SM data is reached, the animation corresponding to the received number is displayed in a manner which is manufacturer specific. Animations are played as soon they are focused. There are 6 predefined animations in Release 4.1.0 (0-5) of EMSI and additional 9 ones as of Release 4.3.0 (0-14) of EMSI. Please find an overview of all these predefined animations below:</p>

<h3><a class='u' href='#___top' title='click to go to top of document'
name="Animation_Description"
>Animation Description</a></h3>

<pre class="sh_perl">    0 I am ironic, flirty
    1 I am glad
    2 I am sceptic
    3 I am sad
    4 WOW!
    5 I am crying
    6 I am winking
    7 I am laughing
    8 I am indifferent
    9 In love/ kissing
    10 I am confused
    11 Tongue hanging out
    12 I am angry
    13 Wearing glasses
    14 Devil</pre>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Sounds"
>Sounds</a></h2>

<p>These may be inserted into text messages to provide audible indications and experiences to the recipient. When they are received, they are played by the receiving handset at an appropriate point in the message.</p>

<h3><a class='u' href='#___top' title='click to go to top of document'
name="Predefined"
>Predefined</a></h3>

<pre class="sh_perl">    # Play the Drums
    $sms-&#62;emsAddPredefinedSound(5);</pre>

<p>There are a number of predefined sounds. These sounds are not transferred over the air interface, only the identification of them. There are 10 different sounds that can be added in the message, and as soon as the sound mark is in focus (on the display), the sound will be played.</p>

<p>Below please find an overview of all these predefined sounds:</p>

<pre class="sh_perl">    0 Chimes high
    1 Chimes low
    2 Ding
    3 Ta Da
    4 Notify
    5 Drum
    6 Claps
    7 Fan Fare
    8 Chords high
    9 Chords low</pre>

<h3><a class='u' href='#___top' title='click to go to top of document'
name="User_Defined"
>User Defined</a></h3>

<pre class="sh_perl">    # Play my sound
    $sms-&#62;emsAddUserDefinedSound(&#34;MELODY:*5c5*5e4*5c5*5e4*4e5*4g4*4e5&#34;);</pre>

<p>User defined sounds are sent over the air interface. They are monophonic only, use the iMelody format, and have a maximum length of 128 Bytes without the use of the UPI (see the UPI section below). Please note, we have found that many EMS phones do not support UPI for user defined melodies.</p>

<p>We have found that the following format, although based on the EMSI standard, bloats the melody data heavily, and is not needed. The MELODY: line item is typically all you need.</p>

<p>For example, this will work fine:</p>

<pre class="sh_perl">    MELODY:*5f3r4*5f4*5c4r4*5f1r3*4#g3*4a2*5c3*4f2r3*4a4*5c4*5f3</pre>

<p>Rather than:</p>

<pre class="sh_perl">    BEGIN:IMELODY
        VERSION:1.2
        FORMAT:CLASS1.0
        NAME:A-Team Theme Song
        MELODY:*5f3r4*5f4*5c4r4*5f1r3*4#g3*4a2*5c3*4f2r3*4a4*5c4*5f3
        END:IMELODY</pre>

<p>The official format of the iMelody is constituted of a header, the melody and a footer.</p>

<h4><a class='u' href='#___top' title='click to go to top of document'
name="Header"
>Header</a></h4>

<pre class="sh_perl">    Desc:      &#147;BEGIN:IMELODY&#148;&#60;cr&#62;&#60;line-feed&#62;
    Example:   &#147;BEGIN:IMELODY&#148;&#60;cr&#62;&#60;line-feed&#62;
    Status:    Mandatory

    Desc:      &#147;VERSION:&#148;&#60;version&#62;&#60;cr&#62;&#60;line-feed&#62;
    Example:   &#147;VERSION:1.2&#148;&#60;cr&#62;&#60;line-feed&#62; 
    Status:    Mandatory (We&#39;ve found this to be optional)

    Desc:      &#147;FORMAT:&#148;&#60;format&#62;&#60;cr&#62;&#60;linefeed&#62;
    Example:   &#147;FORMAT:CLASS1.0&#148;&#60;cr&#62;&#60;line-feed&#62; 
    Status:    Mandatory (We&#39;ve found this to be optional)

    Desc:      &#147;NAME:&#148;&#60;characters-notlf&#62;&#60;cr&#62;&#60;line-feed&#62;
    Example:   &#147;NAME:My song&#148;&#60;cr&#62;&#60;line-feed&#62; 
    Status:    Optional

    Desc:      &#147;COMPOSER:&#148;&#60;characters-notlf&#62;&#60;cr&#62;&#60;line-feed&#62;
    Example:   &#147;COMPOSER:John Doe&#148;&#60;cr&#62;&#60;line-feed&#62; 
    Status:    Optional

    Desc:      &#147;BEAT:&#148;&#60;beat&#62;&#60;cr&#62;&#60;line-feed&#62; 
    Example:   &#147;BEAT:240&#148;&#60;cr&#62;&#60;line-feed&#62; 
    Status:    Optional

    Desc:      &#147;STYLE:&#148;&#60;style&#62;&#60;cr&#62;&#60;line-feed&#62;
    Example:   &#147;STYLE:S2&#148;&#60;cr&#62;&#60;line-feed&#62; 
    Status:    Optional

    Desc:      &#147;VOLUME:&#148;&#60;volume&#62;&#60;cr&#62;&#60;linefeed&#62;
    Example:   &#147;VOLUME:V8&#148;&#60;cr&#62;&#60;line-feed&#62; 
    Status:    Optional

    &#60;format&#62; ::= &#147;CLASS1.0&#148;
    iMelody also defines a &#34;CLASS2.0&#34; format.

    &#60;beat&#62;::=&#34;25&#34; | &#34;26&#34; | &#34;27&#34; | ... | &#34;899&#34; | &#34;900&#34;
    &#60;style&#62;::= &#34;S0&#34; | &#34;S1&#34; | &#34;S2&#34;
    &#60;volume-modifier&#62;::=&#148;V+&#148;|&#148;V-&#147; (changes volume + or &#150; from current volume)
    &#60;volume&#62;::=&#34;V0&#34; | &#34;V1&#34; | ... | &#34;V15&#34; |&#60;volume-modifier&#62;
    &#60;characters-not-lf&#62; ::= &#146;Any character in the ASCII character-set except &#60;line-feed&#62;.&#146;</pre>

<h4><a class='u' href='#___top' title='click to go to top of document'
name="Footer"
>Footer</a></h4>

<pre class="sh_perl">    Desc:      &#147;END:IMELODY&#148;&#60;cr&#62;&#60;line-feed&#62; 
    Example:   &#147;END:IMELODY&#148;&#60;cr&#62;&#60;line-feed&#62; 
    Status:    Mandatory</pre>

<h4><a class='u' href='#___top' title='click to go to top of document'
name="Melody"
>Melody</a></h4>

<pre class="sh_perl">    Desc:      &#147;MELODY:&#148;&#60;melody&#62;&#60;cr&#62;&#60;linefeed&#62;
    Example:   &#147;MELODY:c2d2e2f2&#148;&#60;cr&#62;&#60;line-feed&#62; 
    Status:    Mandatory</pre>

<p>The melody is composed as follow: &#60;melody&#62; ::= { &#60;silence&#62; | &#60;note&#62; | &#60;led&#62; | &#60;vib&#62; | &#60;backlight&#62; | &#60;repeat&#62; | &#60;volume&#62; }+ &#60;volume-modifier&#62;::=&#148;V+&#148;|&#148;V-&#147; (changes volume + or &#150; from current volume) &#60;volume&#62;::=&#34;V0&#34; | &#34;V1&#34; | ... | &#34;V15&#34; |&#60;volume-modifier&#62; &#60;led&#62; ::= &#147;ledoff&#148; | &#147;ledon&#148; &#60;vibe&#62; ::= &#147;vibeon&#148; | &#147;vibeoff&#148; &#60;backlight&#62; ::= &#147;backon&#148; | &#147;backoff&#148; &#60;repeat&#62; ::= &#147;(&#147; | &#147;)&#148; | &#147;@&#148;&#60;repeat-count&#62; &#60;repeat-count&#62; ::= &#147;0&#148; | &#147;1&#148; | ... &#60;silence&#62; ::= &#147;r&#148;&#60;duration&#62;[&#60;duration-specifier&#62;] &#60;note&#62; ::= [&#60;octave-prefix&#62;]&#60;basic-ess-iss-note&#62;&#60;duration&#62;[&#60;duration-specifier&#62;] &#60;duration&#62; := &#147;0&#148; | &#147;1&#148; | &#147;2&#148; | &#147;3&#148; | &#147;4&#148; | &#147;5&#148; &#60;duration-specifier&#62; ::= &#147;.&#148; | &#147;:&#148; | &#147;;&#148; &#60;octave-prefix&#62; ::= &#147;*0&#148; | &#147;*1&#148; | ... | &#147;*8&#148; (A=55Hz) | (A=110Hz) | ... | (A=14080Hz) &#60;basic-ess-iss-note&#62; ::= &#60;basic-note&#62; | &#60;ess-note&#62; | &#60;iss-note&#62; &#60;basic-note&#62; ::= &#147;c&#146;&#148; | &#147;d&#148; | &#147;e&#148; | &#147;f&#148; | &#147;g&#148; | &#147;a&#148; | &#147;b&#148; &#60;ess-note&#62; ::= &#147;&#38;d&#148; | &#147;&#38;e&#148; | &#147;&#38;g&#148; | &#147;&#38;a&#148; | &#147;&#38;b&#148; &#60;iss-note&#62; ::= &#147;#c&#148; | &#147;#d&#148; | &#147;#f&#148; | &#147;#g&#148; | &#147;#a&#148;</p>

<p>Duration</p>

<pre class="sh_perl">    Value Duration
    0     Full-note
    1     &#189;-note
    2     &#188;-note
    3     1/8-note
    4     1/16-note
    5     1/32-note</pre>

<p>Duration Specifier</p>

<pre class="sh_perl">    Value Duration
          No special duration
    .     Dotted note
    :     Double dotted note
    ;     2/3 length</pre>

<p>The octave prefix only applies to the immediately following note. If not specified, the default octave-prefix is *4. i.e. A=880Hz.</p>

<p>The repeat blocks cannot be nested in this simple CLASS1.0 definition. The default character set is UTF-8.</p>

<p>The maximum length for a melody is 128 bytes (this includes the melody header and footer).</p>

<p>Example of a &#171;CLASS1&#187; iMelody object:</p>

<pre class="sh_perl">    Mandatory Header       BEGIN:IMELODY
                           VERSION:1.2
                           FORMAT:CLASS1.0
    Mandatory Melody       MELODY:&#38;b2#c3V&#150;c2*4g3d3V+#d1r3d2e2:d1V+f2f3.
    Mandotory Footer       END:IMELODY</pre>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Concatenation"
>Concatenation</a></h2>

<pre class="sh_perl">    # Concatenate three SMS messages to make one
    # Each SMS can contain 140 bytes, and we&#39;ve
    # added enough content to take up 320 bytes
    # 140 bytes - 1st message
    # 140 bytes - 2nd message
    # 40 bytes  - 3rd message
    $sms-&#62;emsAddUserPromptIndicator(3);</pre>

<p>The Simplewire network supports concatenated EMS messages &#150; the ability for the SMS handset to automatically combine several Short Messages. This feature is extremely useful because of the restrictions on the amount of information that an SMS can carry - in GSM the amount of information that can be carried within an SMS is only 140 bytes.</p>

<p>The handset is therefore able to both send and receive longer, richer messages. The Standard allows up to 255 messages to be concatenated into one, however, current phones support anywhere between 3 and 10 segments, and each handset should be investigated for its level of support.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="User_Prompt_Indicator"
>User Prompt Indicator</a></h2>

<p>This feature introduced in 3GPP TS 23.040 Release 4 allows handsets to stitch pictures and user-defined sounds. It also allows the user to be prompted upon reception of the message to execute media specific actions (storage, handset personalisation, etc.).</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="UNICODE"
>UNICODE <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>For Unicode characters in the range 0x00 to 0xFF, you can use the Perl hexadecimal escape sequence.</p>

<p>Format: \x##</p>

<p>Backslash + Lowercase &#39;x&#39; + Two Hex Digits</p>

<p>Example: $r-&#62;msgText( &#34;Uppercase Z: \x5A&#34; );</p>

<p>For Unicode characters in the range 0x0000 to 0xFFFF, Simplewire provides its own escape sequence. This is only for use with the msgFrom and msgText methods.</p>

<p>Format: \\X####</p>

<p>Backslash + Backslash + Uppercase &#39;X&#39; + Four Hex Digits</p>

<p>Example: $r-&#62;msgText( &#34;Smiley Face: \\X263A&#34; );</p>

<p>Note: Both sequences can be used in the same string. Example: $r-&#62;msgText( &#34;Degree Sign: \xB0 \n Tilde: \\X007E&#34; );</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SEE_ALSO"
>SEE ALSO <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>/Net-SMS-X.XX/examples/</p>

<p>/Net-SMS-X.XX/docs/sw-doc-manual-perl-2.4.0.pdf</p>

<p>Visit <a href="http://www.simplewire.com/" class="podlinkurl"
>http://www.simplewire.com/</a></p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHOR"
>AUTHOR <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Simplewire &#60;support@simplewire.com&#62; www.simplewire.com</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="COPYRIGHT"
>COPYRIGHT <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Please refer to License.txt within the Net-SMS-X.XX.tar.gz file for licensing information.</p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78236 Uploads, 24724 Distributions
106030 Modules, 9649 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Fri Apr 27 01:40:23 2012 GMT (0.12503719329834) @cpansearch1 -->
 </body>
</html>
