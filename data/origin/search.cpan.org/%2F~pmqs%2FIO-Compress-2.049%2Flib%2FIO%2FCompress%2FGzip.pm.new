<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>IO::Compress::Gzip - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","IO-Compress",3]);
    _gaq.push(["_setCustomVar",5,"Release","IO-Compress-2.049",3]);
    _gaq.push(["_setCustomVar",3,"Module","IO::Compress::Gzip",3]);
    _gaq.push(["_setCustomVar",1,"Author","PMQS",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?IO::Compress::Gzip">permalink</a></div>
  <a href="/~pmqs/">Paul Marquess</a> &gt;
  <a href="/~pmqs/IO-Compress-2.049/">IO-Compress-2.049</a> &gt;
  IO::Compress::Gzip
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/1bf245ac173d6991ade027315ff58683?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/P/PM/PMQS/IO-Compress-2.049.tar.gz">IO-Compress-2.049.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=IO%3A%3ACompress%3A%3AGzip;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~PMQS/IO-Compress-2.049/lib/IO/Compress/Gzip.pm">Annotate this POD
</a></p>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>Open&nbsp;</td><td style="text-align:right"> 7</td></tr>
</table>
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=IO-Compress">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  2.049 &nbsp;
<span class="noprint">
  <a href="/src/PMQS/IO-Compress-2.049/lib/IO/Compress/Gzip.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <li class='indexItem indexItem1'><a href='#Functional_Interface'>Functional Interface</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#gzip_$input_=&#62;_$output_[,_OPTS]'>gzip $input =&#62; $output [, OPTS]</a>
    <ul   class='indexList indexList3'>
      <li class='indexItem indexItem3'><a href='#The_$input_parameter'>The $input parameter</a>
      <li class='indexItem indexItem3'><a href='#The_$output_parameter'>The $output parameter</a>
    </ul>
    <li class='indexItem indexItem2'><a href='#Notes'>Notes</a>
    <li class='indexItem indexItem2'><a href='#Optional_Parameters'>Optional Parameters</a>
    <li class='indexItem indexItem2'><a href='#Examples'>Examples</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#OO_Interface'>OO Interface</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#Constructor'>Constructor</a>
    <li class='indexItem indexItem2'><a href='#Constructor_Options'>Constructor Options</a>
    <li class='indexItem indexItem2'><a href='#Examples'>Examples</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#Methods'>Methods</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#print'>print</a>
    <li class='indexItem indexItem2'><a href='#printf'>printf</a>
    <li class='indexItem indexItem2'><a href='#syswrite'>syswrite</a>
    <li class='indexItem indexItem2'><a href='#write'>write</a>
    <li class='indexItem indexItem2'><a href='#flush'>flush</a>
    <li class='indexItem indexItem2'><a href='#tell'>tell</a>
    <li class='indexItem indexItem2'><a href='#eof'>eof</a>
    <li class='indexItem indexItem2'><a href='#seek'>seek</a>
    <li class='indexItem indexItem2'><a href='#binmode'>binmode</a>
    <li class='indexItem indexItem2'><a href='#opened'>opened</a>
    <li class='indexItem indexItem2'><a href='#autoflush'>autoflush</a>
    <li class='indexItem indexItem2'><a href='#input_line_number'>input_line_number</a>
    <li class='indexItem indexItem2'><a href='#fileno'>fileno</a>
    <li class='indexItem indexItem2'><a href='#close'>close</a>
    <li class='indexItem indexItem2'><a href='#newStream([OPTS])'>newStream([OPTS])</a>
    <li class='indexItem indexItem2'><a href='#deflateParams'>deflateParams</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#Importing'>Importing</a>
  <li class='indexItem indexItem1'><a href='#EXAMPLES'>EXAMPLES</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#Apache::GZip_Revisited'>Apache::GZip Revisited</a>
    <li class='indexItem indexItem2'><a href='#Working_with_Net::FTP'>Working with Net::FTP</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#SEE_ALSO'>SEE ALSO</a>
  <li class='indexItem indexItem1'><a href='#AUTHOR'>AUTHOR</a>
  <li class='indexItem indexItem1'><a href='#MODIFICATION_HISTORY'>MODIFICATION HISTORY</a>
  <li class='indexItem indexItem1'><a href='#COPYRIGHT_AND_LICENSE'>COPYRIGHT AND LICENSE</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>IO::Compress::Gzip - Write RFC 1952 files/buffers</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">    use IO::Compress::Gzip qw(gzip $GzipError) ;

    my $status = gzip $input =&#62; $output [,OPTS] 
        or die &#34;gzip failed: $GzipError\n&#34;;

    my $z = new IO::Compress::Gzip $output [,OPTS]
        or die &#34;gzip failed: $GzipError\n&#34;;

    $z-&#62;print($string);
    $z-&#62;printf($format, $string);
    $z-&#62;write($string);
    $z-&#62;syswrite($string [, $length, $offset]);
    $z-&#62;flush();
    $z-&#62;tell();
    $z-&#62;eof();
    $z-&#62;seek($position, $whence);
    $z-&#62;binmode();
    $z-&#62;fileno();
    $z-&#62;opened();
    $z-&#62;autoflush();
    $z-&#62;input_line_number();
    $z-&#62;newStream( [OPTS] );
    
    $z-&#62;deflateParams();
    
    $z-&#62;close() ;

    $GzipError ;

    # IO::File mode

    print $z $string;
    printf $z $format, $string;
    tell $z
    eof $z
    seek $z, $position, $whence
    binmode $z
    fileno $z
    close $z ;</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This module provides a Perl interface that allows writing compressed data to files or buffer as defined in RFC 1952.</p>

<p>All the gzip headers defined in RFC 1952 can be created using this module.</p>

<p>For reading RFC 1952 files/buffers, see the companion module <a href="/~pmqs/IO-Compress-2.049/lib/IO/Uncompress/Gunzip.pm" class="podlinkpod"
>IO::Uncompress::Gunzip</a>.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="Functional_Interface"
>Functional Interface <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>A top-level function, <code>gzip</code>, is provided to carry out &#34;one-shot&#34; compression between buffers and/or files. For finer control over the compression process, see the <a href="#OO_Interface" class="podlinkpod"
>&#34;OO Interface&#34;</a> section.</p>

<pre class="sh_perl">    use IO::Compress::Gzip qw(gzip $GzipError) ;

    gzip $input =&#62; $output [,OPTS] 
        or die &#34;gzip failed: $GzipError\n&#34;;</pre>

<p>The functional interface needs Perl5.005 or better.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="gzip_$input_=&#62;_$output_[,_OPTS]"
>gzip $input =&#62; $output [, OPTS]</a></h2>

<p><code>gzip</code> expects at least two parameters, <code>$input</code> and <code>$output</code>.</p>

<h3><a class='u' href='#___top' title='click to go to top of document'
name="The_$input_parameter"
>The <code>$input</code> parameter</a></h3>

<p>The parameter, <code>$input</code>, is used to define the source of the uncompressed data.</p>

<p>It can take one of the following forms:</p>

<dl>
<dt><a name='A'></a><a name="A_filename"
>A filename</a></dt>

<dd>
<p>If the <code>$input</code> parameter is a simple scalar, it is assumed to be a filename. This file will be opened for reading and the input data will be read from it.</p>

<dt><a name='A'></a><a name="A_filehandle"
>A filehandle</a></dt>

<dd>
<p>If the <code>$input</code> parameter is a filehandle, the input data will be read from it. The string &#39;-&#39; can be used as an alias for standard input.</p>

<dt><a name='A'></a><a name="A_scalar_reference"
>A scalar reference</a></dt>

<dd>
<p>If <code>$input</code> is a scalar reference, the input data will be read from <code>$$input</code>.</p>

<dt><a name='An'></a><a name="An_array_reference"
>An array reference</a></dt>

<dd>
<p>If <code>$input</code> is an array reference, each element in the array must be a filename.</p>

<p>The input data will be read from each file in turn.</p>

<p>The complete array will be walked to ensure that it only contains valid filenames before any data is compressed.</p>

<dt><a name='An'></a><a name="An_Input_FileGlob_string"
>An Input FileGlob string</a></dt>

<dd>
<p>If <code>$input</code> is a string that is delimited by the characters &#34;&#60;&#34; and &#34;&#62;&#34; <code>gzip</code> will assume that it is an <i>input fileglob string</i>. The input is the list of files that match the fileglob.</p>

<p>See <a href="/~pmqs/IO-Compress-2.049/lib/File/GlobMapper.pm" class="podlinkpod"
>File::GlobMapper</a> for more details.</p>
</dd>
</dl>

<p>If the <code>$input</code> parameter is any other type, <code>undef</code> will be returned.</p>

<p>In addition, if <code>$input</code> is a simple filename, the default values for the <code>Name</code> and <code>Time</code> options will be sourced from that file.</p>

<p>If you do not want to use these defaults they can be overridden by explicitly setting the <code>Name</code> and <code>Time</code> options or by setting the <code>Minimal</code> parameter.</p>

<h3><a class='u' href='#___top' title='click to go to top of document'
name="The_$output_parameter"
>The <code>$output</code> parameter</a></h3>

<p>The parameter <code>$output</code> is used to control the destination of the compressed data. This parameter can take one of these forms.</p>

<dl>
<dt><a name='A'></a><a name="A_filename"
>A filename</a></dt>

<dd>
<p>If the <code>$output</code> parameter is a simple scalar, it is assumed to be a filename. This file will be opened for writing and the compressed data will be written to it.</p>

<dt><a name='A'></a><a name="A_filehandle"
>A filehandle</a></dt>

<dd>
<p>If the <code>$output</code> parameter is a filehandle, the compressed data will be written to it. The string &#39;-&#39; can be used as an alias for standard output.</p>

<dt><a name='A'></a><a name="A_scalar_reference"
>A scalar reference</a></dt>

<dd>
<p>If <code>$output</code> is a scalar reference, the compressed data will be stored in <code>$$output</code>.</p>

<dt><a name='An'></a><a name="An_Array_Reference"
>An Array Reference</a></dt>

<dd>
<p>If <code>$output</code> is an array reference, the compressed data will be pushed onto the array.</p>

<dt><a name='An'></a><a name="An_Output_FileGlob"
>An Output FileGlob</a></dt>

<dd>
<p>If <code>$output</code> is a string that is delimited by the characters &#34;&#60;&#34; and &#34;&#62;&#34; <code>gzip</code> will assume that it is an <i>output fileglob string</i>. The output is the list of files that match the fileglob.</p>

<p>When <code>$output</code> is an fileglob string, <code>$input</code> must also be a fileglob string. Anything else is an error.</p>

<p>See <a href="/~pmqs/IO-Compress-2.049/lib/File/GlobMapper.pm" class="podlinkpod"
>File::GlobMapper</a> for more details.</p>
</dd>
</dl>

<p>If the <code>$output</code> parameter is any other type, <code>undef</code> will be returned.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Notes"
>Notes</a></h2>

<p>When <code>$input</code> maps to multiple files/buffers and <code>$output</code> is a single file/buffer the input files/buffers will be stored in <code>$output</code> as a concatenated series of compressed data streams.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Optional_Parameters"
>Optional Parameters</a></h2>

<p>Unless specified below, the optional parameters for <code>gzip</code>, <code>OPTS</code>, are the same as those used with the OO interface defined in the <a href="#Constructor_Options" class="podlinkpod"
>&#34;Constructor Options&#34;</a> section below.</p>

<dl>
<dt><a name='AutoClose'></a><a name="AutoClose_=&#62;_0|1"
><code>AutoClose =&#62; 0|1</code></a></dt>

<dd>
<p>This option applies to any input or output data streams to <code>gzip</code> that are filehandles.</p>

<p>If <code>AutoClose</code> is specified, and the value is true, it will result in all input and/or output filehandles being closed once <code>gzip</code> has completed.</p>

<p>This parameter defaults to 0.</p>

<dt><a name='BinModeIn'></a><a name="BinModeIn_=&#62;_0|1"
><code>BinModeIn =&#62; 0|1</code></a></dt>

<dd>
<p>When reading from a file or filehandle, set <code>binmode</code> before reading.</p>

<p>Defaults to 0.</p>

<dt><a name='Append'></a><a name="Append_=&#62;_0|1"
><code>Append =&#62; 0|1</code></a></dt>

<dd>
<p>The behaviour of this option is dependent on the type of output data stream.</p>

<ul>
<li>A Buffer
<p>If <code>Append</code> is enabled, all compressed data will be append to the end of the output buffer. Otherwise the output buffer will be cleared before any compressed data is written to it.</p>
</li>

<li>A Filename
<p>If <code>Append</code> is enabled, the file will be opened in append mode. Otherwise the contents of the file, if any, will be truncated before any compressed data is written to it.</p>
</li>

<li>A Filehandle
<p>If <code>Append</code> is enabled, the filehandle will be positioned to the end of the file via a call to <code>seek</code> before any compressed data is written to it. Otherwise the file pointer will not be moved.</p>
</li>
</ul>

<p>When <code>Append</code> is specified, and set to true, it will <i>append</i> all compressed data to the output data stream.</p>

<p>So when the output is a filehandle it will carry out a seek to the eof before writing any compressed data. If the output is a filename, it will be opened for appending. If the output is a buffer, all compressed data will be appended to the existing buffer.</p>

<p>Conversely when <code>Append</code> is not specified, or it is present and is set to false, it will operate as follows.</p>

<p>When the output is a filename, it will truncate the contents of the file before writing any compressed data. If the output is a filehandle its position will not be changed. If the output is a buffer, it will be wiped before any compressed data is output.</p>

<p>Defaults to 0.</p>
</dd>
</dl>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Examples"
>Examples</a></h2>

<p>To read the contents of the file <code>file1.txt</code> and write the compressed data to the file <code>file1.txt.gz</code>.</p>

<pre class="sh_perl">    use strict ;
    use warnings ;
    use IO::Compress::Gzip qw(gzip $GzipError) ;

    my $input = &#34;file1.txt&#34;;
    gzip $input =&#62; &#34;$input.gz&#34;
        or die &#34;gzip failed: $GzipError\n&#34;;</pre>

<p>To read from an existing Perl filehandle, <code>$input</code>, and write the compressed data to a buffer, <code>$buffer</code>.</p>

<pre class="sh_perl">    use strict ;
    use warnings ;
    use IO::Compress::Gzip qw(gzip $GzipError) ;
    use IO::File ;

    my $input = new IO::File &#34;&#60;file1.txt&#34;
        or die &#34;Cannot open &#39;file1.txt&#39;: $!\n&#34; ;
    my $buffer ;
    gzip $input =&#62; \$buffer 
        or die &#34;gzip failed: $GzipError\n&#34;;</pre>

<p>To compress all files in the directory &#34;/my/home&#34; that match &#34;*.txt&#34; and store the compressed data in the same directory</p>

<pre class="sh_perl">    use strict ;
    use warnings ;
    use IO::Compress::Gzip qw(gzip $GzipError) ;

    gzip &#39;&#60;/my/home/*.txt&#62;&#39; =&#62; &#39;&#60;*.gz&#62;&#39;
        or die &#34;gzip failed: $GzipError\n&#34;;</pre>

<p>and if you want to compress each file one at a time, this will do the trick</p>

<pre class="sh_perl">    use strict ;
    use warnings ;
    use IO::Compress::Gzip qw(gzip $GzipError) ;

    for my $input ( glob &#34;/my/home/*.txt&#34; )
    {
        my $output = &#34;$input.gz&#34; ;
        gzip $input =&#62; $output 
            or die &#34;Error compressing &#39;$input&#39;: $GzipError\n&#34;;
    }</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="OO_Interface"
>OO Interface <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Constructor"
>Constructor</a></h2>

<p>The format of the constructor for <code>IO::Compress::Gzip</code> is shown below</p>

<pre class="sh_perl">    my $z = new IO::Compress::Gzip $output [,OPTS]
        or die &#34;IO::Compress::Gzip failed: $GzipError\n&#34;;</pre>

<p>It returns an <code>IO::Compress::Gzip</code> object on success and undef on failure. The variable <code>$GzipError</code> will contain an error message on failure.</p>

<p>If you are running Perl 5.005 or better the object, <code>$z</code>, returned from IO::Compress::Gzip can be used exactly like an <a href="/perldoc?IO%3A%3AFile" class="podlinkpod"
>IO::File</a> filehandle. This means that all normal output file operations can be carried out with <code>$z</code>. For example, to write to a compressed file/buffer you can use either of these forms</p>

<pre class="sh_perl">    $z-&#62;print(&#34;hello world\n&#34;);
    print $z &#34;hello world\n&#34;;</pre>

<p>The mandatory parameter <code>$output</code> is used to control the destination of the compressed data. This parameter can take one of these forms.</p>

<dl>
<dt><a name='A'></a><a name="A_filename"
>A filename</a></dt>

<dd>
<p>If the <code>$output</code> parameter is a simple scalar, it is assumed to be a filename. This file will be opened for writing and the compressed data will be written to it.</p>

<dt><a name='A'></a><a name="A_filehandle"
>A filehandle</a></dt>

<dd>
<p>If the <code>$output</code> parameter is a filehandle, the compressed data will be written to it. The string &#39;-&#39; can be used as an alias for standard output.</p>

<dt><a name='A'></a><a name="A_scalar_reference"
>A scalar reference</a></dt>

<dd>
<p>If <code>$output</code> is a scalar reference, the compressed data will be stored in <code>$$output</code>.</p>
</dd>
</dl>

<p>If the <code>$output</code> parameter is any other type, <code>IO::Compress::Gzip</code>::new will return undef.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Constructor_Options"
>Constructor Options</a></h2>

<p><code>OPTS</code> is any combination of the following options:</p>

<dl>
<dt><a name='AutoClose'></a><a name="AutoClose_=&#62;_0|1"
><code>AutoClose =&#62; 0|1</code></a></dt>

<dd>
<p>This option is only valid when the <code>$output</code> parameter is a filehandle. If specified, and the value is true, it will result in the <code>$output</code> being closed once either the <code>close</code> method is called or the <code>IO::Compress::Gzip</code> object is destroyed.</p>

<p>This parameter defaults to 0.</p>

<dt><a name='Append'></a><a name="Append_=&#62;_0|1"
><code>Append =&#62; 0|1</code></a></dt>

<dd>
<p>Opens <code>$output</code> in append mode.</p>

<p>The behaviour of this option is dependent on the type of <code>$output</code>.</p>

<ul>
<li>A Buffer
<p>If <code>$output</code> is a buffer and <code>Append</code> is enabled, all compressed data will be append to the end of <code>$output</code>. Otherwise <code>$output</code> will be cleared before any data is written to it.</p>
</li>

<li>A Filename
<p>If <code>$output</code> is a filename and <code>Append</code> is enabled, the file will be opened in append mode. Otherwise the contents of the file, if any, will be truncated before any compressed data is written to it.</p>
</li>

<li>A Filehandle
<p>If <code>$output</code> is a filehandle, the file pointer will be positioned to the end of the file via a call to <code>seek</code> before any compressed data is written to it. Otherwise the file pointer will not be moved.</p>
</li>
</ul>

<p>This parameter defaults to 0.</p>

<dt><a name='Merge'></a><a name="Merge_=&#62;_0|1"
><code>Merge =&#62; 0|1</code></a></dt>

<dd>
<p>This option is used to compress input data and append it to an existing compressed data stream in <code>$output</code>. The end result is a single compressed data stream stored in <code>$output</code>.</p>

<p>It is a fatal error to attempt to use this option when <code>$output</code> is not an RFC 1952 data stream.</p>

<p>There are a number of other limitations with the <code>Merge</code> option:</p>

<ol>
<li>This module needs to have been built with zlib 1.2.1 or better to work. A fatal error will be thrown if <code>Merge</code> is used with an older version of zlib.</li>

<li>If <code>$output</code> is a file or a filehandle, it must be seekable.</li>
</ol>

<p>This parameter defaults to 0.</p>

<dt><a name='Level'></a><a name="-Level"
>-Level</a></dt>

<dd>
<p>Defines the compression level used by zlib. The value should either be a number between 0 and 9 (0 means no compression and 9 is maximum compression), or one of the symbolic constants defined below.</p>

<pre class="sh_perl">   Z_NO_COMPRESSION
   Z_BEST_SPEED
   Z_BEST_COMPRESSION
   Z_DEFAULT_COMPRESSION</pre>

<p>The default is Z_DEFAULT_COMPRESSION.</p>

<p>Note, these constants are not imported by <code>IO::Compress::Gzip</code> by default.</p>

<pre class="sh_perl">    use IO::Compress::Gzip qw(:strategy);
    use IO::Compress::Gzip qw(:constants);
    use IO::Compress::Gzip qw(:all);</pre>

<dt><a name='Strategy'></a><a name="-Strategy"
>-Strategy</a></dt>

<dd>
<p>Defines the strategy used to tune the compression. Use one of the symbolic constants defined below.</p>

<pre class="sh_perl">   Z_FILTERED
   Z_HUFFMAN_ONLY
   Z_RLE
   Z_FIXED
   Z_DEFAULT_STRATEGY</pre>

<p>The default is Z_DEFAULT_STRATEGY.</p>

<dt><a name='Minimal'></a><a name="Minimal_=&#62;_0|1"
><code>Minimal =&#62; 0|1</code></a></dt>

<dd>
<p>If specified, this option will force the creation of the smallest possible compliant gzip header (which is exactly 10 bytes long) as defined in RFC 1952.</p>

<p>See the section titled &#34;Compliance&#34; in RFC 1952 for a definition of the values used for the fields in the gzip header.</p>

<p>All other parameters that control the content of the gzip header will be ignored if this parameter is set to 1.</p>

<p>This parameter defaults to 0.</p>

<dt><a name='Comment'></a><a name="Comment_=&#62;_$comment"
><code>Comment =&#62; $comment</code></a></dt>

<dd>
<p>Stores the contents of <code>$comment</code> in the COMMENT field in the gzip header. By default, no comment field is written to the gzip file.</p>

<p>If the <code>-Strict</code> option is enabled, the comment can only consist of ISO 8859-1 characters plus line feed.</p>

<p>If the <code>-Strict</code> option is disabled, the comment field can contain any character except NULL. If any null characters are present, the field will be truncated at the first NULL.</p>

<dt><a name='Name'></a><a name="Name_=&#62;_$string"
><code>Name =&#62; $string</code></a></dt>

<dd>
<p>Stores the contents of <code>$string</code> in the gzip NAME header field. If <code>Name</code> is not specified, no gzip NAME field will be created.</p>

<p>If the <code>-Strict</code> option is enabled, <code>$string</code> can only consist of ISO 8859-1 characters.</p>

<p>If <code>-Strict</code> is disabled, then <code>$string</code> can contain any character except NULL. If any null characters are present, the field will be truncated at the first NULL.</p>

<dt><a name='Time'></a><a name="Time_=&#62;_$number"
><code>Time =&#62; $number</code></a></dt>

<dd>
<p>Sets the MTIME field in the gzip header to $number.</p>

<p>This field defaults to the time the <code>IO::Compress::Gzip</code> object was created if this option is not specified.</p>

<dt><a name='TextFlag'></a><a name="TextFlag_=&#62;_0|1"
><code>TextFlag =&#62; 0|1</code></a></dt>

<dd>
<p>This parameter controls the setting of the FLG.FTEXT bit in the gzip header. It is used to signal that the data stored in the gzip file/buffer is probably text.</p>

<p>The default is 0.</p>

<dt><a name='HeaderCRC'></a><a name="HeaderCRC_=&#62;_0|1"
><code>HeaderCRC =&#62; 0|1</code></a></dt>

<dd>
<p>When true this parameter will set the FLG.FHCRC bit to 1 in the gzip header and set the CRC16 header field to the CRC of the complete gzip header except the CRC16 field itself.</p>

<p><b>Note</b> that gzip files created with the <code>HeaderCRC</code> flag set to 1 cannot be read by most, if not all, of the the standard gunzip utilities, most notably gzip version 1.2.4. You should therefore avoid using this option if you want to maximize the portability of your gzip files.</p>

<p>This parameter defaults to 0.</p>

<dt><a name='OS_Code'></a><a name="OS_Code_=&#62;_$value"
><code>OS_Code =&#62; $value</code></a></dt>

<dd>
<p>Stores <code>$value</code> in the gzip OS header field. A number between 0 and 255 is valid.</p>

<p>If not specified, this parameter defaults to the OS code of the Operating System this module was built on. The value 3 is used as a catch-all for all Unix variants and unknown Operating Systems.</p>

<dt><a name='ExtraField'></a><a name="ExtraField_=&#62;_$data"
><code>ExtraField =&#62; $data</code></a></dt>

<dd>
<p>This parameter allows additional metadata to be stored in the ExtraField in the gzip header. An RFC 1952 compliant ExtraField consists of zero or more subfields. Each subfield consists of a two byte header followed by the subfield data.</p>

<p>The list of subfields can be supplied in any of the following formats</p>

<pre class="sh_perl">    -ExtraField =&#62; [$id1, $data1,
                    $id2, $data2,
                     ...
                   ]
    -ExtraField =&#62; [ [$id1 =&#62; $data1],
                     [$id2 =&#62; $data2],
                     ...
                   ]
    -ExtraField =&#62; { $id1 =&#62; $data1,
                     $id2 =&#62; $data2,
                     ...
                   }</pre>

<p>Where <code>$id1</code>, <code>$id2</code> are two byte subfield ID&#39;s. The second byte of the ID cannot be 0, unless the <code>Strict</code> option has been disabled.</p>

<p>If you use the hash syntax, you have no control over the order in which the ExtraSubFields are stored, plus you cannot have SubFields with duplicate ID.</p>

<p>Alternatively the list of subfields can by supplied as a scalar, thus</p>

<pre class="sh_perl">    -ExtraField =&#62; $rawdata</pre>

<p>If you use the raw format, and the <code>Strict</code> option is enabled, <code>IO::Compress::Gzip</code> will check that <code>$rawdata</code> consists of zero or more conformant sub-fields. When <code>Strict</code> is disabled, <code>$rawdata</code> can consist of any arbitrary byte stream.</p>

<p>The maximum size of the Extra Field 65535 bytes.</p>

<dt><a name='ExtraFlags'></a><a name="ExtraFlags_=&#62;_$value"
><code>ExtraFlags =&#62; $value</code></a></dt>

<dd>
<p>Sets the XFL byte in the gzip header to <code>$value</code>.</p>

<p>If this option is not present, the value stored in XFL field will be determined by the setting of the <code>Level</code> option.</p>

<p>If <code>Level =&#62; Z_BEST_SPEED</code> has been specified then XFL is set to 2. If <code>Level =&#62; Z_BEST_COMPRESSION</code> has been specified then XFL is set to 4. Otherwise XFL is set to 0.</p>

<dt><a name='Strict'></a><a name="Strict_=&#62;_0|1"
><code>Strict =&#62; 0|1</code></a></dt>

<dd>
<p><code>Strict</code> will optionally police the values supplied with other options to ensure they are compliant with RFC1952.</p>

<p>This option is enabled by default.</p>

<p>If <code>Strict</code> is enabled the following behaviour will be policed:</p>

<ul>
<li>The value supplied with the <code>Name</code> option can only contain ISO 8859-1 characters.</li>

<li>The value supplied with the <code>Comment</code> option can only contain ISO 8859-1 characters plus line-feed.</li>

<li>The values supplied with the <code>-Name</code> and <code>-Comment</code> options cannot contain multiple embedded nulls.</li>

<li>If an <code>ExtraField</code> option is specified and it is a simple scalar, it must conform to the sub-field structure as defined in RFC 1952.</li>

<li>If an <code>ExtraField</code> option is specified the second byte of the ID will be checked in each subfield to ensure that it does not contain the reserved value 0x00.</li>
</ul>

<p>When <code>Strict</code> is disabled the following behaviour will be policed:</p>

<ul>
<li>The value supplied with <code>-Name</code> option can contain any character except NULL.</li>

<li>The value supplied with <code>-Comment</code> option can contain any character except NULL.</li>

<li>The values supplied with the <code>-Name</code> and <code>-Comment</code> options can contain multiple embedded nulls. The string written to the gzip header will consist of the characters up to, but not including, the first embedded NULL.</li>

<li>If an <code>ExtraField</code> option is specified and it is a simple scalar, the structure will not be checked. The only error is if the length is too big.</li>

<li>The ID header in an <code>ExtraField</code> sub-field can consist of any two bytes.</li>
</ul>
</dd>
</dl>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Examples"
>Examples</a></h2>

<p>TODO</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="Methods"
>Methods <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="print"
>print</a></h2>

<p>Usage is</p>

<pre class="sh_perl">    $z-&#62;print($data)
    print $z $data</pre>

<p>Compresses and outputs the contents of the <code>$data</code> parameter. This has the same behaviour as the <code>print</code> built-in.</p>

<p>Returns true if successful.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="printf"
>printf</a></h2>

<p>Usage is</p>

<pre class="sh_perl">    $z-&#62;printf($format, $data)
    printf $z $format, $data</pre>

<p>Compresses and outputs the contents of the <code>$data</code> parameter.</p>

<p>Returns true if successful.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="syswrite"
>syswrite</a></h2>

<p>Usage is</p>

<pre class="sh_perl">    $z-&#62;syswrite $data
    $z-&#62;syswrite $data, $length
    $z-&#62;syswrite $data, $length, $offset</pre>

<p>Compresses and outputs the contents of the <code>$data</code> parameter.</p>

<p>Returns the number of uncompressed bytes written, or <code>undef</code> if unsuccessful.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="write"
>write</a></h2>

<p>Usage is</p>

<pre class="sh_perl">    $z-&#62;write $data
    $z-&#62;write $data, $length
    $z-&#62;write $data, $length, $offset</pre>

<p>Compresses and outputs the contents of the <code>$data</code> parameter.</p>

<p>Returns the number of uncompressed bytes written, or <code>undef</code> if unsuccessful.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="flush"
>flush</a></h2>

<p>Usage is</p>

<pre class="sh_perl">    $z-&#62;flush;
    $z-&#62;flush($flush_type);</pre>

<p>Flushes any pending compressed data to the output file/buffer.</p>

<p>This method takes an optional parameter, <code>$flush_type</code>, that controls how the flushing will be carried out. By default the <code>$flush_type</code> used is <code>Z_FINISH</code>. Other valid values for <code>$flush_type</code> are <code>Z_NO_FLUSH</code>, <code>Z_SYNC_FLUSH</code>, <code>Z_FULL_FLUSH</code> and <code>Z_BLOCK</code>. It is strongly recommended that you only set the <code>flush_type</code> parameter if you fully understand the implications of what it does - overuse of <code>flush</code> can seriously degrade the level of compression achieved. See the <code>zlib</code> documentation for details.</p>

<p>Returns true on success.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="tell"
>tell</a></h2>

<p>Usage is</p>

<pre class="sh_perl">    $z-&#62;tell()
    tell $z</pre>

<p>Returns the uncompressed file offset.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="eof"
>eof</a></h2>

<p>Usage is</p>

<pre class="sh_perl">    $z-&#62;eof();
    eof($z);</pre>

<p>Returns true if the <code>close</code> method has been called.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="seek"
>seek</a></h2>

<pre class="sh_perl">    $z-&#62;seek($position, $whence);
    seek($z, $position, $whence);</pre>

<p>Provides a sub-set of the <code>seek</code> functionality, with the restriction that it is only legal to seek forward in the output file/buffer. It is a fatal error to attempt to seek backward.</p>

<p>Empty parts of the file/buffer will have NULL (0x00) bytes written to them.</p>

<p>The <code>$whence</code> parameter takes one the usual values, namely SEEK_SET, SEEK_CUR or SEEK_END.</p>

<p>Returns 1 on success, 0 on failure.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="binmode"
>binmode</a></h2>

<p>Usage is</p>

<pre class="sh_perl">    $z-&#62;binmode
    binmode $z ;</pre>

<p>This is a noop provided for completeness.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="opened"
>opened</a></h2>

<pre class="sh_perl">    $z-&#62;opened()</pre>

<p>Returns true if the object currently refers to a opened file/buffer.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="autoflush"
>autoflush</a></h2>

<pre class="sh_perl">    my $prev = $z-&#62;autoflush()
    my $prev = $z-&#62;autoflush(EXPR)</pre>

<p>If the <code>$z</code> object is associated with a file or a filehandle, this method returns the current autoflush setting for the underlying filehandle. If <code>EXPR</code> is present, and is non-zero, it will enable flushing after every write/print operation.</p>

<p>If <code>$z</code> is associated with a buffer, this method has no effect and always returns <code>undef</code>.</p>

<p><b>Note</b> that the special variable <code>$|</code> <b>cannot</b> be used to set or retrieve the autoflush setting.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="input_line_number"
>input_line_number</a></h2>

<pre class="sh_perl">    $z-&#62;input_line_number()
    $z-&#62;input_line_number(EXPR)</pre>

<p>This method always returns <code>undef</code> when compressing.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="fileno"
>fileno</a></h2>

<pre class="sh_perl">    $z-&#62;fileno()
    fileno($z)</pre>

<p>If the <code>$z</code> object is associated with a file or a filehandle, <code>fileno</code> will return the underlying file descriptor. Once the <code>close</code> method is called <code>fileno</code> will return <code>undef</code>.</p>

<p>If the <code>$z</code> object is associated with a buffer, this method will return <code>undef</code>.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="close"
>close</a></h2>

<pre class="sh_perl">    $z-&#62;close() ;
    close $z ;</pre>

<p>Flushes any pending compressed data and then closes the output file/buffer.</p>

<p>For most versions of Perl this method will be automatically invoked if the IO::Compress::Gzip object is destroyed (either explicitly or by the variable with the reference to the object going out of scope). The exceptions are Perl versions 5.005 through 5.00504 and 5.8.0. In these cases, the <code>close</code> method will be called automatically, but not until global destruction of all live objects when the program is terminating.</p>

<p>Therefore, if you want your scripts to be able to run on all versions of Perl, you should call <code>close</code> explicitly and not rely on automatic closing.</p>

<p>Returns true on success, otherwise 0.</p>

<p>If the <code>AutoClose</code> option has been enabled when the IO::Compress::Gzip object was created, and the object is associated with a file, the underlying file will also be closed.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="newStream([OPTS])"
>newStream([OPTS])</a></h2>

<p>Usage is</p>

<pre class="sh_perl">    $z-&#62;newStream( [OPTS] )</pre>

<p>Closes the current compressed data stream and starts a new one.</p>

<p>OPTS consists of any of the the options that are available when creating the <code>$z</code> object.</p>

<p>See the <a href="#Constructor_Options" class="podlinkpod"
>&#34;Constructor Options&#34;</a> section for more details.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="deflateParams"
>deflateParams</a></h2>

<p>Usage is</p>

<pre class="sh_perl">    $z-&#62;deflateParams</pre>

<p>TODO</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="Importing"
>Importing <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>A number of symbolic constants are required by some methods in <code>IO::Compress::Gzip</code>. None are imported by default.</p>

<dl>
<dt><a name='all'></a><a name=":all"
>:all</a></dt>

<dd>
<p>Imports <code>gzip</code>, <code>$GzipError</code> and all symbolic constants that can be used by <code>IO::Compress::Gzip</code>. Same as doing this</p>

<pre class="sh_perl">    use IO::Compress::Gzip qw(gzip $GzipError :constants) ;</pre>

<dt><a name='constants'></a><a name=":constants"
>:constants</a></dt>

<dd>
<p>Import all symbolic constants. Same as doing this</p>

<pre class="sh_perl">    use IO::Compress::Gzip qw(:flush :level :strategy) ;</pre>

<dt><a name='flush'></a><a name=":flush"
>:flush</a></dt>

<dd>
<p>These symbolic constants are used by the <code>flush</code> method.</p>

<pre class="sh_perl">    Z_NO_FLUSH
    Z_PARTIAL_FLUSH
    Z_SYNC_FLUSH
    Z_FULL_FLUSH
    Z_FINISH
    Z_BLOCK</pre>

<dt><a name='level'></a><a name=":level"
>:level</a></dt>

<dd>
<p>These symbolic constants are used by the <code>Level</code> option in the constructor.</p>

<pre class="sh_perl">    Z_NO_COMPRESSION
    Z_BEST_SPEED
    Z_BEST_COMPRESSION
    Z_DEFAULT_COMPRESSION</pre>

<dt><a name='strategy'></a><a name=":strategy"
>:strategy</a></dt>

<dd>
<p>These symbolic constants are used by the <code>Strategy</code> option in the constructor.</p>

<pre class="sh_perl">    Z_FILTERED
    Z_HUFFMAN_ONLY
    Z_RLE
    Z_FIXED
    Z_DEFAULT_STRATEGY</pre>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="EXAMPLES"
>EXAMPLES <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Apache::GZip_Revisited"
>Apache::GZip Revisited</a></h2>

<p>See <a href="/~pmqs/IO-Compress-2.049/lib/IO/Compress/FAQ.pod#Apache::GZip_Revisited" class="podlinkpod"
>IO::Compress::FAQ</a></p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Working_with_Net::FTP"
>Working with Net::FTP</a></h2>

<p>See <a href="/~pmqs/IO-Compress-2.049/lib/IO/Compress/FAQ.pod#Compressed_files_and_Net::FTP" class="podlinkpod"
>IO::Compress::FAQ</a></p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SEE_ALSO"
>SEE ALSO <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><a href="/~pmqs/IO-Compress-2.049/lib/Compress/Zlib.pm" class="podlinkpod"
>Compress::Zlib</a>, <a href="/~pmqs/IO-Compress-2.049/lib/IO/Uncompress/Gunzip.pm" class="podlinkpod"
>IO::Uncompress::Gunzip</a>, <a href="/~pmqs/IO-Compress-2.049/lib/IO/Compress/Deflate.pm" class="podlinkpod"
>IO::Compress::Deflate</a>, <a href="/~pmqs/IO-Compress-2.049/lib/IO/Uncompress/Inflate.pm" class="podlinkpod"
>IO::Uncompress::Inflate</a>, <a href="/~pmqs/IO-Compress-2.049/lib/IO/Compress/RawDeflate.pm" class="podlinkpod"
>IO::Compress::RawDeflate</a>, <a href="/~pmqs/IO-Compress-2.049/lib/IO/Uncompress/RawInflate.pm" class="podlinkpod"
>IO::Uncompress::RawInflate</a>, <a href="/~pmqs/IO-Compress-2.049/lib/IO/Compress/Bzip2.pm" class="podlinkpod"
>IO::Compress::Bzip2</a>, <a href="/~pmqs/IO-Compress-2.049/lib/IO/Uncompress/Bunzip2.pm" class="podlinkpod"
>IO::Uncompress::Bunzip2</a>, <a href="/perldoc?IO%3A%3ACompress%3A%3ALzma" class="podlinkpod"
>IO::Compress::Lzma</a>, <a href="/perldoc?IO%3A%3AUncompress%3A%3AUnLzma" class="podlinkpod"
>IO::Uncompress::UnLzma</a>, <a href="/perldoc?IO%3A%3ACompress%3A%3AXz" class="podlinkpod"
>IO::Compress::Xz</a>, <a href="/perldoc?IO%3A%3AUncompress%3A%3AUnXz" class="podlinkpod"
>IO::Uncompress::UnXz</a>, <a href="/perldoc?IO%3A%3ACompress%3A%3ALzop" class="podlinkpod"
>IO::Compress::Lzop</a>, <a href="/perldoc?IO%3A%3AUncompress%3A%3AUnLzop" class="podlinkpod"
>IO::Uncompress::UnLzop</a>, <a href="/perldoc?IO%3A%3ACompress%3A%3ALzf" class="podlinkpod"
>IO::Compress::Lzf</a>, <a href="/perldoc?IO%3A%3AUncompress%3A%3AUnLzf" class="podlinkpod"
>IO::Uncompress::UnLzf</a>, <a href="/~pmqs/IO-Compress-2.049/lib/IO/Uncompress/AnyInflate.pm" class="podlinkpod"
>IO::Uncompress::AnyInflate</a>, <a href="/~pmqs/IO-Compress-2.049/lib/IO/Uncompress/AnyUncompress.pm" class="podlinkpod"
>IO::Uncompress::AnyUncompress</a></p>

<p><a href="/~pmqs/IO-Compress-2.049/lib/IO/Compress/FAQ.pod" class="podlinkpod"
>IO::Compress::FAQ</a></p>

<p><a href="/~pmqs/IO-Compress-2.049/lib/File/GlobMapper.pm" class="podlinkpod"
>File::GlobMapper</a>, <a href="/perldoc?Archive%3A%3AZip" class="podlinkpod"
>Archive::Zip</a>, <a href="/perldoc?Archive%3A%3ATar" class="podlinkpod"
>Archive::Tar</a>, <a href="/perldoc?IO%3A%3AZlib" class="podlinkpod"
>IO::Zlib</a></p>

<p>For RFC 1950, 1951 and 1952 see <em><a href="http://www.faqs.org/rfcs/rfc1950.html" class="podlinkurl"
>http://www.faqs.org/rfcs/rfc1950.html</a></em>, <em><a href="http://www.faqs.org/rfcs/rfc1951.html" class="podlinkurl"
>http://www.faqs.org/rfcs/rfc1951.html</a></em> and <em><a href="http://www.faqs.org/rfcs/rfc1952.html" class="podlinkurl"
>http://www.faqs.org/rfcs/rfc1952.html</a></em></p>

<p>The <i>zlib</i> compression library was written by Jean-loup Gailly <em>gzip@prep.ai.mit.edu</em> and Mark Adler <em>madler@alumni.caltech.edu</em>.</p>

<p>The primary site for the <i>zlib</i> compression library is <em><a href="http://www.zlib.org" class="podlinkurl"
>http://www.zlib.org</a></em>.</p>

<p>The primary site for gzip is <em><a href="http://www.gzip.org" class="podlinkurl"
>http://www.gzip.org</a></em>.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHOR"
>AUTHOR <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This module was written by Paul Marquess, <em>pmqs@cpan.org</em>.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="MODIFICATION_HISTORY"
>MODIFICATION HISTORY <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>See the Changes file.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="COPYRIGHT_AND_LICENSE"
>COPYRIGHT AND LICENSE <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Copyright (c) 2005-2012 Paul Marquess. All rights reserved.</p>

<p>This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78179 Uploads, 24710 Distributions
106004 Modules, 9645 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Wed Apr 25 06:54:34 2012 GMT (0.149225950241089) @cpansearch1 -->
 </body>
</html>
