<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>Pod::PXML - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","Pod-PXML",3]);
    _gaq.push(["_setCustomVar",5,"Release","Pod-PXML-0.12",3]);
    _gaq.push(["_setCustomVar",3,"Module","Pod::PXML",3]);
    _gaq.push(["_setCustomVar",1,"Author","SBURKE",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?Pod::PXML">permalink</a></div>
  <a href="/~sburke/">Sean M. Burke</a> &gt;
  <a href="/~sburke/Pod-PXML-0.12/">Pod-PXML-0.12</a> &gt;
  Pod::PXML
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/4a3107dda4b30865c5d31a73b4b6fa9d?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/S/SB/SBURKE/Pod-PXML-0.12.tar.gz">Pod-PXML-0.12.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=Pod%3A%3APXML;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~SBURKE/Pod-PXML-0.12/lib/Pod/PXML.pod">Annotate this POD
</a></p>

<div style="float:right">
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=Pod-PXML">View/Report Bugs</a><br/>

</div>
</div>
  Module Version:  0.12 &nbsp;
<span class="noprint">
  <a href="/src/SBURKE/Pod-PXML-0.12/lib/Pod/PXML.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <li class='indexItem indexItem1'><a href='#WARNING'>WARNING</a>
  <li class='indexItem indexItem1'><a href='#FUNCTIONS'>FUNCTIONS</a>
  <li class='indexItem indexItem1'><a href='#WARNING'>WARNING</a>
  <li class='indexItem indexItem1'><a href='#ABOUT_THE_XML_DOCUMENT_TYPE'>ABOUT THE XML DOCUMENT TYPE</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#POD-format_/_PXML_Correspondences'>POD-format / PXML Correspondences</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#TODO'>TODO</a>
  <li class='indexItem indexItem1'><a href='#SEE_ALSO'>SEE ALSO</a>
  <li class='indexItem indexItem1'><a href='#COPYRIGHT_AND_DISCLAIMER'>COPYRIGHT AND DISCLAIMER</a>
  <li class='indexItem indexItem1'><a href='#AUTHOR'>AUTHOR</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Pod::PXML -- pxml2pod,
pod2pxml</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">  use Pod::PXML;
  
  # Take from a file...
  open(XMLOUT, &#34;&#62;foo.xml&#34;) || die &#34;can&#39;t wropen foo.xml: $!&#34;;
  binmode(XMLOUT);
  print XMLOUT Pod::PXML::pod2xml(&#39;foo.pod&#39;);
  close(XMLOUT);
  
  # Take from a file, going the other way:
  open(PODOUT, &#34;&#62;foo.pod&#34;) || die &#34;can&#39;t wropen foo.pod: $!&#34;;
  binmode(PODOUT);
  print PODOUT Pod::PXML::xml2pod(&#39;foo.xml&#39;);
  close(PODOUT);
  
  # Or take from STDIN:
  print &#39;&#39;, Pod::PXML::pod2xml(\join &#39;&#39;, &#60;STDIN&#62;);
  # Or the other way;
  print &#39;&#39;, Pod::PXML::xml2pod(\join &#39;&#39;, &#60;STDIN&#62;);</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Perl&#39;s documention is conventionally expressed in Plain Old Documentation.</p>

<p>POD-format is a wonderfully concise text format, but it is quite idiosyncratic. This module seeks to make it easier to turn text that&#39;s in POD-format into XML, and to turn text that&#39;s in XML into POD-format.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="WARNING"
>WARNING <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This module is experimental!! It works right on almost all data, but there are a few oddities left -- mostly in the handling of odd L&#60;...&#62; syntax. Some of these are because of bugs in the current Pod::Tree version (1.06), and some of these are because of basic conceptual problems in perlpod. Both of these should be cleared up eventually. If you get strange results from this module, do email me.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="FUNCTIONS"
>FUNCTIONS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<blockquote>
<p>TODO: document options?</p>

<p>TODO: allow treating comment blocks outside paragrapms as &#60;!-- ... --&#62;?</p>

<p>$xml_text = Pod::PXML::pod2xml($filename);</p>

<p>$xml_text = Pod::PXML::pod2xml(\$content);</p>

<p>Returns XML content that represents the POD-format text that was input.</p>

<p>$pod_text = Pod::PXML::xml2pod($filename);</p>

<p>$pod_text = Pod::PXML::xml2pod(\$content);</p>

<p>Returns POD-format content that represents the PXML text that was input.</p>
</blockquote>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="WARNING"
>WARNING <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This module and the PXML DTD are still in the EXPERIMENTAL stage. If you don&#39;t like the way something works, or if you think something&#39;s broken, email me sooner rather than later! I mean for this module to be actually useful to people in their XMLificational PODulatory document doings.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="ABOUT_THE_XML_DOCUMENT_TYPE"
>ABOUT THE XML DOCUMENT TYPE <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This module&#39;s idea of XML isn&#39;t just <i>any</i> sort of XML, but is XML complying to a DTD. &#34;PXML&#34; is what I call the document type that my DTD declares.</p>

<p>The design goals of PXML are to be a 1:1 representation of all <i>meaningful distinctions</i> you can make in valid POD-format -- if it&#39;s a meaningful distinction you can validly express in POD-format, I want to be able to convert that to isomorphic PXML. Moreover, I want to be able to write PXML that can represent any meaningful distinction in valid POD-format, once I convert it to POD-format.</p>

<p>So, whether you write &#34;$a&#62;$b&#34; in POD-format as &#34;$aE&#60;lt&#62;$b&#34; or as &#34;$aE&#60;60&#62;$b&#34; is <i>not</i> a meaningful distinction, because &#34;E&#60;lt&#62;&#34; or as &#34;E&#60;60&#62;&#34; represent the same character. However, the difference between &#34;=head1&#34; and &#34;=head2&#34; is meaningful, and the difference between &#34;C&#60;...&#62;&#34; and &#34;F&#60;...&#62;&#34; is meaningful, and so these distinctions should be present in the PXML representation of the POD.</p>

<p>A secondary design goal is that PXML be as minimal as possible; specifically, there shouldn&#39;t be anything in PXML (whether element or attribute) that doesn&#39;t correspond <i>directly</i> to some part of POD-format.</p>

<p>So, while you might want to represent this:</p>

<pre class="sh_perl">  =item Foo
  
  Bar</pre>

<p>as this:</p>

<pre class="sh_perl">  &#60;item&#62;
    &#60;label&#62;Foo&#60;/label&#62;
    &#60;p&#62;Bar&#60;/p&#62;
  &#60;/item&#62;</pre>

<p>or while you might want to represent this:</p>

<pre class="sh_perl">  =head1 Foo
  
  Bar</pre>

<p>as this:</p>

<pre class="sh_perl">  &#60;section1&#62;
    &#60;head1&#62;Foo&#60;/head1&#62;
    &#60;p&#62;Bar&#60;/p&#62;
  &#60;/section1&#62;</pre>

<p>...those are <i>not</i> the way I do it, even tho I considered both. Why did I decide against those? Because there&#39;s no &#34;label&#34; or &#34;section1&#34; in POD-format.</p>

<p>Instead, I do:</p>

<pre class="sh_perl">  &#60;item&#62;Foo&#60;/item&#62;
  &#60;p&#62;Bar&#60;/p&#62;</pre>

<p>and</p>

<pre class="sh_perl">  &#60;head1&#62;Foo&#60;/item&#62;
  &#60;p&#62;Bar&#60;/p&#62;</pre>

<p>Moreover:</p>

<blockquote>
<p>For any valid POD-format input you provide, this module should emit XML that conforms to the PXML DTD. For any XML input that you feed in that comforms to the PXML DTD, this module should emit valid POD.</p>
</blockquote>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="POD-format_/_PXML_Correspondences"
>POD-format / PXML Correspondences</a></h2>

<p>The PXML DTD is still not entirely nailed down, but once it is, then this section should be rather more verbose.</p>

<pre class="sh_perl">  POD-format  -------------------------------  PXML

  A normal paragraph:
  Hummina hummina?                  =    &#60;p&#62;Hummina hummina?
  Woozle wuzzle.                         Woozle wuzzle.&#60;/p&#62;</pre>

<p>--</p>

<pre class="sh_perl">  A verbatim paragraph:             =    &#60;pre&#62;
    while(1) {                             while(1) {
      print &#34;Matanga!!\n&#34;;                   print &#34;Matanga!!\n&#34;;
    }                                      }
                                         &#60;/pre&#62;</pre>

<p>--</p>

<pre class="sh_perl">  =head1 DEMANDS
                                    =    &#60;head1&#62;DEMANDS&#60;/head1&#62;
  My list of demands:                    &#60;p&#62;My list of demands:&#60;/p&#62;</pre>

<p>(ditto for head2, head3, head4)</p>

<p>--</p>

<pre class="sh_perl">  =over 5
                                         &#60;list indent=&#34;5&#34;&#62;
  =item 1.                          =    &#60;item&#62;1.&#60;/item&#62;
                                         &#60;p&#62;I like pie.&#60;/p&#62;
  I want pie.                            &#60;/list&#62;
  
  =back</pre>

<p>--</p>

<pre class="sh_perl">  Mmmmmmm.                               &#60;p&#62;Mmmmmmm.
  Glorious I&#60;italic pie&#62;,                Glorious &#60;i&#62;italic pie&#60;/i&#62;,
  C&#60;codic pie&#62;, F&#60;filed pie&#62;,       =    &#60;c&#62;codic pie&#60;/c&#62;, &#60;f&#62;filed pie&#60;/f&#62;,
  B&#60;boldened pie&#62;, and even              &#60;b&#62;boldened pie&#60;/b&#62;, and even
  even X&#60;indexed pie&#62;.                   even &#60;x&#62;indexed pie&#60;/x&#62;.&#60;/p&#62;
  
  And even S&#60;nested unbroken        =    And even &#60;s&#62;nested unbroken
  I&#60;italic B&#60;boldened                    &#60;i&#62;italic &#60;b&#62;boldened
  C&#60;codic pie&#62;&#62;&#62;&#62;!                       &#60;c&#62;codic pie&#60;/c&#62;&#60;/b&#62;&#60;/i&#62;&#60;/s&#62;!
  
  See also L&#60;rhubarb pie            =    &#60;link page=&#34;Pie::Filling&#34;
  filling|Pie::Filling/&#34;Rhubarb&#34;&#62;.       section=&#34;Rhubarb&#34;
                                         &#62;rhubarb pie filling&#60;/link&#62;</pre>

<p>(Formatting of L&#60;...&#62; elements where there&#39;s no L&#60;text|...&#62; is inconsistent across different POD renderers. I strongly advise that you always use the L&#60;text|...&#62; style.)</p>

<p>If you&#39;re unsure about a particular POD-format construct, run pod2pxml on it, and see what happens. Be sure to report any oddities to me.</p>

<p>Note that XML PIs and comments are currently ignored by translation to POD. If you want comments that survive round-tripping pxml2pod2pxml, then you&#39;d probably better put them in a</p>

<pre class="sh_perl">  &#60;for target=&#34;comments&#34;&#62;Comments Here&#60;/for&#62;</pre>

<p>block. And remember that those can&#39;t occur in the middle of paragraphs.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="TODO"
>TODO <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>There should be a Pod::Tree/Pod::Parser subclass that will deal with:</p>

<pre class="sh_perl">  =begin pxml
  
  [...pxml...]
  
  =end pxml</pre>

<p>and parse it as if it were POD-format, transparently.</p>

<p>Conversely, there should be improved facility for reading POD-format transparently as PXML.</p>

<p>Smarter support for E&#60;...&#62; in pxml2pod -- currently most high-bit characters just end up as E&#60;number&#62;.</p>

<p>Make the XML output indented?</p>

<p>(Optionally?) Collapse non-verbatim whitespace in pxml2pod? Also (optionally?) re-wrap?</p>

<p>Handling of XML namespaces? At least for skipping foreign-namespace elements? Tell me what you want.</p>

<p>Handling of different encodings? Allow specifying UTF-8 / Latin-1 POD to/from UTF-8 / Latin-1 PXML?</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SEE_ALSO"
>SEE ALSO <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><a href="/perldoc?perlpod" class="podlinkpod"
>perlpod</a> documents POD-format.</p>

<p><a href="/perldoc?Pod%3A%3ATree" class="podlinkpod"
>Pod::Tree</a> is the class that I use for parsing POD-format.</p>

<p><a href="/perldoc?XML%3A%3AParser" class="podlinkpod"
>XML::Parser</a> is the class that I use for parsing XML.</p>

<p><a href="/perldoc?Pod%3A%3AParser" class="podlinkpod"
>Pod::Parser</a> is a different POD-format parser class.</p>

<p><a href="/perldoc?Pod%3A%3AXML" class="podlinkpod"
>Pod::XML</a> is Matt Sergeant&#39;s approach to this, and it has a quite different doctype.</p>

<p>I once wrote <a href="/perldoc?Pod%3A%3AHTML2POD" class="podlinkpod"
>Pod::HTML2POD</a>, which is much much crazier inside than this module is. After I while, I figure that if I could (effectively!) convert HTML into POD, why not XML? And seeing Matt Sergeant&#39;s <a href="/perldoc?Pod%3A%3AXML" class="podlinkpod"
>Pod::XML</a> module got me going.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="COPYRIGHT_AND_DISCLAIMER"
>COPYRIGHT AND DISCLAIMER <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Copyright (c) 2001 Sean M. Burke. All rights reserved.</p>

<p>This library is free software; you can redistribute it and/or modify it under the same terms as Perl itself.</p>

<p>This program is distributed in the hope that it will be useful, but without any warranty; without even the implied warranty of merchantability or fitness for a particular purpose.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHOR"
>AUTHOR <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Sean M. Burke, sburke@cpan.org</p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78262 Uploads, 24722 Distributions
105996 Modules, 9649 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Fri Apr 27 16:01:23 2012 GMT (0.13102388381958) @cpansearch1 -->
 </body>
</html>
