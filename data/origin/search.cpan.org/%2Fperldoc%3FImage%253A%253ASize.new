<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>Image::Size - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","Image-Size",3]);
    _gaq.push(["_setCustomVar",5,"Release","Image-Size-3.230",3]);
    _gaq.push(["_setCustomVar",3,"Module","Image::Size",3]);
    _gaq.push(["_setCustomVar",1,"Author","RJRAY",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?Image::Size">permalink</a></div>
  <a href="/~rjray/">Randy J Ray</a> &gt;
  <a href="/~rjray/Image-Size-3.230/">Image-Size-3.230</a> &gt;
  Image::Size
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/a8fb220b700344f617b8933607652acf?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/R/RJ/RJRAY/Image-Size-3.230.tar.gz">Image-Size-3.230.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=Image%3A%3ASize;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~RJRAY/Image-Size-3.230/lib/Image/Size.pm">Annotate this POD
(2)
</a></p>
     <p style="text-align:right"><a href="http://search.cpan.org/dist/Image-Size">Website</a></p>
<div class=box style='width:150px; float: right'>
<h1 class=t5>Related Modules</h1>
<div style="margin:2px">
<a href="/perldoc?Image%3A%3AMagick">Image::Magick</a><br>
<a href="/perldoc?LWP%3A%3ASimple">LWP::Simple</a><br>
<a href="/perldoc?File%3A%3AFind">File::Find</a><br>
<a href="/perldoc?Image%3A%3AInfo">Image::Info</a><br>
<a href="/perldoc?Data%3A%3ADumper">Data::Dumper</a><br>
<a href="/perldoc?File%3A%3ASpec">File::Spec</a><br>
<a href="/perldoc?IO%3A%3AFile">IO::File</a><br>
<a href="/perldoc?Tk%3A%3AThumbnail">Tk::Thumbnail</a><br>
<a href="/perldoc?XML%3A%3AParser">XML::Parser</a><br>
<a href="/perldoc?Date%3A%3ACalc">Date::Calc</a><br>
<small>
<a href="http://perlmonks.org/?node=cpan+module+search&pivot=1&module=Image%3A%3ASize">more...</a><br>
By <a href="http://perlmonks.org/">perlmonks.org</a></small>
</div>
</div>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>New&nbsp;</td><td style="text-align:right"> 2</td></tr>
<tr><td>Open&nbsp;</td><td style="text-align:right"> 2</td></tr>
</table>
<a href="http://rt.cpan.org/Public/Dist/Display.html?Name=Image-Size">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  3.230 &nbsp;
<span class="noprint">
  <a href="/src/RJRAY/Image-Size-3.230/lib/Image/Size.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <li class='indexItem indexItem1'><a href='#SUBROUTINES/METHODS'>SUBROUTINES/METHODS</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#Input_Types'>Input Types</a>
    <li class='indexItem indexItem2'><a href='#Recognized_Formats'>Recognized Formats</a>
    <li class='indexItem indexItem2'><a href='#Information_Cacheing_and_$NO_CACHE'>Information Cacheing and $NO_CACHE</a>
    <li class='indexItem indexItem2'><a href='#Sharing_the_Cache_Between_Processes'>Sharing the Cache Between Processes</a>
    <li class='indexItem indexItem2'><a href='#Sizing_PhotoCD_Images'>Sizing PhotoCD Images</a>
    <li class='indexItem indexItem2'><a href='#Controlling_Behavior_with_GIF_Images'>Controlling Behavior with GIF Images</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#Image::Size_AND_WEBSERVERS'>Image::Size AND WEBSERVERS</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#Pre-Caching_Image_Data'>Pre-Caching Image Data</a>
    <li class='indexItem indexItem2'><a href='#Shared_Memory_Caching'>Shared Memory Caching</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#MORE_EXAMPLES'>MORE EXAMPLES</a>
  <li class='indexItem indexItem1'><a href='#DIAGNOSTICS'>DIAGNOSTICS</a>
  <li class='indexItem indexItem1'><a href='#CAVEATS'>CAVEATS</a>
  <li class='indexItem indexItem1'><a href='#SEE_ALSO'>SEE ALSO</a>
  <li class='indexItem indexItem1'><a href='#CONTRIBUTORS'>CONTRIBUTORS</a>
  <li class='indexItem indexItem1'><a href='#BUGS'>BUGS</a>
  <li class='indexItem indexItem1'><a href='#SUPPORT'>SUPPORT</a>
  <li class='indexItem indexItem1'><a href='#LICENSE_AND_COPYRIGHT'>LICENSE AND COPYRIGHT</a>
  <li class='indexItem indexItem1'><a href='#AUTHOR'>AUTHOR</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Image::Size - read the dimensions of an image in several popular formats</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">    use Image::Size;
    # Get the size of globe.gif
    ($globe_x, $globe_y) = imgsize(&#34;globe.gif&#34;);
    # Assume X=60 and Y=40 for remaining examples

    use Image::Size &#39;html_imgsize&#39;;
    # Get the size as &#39;width=&#34;X&#34; height=&#34;Y&#34;&#39; for HTML generation
    $size = html_imgsize(&#34;globe.gif&#34;);
    # $size == &#39;width=&#34;60&#34; height=&#34;40&#34;&#39;

    use Image::Size &#39;attr_imgsize&#39;;
    # Get the size as a list passable to routines in CGI.pm
    @attrs = attr_imgsize(&#34;globe.gif&#34;);
    # @attrs == (&#39;-width&#39;, 60, &#39;-height&#39;, 40)

    use Image::Size;
    # Get the size of an in-memory buffer
    ($buf_x, $buf_y) = imgsize(\$buf);
    # Assuming that $buf was the data, imgsize() needed a
    $ reference to a scalar</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>The <b>Image::Size</b> library is based upon the <code>wwwis</code> script written by Alex Knowles <i>(alex@ed.ac.uk)</i>, a tool to examine HTML and add &#39;width&#39; and &#39;height&#39; parameters to image tags. The sizes are cached internally based on file name, so multiple calls on the same file name (such as images used in bulleted lists, for example) do not result in repeated computations.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SUBROUTINES/METHODS"
>SUBROUTINES/METHODS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><b>Image::Size</b> provides three interfaces for possible import:</p>

<dl>
<dt><a name='imgsize'></a><a name="imgsize(stream)"
>imgsize(<i>stream</i>)</a></dt>

<dd>
<p>Returns a three-item list of the X and Y dimensions (width and height, in that order) and image type of <i>stream</i>. Errors are noted by undefined (<b>undef</b>) values for the first two elements, and an error string in the third. The third element can be (and usually is) ignored, but is useful when sizing data whose type is unknown.</p>

<dt><a name='html_imgsize'></a><a name="html_imgsize(stream)"
>html_imgsize(<i>stream</i>)</a></dt>

<dd>
<p>Returns the width and height (X and Y) of <i>stream</i> pre-formatted as a single string <code>&#39;width=&#34;X&#34; height=&#34;Y&#34;&#39;</code> suitable for addition into generated HTML IMG tags. If the underlying call to <code>imgsize</code> fails, <b>undef</b> is returned. The format returned is dually suited to both HTML and XHTML.</p>

<dt><a name='attr_imgsize'></a><a name="attr_imgsize(stream)"
>attr_imgsize(<i>stream</i>)</a></dt>

<dd>
<p>Returns the width and height of <i>stream</i> as part of a 4-element list useful for routines that use hash tables for the manipulation of named parameters, such as the Tk or CGI libraries. A typical return value looks like <code>(&#34;-width&#34;, X, &#34;-height&#34;, Y)</code>. If the underlying call to <code>imgsize</code> fails, <b>undef</b> is returned.</p>
</dd>
</dl>

<p>By default, only <code>imgsize()</code> is exported. Any one or combination of the three may be explicitly imported, or all three may be with the tag <b>:all</b>.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Input_Types"
>Input Types</a></h2>

<p>The sort of data passed as <i>stream</i> can be one of three forms:</p>

<dl>
<dt><a name="string"
>string</a></dt>

<dd>
<p>If an ordinary scalar (string) is passed, it is assumed to be a file name (either absolute or relative to the current working directory of the process) and is searched for and opened (if found) as the source of data. Possible error messages (see DIAGNOSTICS below) may include file-access problems.</p>

<dt><a name='scalar'></a><a name="scalar_reference"
>scalar reference</a></dt>

<dd>
<p>If the passed-in stream is a scalar reference, it is interpreted as pointing to an in-memory buffer containing the image data.</p>

<pre class="sh_perl">        # Assume that &#38;read_data gets data somewhere (WWW, etc.)
        $img = &#38;read_data;
        ($x, $y, $id) = imgsize(\$img);
        # $x and $y are dimensions, $id is the type of the image</pre>

<dt><a name='Open'></a><a name="Open_file_handle"
>Open file handle</a></dt>

<dd>
<p>The third option is to pass in an open filehandle (such as an object of the <code>IO::File</code> class, for example) that has already been associated with the target image file. The file pointer will necessarily move, but will be restored to its original position before subroutine end.</p>

<pre class="sh_perl">        # $fh was passed in, is IO::File reference:
        ($x, $y, $id) = imgsize($fh);
        # Same as calling with filename, but more abstract.</pre>
</dd>
</dl>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Recognized_Formats"
>Recognized Formats</a></h2>

<p>Image::Size natively understands and sizes data in the following formats:</p>

<dl>
<dt><a name="GIF"
>GIF</a></dt>

<dd>
<dt><a name="JPG"
>JPG</a></dt>

<dd>
<dt><a name="XBM"
>XBM</a></dt>

<dd>
<dt><a name="XPM"
>XPM</a></dt>

<dd>
<dt><a name='PPM'></a><a name="PPM_family_(PPM/PGM/PBM)"
>PPM family (PPM/PGM/PBM)</a></dt>

<dd>
<dt><a name='XV'></a><a name="XV_thumbnails"
>XV thumbnails</a></dt>

<dd>
<dt><a name="PNG"
>PNG</a></dt>

<dd>
<dt><a name="MNG"
>MNG</a></dt>

<dd>
<dt><a name="TIF"
>TIF</a></dt>

<dd>
<dt><a name="BMP"
>BMP</a></dt>

<dd>
<dt><a name='PSD'></a><a name="PSD_(Adobe_PhotoShop)"
>PSD (Adobe PhotoShop)</a></dt>

<dd>
<dt><a name='SWF'></a><a name="SWF_(ShockWave/Flash)"
>SWF (ShockWave/Flash)</a></dt>

<dd>
<dt><a name='CWS'></a><a name="CWS_(FlashMX,_compressed_SWF,_Flash_6)"
>CWS (FlashMX, compressed SWF, Flash 6)</a></dt>

<dd>
<dt><a name='PCD'></a><a name="PCD_(Kodak_PhotoCD,_see_notes_below)"
>PCD (Kodak PhotoCD, see notes below)</a></dt>

<dd>
<dt><a name='EMF'></a><a name="EMF_(Windows_Enhanced_Metafile_Format)"
>EMF (Windows Enhanced Metafile Format)</a></dt>
</dl>

<p>Additionally, if the <b>Image::Magick</b> module is present, the file types supported by it are also supported by Image::Size. See also <a href="#CAVEATS" class="podlinkpod"
>&#34;CAVEATS&#34;</a>.</p>

<p>When using the <code>imgsize</code> interface, there is a third, unused value returned if the programmer wishes to save and examine it. This value is the identity of the data type, expressed as a 2-3 letter abbreviation as listed above. This is useful when operating on open file handles or in-memory data, where the type is as unknown as the size. The two support routines ignore this third return value, so those wishing to use it must use the base <code>imgsize</code> routine.</p>

<p>Note that when the <b>Image::Magick</b> fallback is used (for all non-natively supported files), the data type identity comes directly from the &#39;format&#39; parameter reported by <b>Image::Magick</b>, so it may not meet the 2-3 letter abbreviation format. For example, a WBMP file might be reported as &#39;Wireless Bitmap (level 0) image&#39; in this case.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Information_Cacheing_and_$NO_CACHE"
>Information Cacheing and <code>$NO_CACHE</code></a></h2>

<p>When a filename is passed to any of the sizing routines, the default behavior of the library is to cache the resulting information. The modification-time of the file is also recorded, to determine whether the cache should be purged and updated. This was originally added due to the fact that a number of CGI applications were using this library to generate attributes for pages that often used the same graphical element many times over.</p>

<p>However, the cacheing can lead to problems when the files are generated dynamically, at a rate that exceeds the resolution of the modification-time value on the filesystem. Thus, the optionally-importable control variable <code>$NO_CACHE</code> has been introduced. If this value is anything that evaluates to a non-false value (be that the value 1, any non-null string, etc.) then the cacheing is disabled until such time as the program re-enables it by setting the value to false.</p>

<p>The parameter <code>$NO_CACHE</code> may be imported as with the <b>imgsize</b> routine, and is also imported when using the import tag <b><code>:all</code></b>. If the programmer chooses not to import it, it is still accessible by the fully-qualified package name, <b>$Image::Size::NO_CACHE</b>.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Sharing_the_Cache_Between_Processes"
>Sharing the Cache Between Processes</a></h2>

<p>If you are using <b>Image::Size</b> in a multi-thread or multi-process environment, you may wish to enable sharing of the cached information between the processes (or threads). Image::Size does not natively provide any facility for this, as it would add to the list of dependencies.</p>

<p>To make it possible for users to do this themselves, the <code>%CACHE</code> hash-table that <b>Image::Size</b> uses internally for storage may be imported in the <b>use</b> statement. The user may then make use of packages such as <b>IPC::MMA</b> (<a href="/perldoc?IPC%3A%3AMMA" class="podlinkpod"
>IPC::MMA</a>) that can <code>tie</code> a hash to a shared-memory segment:</p>

<pre class="sh_perl">    use Image::Size qw(imgsize %CACHE);
    use IPC::MMA;

    ...

    tie %CACHE, &#39;IPC::MM::Hash&#39;, $mmHash; # $mmHash via mm_make_hash
    # Now, forked processes will share any changes made to the cache</pre>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Sizing_PhotoCD_Images"
>Sizing PhotoCD Images</a></h2>

<p>With version 2.95, support for the Kodak PhotoCD image format is included. However, these image files are not quite like the others. One file is the source of the image in any of a range of pre-set resolutions (all with the same aspect ratio). Supporting this here is tricky, since there is nothing inherent in the file to limit it to a specific resolution.</p>

<p>The library addresses this by using a scale mapping, and requiring the user (you) to specify which scale is preferred for return. Like the <code>$NO_CACHE</code> setting described earlier, this is an importable scalar variable that may be used within the application that uses <b>Image::Size</b>. This parameter is called <code>$PCD_SCALE</code>, and is imported by the same name. It, too, is also imported when using the tag <b><code>:all</code></b> or may be referenced as <b>$Image::Size::PCD_SCALE</b>.</p>

<p>The parameter should be set to one of the following values:</p>

<pre class="sh_perl">        base/16
        base/4
        base
        base4
        base16
        base64</pre>

<p>Note that not all PhotoCD disks will have included the <code>base64</code> resolution. The actual resolutions are not listed here, as they are constant and can be found in any documentation on the PCD format. The value of <code>$PCD_SCALE</code> is treated in a case-insensitive manner, so <code>base</code> is the same as <code>Base</code> or <code>BaSe</code>. The default scale is set to <code>base</code>.</p>

<p>Also note that the library makes no effort to read enough of the PCD file to verify that the requested resolution is available. The point of this library is to read as little as necessary so as to operate efficiently. Thus, the only real difference to be found is in whether the orientation of the image is portrait or landscape. That is in fact all that the library extracts from the image file.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Controlling_Behavior_with_GIF_Images"
>Controlling Behavior with GIF Images</a></h2>

<p>GIF images present a sort of unusual situation when it comes to reading size. Because GIFs can be a series of sub-images to be isplayed as an animated sequence, what part does the user want to get the size for?</p>

<p>When dealing with GIF files, the user may control the behavior by setting the global value <b>$Image::Size::GIF_BEHAVIOR</b>. Like the PCD setting, this may be imported when loading the library. Three values are recognized by the GIF-handling code:</p>

<dl>
<dt><a name="0"
>0</a></dt>

<dd>
<p>This is the default value. When this value is chosen, the returned dimensions are those of the &#34;screen&#34;. The &#34;screen&#34; is the display area that the GIF declares in the first data block of the file. No sub-images will be greater than this in size; if they are, the specification dictates that they be cropped to fit within the box.</p>

<p>This is also the fastest method for sizing the GIF, as it reads the least amount of data from the image stream.</p>

<dt><a name="1"
>1</a></dt>

<dd>
<p>If this value is set, then the size of the first sub-image within the GIF is returned. For plain (non-animated) GIF files, this would be the same as the screen (though it doesn&#39;t have to be, strictly-speaking).</p>

<p>When the first image descriptor block is read, the code immediately returns, making this only slightly-less efficient than the previous setting.</p>

<dt><a name="2"
>2</a></dt>

<dd>
<p>If this value is chosen, then the code loops through all the sub-images of the animated GIF, and returns the dimensions of the largest of them.</p>

<p>This option requires that the full GIF image be read, in order to ensure that the largest is found.</p>
</dd>
</dl>

<p>Any value outside this range will produce an error in the GIF code before any image data is read.</p>

<p>The value of dimensions other than the view-port (&#34;screen&#34;) is dubious. However, some users have asked for that functionality.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="Image::Size_AND_WEBSERVERS"
>Image::Size AND WEBSERVERS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>There are a few approaches to getting the most out of <b>Image::Size</b> in a multi-process webserver environment. The two most common are pre-caching and using shared memory. These examples are focused on Apache, but should be adaptable to other server approaches as well.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Pre-Caching_Image_Data"
>Pre-Caching Image Data</a></h2>

<p>One approach is to include code in an Apache start-up script that reads the information on all images ahead of time. A script loaded via <code>PerlRequire</code>, for example, becomes part of the server memory before child processes are created. When the children are created, they come into existence with a pre-primed cache already available.</p>

<p>The shortcoming of this approach is that you have to plan ahead of time for which image files you need to cache. Also, if the list is long-enough it can slow server start-up time.</p>

<p>The advantage is that it keeps the information centralized in one place and thus easier to manage and maintain. It also requires no additional CPAN modules.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Shared_Memory_Caching"
>Shared Memory Caching</a></h2>

<p>Another approach is to introduce a shared memory segment that the individual processes all have access to. This can be done with any of a variety of shared memory modules on CPAN.</p>

<p>Probably the easiest way to do this is to use one of the packages that allow the tying of a hash to a shared memory segment. You can use this in combination with importing the hash table variable that is used by <b>Image::Size</b> for the cache, or you can refer to it explicitly by full package name:</p>

<pre class="sh_perl">    use IPC::Shareable;
    use Image::Size;

    tie %Image::Size::CACHE, &#39;IPC::Shareable&#39;, &#39;size&#39;, { create =&#62; 1 };</pre>

<p>That example uses <b>IPC::Shareable</b> (see <a href="/perldoc?IPC%3A%3AShareable" class="podlinkpod"
>IPC::Shareable</a>) and uses the option to the <code>tie</code> command that tells <b>IPC::Shareable</b> to create the segment. Once the initial server process starts to create children, they will all share the tied handle to the memory segment.</p>

<p>Another package that provides this capability is <b>IPC::MMA</b> (see <a href="/perldoc?IPC%3A%3AMMA" class="podlinkpod"
>IPC::MMA</a>), which provides shared memory management via the <i>mm</i> library from Ralf Engelschall (details available in the documentation for <b>IPC::MMA</b>):</p>

<pre class="sh_perl">    use IPC::MMA;
    use Image::Size qw(%CACHE);

    my $mm = mm_create(65536, &#39;/tmp/test_lockfile&#39;);
    my $mmHash = mm_make_hash($mm);
    tie %CACHE, &#39;IPC::MM::Hash&#39;, $mmHash;</pre>

<p>As before, this is done in the start-up phase of the webserver. As the child processes are created, they inherit the pointer to the existing shared segment.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="MORE_EXAMPLES"
>MORE EXAMPLES <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>The <b>attr_imgsize</b> interface is also well-suited to use with the Tk extension:</p>

<pre class="sh_perl">    $image = $widget-&#62;Photo(-file =&#62; $img_path, attr_imgsize($img_path));</pre>

<p>Since the <code>Tk::Image</code> classes use dashed option names as <code>CGI</code> does, no further translation is needed.</p>

<p>This package is also well-suited for use within an Apache web server context. File sizes are cached upon read (with a check against the modified time of the file, in case of changes), a useful feature for a <b>mod_perl</b> environment in which a child process endures beyond the lifetime of a single request. Other aspects of the <b>mod_perl</b> environment cooperate nicely with this module, such as the ability to use a sub-request to fetch the full pathname for a file within the server space. This complements the HTML generation capabilities of the <b>CGI</b> module, in which <code>CGI::img</code> wants a URL but <code>attr_imgsize</code> needs a file path:</p>

<pre class="sh_perl">    # Assume $Q is an object of class CGI, $r is an Apache request object.
    # $imgpath is a URL for something like &#34;/img/redball.gif&#34;.
    $r-&#62;print($Q-&#62;img({ -src =&#62; $imgpath,
                        attr_imgsize($r-&#62;lookup_uri($imgpath)-&#62;filename) }));</pre>

<p>The advantage here, besides not having to hard-code the server document root, is that Apache passes the sub-request through the usual request lifecycle, including any stages that would re-write the URL or otherwise modify it.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DIAGNOSTICS"
>DIAGNOSTICS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>The base routine, <code>imgsize</code>, returns <b>undef</b> as the first value in its list when an error has occured. The third element contains a descriptive error message.</p>

<p>The other two routines simply return <b>undef</b> in the case of error.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="CAVEATS"
>CAVEATS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Caching of size data can only be done on inputs that are file names. Open file handles and scalar references cannot be reliably transformed into a unique key for the table of cache data. Buffers could be cached using the MD5 module, and perhaps in the future I will make that an option. I do not, however, wish to lengthen the dependancy list by another item at this time.</p>

<p>As <b>Image::Magick</b> operates on file names, not handles, the use of it is restricted to cases where the input to <code>imgsize</code> is provided as file name.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SEE_ALSO"
>SEE ALSO <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p><a href="/perldoc?Image%3A%3AMagick" class="podlinkpod"
>Image::Magick</a> and <a href="/perldoc?Image%3A%3AInfo" class="podlinkpod"
>Image::Info</a> Perl modules at CPAN. The <b><a href="/perldoc?Graphics%3A%3AMagick" class="podlinkpod"
>Graphics::Magick</a></b> Perl API at <a href="http://www.graphicsmagick.org/perl.html" class="podlinkurl"
>http://www.graphicsmagick.org/perl.html</a>.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="CONTRIBUTORS"
>CONTRIBUTORS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Perl module interface by Randy J. Ray <i>(rjray@blackperl.com)</i>, original image-sizing code by Alex Knowles <i>(alex@ed.ac.uk)</i> and Andrew Tong <i>(werdna@ugcs.caltech.edu)</i>, used with their joint permission.</p>

<p>Some bug fixes submitted by Bernd Leibing <i>(bernd.leibing@rz.uni-ulm.de)</i>. PPM/PGM/PBM sizing code contributed by Carsten Dominik <i>(dominik@strw.LeidenUniv.nl)</i>. Tom Metro <i>(tmetro@vl.com)</i> re-wrote the JPG and PNG code, and also provided a PNG image for the test suite. Dan Klein <i>(dvk@lonewolf.com)</i> contributed a re-write of the GIF code. Cloyce Spradling <i>(cloyce@headgear.org)</i> contributed TIFF sizing code and test images. Aldo Calpini <i>(a.calpini@romagiubileo.it)</i> suggested support of BMP images (which I <i>really</i> should have already thought of :-) and provided code to work with. A patch to allow html_imgsize to produce valid output for XHTML, as well as some documentation fixes was provided by Charles Levert <i>(charles@comm.polymtl.ca)</i>. The ShockWave/Flash support was provided by Dmitry Dorofeev <i>(dima@yasp.com)</i>. Though I neglected to take note of who supplied the PSD (PhotoShop) code, a bug was identified by Alex Weslowski &#60;aweslowski@rpinteractive.com&#62;, who also provided a test image. PCD support was adapted from a script made available by Phil Greenspun, as guided to my attention by Matt Mueller <i>mueller@wetafx.co.nz</i>. A thorough read of the documentation and source by Philip Newton <i>Philip.Newton@datenrevision.de</i> found several typos and a small buglet. Ville Skytt&#228; <i>(ville.skytta@iki.fi)</i> provided the MNG and the Image::Magick fallback code. Craig MacKenna <i>(mackenna@animalhead.com)</i> suggested making the cache available so that it could be used with shared memory, and helped test my change before release.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="BUGS"
>BUGS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Please report any bugs or feature requests to <code>bug-image-size at rt.cpan.org</code>, or through the web interface at <a href="http://rt.cpan.org/NoAuth/ReportBug.html?Queue=Image-Size" class="podlinkurl"
>http://rt.cpan.org/NoAuth/ReportBug.html?Queue=Image-Size</a>. I will be notified, and then you&#39;ll automatically be notified of progress on your bug as I make changes.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SUPPORT"
>SUPPORT <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<ul>
<li>RT: CPAN&#39;s request tracker
<p><a href="http://rt.cpan.org/NoAuth/Bugs.html?Dist=Image-Size" class="podlinkurl"
>http://rt.cpan.org/NoAuth/Bugs.html?Dist=Image-Size</a></p>
</li>

<li>AnnoCPAN: Annotated CPAN documentation
<p><a href="http://annocpan.org/dist/Image-Size" class="podlinkurl"
>http://annocpan.org/dist/Image-Size</a></p>
</li>

<li>CPAN Ratings
<p><a href="http://cpanratings.perl.org/d/Image-Size" class="podlinkurl"
>http://cpanratings.perl.org/d/Image-Size</a></p>
</li>

<li>Search CPAN
<p><a href="http://search.cpan.org/dist/Image-Size" class="podlinkurl"
>http://search.cpan.org/dist/Image-Size</a></p>
</li>

<li>Project page on GitHub
<p><a href="http://github.com/rjray/image-size" class="podlinkurl"
>http://github.com/rjray/image-size</a></p>
</li>
</ul>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="LICENSE_AND_COPYRIGHT"
>LICENSE AND COPYRIGHT <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This file and the code within are copyright (c) 1996-2009 by Randy J. Ray.</p>

<p>Copying and distribution are permitted under the terms of the Artistic License 2.0 (<a href="http://www.opensource.org/licenses/artistic-license-2.0.php" class="podlinkurl"
>http://www.opensource.org/licenses/artistic-license-2.0.php</a>) or the GNU LGPL 2.1 (<a href="http://www.opensource.org/licenses/lgpl-2.1.php" class="podlinkurl"
>http://www.opensource.org/licenses/lgpl-2.1.php</a>).</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHOR"
>AUTHOR <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Randy J. Ray <code>&#60;rjray@blackperl.com&#62;</code></p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78276 Uploads, 24724 Distributions
106002 Modules, 9649 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Sat Apr 28 02:22:46 2012 GMT (0.11345911026001) @cpansearch1 -->
 </body>
</html>
