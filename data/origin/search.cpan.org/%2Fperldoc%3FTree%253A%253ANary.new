<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>Tree::Nary - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","Tree-Nary",3]);
    _gaq.push(["_setCustomVar",5,"Release","Tree-Nary-1.3",3]);
    _gaq.push(["_setCustomVar",3,"Module","Tree::Nary",3]);
    _gaq.push(["_setCustomVar",1,"Author","FSORIANO",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?Tree::Nary">permalink</a></div>
  <a href="/~fsoriano/">Frederic Soriano</a> &gt;
  <a href="/~fsoriano/Tree-Nary-1.3/">Tree-Nary-1.3</a> &gt;
  Tree::Nary
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/d05be290d0b2d74da3e58cc43df5ce12?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/F/FS/FSORIANO/Tree-Nary-1.3.tar.gz">Tree-Nary-1.3.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=Tree%3A%3ANary;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~FSORIANO/Tree-Nary-1.3/lib/Tree/Nary.pm">Annotate this POD
</a></p>
<div class=box style='width:150px; float: right'>
<h1 class=t5>Related Modules</h1>
<div style="margin:2px">
<a href="/perldoc?Data%3A%3ADumper">Data::Dumper</a><br>
<a href="/perldoc?Net%3A%3APing">Net::Ping</a><br>
<a href="/perldoc?Tree%3A%3ADAG_Node">Tree::DAG_Node</a><br>
<a href="/perldoc?Parse%3A%3ARecDescent">Parse::RecDescent</a><br>
<a href="/perldoc?Excel%3A%3ATemplate">Excel::Template</a><br>
<a href="/perldoc?PDF%3A%3ATemplate">PDF::Template</a><br>
<a href="/perldoc?File%3A%3ACopy">File::Copy</a><br>
<a href="/perldoc?File%3A%3ASpec">File::Spec</a><br>
<a href="/perldoc?File%3A%3APath">File::Path</a><br>
<a href="/perldoc?Sort%3A%3AFields">Sort::Fields</a><br>
<small>
<a href="http://perlmonks.org/?node=cpan+module+search&pivot=1&module=Tree%3A%3ANary">more...</a><br>
By <a href="http://perlmonks.org/">perlmonks.org</a></small>
</div>
</div>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>New&nbsp;</td><td style="text-align:right"> 1</td></tr>
<tr><td>Open&nbsp;</td><td style="text-align:right"> 0</td></tr>
</table>
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=Tree-Nary">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  1.3 &nbsp;
<span class="noprint">
  <a href="/src/FSORIANO/Tree-Nary-1.3/lib/Tree/Nary.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <li class='indexItem indexItem1'><a href='#GLOBAL_VARIABLES'>GLOBAL VARIABLES</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#BOOLEANS'>BOOLEANS</a>
    <li class='indexItem indexItem2'><a href='#TRAVERSE_FLAGS'>TRAVERSE FLAGS</a>
    <li class='indexItem indexItem2'><a href='#ORDER_FLAGS'>ORDER FLAGS</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#METHODS'>METHODS</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#new(_[DATA]_)'>new( [DATA] )</a>
    <li class='indexItem indexItem2'><a href='#insert(_PARENT,_POSITION,_NODE_)'>insert( PARENT, POSITION, NODE )</a>
    <li class='indexItem indexItem2'><a href='#insert_before(_PARENT,_SIBLING,_NODE_)'>insert_before( PARENT, SIBLING, NODE )</a>
    <li class='indexItem indexItem2'><a href='#append(_PARENT,_NODE_)'>append( PARENT, NODE )</a>
    <li class='indexItem indexItem2'><a href='#prepend(_PARENT,_NODE_)'>prepend( PARENT, NODE )</a>
    <li class='indexItem indexItem2'><a href='#insert_data(_PARENT,_POSITION,_DATA_)'>insert_data( PARENT, POSITION, DATA )</a>
    <li class='indexItem indexItem2'><a href='#insert_data_before(_PARENT,_SIBLING,_DATA_)'>insert_data_before( PARENT, SIBLING, DATA )</a>
    <li class='indexItem indexItem2'><a href='#append_data(_PARENT,_DATA_)'>append_data( PARENT, DATA )</a>
    <li class='indexItem indexItem2'><a href='#prepend_data(_PARENT,_DATA_)'>prepend_data( PARENT, DATA )</a>
    <li class='indexItem indexItem2'><a href='#reverse_children(_NODE_)'>reverse_children( NODE )</a>
    <li class='indexItem indexItem2'><a href='#traverse(_NODE,_ORDER,_FLAGS,_MAXDEPTH,_FUNCTION,_DATA_)'>traverse( NODE, ORDER, FLAGS, MAXDEPTH, FUNCTION, DATA )</a>
    <li class='indexItem indexItem2'><a href='#children_foreach(_NODE,_FLAGS,_FUNCTION,_DATA_)'>children_foreach( NODE, FLAGS, FUNCTION, DATA )</a>
    <li class='indexItem indexItem2'><a href='#get_root(_NODE_)'>get_root( NODE )</a>
    <li class='indexItem indexItem2'><a href='#find(_NODE,_ORDER,_FLAGS,_DATA_)'>find( NODE, ORDER, FLAGS, DATA )</a>
    <li class='indexItem indexItem2'><a href='#find_child(_NODE,_FLAGS,_DATA_)'>find_child( NODE, FLAGS, DATA )</a>
    <li class='indexItem indexItem2'><a href='#child_index(_NODE,_DATA_)'>child_index( NODE, DATA )</a>
    <li class='indexItem indexItem2'><a href='#child_position(_NODE,_CHILD_)'>child_position( NODE, CHILD )</a>
    <li class='indexItem indexItem2'><a href='#first_child(_NODE_)'>first_child( NODE )</a>
    <li class='indexItem indexItem2'><a href='#last_child(_NODE_)'>last_child( NODE )</a>
    <li class='indexItem indexItem2'><a href='#nth_child(_NODE,_INDEX_)'>nth_child( NODE, INDEX )</a>
    <li class='indexItem indexItem2'><a href='#first_sibling(_NODE_)'>first_sibling( NODE )</a>
    <li class='indexItem indexItem2'><a href='#prev_sibling(_NODE_)'>prev_sibling( NODE )</a>
    <li class='indexItem indexItem2'><a href='#next_sibling(_NODE_)'>next_sibling( NODE )</a>
    <li class='indexItem indexItem2'><a href='#last_sibling(_NODE_)'>last_sibling( NODE )</a>
    <li class='indexItem indexItem2'><a href='#is_leaf(_NODE_)'>is_leaf( NODE )</a>
    <li class='indexItem indexItem2'><a href='#is_root(_NODE_)'>is_root( NODE )</a>
    <li class='indexItem indexItem2'><a href='#depth(_NODE_)'>depth( NODE )</a>
    <li class='indexItem indexItem2'><a href='#n_nodes(_NODE,_FLAGS_)'>n_nodes( NODE, FLAGS )</a>
    <li class='indexItem indexItem2'><a href='#n_children(_NODE_)'>n_children( NODE )</a>
    <li class='indexItem indexItem2'><a href='#is_ancestor(_NODE,_DESCENDANT_)'>is_ancestor( NODE, DESCENDANT )</a>
    <li class='indexItem indexItem2'><a href='#max_height(_NODE_)'>max_height( NODE )</a>
    <li class='indexItem indexItem2'><a href='#tsort(_NODE_)'>tsort( NODE )</a>
    <li class='indexItem indexItem2'><a href='#normalize(_NODE_)'>normalize( NODE )</a>
    <li class='indexItem indexItem2'><a href='#is_identical(_NODE,_ANOTHER_NODE_)'>is_identical( NODE, ANOTHER_NODE )</a>
    <li class='indexItem indexItem2'><a href='#has_same_struct(_NODE,_ANOTHER_NODE_)'>has_same_struct( NODE, ANOTHER_NODE )</a>
    <li class='indexItem indexItem2'><a href='#unlink(_NODE_)'>unlink( NODE )</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#EXAMPLES'>EXAMPLES</a>
  <li class='indexItem indexItem1'><a href='#AUTHOR'>AUTHOR</a>
  <li class='indexItem indexItem1'><a href='#COPYRIGHT'>COPYRIGHT</a>
  <li class='indexItem indexItem1'><a href='#SEE_ALSO'>SEE ALSO</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Tree::Nary - Perl implementation of N-ary search trees.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl">  use Tree::Nary;

  $node = new Tree::Nary;
  $another_node = new Tree::Nary;

  $inserted_node = $node-&#62;insert($parent, $position, $node);
  $inserted_node = $node-&#62;insert_before($parent, $sibling, $node);
  $inserted_node = $node-&#62;append($parent, $node);
  $inserted_node = $node-&#62;prepend($parent, $node);
  $inserted_node = $node-&#62;insert_data($parent, $position, $data);
  $inserted_node = $node-&#62;insert_data_before($parent, $sibling, $data);
  $inserted_node = $node-&#62;append_data($parent, $data);
  $inserted_node = $node-&#62;prepend_data($parent, $data);

  $node-&#62;reverse_children($node);

  $node-&#62;traverse($node, $order, $flags, $maxdepth, $funcref, $argref);

  $node-&#62;children_foreach($node, $flags, $funcref, $argref);

  $root_node = $obj-&#62;get_root($node);

  $found_node = $node-&#62;find($node, $order, $flags, $data);
  $found_child_node = $node-&#62;find_child($node, $flags, $data);

  $index = $node-&#62;child_index($node, $data);
  $position = $node-&#62;child_position($node, $child);

  $first_child_node = $node-&#62;first_child($node);
  $last_child_node = $node-&#62;last_child($node);

  $nth_child_node = $node-&#62;nth_child($node, $index);

  $first_sibling = $node-&#62;first_sibling($node);
  $next_sibling = $node-&#62;next_sibling($node);
  $prev_sibling = $node-&#62;prev_sibling($node);
  $last_sibling = $node-&#62;last_sibling($node);

  $bool = $node-&#62;is_leaf($node);
  $bool = $node-&#62;is_root($node);

  $cnt = $node-&#62;depth($node);

  $cnt = $node-&#62;n_nodes($node);
  $cnt = $node-&#62;n_children($node);

  $bool = $node-&#62;is_ancestor($node);

  $cnt = $obj-&#62;max_height($node);

  $node-&#62;tsort($node);

  $normalized_node = $node-&#62;normalize($node);

  $bool = $node-&#62;is_identical($node, $another_node);
  $bool = $node-&#62;has_same_struct($node, $another_node);

  $node-&#62;unlink($node);</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>The <b>Tree::Nary</b> class implements N-ary trees (trees of data with any number of branches), providing the organizational structure for a tree (collection) of any number of nodes, but knowing nothing about the specific type of node used. It can be used to display hierarchical database entries in an internal application (the NIS netgroup file is an example of such a database). It offers the capability to select nodes on the tree, and attachment points for nodes on the tree. Each attachment point can support multiple child nodes.</p>

<p>The data field contains the actual data of the node. The next and previous fields point to the node&#39;s siblings (a sibling is another node with the same parent). The parent field points to the parent of the node, or is <i>undef</i> if the node is the root of the tree. The children field points to the first child of the node. The other children are accessed by using the next pointer of each child.</p>

<p>This module is a translation (albeit not a direct one) from the C implementation of N-ary trees, available in the <b>GLIB distribution</b> (see SEE ALSO).</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="GLOBAL_VARIABLES"
>GLOBAL VARIABLES <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="BOOLEANS"
>BOOLEANS</a></h2>

<dl>
<dt><a name="TRUE"
>TRUE</a></dt>

<dd>
<dt><a name="FALSE"
>FALSE</a></dt>
</dl>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="TRAVERSE_FLAGS"
>TRAVERSE FLAGS</a></h2>

<p>Specifies which nodes are visited during several of the tree functions, including traverse() and find().</p>

<dl>
<dt><a name="TRAVERSE_LEAFS"
>TRAVERSE_LEAFS</a></dt>

<dd>
<p>Specifies that only leaf nodes should be visited.</p>

<dt><a name="TRAVERSE_NON_LEAFS"
>TRAVERSE_NON_LEAFS</a></dt>

<dd>
<p>Specifies that only non-leaf nodes should be visited.</p>

<dt><a name="TRAVERSE_ALL"
>TRAVERSE_ALL</a></dt>

<dd>
<p>Specifies that all nodes should be visited.</p>

<dt><a name="TRAVERSE_MASK"
>TRAVERSE_MASK</a></dt>

<dd>
<p>Combination of multiple traverse flags.</p>
</dd>
</dl>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="ORDER_FLAGS"
>ORDER FLAGS</a></h2>

<p>Specifies the type of traversal performed by traverse() and find().</p>

<dl>
<dt><a name="PRE_ORDER"
>PRE_ORDER</a></dt>

<dd>
<p>Visits a node, then its children.</p>

<dt><a name="IN_ORDER"
>IN_ORDER</a></dt>

<dd>
<p>Visits a node&#39;s left child first, then the node itself, then its right child. This is the one to use if you want the output sorted according to the compare function.</p>

<dt><a name="POST_ORDER"
>POST_ORDER</a></dt>

<dd>
<p>Visits the node&#39;s children, then the node itself.</p>

<dt><a name="LEVEL_ORDER"
>LEVEL_ORDER</a></dt>

<dd>
<p>Calls the function for each child of the node, then recursively visits each child.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="METHODS"
>METHODS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="new(_[DATA]_)"
>new( [DATA] )</a></h2>

<p>Creates a new Tree::Nary object. Used to create the first node in a tree. Insert optional DATA into new created node.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="insert(_PARENT,_POSITION,_NODE_)"
>insert( PARENT, POSITION, NODE )</a></h2>

<p>Inserts a NODE beneath the PARENT at the given POSITION, returning inserted NODE. If POSITION is -1, NODE is inserted as the last child of PARENT.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="insert_before(_PARENT,_SIBLING,_NODE_)"
>insert_before( PARENT, SIBLING, NODE )</a></h2>

<p>Inserts a NODE beneath the PARENT before the given SIBLING, returning inserted NODE. If SIBLING is <i>undef</i>, the NODE is inserted as the last child of PARENT.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="append(_PARENT,_NODE_)"
>append( PARENT, NODE )</a></h2>

<p>Inserts a NODE as the last child of the given PARENT, returning inserted NODE.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="prepend(_PARENT,_NODE_)"
>prepend( PARENT, NODE )</a></h2>

<p>Inserts a NODE as the first child of the given PARENT, returning inserted NODE.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="insert_data(_PARENT,_POSITION,_DATA_)"
>insert_data( PARENT, POSITION, DATA )</a></h2>

<p>Inserts a <b>new</b> node containing DATA, beneath the PARENT at the given POSITION. Returns the new inserted node.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="insert_data_before(_PARENT,_SIBLING,_DATA_)"
>insert_data_before( PARENT, SIBLING, DATA )</a></h2>

<p>Inserts a <b>new</b> node containing DATA, beneath the PARENT, before the given SIBLING. Returns the new inserted node.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="append_data(_PARENT,_DATA_)"
>append_data( PARENT, DATA )</a></h2>

<p>Inserts a <b>new</b> node containing DATA as the last child of the given PARENT. Returns the new inserted node.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="prepend_data(_PARENT,_DATA_)"
>prepend_data( PARENT, DATA )</a></h2>

<p>Inserts a <b>new</b> node containing DATA as the first child of the given PARENT. Returns the new inserted node.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="reverse_children(_NODE_)"
>reverse_children( NODE )</a></h2>

<p>Reverses the order of the children of NODE. It doesn&#39;t change the order of the grandchildren.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="traverse(_NODE,_ORDER,_FLAGS,_MAXDEPTH,_FUNCTION,_DATA_)"
>traverse( NODE, ORDER, FLAGS, MAXDEPTH, FUNCTION, DATA )</a></h2>

<p>Traverses a tree starting at the given root NODE. It calls the given FUNCTION (with optional user DATA to pass to the FUNCTION) for each node visited.</p>

<p>The traversal can be halted at any point by returning TRUE from FUNCTION.</p>

<p>The ORDER in which nodes are visited is one of IN_ORDER, PRE_ORDER, POST_ORDER and LEVEL_ORDER.</p>

<p>FLAGS specifies which types of children are to be visited, one of TRAVERSE_ALL, TRAVERSE_LEAFS and TRAVERSE_NON_LEAFS.</p>

<p>MAXDEPTH is the maximum depth of the traversal. Nodes below this depth will not be visited. If MAXDEPTH is -1, all nodes in the tree are visited. If MAXDEPTH is 1, only the root is visited. If MAXDEPTH is 2, the root and its children are visited. And so on.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="children_foreach(_NODE,_FLAGS,_FUNCTION,_DATA_)"
>children_foreach( NODE, FLAGS, FUNCTION, DATA )</a></h2>

<p>Calls a FUNCTION (with optional user DATA to pass to the FUNCTION) for each of the children of a NODE. Note that it doesn&#39;t descend beneath the child nodes. FLAGS specifies which types of children are to be visited, one of TRAVERSE_ALL, TRAVERSE_LEAFS and TRAVERSE_NON_LEAFS.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="get_root(_NODE_)"
>get_root( NODE )</a></h2>

<p>Gets the root node of a tree, starting from NODE.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="find(_NODE,_ORDER,_FLAGS,_DATA_)"
>find( NODE, ORDER, FLAGS, DATA )</a></h2>

<p>Finds a NODE in a tree with the given DATA.</p>

<p>The ORDER in which nodes are visited is one of IN_ORDER, PRE_ORDER, POST_ORDER and LEVEL_ORDER.</p>

<p>FLAGS specifies which types of children are to be searched, one of TRAVERSE_ALL, TRAVERSE_LEAFS and TRAVERSE_NON_LEAFS.</p>

<p>Returns the found node, or <i>undef</i> if the DATA is not found.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="find_child(_NODE,_FLAGS,_DATA_)"
>find_child( NODE, FLAGS, DATA )</a></h2>

<p>Finds the first child of a NODE with the given DATA.</p>

<p>FLAGS specifies which types of children are to be searched, one of TRAVERSE_ALL, TRAVERSE_LEAFS and TRAVERSE_NON_LEAFS.</p>

<p>Returns the found child node, or <i>undef</i> if the DATA is not found.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="child_index(_NODE,_DATA_)"
>child_index( NODE, DATA )</a></h2>

<p>Gets the position of the first child of a NODE which contains the given DATA. Returns the index of the child of node which contains data, or -1 if DATA is not found.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="child_position(_NODE,_CHILD_)"
>child_position( NODE, CHILD )</a></h2>

<p>Gets the position of a NODE with respect to its siblings. CHILD must be a child of NODE. The first child is numbered 0, the second 1, and so on. Returns the position of CHILD with respect to its siblings.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="first_child(_NODE_)"
>first_child( NODE )</a></h2>

<p>Returns the first child of a NODE. Returns <i>undef</i> if NODE is <i>undef</i> or has no children.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="last_child(_NODE_)"
>last_child( NODE )</a></h2>

<p>Returns the last child of a NODE. Returns <i>undef</i> if NODE is <i>undef</i> or has no children.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="nth_child(_NODE,_INDEX_)"
>nth_child( NODE, INDEX )</a></h2>

<p>Gets a child of a NODE, using the given INDEX. The first child is at INDEX 0. If the INDEX is too big, <i>undef</i> is returned. Returns the child of NODE at INDEX.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="first_sibling(_NODE_)"
>first_sibling( NODE )</a></h2>

<p>Returns the first sibling of a NODE. This could possibly be the NODE itself.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="prev_sibling(_NODE_)"
>prev_sibling( NODE )</a></h2>

<p>Returns the previous sibling of a NODE.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="next_sibling(_NODE_)"
>next_sibling( NODE )</a></h2>

<p>Returns the next sibling of a NODE.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="last_sibling(_NODE_)"
>last_sibling( NODE )</a></h2>

<p>Returns the last sibling of a NODE. This could possibly be the NODE itself.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="is_leaf(_NODE_)"
>is_leaf( NODE )</a></h2>

<p>Returns TRUE if NODE is a leaf node (no children).</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="is_root(_NODE_)"
>is_root( NODE )</a></h2>

<p>Returns TRUE if NODE is a root node (no parent nor siblings).</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="depth(_NODE_)"
>depth( NODE )</a></h2>

<p>Returns the depth of NODE. If NODE is <i>undef</i>, the depth is 0. The root node has a depth of 1. For the children of the root node, the depth is 2. And so on.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="n_nodes(_NODE,_FLAGS_)"
>n_nodes( NODE, FLAGS )</a></h2>

<p>Returns the number of nodes in a tree.</p>

<p>FLAGS specifies which types of children are to be counted, one of TRAVERSE_ALL, TRAVERSE_LEAFS and TRAVERSE_NON_LEAFS.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="n_children(_NODE_)"
>n_children( NODE )</a></h2>

<p>Returns the number of children of NODE.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="is_ancestor(_NODE,_DESCENDANT_)"
>is_ancestor( NODE, DESCENDANT )</a></h2>

<p>Returns TRUE if NODE is an ancestor of DESCENDANT. This is true if NODE is the parent of DESCENDANT, or if NODE is the grandparent of DESCENDANT, etc.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="max_height(_NODE_)"
>max_height( NODE )</a></h2>

<p>Returns the maximum height of all branches beneath NODE. This is the maximum distance from NODE to all leaf nodes.</p>

<p>If NODE is <i>undef</i>, 0 is returned. If NODE has no children, 1 is returned. If NODE has children, 2 is returned. And so on.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="tsort(_NODE_)"
>tsort( NODE )</a></h2>

<p>Sorts all the children references of NODE according to the data field.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="normalize(_NODE_)"
>normalize( NODE )</a></h2>

<p>Returns the normalized shape of NODE.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="is_identical(_NODE,_ANOTHER_NODE_)"
>is_identical( NODE, ANOTHER_NODE )</a></h2>

<p>Returns TRUE if NODE and ANOTHER_NODE have same structures and contents.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="has_same_struct(_NODE,_ANOTHER_NODE_)"
>has_same_struct( NODE, ANOTHER_NODE )</a></h2>

<p>Returns TRUE if the structure of NODE and ANOTHER_NODE are identical.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="unlink(_NODE_)"
>unlink( NODE )</a></h2>

<p>Unlinks NODE from a tree, resulting in two separate trees. The NODE to unlink becomes the root of a new tree.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="EXAMPLES"
>EXAMPLES <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>An example for each function can be found in the test suite bundled with <b>Tree::Nary</b>.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="AUTHOR"
>AUTHOR <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Frederic Soriano, &#60;fsoriano@cpan.org&#62;</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="COPYRIGHT"
>COPYRIGHT <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This package is free software and is provided &#34;as is&#34; without express or implied warranty. It may be used, redistributed and/or modified under the same terms as Perl itself.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SEE_ALSO"
>SEE ALSO <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>API from the GLIB project, <a href="http://developer.gnome.org/doc/API/glib/glib-n-ary-trees.html" class="podlinkurl"
>http://developer.gnome.org/doc/API/glib/glib-n-ary-trees.html</a>.</p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78272 Uploads, 24723 Distributions
106001 Modules, 9649 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Fri Apr 27 19:52:17 2012 GMT (0.172232866287231) @cpansearch1 -->
 </body>
</html>
