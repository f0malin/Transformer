<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
 <head>
  <link rel="stylesheet" href="http://st.pimg.net/tucs/style.css" type="text/css" />
<style>
.styleswitch {
  text-align: right;
}
</style>


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.cookie.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_main.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/sh_perl.min.js"></script>
<script type="text/javascript" src="http://st.pimg.net/tucs/js/jquery.styleswitch.js"></script>

<link rel="stylesheet" href="http://st.pimg.net/tucs/print.css" type="text/css" media="print" />
  <link rel="alternate" type="application/rss+xml" title="RSS 1.0" href="http://search.cpan.org/uploads.rdf" />
  <link rel="search" href="http://st.pimg.net/tucs/opensearch.xml" type="application/opensearchdescription+xml" title="SearchCPAN" />
  <title>MIME::Types - search.cpan.org</title>
 <script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-3528438-1']);
    _gaq.push(["_setCustomVar",2,"Distribution","MIME-Types",3]);
    _gaq.push(["_setCustomVar",5,"Release","MIME-Types-1.34",3]);
    _gaq.push(["_setCustomVar",3,"Module","MIME::Types",3]);
    _gaq.push(["_setCustomVar",1,"Author","MARKOV",3]);
    _gaq.push(['_trackPageview']);
  </script>
 </head>
 <body id="cpansearch">
<center><div class="logo"><a href="/"><img src="http://st.pimg.net/tucs/img/cpan_banner.png" alt="CPAN"></a></div></center>
<div class="menubar">
 <a href="/">Home</a>
&middot; <a href="/author/">Authors</a>
&middot; <a href="/recent">Recent</a>
&middot; <a href="http://log.perl.org/cpansearch/">News</a>
&middot; <a href="/mirror">Mirrors</a>
&middot; <a href="/faq.html">FAQ</a>
&middot; <a href="/feedback">Feedback</a>
</div>
<form method="get" action="/search" name="f" class="searchbox">
<input type="text" name="query" value="" size="35">
<br>in <select name="mode">
 <option value="all">All</option>
 <option value="module" >Modules</option>
 <option value="dist" >Distributions</option>
 <option value="author" >Authors</option>
</select>&nbsp;<input type="submit" value="CPAN Search">
</form>


 <a name="_top"></a>
  <div class=path>
<div id=permalink class="noprint"><a href="/perldoc?MIME::Types">permalink</a></div>
  <a href="/~markov/">Mark Overmeer</a> &gt;
  <a href="/~markov/MIME-Types-1.34/">MIME-Types-1.34</a> &gt;
  MIME::Types
 </div>

<div class="noprint" style="float:right;align:left;width:19ex">
<a href="http://hexten.net/cpan-faces/"><img src="http://www.gravatar.com/avatar/18f0494979b7feef52388275080aaa34?r=g&s=80&d=http%3A%2F%2Fst.pimg.net%2Ftucs%2Fimg%2Fwho.png" width=80 height=80 
style="float:right"
/></a>
<br style="clear:both"/>
<p style="text-align:right">Download:<br/> <a href="/CPAN/authors/id/M/MA/MARKOV/MIME-Types-1.34.tar.gz">MIME-Types-1.34.tar.gz</a></p>
<p style="text-align:right"><a href="http://deps.cpantesters.org/?module=MIME%3A%3ATypes;perl=latest">Dependencies</a></p>
<p style="text-align:right"><a href="http://www.annocpan.org/~MARKOV/MIME-Types-1.34/lib/MIME/Types.pod">Annotate this POD
</a></p>
<div class=box style='width:150px; float: right'>
<h1 class=t5>Related Modules</h1>
<div style="margin:2px">
<a href="/perldoc?MIME%3A%3ALite">MIME::Lite</a><br>
<a href="/perldoc?Net%3A%3ASMTP">Net::SMTP</a><br>
<a href="/perldoc?MIME%3A%3AQuotedPrint">MIME::QuotedPrint</a><br>
<a href="/perldoc?Mail%3A%3AAddress">Mail::Address</a><br>
<a href="/perldoc?MIME%3A%3ABase64">MIME::Base64</a><br>
<a href="/perldoc?HTML%3A%3ATemplate">HTML::Template</a><br>
<a href="/perldoc?File%3A%3ASpec">File::Spec</a><br>
<a href="/perldoc?WWW%3A%3AMechanize">WWW::Mechanize</a><br>
<a href="/perldoc?HTTP%3A%3ARecorder">HTTP::Recorder</a><br>
<a href="/perldoc?IO%3A%3ASeekable">IO::Seekable</a><br>
<small>
<a href="http://perlmonks.org/?node=cpan+module+search&pivot=1&module=MIME%3A%3ATypes">more...</a><br>
By <a href="http://perlmonks.org/">perlmonks.org</a></small>
</div>
</div>

<div style="float:right">
<div class=box style='width:150px'>
<h1 class=t5>CPAN RT</h1>
<div style="margin:2px">
<table style="margin-left:auto;margin-right:auto">
<tr><td>Open&nbsp;</td><td style="text-align:right"> 0</td></tr>
</table>
<a href="https://rt.cpan.org/Public/Dist/Display.html?Name=MIME-Types">View/Report Bugs</a><br/>
</div>
</div>

</div>
</div>
  Module Version:  1.34 &nbsp;
<span class="noprint">
  <a href="/src/MARKOV/MIME-Types-1.34/lib/MIME/Types.pm">Source</a> &nbsp;
</span>
<a name="___top"></a>
<div class=pod>
<div class=toc>
<div class='indexgroup'>
<ul   class='indexList indexList1'>
  <li class='indexItem indexItem1'><a href='#NAME'>NAME</a>
  <li class='indexItem indexItem1'><a href='#INHERITANCE'>INHERITANCE</a>
  <li class='indexItem indexItem1'><a href='#SYNOPSIS'>SYNOPSIS</a>
  <li class='indexItem indexItem1'><a href='#DESCRIPTION'>DESCRIPTION</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#MIME::Types_and_mod_perl'>MIME::Types and mod_perl</a>
    <li class='indexItem indexItem2'><a href='#MIME::Types_and_daemons_(fork)'>MIME::Types and daemons (fork)</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#METHODS'>METHODS</a>
  <ul   class='indexList indexList2'>
    <li class='indexItem indexItem2'><a href='#Instantiation'>Instantiation</a>
    <li class='indexItem indexItem2'><a href='#Knowledge'>Knowledge</a>
  </ul>
  <li class='indexItem indexItem1'><a href='#FUNCTIONS'>FUNCTIONS</a>
  <li class='indexItem indexItem1'><a href='#SEE_ALSO'>SEE ALSO</a>
  <li class='indexItem indexItem1'><a href='#LICENSE'>LICENSE</a>
</ul>
</div>
</div>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="NAME"
>NAME <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>MIME::Types - Definition of MIME types</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="INHERITANCE"
>INHERITANCE <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl"> MIME::Types
   is a Exporter</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SYNOPSIS"
>SYNOPSIS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<pre class="sh_perl"> use MIME::Types;
 my $mimetypes = MIME::Types-&#62;new;
 my MIME::Type $def = $mimetypes-&#62;type(&#39;text/plain&#39;);
 my MIME::Type $def = $mimetypes-&#62;mimeTypeOf(&#39;gif&#39;);</pre>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="DESCRIPTION"
>DESCRIPTION <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>MIME types are used in MIME compliant lines, for instance as part of e-mail and HTTP traffic, to indicate the type of content which is transmitted. Sometimes real knowledge about a mime-type is need.</p>

<p>This module maintains a set of <a href="/~markov/MIME-Types-1.34/lib/MIME/Type.pod" class="podlinkpod"
>MIME::Type</a> objects, which each describe one known mime type. There are many types defined by RFCs and vendors, so the list is long but not complete. Please don&#39;t hestitate to ask to add additional information.</p>

<p>If you wish to get access to the <code>mime.types</code> files, which are available on various places in UNIX and Linux systems, then have a look at File::TypeInfo.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="MIME::Types_and_mod_perl"
>MIME::Types and mod_perl</a></h2>

<p>This module uses a DATA handle to read all the types at first instantiation, which doesn&#39;t play nicely with mod_perl and fork.</p>

<p>When you use this module with mod_perl, add this to <code>startup.pl</code></p>

<pre class="sh_perl">   use MIME::Types;
   BEGIN { MIME::Types-&#62;new() }</pre>

<p>Now, the type definitions will get parsed before the processes are spawned.</p>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="MIME::Types_and_daemons_(fork)"
>MIME::Types and daemons (fork)</a></h2>

<p>If your program uses fork (usually for a daemon), then the situation is a bit like with mod_perl before: you want to have the type table initialized before you start forking. So, first call</p>

<pre class="sh_perl">   my $mt = MIME::Types-&#62;new;</pre>

<p>Later, each time you create this object (you may, of course, also reuse the object you create here) you will get access to the same global table of types.</p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="METHODS"
>METHODS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Instantiation"
>Instantiation</a></h2>

<dl>
<dt><a name='MIME'></a><a name="MIME::Types-&#62;new(OPTIONS)"
>MIME::Types-&#62;<b>new</b>(OPTIONS)</a></dt>

<dd>
<p>Create a new <code>MIME::Types</code> object which manages the data. In the current implementation, it does not matter whether you create this object often within your program, but in the future this may change.</p>

<pre class="sh_perl"> -Option       --Default
  only_complete  &#60;false&#62;</pre>

<dl>
<dt><a name='only_complete'></a><a name="only_complete_=&#62;_BOOLEAN"
>only_complete =&#62; BOOLEAN</a></dt>

<dd>
<p>Only include complete MIME type definitions: requires at least one known extension. This will reduce the number of entries --and with that the amount of memory consumed-- considerably.</p>

<p>In your program you have to decide: the first time that you call the creator (<code>new</code>) determines whether you get the full or the partial information.</p>
</dd>
</dl>
</dd>
</dl>

<h2><a class='u' href='#___top' title='click to go to top of document'
name="Knowledge"
>Knowledge</a></h2>

<dl>
<dt><a name='obj'></a><a name="$obj-&#62;addType(TYPE,_...)"
>$obj-&#62;<b>addType</b>(TYPE, ...)</a></dt>

<dd>
<p>Add one or more TYPEs to the set of known types. Each TYPE is a <code>MIME::Type</code> which must be experimental: either the main-type or the sub-type must start with <code>x-</code>.</p>

<p>Please inform the maintainer of this module when registered types are missing. Before version MIME::Types version 1.14, a warning was produced when an unknown IANA type was added. This has been removed, because some people need that to get their application to work locally... broken applications...</p>

<dt><a name='obj'></a><a name="$obj-&#62;extensions()"
>$obj-&#62;<b>extensions</b>()</a></dt>

<dd>
<p>Returns a list of all defined extensions.</p>

<dt><a name='obj'></a><a name="$obj-&#62;mimeTypeOf(FILENAME)"
>$obj-&#62;<b>mimeTypeOf</b>(FILENAME)</a></dt>

<dd>
<p>Returns the <code>MIME::Type</code> object which belongs to the FILENAME (or simply its filename extension) or <code>undef</code> if the file type is unknown. The extension is used, and considered case-insensitive.</p>

<p>In some cases, more than one type is known for a certain filename extension. In that case, one of the alternatives is chosen at random.</p>

<p>example: use of mimeTypeOf()</p>

<pre class="sh_perl"> my MIME::Types $types = MIME::Types-&#62;new;
 my MIME::Type  $mime = $types-&#62;mimeTypeOf(&#39;gif&#39;);

 my MIME::Type  $mime = $types-&#62;mimeTypeOf(&#39;jpg&#39;);
 print $mime-&#62;isBinary;</pre>

<dt><a name='obj'></a><a name="$obj-&#62;type(STRING)"
>$obj-&#62;<b>type</b>(STRING)</a></dt>

<dd>
<p>Return the <code>MIME::Type</code> which describes the type related to STRING. One type may be described more than once. Different extensions is use for this type, and different operating systems may cause more than one <code>MIME::Type</code> object to be defined. In scalar context, only the first is returned.</p>

<dt><a name='obj'></a><a name="$obj-&#62;types()"
>$obj-&#62;<b>types</b>()</a></dt>

<dd>
<p>Returns a list of all defined mime-types</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="FUNCTIONS"
>FUNCTIONS <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>The next functions are provided for backward compatibility with MIME::Types versions 0.06 and below. This code originates from Jeff Okamoto <em>okamoto@corp.hp.com</em> and others.</p>

<dl>
<dt><a name='by_mediatype'></a><a name="by_mediatype(TYPE)"
><b>by_mediatype</b>(TYPE)</a></dt>

<dd>
<p>This function takes a media type and returns a list or anonymous array of anonymous three-element arrays whose values are the file name suffix used to identify it, the media type, and a content encoding.</p>

<p>TYPE can be a full type name (contains &#39;/&#39;, and will be matched in full), a partial type (which is used as regular expression) or a real regular expression.</p>

<dt><a name='by_suffix'></a><a name="by_suffix(FILENAME|SUFFIX)"
><b>by_suffix</b>(FILENAME|SUFFIX)</a></dt>

<dd>
<p>Like <code>mimeTypeOf</code>, but does not return an <code>MIME::Type</code> object. If the file +type is unknown, both the returned media type and encoding are empty strings.</p>

<p>example: use of function by_suffix()</p>

<pre class="sh_perl"> use MIME::Types &#39;by_suffix&#39;;
 my ($mediatype, $encoding) = by_suffix &#39;image.gif&#39;;

 my $refdata =  by_suffix &#39;image.gif&#39;;
 my ($mediatype, $encoding) = @$refdata;</pre>

<dt><a name='import_mime_types'></a><a name="import_mime_types()"
><b>import_mime_types</b>()</a></dt>

<dd>
<p>This method has been removed: mime-types are only useful if understood by many parties. Therefore, the IANA assigns names which can be used. In the table kept by this <code>MIME::Types</code> module all these names, plus the most often used termporary names are kept. When names seem to be missing, please contact the maintainer for inclussion.</p>
</dd>
</dl>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="SEE_ALSO"
>SEE ALSO <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>This module is part of MIME-Types distribution version 1.34, built on January 12, 2012. Website: <em><a href="http://perl.overmeer.net/mimetypes/" class="podlinkurl"
>http://perl.overmeer.net/mimetypes/</a></em></p>

<h1><a class='u' href='#___top' title='click to go to top of document'
name="LICENSE"
>LICENSE <img alt='^' src='http://st.pimg.net/tucs/img/up.gif'></a></h1>

<p>Copyrights 1999,2001-2012 by Mark Overmeer. For other contributors see ChangeLog.</p>

<p>This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself. See <em><a href="http://www.perl.com/perl/misc/Artistic.html" class="podlinkurl"
>http://www.perl.com/perl/misc/Artistic.html</a></em></p>

</div>
<!-- This should probably be put in the <div class="footer"></div> -->
<script type="text/javascript">
    $(document).ready(function(){
        var startingStyle = $.cookie('css') ? $.cookie('css') : 'http://st.pimg.net/tucs/css/sh_none.min.css';
        $.fn.styleSwitch(startingStyle);
        $("#styleswitch").val(startingStyle);
        sh_highlightDocument();
        $("#styleswitch").bind(($.browser.msie ? "click" : "change"), function() {
            $.fn.styleSwitch($(this).val());
        });
    });
</script>
<div class="styleswitch">
    syntax highlighting:
    <select id="styleswitch">
        <option value="http://st.pimg.net/tucs/css/sh_none.min.css">no syntax highlighting</option>
        <option value="http://st.pimg.net/tucs/css/sh_acid.min.css">acid</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-dark.min.css">berries-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_berries-light.min.css">berries-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_bipolar.min.css">bipolar</option>
        <option value="http://st.pimg.net/tucs/css/sh_blacknblue.min.css">blacknblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_bright.min.css">bright</option>
        <option value="http://st.pimg.net/tucs/css/sh_contrast.min.css">contrast</option>
        <option value="http://st.pimg.net/tucs/css/sh_cpan.min.css">cpan</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkblue.min.css">darkblue</option>
        <option value="http://st.pimg.net/tucs/css/sh_darkness.min.css">darkness</option>
        <option value="http://st.pimg.net/tucs/css/sh_desert.min.css">desert</option>
        <option value="http://st.pimg.net/tucs/css/sh_dull.min.css">dull</option>
        <option value="http://st.pimg.net/tucs/css/sh_easter.min.css">easter</option>
        <option value="http://st.pimg.net/tucs/css/sh_emacs.min.css">emacs</option>
        <option value="http://st.pimg.net/tucs/css/sh_golden.min.css">golden</option>
        <option value="http://st.pimg.net/tucs/css/sh_greenlcd.min.css">greenlcd</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-anjuta.min.css">ide-anjuta</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-codewarrior.min.css">ide-codewarrior</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-devcpp.min.css">ide-devcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-eclipse.min.css">ide-eclipse</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-kdev.min.css">ide-kdev</option>
        <option value="http://st.pimg.net/tucs/css/sh_ide-msvcpp.min.css">ide-msvcpp</option>
        <option value="http://st.pimg.net/tucs/css/sh_kwrite.min.css">kwrite</option>
        <option value="http://st.pimg.net/tucs/css/sh_matlab.min.css">matlab</option>
        <option value="http://st.pimg.net/tucs/css/sh_navy.min.css">navy</option>
        <option value="http://st.pimg.net/tucs/css/sh_nedit.min.css">nedit</option>
        <option value="http://st.pimg.net/tucs/css/sh_neon.min.css">neon</option>
        <option value="http://st.pimg.net/tucs/css/sh_night.min.css">night</option>
        <option value="http://st.pimg.net/tucs/css/sh_pablo.min.css">pablo</option>
        <option value="http://st.pimg.net/tucs/css/sh_peachpuff.min.css">peachpuff</option>
        <option value="http://st.pimg.net/tucs/css/sh_print.min.css">print</option>
        <option value="http://st.pimg.net/tucs/css/sh_rand01.min.css">rand01</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-dark.min.css">solarized-dark</option>
	<option value="http://st.pimg.net/tucs/css/sh_solarized-light.min.css">solarized-light</option>
        <option value="http://st.pimg.net/tucs/css/sh_style.min.css">style</option>
        <option value="http://st.pimg.net/tucs/css/sh_the.min.css">the</option>
        <option value="http://st.pimg.net/tucs/css/sh_typical.min.css">typical</option>
        <option value="http://st.pimg.net/tucs/css/sh_vampire.min.css">vampire</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim-dark.min.css">vim-dark</option>
        <option value="http://st.pimg.net/tucs/css/sh_vim.min.css">vim</option>
        <option value="http://st.pimg.net/tucs/css/sh_whatis.min.css">whatis</option>
        <option value="http://st.pimg.net/tucs/css/sh_whitengrey.min.css">whitengrey</option>
        <option value="http://st.pimg.net/tucs/css/sh_zellner.min.css">zellner</option>
    </select>
</div>



<div class="footer"><div class="cpanstats">78254 Uploads, 24722 Distributions
105996 Modules, 9649 Uploaders
</div>
hosted by <a href="http://www.yellowbot.com">YellowBot</a><br/>
<a href="http://www.yellowbot.com"><img alt="do. tag. write. share." src="http://st.pimg.net/tucs/img/yellowbot_logo.gif"></a>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript" src="http://ipv4.v6test.develooper.com/js/v1/v6test.js"></script>

<script type="text/javascript">
   // v6.target = '';
   if (!v6.target) { v6.only_once = true }
   v6.site = '7A0D89A6-2B82-11DF-B9DA-F61CBD13F020';
   v6.api_server = 'http://ipv4.v6test.develooper.com';
   try {
     v6.test();
   } catch(err) {}
</script>
<script type="text/javascript">
  $(document).ready(function(){
    $("a[href^=http:]").click(function(){
      var href = $(this).attr('href');
      var m = href.match('\/\/([^\/:]+)');
      _gaq.push(['_trackEvent','External',m[1],'Module']);
    });
    $("a[href^=/CPAN/]").click(function(){
      var href = $(this).attr('href');
      _gaq.push(['_trackEvent','Download',href,'Module']);
    });
  });
</script>
<!-- Fri Apr 27 09:12:14 2012 GMT (0.160299062728882) @cpansearch1 -->
 </body>
</html>
